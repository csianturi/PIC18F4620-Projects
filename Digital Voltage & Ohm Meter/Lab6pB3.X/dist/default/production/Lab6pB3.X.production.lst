

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 06 18:08:28 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataBANK0
    45  002C02                     __pidataBANK0:
    46                           	opt stack 0
    47                           
    48                           ;initializer for main@F4283
    49  002C02  01                 	db	1
    50  002C03  4F                 	db	79
    51  002C04  12                 	db	18
    52  002C05  06                 	db	6
    53  002C06  4C                 	db	76
    54  002C07  24                 	db	36
    55  002C08  20                 	db	32
    56  002C09  0F                 	db	15
    57  002C0A  00                 	db	0
    58  002C0B  04                 	db	4
    59                           
    60                           	psect	smallconst
    61  001000                     __psmallconst:
    62                           	opt stack 0
    63  001000  00                 	db	0
    64  001001                     _dpowers:
    65                           	opt stack 0
    66  001001  0001               	dw	1
    67  001003  0000               	dw	0
    68  001005  000A               	dw	10
    69  001007  0000               	dw	0
    70  001009  0064               	dw	100
    71  00100B  0000               	dw	0
    72  00100D  03E8               	dw	1000
    73  00100F  0000               	dw	0
    74  001011  2710               	dw	10000
    75  001013  0000               	dw	0
    76  001015  86A0               	dw	34464
    77  001017  0001               	dw	1
    78  001019  4240               	dw	16960
    79  00101B  000F               	dw	15
    80  00101D  9680               	dw	38528
    81  00101F  0098               	dw	152
    82  001021  E100               	dw	57600
    83  001023  05F5               	dw	1525
    84  001025  CA00               	dw	51712
    85  001027  3B9A               	dw	15258
    86  001029                     __end_of_dpowers:
    87                           	opt stack 0
    88  001029                     __npowers_:
    89                           	opt stack 0
    90  001029  00                 	db	0
    91  00102A  80                 	db	128
    92  00102B  3F                 	db	63
    93  00102C  CD                 	db	205
    94  00102D  CC                 	db	204
    95  00102E  3D                 	db	61
    96  00102F  D7                 	db	215
    97  001030  23                 	db	35
    98  001031  3C                 	db	60
    99  001032  12                 	db	18
   100  001033  83                 	db	131
   101  001034  3A                 	db	58
   102  001035  B7                 	db	183
   103  001036  D1                 	db	209
   104  001037  38                 	db	56
   105  001038  C6                 	db	198
   106  001039  27                 	db	39
   107  00103A  37                 	db	55
   108  00103B  38                 	db	56
   109  00103C  86                 	db	134
   110  00103D  35                 	db	53
   111  00103E  C0                 	db	192
   112  00103F  D6                 	db	214
   113  001040  33                 	db	51
   114  001041  CC                 	db	204
   115  001042  2B                 	db	43
   116  001043  32                 	db	50
   117  001044  70                 	db	112
   118  001045  89                 	db	137
   119  001046  30                 	db	48
   120  001047  E7                 	db	231
   121  001048  DB                 	db	219
   122  001049  2E                 	db	46
   123  00104A  E5                 	db	229
   124  00104B  3C                 	db	60
   125  00104C  1E                 	db	30
   126  00104D  42                 	db	66
   127  00104E  A2                 	db	162
   128  00104F  0D                 	db	13
   129  001050                     __end_of__npowers_:
   130                           	opt stack 0
   131  001050                     __powers_:
   132                           	opt stack 0
   133  001050  00                 	db	0
   134  001051  80                 	db	128
   135  001052  3F                 	db	63
   136  001053  00                 	db	0
   137  001054  20                 	db	32
   138  001055  41                 	db	65
   139  001056  00                 	db	0
   140  001057  C8                 	db	200
   141  001058  42                 	db	66
   142  001059  00                 	db	0
   143  00105A  7A                 	db	122
   144  00105B  44                 	db	68
   145  00105C  40                 	db	64
   146  00105D  1C                 	db	28
   147  00105E  46                 	db	70
   148  00105F  50                 	db	80
   149  001060  C3                 	db	195
   150  001061  47                 	db	71
   151  001062  24                 	db	36
   152  001063  74                 	db	116
   153  001064  49                 	db	73
   154  001065  97                 	db	151
   155  001066  18                 	db	24
   156  001067  4B                 	db	75
   157  001068  BC                 	db	188
   158  001069  BE                 	db	190
   159  00106A  4C                 	db	76
   160  00106B  6B                 	db	107
   161  00106C  6E                 	db	110
   162  00106D  4E                 	db	78
   163  00106E  03                 	db	3
   164  00106F  15                 	db	21
   165  001070  50                 	db	80
   166  001071  79                 	db	121
   167  001072  AD                 	db	173
   168  001073  60                 	db	96
   169  001074  F3                 	db	243
   170  001075  49                 	db	73
   171  001076  71                 	db	113
   172  001077                     __end_of__powers_:
   173                           	opt stack 0
   174  0000                     _ADCON0	set	4034
   175  0000                     _ADCON0bits	set	4034
   176  0000                     _ADCON1	set	4033
   177  0000                     _ADCON2	set	4032
   178  0000                     _ADRESH	set	4036
   179  0000                     _ADRESL	set	4035
   180  0000                     _CCP2CON	set	4026
   181  0000                     _CCPR2L	set	4027
   182  0000                     _OSCCON	set	4051
   183  0000                     _PIE1bits	set	3997
   184  0000                     _PIR1bits	set	3998
   185  0000                     _PORTBbits	set	3969
   186  0000                     _PORTC	set	3970
   187  0000                     _PORTD	set	3971
   188  0000                     _PORTDbits	set	3971
   189  0000                     _PORTE	set	3972
   190  0000                     _PR2	set	4043
   191  0000                     _RCSTA	set	4011
   192  0000                     _RCSTAbits	set	4011
   193  0000                     _SPBRG	set	4015
   194  0000                     _SPBRGH	set	4016
   195  0000                     _T2CON	set	4042
   196  0000                     _TRISA	set	3986
   197  0000                     _TRISB	set	3987
   198  0000                     _TRISC	set	3988
   199  0000                     _TRISCbits	set	3988
   200  0000                     _TRISD	set	3989
   201  0000                     _TRISE	set	3990
   202  0000                     _TXREG	set	4013
   203  0000                     _TXSTA	set	4012
   204  0000                     _TXSTAbits	set	4012
   205  0000                     _TRMT	set	32097
   206  001077                     STR_1:
   207  001077  52                 	db	82	;'R'
   208  001078  4C                 	db	76	;'L'
   209  001079  3A                 	db	58	;':'
   210  00107A  20                 	db	32
   211  00107B  25                 	db	37
   212  00107C  66                 	db	102	;'f'
   213  00107D  0D                 	db	13
   214  00107E  0A                 	db	10
   215  00107F  00                 	db	0
   216  0000                     
   217                           ; #config settings
   218  001080  00                 	db	0	; dummy byte at the end
   219  0000                     
   220                           	psect	cinit
   221  002AF4                     __pcinit:
   222                           	opt stack 0
   223  002AF4                     start_initialization:
   224                           	opt stack 0
   225  002AF4                     __initialization:
   226                           	opt stack 0
   227                           
   228                           ; Initialize objects allocated to BANK0 (10 bytes)
   229                           ; load TBLPTR registers with __pidataBANK0
   230  002AF4  0E02               	movlw	low __pidataBANK0
   231  002AF6  6EF6               	movwf	tblptrl,c
   232  002AF8  0E2C               	movlw	high __pidataBANK0
   233  002AFA  6EF7               	movwf	tblptrh,c
   234  002AFC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   235  002AFE  6EF8               	movwf	tblptru,c
   236  002B00  EE00  F09E         	lfsr	0,__pdataBANK0
   237  002B04  EE10 F00A          	lfsr	1,10
   238  002B08                     copy_data0:
   239  002B08  0009               	tblrd		*+
   240  002B0A  CFF5 FFEE          	movff	tablat,postinc0
   241  002B0E  50E5               	movf	postdec1,w,c
   242  002B10  50E1               	movf	fsr1l,w,c
   243  002B12  E1FA               	bnz	copy_data0
   244  002B14                     end_of_initialization:
   245                           	opt stack 0
   246  002B14                     __end_of__initialization:
   247                           	opt stack 0
   248  002B14  0E00               	movlw	low (__Lmediumconst shr (0+16))
   249  002B16  6EF8               	movwf	tblptru,c
   250  002B18  0100               	movlb	0
   251  002B1A  EF44  F00D         	goto	_main	;jump to C main() function
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           postdec1	equ	0xFE5
   258                           fsr1l	equ	0xFE1
   259                           
   260                           	psect	dataBANK0
   261  00009E                     __pdataBANK0:
   262                           	opt stack 0
   263  00009E                     main@F4283:
   264                           	opt stack 0
   265  00009E                     	ds	10
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           postdec1	equ	0xFE5
   272                           fsr1l	equ	0xFE1
   273                           
   274                           	psect	cstackBANK0
   275  000080                     __pcstackBANK0:
   276                           	opt stack 0
   277  000080                     main@LED_7seg:
   278                           	opt stack 0
   279                           
   280                           ; 10 bytes @ 0x0
   281  000080                     	ds	10
   282  00008A                     main@num_step:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0xA
   286  00008A                     	ds	2
   287  00008C                     main@u:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0xC
   291  00008C                     	ds	2
   292  00008E                     main@l:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0xE
   296  00008E                     	ds	2
   297  000090                     main@u_299:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x10
   301  000090                     	ds	2
   302  000092                     main@l_300:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x12
   306  000092                     	ds	2
   307  000094                     main@voltage_mv:
   308                           	opt stack 0
   309                           
   310                           ; 3 bytes @ 0x14
   311  000094                     	ds	3
   312  000097                     main@RLint:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x17
   316  000097                     	ds	2
   317  000099                     main@t:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x19
   321  000099                     	ds	1
   322  00009A                     main@t_301:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x1A
   326  00009A                     	ds	1
   327  00009B                     main@RL:
   328                           	opt stack 0
   329                           
   330                           ; 3 bytes @ 0x1B
   331  00009B                     	ds	3
   332                           tblptru	equ	0xFF8
   333                           tblptrh	equ	0xFF7
   334                           tblptrl	equ	0xFF6
   335                           tablat	equ	0xFF5
   336                           postinc0	equ	0xFEE
   337                           postdec1	equ	0xFE5
   338                           fsr1l	equ	0xFE1
   339                           
   340                           	psect	cstackCOMRAM
   341  000001                     __pcstackCOMRAM:
   342                           	opt stack 0
   343  000001                     ?_get_full_ADC:
   344                           	opt stack 0
   345  000001                     ?___ftpack:
   346                           	opt stack 0
   347  000001                     ?___ftneg:
   348                           	opt stack 0
   349  000001                     ?__tdiv_to_l_:
   350                           	opt stack 0
   351  000001                     ?__div_to_l_:
   352                           	opt stack 0
   353  000001                     ?___lldiv:
   354                           	opt stack 0
   355  000001                     ?___llmod:
   356                           	opt stack 0
   357  000001                     putch@c:
   358                           	opt stack 0
   359  000001                     Select_ADC_Channel@channel:
   360                           	opt stack 0
   361  000001                     Delay_One_Sec@I:
   362                           	opt stack 0
   363  000001                     OpenUSART@spbrg:
   364                           	opt stack 0
   365  000001                     __div_to_l_@f1:
   366                           	opt stack 0
   367  000001                     ___ftpack@arg:
   368                           	opt stack 0
   369  000001                     __tdiv_to_l_@f1:
   370                           	opt stack 0
   371  000001                     ___ftge@ff1:
   372                           	opt stack 0
   373  000001                     ___ftneg@f1:
   374                           	opt stack 0
   375  000001                     ___lldiv@dividend:
   376                           	opt stack 0
   377  000001                     ___llmod@dividend:
   378                           	opt stack 0
   379                           
   380                           ; 4 bytes @ 0x0
   381  000001                     	ds	2
   382  000003                     ??_get_full_ADC:
   383  000003                     OpenUSART@config:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x2
   387  000003                     	ds	1
   388  000004                     ___ftpack@exp:
   389                           	opt stack 0
   390  000004                     __div_to_l_@f2:
   391                           	opt stack 0
   392  000004                     __tdiv_to_l_@f2:
   393                           	opt stack 0
   394  000004                     ___ftge@ff2:
   395                           	opt stack 0
   396                           
   397                           ; 3 bytes @ 0x3
   398  000004                     	ds	1
   399  000005                     ___ftpack@sign:
   400                           	opt stack 0
   401  000005                     get_full_ADC@result:
   402                           	opt stack 0
   403  000005                     ___lldiv@divisor:
   404                           	opt stack 0
   405  000005                     ___llmod@divisor:
   406                           	opt stack 0
   407                           
   408                           ; 4 bytes @ 0x4
   409  000005                     	ds	1
   410  000006                     ??___ftpack:
   411                           
   412                           ; 0 bytes @ 0x5
   413  000006                     	ds	1
   414  000007                     ??__tdiv_to_l_:
   415  000007                     ??___ftge:
   416  000007                     __div_to_l_@quot:
   417                           	opt stack 0
   418                           
   419                           ; 4 bytes @ 0x6
   420  000007                     	ds	2
   421  000009                     ?___awtoft:
   422                           	opt stack 0
   423  000009                     ?___lltoft:
   424                           	opt stack 0
   425  000009                     ___llmod@counter:
   426                           	opt stack 0
   427  000009                     ___awtoft@c:
   428                           	opt stack 0
   429  000009                     ___lldiv@quotient:
   430                           	opt stack 0
   431  000009                     ___lltoft@c:
   432                           	opt stack 0
   433                           
   434                           ; 4 bytes @ 0x8
   435  000009                     	ds	1
   436  00000A                     __tdiv_to_l_@quot:
   437                           	opt stack 0
   438                           
   439                           ; 4 bytes @ 0x9
   440  00000A                     	ds	1
   441  00000B                     __div_to_l_@cntr:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0xA
   445  00000B                     	ds	1
   446  00000C                     ___awtoft@sign:
   447                           	opt stack 0
   448  00000C                     __div_to_l_@exp1:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0xB
   452  00000C                     	ds	1
   453  00000D                     ??___lltoft:
   454  00000D                     ?___ftmul:
   455                           	opt stack 0
   456  00000D                     ___lldiv@counter:
   457                           	opt stack 0
   458  00000D                     ___ftmul@f1:
   459                           	opt stack 0
   460                           
   461                           ; 3 bytes @ 0xC
   462  00000D                     	ds	1
   463  00000E                     __tdiv_to_l_@cntr:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0xD
   467  00000E                     	ds	1
   468  00000F                     __tdiv_to_l_@exp1:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0xE
   472  00000F                     	ds	1
   473  000010                     ___ftmul@f2:
   474                           	opt stack 0
   475                           
   476                           ; 3 bytes @ 0xF
   477  000010                     	ds	1
   478  000011                     ___lltoft@exp:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x10
   482  000011                     	ds	2
   483  000013                     ??___ftmul:
   484                           
   485                           ; 0 bytes @ 0x12
   486  000013                     	ds	3
   487  000016                     ___ftmul@exp:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x15
   491  000016                     	ds	1
   492  000017                     ___ftmul@f3_as_product:
   493                           	opt stack 0
   494                           
   495                           ; 3 bytes @ 0x16
   496  000017                     	ds	3
   497  00001A                     ___ftmul@cntr:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x19
   501  00001A                     	ds	1
   502  00001B                     ___ftmul@sign:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x1A
   506  00001B                     	ds	1
   507  00001C                     ?___fttol:
   508                           	opt stack 0
   509  00001C                     ___fttol@f1:
   510                           	opt stack 0
   511                           
   512                           ; 3 bytes @ 0x1B
   513  00001C                     	ds	4
   514  000020                     ??___fttol:
   515                           
   516                           ; 0 bytes @ 0x1F
   517  000020                     	ds	5
   518  000025                     ___fttol@sign1:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x24
   522  000025                     	ds	1
   523  000026                     ___fttol@lval:
   524                           	opt stack 0
   525                           
   526                           ; 4 bytes @ 0x25
   527  000026                     	ds	4
   528  00002A                     ___fttol@exp1:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x29
   532  00002A                     	ds	1
   533  00002B                     ?___awmod:
   534                           	opt stack 0
   535  00002B                     ___awmod@dividend:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x2A
   539  00002B                     	ds	2
   540  00002D                     ___awmod@divisor:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x2C
   544  00002D                     	ds	2
   545  00002F                     ___awmod@counter:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x2E
   549  00002F                     	ds	1
   550  000030                     ___awmod@sign:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x2F
   554  000030                     	ds	1
   555  000031                     ?___awdiv:
   556                           	opt stack 0
   557  000031                     ___awdiv@dividend:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x30
   561  000031                     	ds	2
   562  000033                     ___awdiv@divisor:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x32
   566  000033                     	ds	2
   567  000035                     ___awdiv@counter:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x34
   571  000035                     	ds	1
   572  000036                     ___awdiv@sign:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x35
   576  000036                     	ds	1
   577  000037                     ___awdiv@quotient:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x36
   581  000037                     	ds	2
   582  000039                     ?___wmul:
   583                           	opt stack 0
   584  000039                     ___wmul@multiplier:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x38
   588  000039                     	ds	2
   589  00003B                     ___wmul@multiplicand:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x3A
   593  00003B                     	ds	2
   594  00003D                     ___wmul@product:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x3C
   598  00003D                     	ds	2
   599  00003F                     ?_fround:
   600                           	opt stack 0
   601  00003F                     ?_scale:
   602                           	opt stack 0
   603                           
   604                           ; 3 bytes @ 0x3E
   605  00003F                     	ds	3
   606  000042                     _fround$1185:
   607                           	opt stack 0
   608  000042                     _scale$1186:
   609                           	opt stack 0
   610                           
   611                           ; 3 bytes @ 0x41
   612  000042                     	ds	3
   613  000045                     scale@scl:
   614                           	opt stack 0
   615  000045                     _fround$1184:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0x44
   619  000045                     	ds	3
   620  000048                     fround@prec:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x47
   624  000048                     	ds	1
   625  000049                     ?___ftadd:
   626                           	opt stack 0
   627  000049                     ___ftadd@f1:
   628                           	opt stack 0
   629                           
   630                           ; 3 bytes @ 0x48
   631  000049                     	ds	3
   632  00004C                     ___ftadd@f2:
   633                           	opt stack 0
   634                           
   635                           ; 3 bytes @ 0x4B
   636  00004C                     	ds	3
   637  00004F                     ??___ftadd:
   638                           
   639                           ; 0 bytes @ 0x4E
   640  00004F                     	ds	3
   641  000052                     ___ftadd@sign:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x51
   645  000052                     	ds	1
   646  000053                     ___ftadd@exp2:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x52
   650  000053                     	ds	1
   651  000054                     ___ftadd@exp1:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x53
   655  000054                     	ds	1
   656  000055                     ?___ftdiv:
   657                           	opt stack 0
   658  000055                     ?___ftsub:
   659                           	opt stack 0
   660  000055                     ___ftdiv@f1:
   661                           	opt stack 0
   662  000055                     ___ftsub@f1:
   663                           	opt stack 0
   664                           
   665                           ; 3 bytes @ 0x54
   666  000055                     	ds	3
   667  000058                     ___ftdiv@f2:
   668                           	opt stack 0
   669  000058                     ___ftsub@f2:
   670                           	opt stack 0
   671                           
   672                           ; 3 bytes @ 0x57
   673  000058                     	ds	3
   674  00005B                     ??___ftdiv:
   675  00005B                     ?_printf:
   676                           	opt stack 0
   677  00005B                     printf@f:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x5A
   681  00005B                     	ds	3
   682  00005E                     ___ftdiv@cntr:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x5D
   686  00005E                     	ds	1
   687  00005F                     ___ftdiv@f3:
   688                           	opt stack 0
   689                           
   690                           ; 3 bytes @ 0x5E
   691  00005F                     	ds	1
   692  000060                     ??_printf:
   693                           
   694                           ; 0 bytes @ 0x5F
   695  000060                     	ds	2
   696  000062                     ___ftdiv@exp:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x61
   700  000062                     	ds	1
   701  000063                     ___ftdiv@sign:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x62
   705  000063                     	ds	3
   706  000066                     _printf$1187:
   707                           	opt stack 0
   708                           
   709                           ; 3 bytes @ 0x65
   710  000066                     	ds	3
   711  000069                     printf@ap:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x68
   715  000069                     	ds	2
   716  00006B                     printf@flag:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x6A
   720  00006B                     	ds	2
   721  00006D                     printf@prec:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x6C
   725  00006D                     	ds	2
   726  00006F                     printf@val:
   727                           	opt stack 0
   728                           
   729                           ; 4 bytes @ 0x6E
   730  00006F                     	ds	4
   731  000073                     printf@exp:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x72
   735  000073                     	ds	2
   736  000075                     printf@tmpval:
   737                           	opt stack 0
   738                           
   739                           ; 4 bytes @ 0x74
   740  000075                     	ds	4
   741  000079                     printf@fval:
   742                           	opt stack 0
   743                           
   744                           ; 3 bytes @ 0x78
   745  000079                     	ds	3
   746  00007C                     printf@c:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x7B
   750  00007C                     	ds	1
   751  00007D                     tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           postinc0	equ	0xFEE
   756                           postdec1	equ	0xFE5
   757                           fsr1l	equ	0xFE1
   758                           
   759                           ; 0 bytes @ 0x7C
   760 ;;
   761 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   762 ;;
   763 ;; *************** function _main *****************
   764 ;; Defined at:
   765 ;;		line 38 in file "Lab6pB3.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  RLint           2   23[BANK0 ] int 
   770 ;;  l               2   18[BANK0 ] int 
   771 ;;  u               2   16[BANK0 ] int 
   772 ;;  t               1   26[BANK0 ] unsigned char 
   773 ;;  l               2   14[BANK0 ] int 
   774 ;;  u               2   12[BANK0 ] int 
   775 ;;  t               1   25[BANK0 ] unsigned char 
   776 ;;  RL              3   27[BANK0 ] float 
   777 ;;  voltage_mv      3   20[BANK0 ] float 
   778 ;;  num_step        2   10[BANK0 ] int 
   779 ;;  LED_7seg       10    0[BANK0 ] unsigned char [10]
   780 ;; Return value:  Size  Location     Type
   781 ;;		None               void
   782 ;; Registers used:
   783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;Total ram usage:       30 bytes
   794 ;; Hardware stack levels required when called:    4
   795 ;; This function calls:
   796 ;;		_Activate_Buzzer
   797 ;;		_Deactivate_Buzzer
   798 ;;		_Delay_One_Sec
   799 ;;		_Init_ADC
   800 ;;		_Init_UART
   801 ;;		_Select_ADC_Channel
   802 ;;		___awdiv
   803 ;;		___awmod
   804 ;;		___awtoft
   805 ;;		___ftadd
   806 ;;		___ftdiv
   807 ;;		___ftge
   808 ;;		___ftmul
   809 ;;		___ftneg
   810 ;;		___fttol
   811 ;;		_get_full_ADC
   812 ;;		_printf
   813 ;; This function is called by:
   814 ;;		Startup code after reset
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text0
   819  001A88                     __ptext0:
   820                           	opt stack 0
   821  001A88                     _main:
   822                           	opt stack 27
   823                           
   824                           ;Lab6pB3.c: 40: Init_UART();
   825                           
   826                           ;incstack = 0
   827  001A88  ECDA  F015         	call	_Init_UART	;wreg free
   828                           
   829                           ;Lab6pB3.c: 41: Init_ADC();
   830  001A8C  ECF4  F015         	call	_Init_ADC	;wreg free
   831                           
   832                           ;Lab6pB3.c: 42: char LED_7seg[10] = {0x01,0x4F, 0x12, 0x06, 0x4C, 0x24, 0x20, 0x0F, 0x00
      +                          , 0x04};
   833  001A90  EE20  F09E         	lfsr	2,main@F4283
   834  001A94  EE10  F080         	lfsr	1,main@LED_7seg
   835  001A98  0E09               	movlw	9
   836  001A9A                     u2781:
   837  001A9A  CFDB FFE3          	movff	plusw2,plusw1
   838  001A9E  06E8               	decf	wreg,f,c
   839  001AA0  E2FC               	bc	u2781
   840                           
   841                           ;Lab6pB3.c: 44: TRISA = 0xFF;
   842  001AA2  6892               	setf	3986,c	;volatile
   843                           
   844                           ;Lab6pB3.c: 45: TRISB = 0x00;
   845  001AA4  0E00               	movlw	0
   846  001AA6  6E93               	movwf	3987,c	;volatile
   847                           
   848                           ;Lab6pB3.c: 46: TRISC = 0x00;
   849  001AA8  0E00               	movlw	0
   850  001AAA  6E94               	movwf	3988,c	;volatile
   851                           
   852                           ;Lab6pB3.c: 47: TRISD = 0x00;
   853  001AAC  0E00               	movlw	0
   854  001AAE  6E95               	movwf	3989,c	;volatile
   855                           
   856                           ;Lab6pB3.c: 48: TRISE = 0x00;
   857  001AB0  0E00               	movlw	0
   858  001AB2  6E96               	movwf	3990,c	;volatile
   859  001AB4  D000               	goto	l2624
   860  001AB6                     l2624:
   861                           
   862                           ;Lab6pB3.c: 51: {
   863                           ;Lab6pB3.c: 52: Select_ADC_Channel(4);
   864  001AB6  0E04               	movlw	4
   865  001AB8  ECFB  F015         	call	_Select_ADC_Channel
   866                           
   867                           ;Lab6pB3.c: 53: int num_step = get_full_ADC();
   868  001ABC  ECA3  F015         	call	_get_full_ADC	;wreg free
   869  001AC0  C001  F08A         	movff	?_get_full_ADC,main@num_step
   870  001AC4  C002  F08B         	movff	?_get_full_ADC+1,main@num_step+1
   871                           
   872                           ;Lab6pB3.c: 54: float voltage_mv = (num_step*4.0)/1000.0;
   873  001AC8  0E00               	movlw	0
   874  001ACA  6E10               	movwf	___ftmul@f2,c
   875  001ACC  0E80               	movlw	128
   876  001ACE  6E11               	movwf	___ftmul@f2+1,c
   877  001AD0  0E40               	movlw	64
   878  001AD2  6E12               	movwf	___ftmul@f2+2,c
   879  001AD4  C08A  F009         	movff	main@num_step,___awtoft@c
   880  001AD8  C08B  F00A         	movff	main@num_step+1,___awtoft@c+1
   881  001ADC  EC5C  F015         	call	___awtoft	;wreg free
   882  001AE0  C009  F00D         	movff	?___awtoft,___ftmul@f1
   883  001AE4  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
   884  001AE8  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
   885  001AEC  ECBA  F011         	call	___ftmul	;wreg free
   886  001AF0  C00D  F055         	movff	?___ftmul,___ftdiv@f1
   887  001AF4  C00E  F056         	movff	?___ftmul+1,___ftdiv@f1+1
   888  001AF8  C00F  F057         	movff	?___ftmul+2,___ftdiv@f1+2
   889  001AFC  0E00               	movlw	0
   890  001AFE  6E58               	movwf	___ftdiv@f2,c
   891  001B00  0E7A               	movlw	122
   892  001B02  6E59               	movwf	___ftdiv@f2+1,c
   893  001B04  0E44               	movlw	68
   894  001B06  6E5A               	movwf	___ftdiv@f2+2,c
   895  001B08  ECA9  F012         	call	___ftdiv	;wreg free
   896  001B0C  C055  F094         	movff	?___ftdiv,main@voltage_mv
   897  001B10  C056  F095         	movff	?___ftdiv+1,main@voltage_mv+1
   898  001B14  C057  F096         	movff	?___ftdiv+2,main@voltage_mv+2
   899                           
   900                           ;Lab6pB3.c: 55: float RL = (100.0 * voltage_mv) / (4.096 - voltage_mv);
   901  001B18  0E00               	movlw	0
   902  001B1A  6E10               	movwf	___ftmul@f2,c
   903  001B1C  0EC8               	movlw	200
   904  001B1E  6E11               	movwf	___ftmul@f2+1,c
   905  001B20  0E42               	movlw	66
   906  001B22  6E12               	movwf	___ftmul@f2+2,c
   907  001B24  C094  F00D         	movff	main@voltage_mv,___ftmul@f1
   908  001B28  C095  F00E         	movff	main@voltage_mv+1,___ftmul@f1+1
   909  001B2C  C096  F00F         	movff	main@voltage_mv+2,___ftmul@f1+2
   910  001B30  ECBA  F011         	call	___ftmul	;wreg free
   911  001B34  C00D  F055         	movff	?___ftmul,___ftdiv@f1
   912  001B38  C00E  F056         	movff	?___ftmul+1,___ftdiv@f1+1
   913  001B3C  C00F  F057         	movff	?___ftmul+2,___ftdiv@f1+2
   914  001B40  0E12               	movlw	18
   915  001B42  6E4C               	movwf	___ftadd@f2,c
   916  001B44  0E83               	movlw	131
   917  001B46  6E4D               	movwf	___ftadd@f2+1,c
   918  001B48  0E40               	movlw	64
   919  001B4A  6E4E               	movwf	___ftadd@f2+2,c
   920  001B4C  C094  F001         	movff	main@voltage_mv,___ftneg@f1
   921  001B50  C095  F002         	movff	main@voltage_mv+1,___ftneg@f1+1
   922  001B54  C096  F003         	movff	main@voltage_mv+2,___ftneg@f1+2
   923  001B58  ECB6  F015         	call	___ftneg	;wreg free
   924  001B5C  C001  F049         	movff	?___ftneg,___ftadd@f1
   925  001B60  C002  F04A         	movff	?___ftneg+1,___ftadd@f1+1
   926  001B64  C003  F04B         	movff	?___ftneg+2,___ftadd@f1+2
   927  001B68  ECCB  F00F         	call	___ftadd	;wreg free
   928  001B6C  C049  F058         	movff	?___ftadd,___ftdiv@f2
   929  001B70  C04A  F059         	movff	?___ftadd+1,___ftdiv@f2+1
   930  001B74  C04B  F05A         	movff	?___ftadd+2,___ftdiv@f2+2
   931  001B78  ECA9  F012         	call	___ftdiv	;wreg free
   932  001B7C  C055  F09B         	movff	?___ftdiv,main@RL
   933  001B80  C056  F09C         	movff	?___ftdiv+1,main@RL+1
   934  001B84  C057  F09D         	movff	?___ftdiv+2,main@RL+2
   935                           
   936                           ;Lab6pB3.c: 57: if (RL < 10.0)
   937  001B88  C09B  F001         	movff	main@RL,___ftge@ff1
   938  001B8C  C09C  F002         	movff	main@RL+1,___ftge@ff1+1
   939  001B90  C09D  F003         	movff	main@RL+2,___ftge@ff1+2
   940  001B94  0E00               	movlw	0
   941  001B96  6E04               	movwf	___ftge@ff2,c
   942  001B98  0E20               	movlw	32
   943  001B9A  6E05               	movwf	___ftge@ff2+1,c
   944  001B9C  0E41               	movlw	65
   945  001B9E  6E06               	movwf	___ftge@ff2+2,c
   946  001BA0  ECC8  F013         	call	___ftge	;wreg free
   947  001BA4  B0D8               	btfsc	status,0,c
   948  001BA6  D05F               	goto	l2652
   949                           
   950                           ;Lab6pB3.c: 58: {
   951                           ;Lab6pB3.c: 59: int u = (int)RL;
   952  001BA8  C09B  F01C         	movff	main@RL,___fttol@f1
   953  001BAC  C09C  F01D         	movff	main@RL+1,___fttol@f1+1
   954  001BB0  C09D  F01E         	movff	main@RL+2,___fttol@f1+2
   955  001BB4  EC36  F012         	call	___fttol	;wreg free
   956  001BB8  C01C  F08C         	movff	?___fttol,main@u
   957  001BBC  C01D  F08D         	movff	?___fttol+1,main@u+1
   958                           
   959                           ;Lab6pB3.c: 60: int l = (int)(RL * 10)% 10;
   960  001BC0  0E00               	movlw	0
   961  001BC2  6E10               	movwf	___ftmul@f2,c
   962  001BC4  0E20               	movlw	32
   963  001BC6  6E11               	movwf	___ftmul@f2+1,c
   964  001BC8  0E41               	movlw	65
   965  001BCA  6E12               	movwf	___ftmul@f2+2,c
   966  001BCC  C09B  F00D         	movff	main@RL,___ftmul@f1
   967  001BD0  C09C  F00E         	movff	main@RL+1,___ftmul@f1+1
   968  001BD4  C09D  F00F         	movff	main@RL+2,___ftmul@f1+2
   969  001BD8  ECBA  F011         	call	___ftmul	;wreg free
   970  001BDC  C00D  F01C         	movff	?___ftmul,___fttol@f1
   971  001BE0  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
   972  001BE4  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
   973  001BE8  EC36  F012         	call	___fttol	;wreg free
   974  001BEC  C01C  F02B         	movff	?___fttol,___awmod@dividend
   975  001BF0  C01D  F02C         	movff	?___fttol+1,___awmod@dividend+1
   976  001BF4  0E00               	movlw	0
   977  001BF6  6E2E               	movwf	___awmod@divisor+1,c
   978  001BF8  0E0A               	movlw	10
   979  001BFA  6E2D               	movwf	___awmod@divisor,c
   980  001BFC  EC59  F014         	call	___awmod	;wreg free
   981  001C00  C02B  F08E         	movff	?___awmod,main@l
   982  001C04  C02C  F08F         	movff	?___awmod+1,main@l+1
   983                           
   984                           ;Lab6pB3.c: 61: PORTD = LED_7seg[l];
   985  001C08  0E80               	movlw	low main@LED_7seg
   986  001C0A  0100               	movlb	0	; () banked
   987  001C0C  258E               	addwf	main@l& (0+255),w,b
   988  001C0E  6ED9               	movwf	fsr2l,c
   989  001C10  0E00               	movlw	high main@LED_7seg
   990  001C12  0100               	movlb	0	; () banked
   991  001C14  218F               	addwfc	(main@l+1)& (0+255),w,b
   992  001C16  6EDA               	movwf	fsr2h,c
   993  001C18  50DF               	movf	indf2,w,c
   994  001C1A  6E83               	movwf	3971,c	;volatile
   995                           
   996                           ; BSR set to: 0
   997                           ;Lab6pB3.c: 62: char t = LED_7seg[u];
   998  001C1C  0E80               	movlw	low main@LED_7seg
   999  001C1E  0100               	movlb	0	; () banked
  1000  001C20  258C               	addwf	main@u& (0+255),w,b
  1001  001C22  6ED9               	movwf	fsr2l,c
  1002  001C24  0E00               	movlw	high main@LED_7seg
  1003  001C26  0100               	movlb	0	; () banked
  1004  001C28  218D               	addwfc	(main@u+1)& (0+255),w,b
  1005  001C2A  6EDA               	movwf	fsr2h,c
  1006  001C2C  50DF               	movf	indf2,w,c
  1007  001C2E  0100               	movlb	0	; () banked
  1008  001C30  6F99               	movwf	main@t& (0+255),b
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;Lab6pB3.c: 63: PORTC = t & 0x3F;
  1012  001C32  0100               	movlb	0	; () banked
  1013  001C34  5199               	movf	main@t& (0+255),w,b
  1014  001C36  0B3F               	andlw	63
  1015  001C38  6E82               	movwf	3970,c	;volatile
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;Lab6pB3.c: 64: PORTE = 0;
  1019  001C3A  0E00               	movlw	0
  1020  001C3C  6E84               	movwf	3972,c	;volatile
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;Lab6pB3.c: 65: if(t & 0x40) PORTE=2;
  1024  001C3E  0100               	movlb	0	; () banked
  1025  001C40  AD99               	btfss	main@t& (0+255),6,b
  1026  001C42  D003               	goto	l2648
  1027                           
  1028                           ; BSR set to: 0
  1029  001C44  0E02               	movlw	2
  1030  001C46  6E84               	movwf	3972,c	;volatile
  1031  001C48  D000               	goto	l2648
  1032  001C4A                     l2648:
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;Lab6pB3.c: 66: PORTDbits.RD7 = 0;
  1036  001C4A  9E83               	bcf	3971,7,c	;volatile
  1037                           
  1038                           ; BSR set to: 0
  1039                           ;Lab6pB3.c: 67: printf("RL: %f\r\n", RL);
  1040  001C4C  0E77               	movlw	low STR_1
  1041  001C4E  6E5B               	movwf	printf@f,c
  1042  001C50  0E10               	movlw	high STR_1
  1043  001C52  6E5C               	movwf	printf@f+1,c
  1044  001C54  C09B  F05D         	movff	main@RL,?_printf+2
  1045  001C58  C09C  F05E         	movff	main@RL+1,?_printf+3
  1046  001C5C  C09D  F05F         	movff	main@RL+2,?_printf+4
  1047  001C60  EC41  F008         	call	_printf	;wreg free
  1048                           
  1049                           ;Lab6pB3.c: 68: }
  1050  001C64  D057               	goto	l2670
  1051  001C66                     l2652:
  1052                           
  1053                           ;Lab6pB3.c: 69: else
  1054                           ;Lab6pB3.c: 70: {
  1055                           ;Lab6pB3.c: 71: int RLint = (int)RL;
  1056  001C66  C09B  F01C         	movff	main@RL,___fttol@f1
  1057  001C6A  C09C  F01D         	movff	main@RL+1,___fttol@f1+1
  1058  001C6E  C09D  F01E         	movff	main@RL+2,___fttol@f1+2
  1059  001C72  EC36  F012         	call	___fttol	;wreg free
  1060  001C76  C01C  F097         	movff	?___fttol,main@RLint
  1061  001C7A  C01D  F098         	movff	?___fttol+1,main@RLint+1
  1062                           
  1063                           ;Lab6pB3.c: 72: int u = RLint / 10;
  1064  001C7E  C097  F031         	movff	main@RLint,___awdiv@dividend
  1065  001C82  C098  F032         	movff	main@RLint+1,___awdiv@dividend+1
  1066  001C86  0E00               	movlw	0
  1067  001C88  6E34               	movwf	___awdiv@divisor+1,c
  1068  001C8A  0E0A               	movlw	10
  1069  001C8C  6E33               	movwf	___awdiv@divisor,c
  1070  001C8E  EC7D  F013         	call	___awdiv	;wreg free
  1071  001C92  C031  F090         	movff	?___awdiv,main@u_299
  1072  001C96  C032  F091         	movff	?___awdiv+1,main@u_299+1
  1073                           
  1074                           ;Lab6pB3.c: 73: int l = RLint % 10;
  1075  001C9A  C097  F02B         	movff	main@RLint,___awmod@dividend
  1076  001C9E  C098  F02C         	movff	main@RLint+1,___awmod@dividend+1
  1077  001CA2  0E00               	movlw	0
  1078  001CA4  6E2E               	movwf	___awmod@divisor+1,c
  1079  001CA6  0E0A               	movlw	10
  1080  001CA8  6E2D               	movwf	___awmod@divisor,c
  1081  001CAA  EC59  F014         	call	___awmod	;wreg free
  1082  001CAE  C02B  F092         	movff	?___awmod,main@l_300
  1083  001CB2  C02C  F093         	movff	?___awmod+1,main@l_300+1
  1084                           
  1085                           ;Lab6pB3.c: 74: PORTD = LED_7seg[l];
  1086  001CB6  0E80               	movlw	low main@LED_7seg
  1087  001CB8  0100               	movlb	0	; () banked
  1088  001CBA  2592               	addwf	main@l_300& (0+255),w,b
  1089  001CBC  6ED9               	movwf	fsr2l,c
  1090  001CBE  0E00               	movlw	high main@LED_7seg
  1091  001CC0  0100               	movlb	0	; () banked
  1092  001CC2  2193               	addwfc	(main@l_300+1)& (0+255),w,b
  1093  001CC4  6EDA               	movwf	fsr2h,c
  1094  001CC6  50DF               	movf	indf2,w,c
  1095  001CC8  6E83               	movwf	3971,c	;volatile
  1096                           
  1097                           ; BSR set to: 0
  1098                           ;Lab6pB3.c: 75: char t = LED_7seg[u];
  1099  001CCA  0E80               	movlw	low main@LED_7seg
  1100  001CCC  0100               	movlb	0	; () banked
  1101  001CCE  2590               	addwf	main@u_299& (0+255),w,b
  1102  001CD0  6ED9               	movwf	fsr2l,c
  1103  001CD2  0E00               	movlw	high main@LED_7seg
  1104  001CD4  0100               	movlb	0	; () banked
  1105  001CD6  2191               	addwfc	(main@u_299+1)& (0+255),w,b
  1106  001CD8  6EDA               	movwf	fsr2h,c
  1107  001CDA  50DF               	movf	indf2,w,c
  1108  001CDC  0100               	movlb	0	; () banked
  1109  001CDE  6F9A               	movwf	main@t_301& (0+255),b
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;Lab6pB3.c: 76: PORTC = t & 0x3F;
  1113  001CE0  0100               	movlb	0	; () banked
  1114  001CE2  519A               	movf	main@t_301& (0+255),w,b
  1115  001CE4  0B3F               	andlw	63
  1116  001CE6  6E82               	movwf	3970,c	;volatile
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;Lab6pB3.c: 77: PORTE = 0;
  1120  001CE8  0E00               	movlw	0
  1121  001CEA  6E84               	movwf	3972,c	;volatile
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;Lab6pB3.c: 78: if(t & 0x40) PORTE=2;
  1125  001CEC  0100               	movlb	0	; () banked
  1126  001CEE  AD9A               	btfss	main@t_301& (0+255),6,b
  1127  001CF0  D003               	goto	l2666
  1128                           
  1129                           ; BSR set to: 0
  1130  001CF2  0E02               	movlw	2
  1131  001CF4  6E84               	movwf	3972,c	;volatile
  1132  001CF6  D000               	goto	l2666
  1133  001CF8                     l2666:
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;Lab6pB3.c: 79: PORTDbits.RD7 = 1;
  1137  001CF8  8E83               	bsf	3971,7,c	;volatile
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;Lab6pB3.c: 80: printf("RL: %f\r\n", RL);
  1141  001CFA  0E77               	movlw	low STR_1
  1142  001CFC  6E5B               	movwf	printf@f,c
  1143  001CFE  0E10               	movlw	high STR_1
  1144  001D00  6E5C               	movwf	printf@f+1,c
  1145  001D02  C09B  F05D         	movff	main@RL,?_printf+2
  1146  001D06  C09C  F05E         	movff	main@RL+1,?_printf+3
  1147  001D0A  C09D  F05F         	movff	main@RL+2,?_printf+4
  1148  001D0E  EC41  F008         	call	_printf	;wreg free
  1149  001D12  D000               	goto	l2670
  1150  001D14                     l2670:
  1151                           
  1152                           ;Lab6pB3.c: 81: }
  1153                           ;Lab6pB3.c: 87: if(RL <= 0.070)
  1154  001D14  0E5C               	movlw	92
  1155  001D16  6E01               	movwf	___ftge@ff1,c
  1156  001D18  0E8F               	movlw	143
  1157  001D1A  6E02               	movwf	___ftge@ff1+1,c
  1158  001D1C  0E3D               	movlw	61
  1159  001D1E  6E03               	movwf	___ftge@ff1+2,c
  1160  001D20  C09B  F004         	movff	main@RL,___ftge@ff2
  1161  001D24  C09C  F005         	movff	main@RL+1,___ftge@ff2+1
  1162  001D28  C09D  F006         	movff	main@RL+2,___ftge@ff2+2
  1163  001D2C  ECC8  F013         	call	___ftge	;wreg free
  1164  001D30  A0D8               	btfss	status,0,c
  1165  001D32  D005               	goto	l81
  1166                           
  1167                           ;Lab6pB3.c: 88: {
  1168                           ;Lab6pB3.c: 89: PORTBbits.RB4 = 1;
  1169  001D34  8881               	bsf	3969,4,c	;volatile
  1170                           
  1171                           ;Lab6pB3.c: 90: PORTBbits.RB5 = 1;
  1172  001D36  8A81               	bsf	3969,5,c	;volatile
  1173                           
  1174                           ;Lab6pB3.c: 91: Activate_Buzzer();
  1175  001D38  ECE4  F015         	call	_Activate_Buzzer	;wreg free
  1176                           
  1177                           ;Lab6pB3.c: 92: }
  1178  001D3C  D005               	goto	l2678
  1179  001D3E                     l81:
  1180                           
  1181                           ;Lab6pB3.c: 93: else
  1182                           ;Lab6pB3.c: 94: {
  1183                           ;Lab6pB3.c: 95: PORTBbits.RB4 = 0;
  1184  001D3E  9881               	bcf	3969,4,c	;volatile
  1185                           
  1186                           ;Lab6pB3.c: 96: PORTBbits.RB5 = 0;
  1187  001D40  9A81               	bcf	3969,5,c	;volatile
  1188                           
  1189                           ;Lab6pB3.c: 97: Deactivate_Buzzer();
  1190  001D42  EC06  F016         	call	_Deactivate_Buzzer	;wreg free
  1191  001D46  D000               	goto	l2678
  1192  001D48                     l2678:
  1193                           
  1194                           ;Lab6pB3.c: 98: }
  1195                           ;Lab6pB3.c: 100: Delay_One_Sec();
  1196  001D48  ECC8  F015         	call	_Delay_One_Sec	;wreg free
  1197  001D4C  D6B4               	goto	l2624
  1198  001D4E  EF00  F000         	goto	start
  1199  001D52                     __end_of_main:
  1200                           	opt stack 0
  1201                           tblptru	equ	0xFF8
  1202                           tblptrh	equ	0xFF7
  1203                           tblptrl	equ	0xFF6
  1204                           tablat	equ	0xFF5
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postdec1	equ	0xFE5
  1208                           plusw1	equ	0xFE3
  1209                           fsr1l	equ	0xFE1
  1210                           indf2	equ	0xFDF
  1211                           plusw2	equ	0xFDB
  1212                           fsr2h	equ	0xFDA
  1213                           fsr2l	equ	0xFD9
  1214                           status	equ	0xFD8
  1215                           
  1216 ;; *************** function _printf *****************
  1217 ;; Defined at:
  1218 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  f               2   90[COMRAM] PTR const unsigned char 
  1221 ;;		 -> STR_2(9), STR_1(9), 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  tmpval          4  116[COMRAM] struct .
  1224 ;;  val             4  110[COMRAM] unsigned long 
  1225 ;;  fval            3  120[COMRAM] unsigned long 
  1226 ;;  cp              3    0        PTR const unsigned char 
  1227 ;;  exp             2  114[COMRAM] int 
  1228 ;;  prec            2  108[COMRAM] int 
  1229 ;;  flag            2  106[COMRAM] unsigned short 
  1230 ;;  ap              2  104[COMRAM] PTR void [1]
  1231 ;;		 -> ?_printf(2), 
  1232 ;;  len             2    0        unsigned int 
  1233 ;;  width           2    0        int 
  1234 ;;  c               1  123[COMRAM] char 
  1235 ;;  d               1    0        unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  2   90[COMRAM] int 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1245 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;Total ram usage:       34 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    3
  1252 ;; This function calls:
  1253 ;;		___awdiv
  1254 ;;		___ftadd
  1255 ;;		___ftge
  1256 ;;		___ftmul
  1257 ;;		___ftneg
  1258 ;;		___ftsub
  1259 ;;		___fttol
  1260 ;;		___lldiv
  1261 ;;		___llmod
  1262 ;;		___lltoft
  1263 ;;		___wmul
  1264 ;;		__div_to_l_
  1265 ;;		__tdiv_to_l_
  1266 ;;		_fround
  1267 ;;		_putch
  1268 ;;		_scale
  1269 ;; This function is called by:
  1270 ;;		_main
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text1
  1275  001082                     __ptext1:
  1276                           	opt stack 0
  1277  001082                     _printf:
  1278                           	opt stack 27
  1279                           
  1280                           ;doprnt.c: 466: va_list ap;
  1281                           ;doprnt.c: 499: signed char c;
  1282                           ;doprnt.c: 501: int width;
  1283                           ;doprnt.c: 504: int prec;
  1284                           ;doprnt.c: 508: unsigned short flag;
  1285                           ;doprnt.c: 515: char d;
  1286                           ;doprnt.c: 516: double fval;
  1287                           ;doprnt.c: 517: int exp;
  1288                           ;doprnt.c: 523: union {
  1289                           ;doprnt.c: 524: unsigned long vd;
  1290                           ;doprnt.c: 525: double integ;
  1291                           ;doprnt.c: 526: } tmpval;
  1292                           ;doprnt.c: 528: unsigned long val;
  1293                           ;doprnt.c: 529: unsigned len;
  1294                           ;doprnt.c: 530: const char * cp;
  1295                           ;doprnt.c: 533: *ap = __va_start();
  1296                           
  1297                           ;incstack = 0
  1298  001082  0E5D               	movlw	low (?_printf+2)
  1299  001084  6E69               	movwf	printf@ap,c
  1300  001086  0E00               	movlw	high (?_printf+2)
  1301  001088  6E6A               	movwf	printf@ap+1,c
  1302                           
  1303                           ;doprnt.c: 536: while(c = *f++) {
  1304  00108A  D2FF               	goto	l2534
  1305  00108C                     l2386:
  1306                           
  1307                           ;doprnt.c: 538: if(c != '%')
  1308  00108C  0E25               	movlw	37
  1309  00108E  187C               	xorwf	printf@c,w,c
  1310  001090  B4D8               	btfsc	status,2,c
  1311  001092  D004               	goto	l2390
  1312                           
  1313                           ;doprnt.c: 540: {
  1314                           ;doprnt.c: 541: (putch(c) );
  1315  001094  507C               	movf	printf@c,w,c
  1316  001096  ECED  F015         	call	_putch
  1317                           
  1318                           ;doprnt.c: 542: continue;
  1319  00109A  D2F7               	goto	l2534
  1320  00109C                     l2390:
  1321                           
  1322                           ;doprnt.c: 543: }
  1323                           ;doprnt.c: 548: flag = 0;
  1324  00109C  0E00               	movlw	0
  1325  00109E  6E6C               	movwf	printf@flag+1,c
  1326  0010A0  0E00               	movlw	0
  1327  0010A2  6E6B               	movwf	printf@flag,c
  1328                           
  1329                           ;doprnt.c: 635: switch(c = *f++) {
  1330  0010A4  D005               	goto	l2396
  1331                           
  1332                           ;doprnt.c: 638: goto alldone;
  1333                           
  1334                           ;doprnt.c: 637: case 0:
  1335  0010A6  D2FF               	goto	l191
  1336  0010A8                     l2392:
  1337                           
  1338                           ;doprnt.c: 663: flag |= 0x400;
  1339  0010A8  846C               	bsf	printf@flag+1,2,c
  1340                           
  1341                           ;doprnt.c: 664: break;
  1342  0010AA  D013               	goto	l2398
  1343                           
  1344                           ;doprnt.c: 813: continue;
  1345                           
  1346                           ;doprnt.c: 802: default:
  1347  0010AC  D2EE               	goto	l2534
  1348                           
  1349                           ;doprnt.c: 822: }
  1350  0010AE  D011               	goto	l2398
  1351  0010B0                     l2396:
  1352  0010B0  C05B  FFF6         	movff	printf@f,tblptrl
  1353  0010B4  C05C  FFF7         	movff	printf@f+1,tblptrh
  1354  0010B8  4A5B               	infsnz	printf@f,f,c
  1355  0010BA  2A5C               	incf	printf@f+1,f,c
  1356  0010BC                     	if	0	;tblptru may be non-zero
  1357  0010BC                     	endif
  1358  0010BC                     	if	0	;tblptru may be non-zero
  1359  0010BC                     	endif
  1360  0010BC  0008               	tblrd		*
  1361  0010BE  CFF5 F07C          	movff	tablat,printf@c
  1362  0010C2  507C               	movf	printf@c,w,c
  1363                           
  1364                           ; Switch size 1, requested type "space"
  1365                           ; Number of cases is 2, Range of values is 0 to 102
  1366                           ; switch strategies available:
  1367                           ; Name         Instructions Cycles
  1368                           ; simple_byte            7     4 (average)
  1369                           ;	Chosen strategy is simple_byte
  1370  0010C4  0A00               	xorlw	0	; case 0
  1371  0010C6  B4D8               	btfsc	status,2,c
  1372  0010C8  D2EE               	goto	l191
  1373  0010CA  0A66               	xorlw	102	; case 102
  1374  0010CC  B4D8               	btfsc	status,2,c
  1375  0010CE  D7EC               	goto	l2392
  1376  0010D0  D2DC               	goto	l2534
  1377  0010D2                     l2398:
  1378                           
  1379                           ;doprnt.c: 825: if(flag & (0x700)) {
  1380  0010D2  0E07               	movlw	7
  1381  0010D4  146C               	andwf	printf@flag+1,w,c
  1382  0010D6  B4D8               	btfsc	status,2,c
  1383  0010D8  D2CA               	goto	l2530
  1384                           
  1385                           ;doprnt.c: 829: prec = 6;
  1386  0010DA  0E00               	movlw	0
  1387  0010DC  6E6E               	movwf	printf@prec+1,c
  1388  0010DE  0E06               	movlw	6
  1389  0010E0  6E6D               	movwf	printf@prec,c
  1390                           
  1391                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1392  0010E2  C069  FFD9         	movff	printf@ap,fsr2l
  1393  0010E6  C06A  FFDA         	movff	printf@ap+1,fsr2h
  1394  0010EA  CFDE F079          	movff	postinc2,printf@fval
  1395  0010EE  CFDE F07A          	movff	postinc2,printf@fval+1
  1396  0010F2  CFDD F07B          	movff	postdec2,printf@fval+2
  1397  0010F6  0E03               	movlw	3
  1398  0010F8  2669               	addwf	printf@ap,f,c
  1399  0010FA  0E00               	movlw	0
  1400  0010FC  226A               	addwfc	printf@ap+1,f,c
  1401                           
  1402                           ;doprnt.c: 831: if(fval < 0.0) {
  1403  0010FE  AE7B               	btfss	printf@fval+2,7,c
  1404  001100  D011               	goto	l2412
  1405                           
  1406                           ;doprnt.c: 832: fval = -fval;
  1407  001102  C079  F001         	movff	printf@fval,___ftneg@f1
  1408  001106  C07A  F002         	movff	printf@fval+1,___ftneg@f1+1
  1409  00110A  C07B  F003         	movff	printf@fval+2,___ftneg@f1+2
  1410  00110E  ECB6  F015         	call	___ftneg	;wreg free
  1411  001112  C001  F079         	movff	?___ftneg,printf@fval
  1412  001116  C002  F07A         	movff	?___ftneg+1,printf@fval+1
  1413  00111A  C003  F07B         	movff	?___ftneg+2,printf@fval+2
  1414                           
  1415                           ;doprnt.c: 833: flag |= 0x03;
  1416  00111E  0E03               	movlw	3
  1417  001120  126B               	iorwf	printf@flag,f,c
  1418  001122  D000               	goto	l2412
  1419  001124                     l2412:
  1420                           
  1421                           ;doprnt.c: 834: }
  1422                           ;doprnt.c: 835: exp = 0;
  1423  001124  0E00               	movlw	0
  1424  001126  6E74               	movwf	printf@exp+1,c
  1425  001128  0E00               	movlw	0
  1426  00112A  6E73               	movwf	printf@exp,c
  1427                           
  1428                           ;doprnt.c: 836: if( fval!=0) {
  1429  00112C  5079               	movf	printf@fval,w,c
  1430  00112E  107A               	iorwf	printf@fval+1,w,c
  1431  001130  107B               	iorwf	printf@fval+2,w,c
  1432  001132  B4D8               	btfsc	status,2,c
  1433  001134  D085               	goto	l2440
  1434                           
  1435                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1436  001136  0E82               	movlw	130
  1437  001138  6E60               	movwf	??_printf& (0+255),c
  1438  00113A  0EFF               	movlw	255
  1439  00113C  6E61               	movwf	(??_printf+1)& (0+255),c
  1440  00113E  C079  F062         	movff	printf@fval,??_printf+2
  1441  001142  C07A  F063         	movff	printf@fval+1,??_printf+3
  1442  001146  C07B  F064         	movff	printf@fval+2,??_printf+4
  1443  00114A  C07C  F065         	movff	printf@fval+3,??_printf+5
  1444  00114E  0E10               	movlw	16
  1445  001150  D005               	goto	u2480
  1446  001152                     u2485:
  1447  001152  90D8               	bcf	status,0,c
  1448  001154  3265               	rrcf	??_printf+5,f,c
  1449  001156  3264               	rrcf	??_printf+4,f,c
  1450  001158  3263               	rrcf	??_printf+3,f,c
  1451  00115A  3262               	rrcf	??_printf+2,f,c
  1452  00115C                     u2480:
  1453  00115C  2EE8               	decfsz	wreg,f,c
  1454  00115E  D7F9               	goto	u2485
  1455  001160  5062               	movf	??_printf+2,w,c
  1456  001162  2460               	addwf	??_printf,w,c
  1457  001164  6E73               	movwf	printf@exp,c
  1458  001166  0E00               	movlw	0
  1459  001168  2061               	addwfc	??_printf+1,w,c
  1460  00116A  6E74               	movwf	printf@exp+1,c
  1461                           
  1462                           ;doprnt.c: 838: exp--;
  1463  00116C  0673               	decf	printf@exp,f,c
  1464  00116E  A0D8               	btfss	status,0,c
  1465  001170  0674               	decf	printf@exp+1,f,c
  1466                           
  1467                           ;doprnt.c: 839: exp *= 3;
  1468  001172  C073  F039         	movff	printf@exp,___wmul@multiplier
  1469  001176  C074  F03A         	movff	printf@exp+1,___wmul@multiplier+1
  1470  00117A  0E00               	movlw	0
  1471  00117C  6E3C               	movwf	___wmul@multiplicand+1,c
  1472  00117E  0E03               	movlw	3
  1473  001180  6E3B               	movwf	___wmul@multiplicand,c
  1474  001182  EC8F  F015         	call	___wmul	;wreg free
  1475  001186  C039  F073         	movff	?___wmul,printf@exp
  1476  00118A  C03A  F074         	movff	?___wmul+1,printf@exp+1
  1477                           
  1478                           ;doprnt.c: 840: exp /= 10;
  1479  00118E  C073  F031         	movff	printf@exp,___awdiv@dividend
  1480  001192  C074  F032         	movff	printf@exp+1,___awdiv@dividend+1
  1481  001196  0E00               	movlw	0
  1482  001198  6E34               	movwf	___awdiv@divisor+1,c
  1483  00119A  0E0A               	movlw	10
  1484  00119C  6E33               	movwf	___awdiv@divisor,c
  1485  00119E  EC7D  F013         	call	___awdiv	;wreg free
  1486  0011A2  C031  F073         	movff	?___awdiv,printf@exp
  1487  0011A6  C032  F074         	movff	?___awdiv+1,printf@exp+1
  1488                           
  1489                           ;doprnt.c: 841: if(exp < 0)
  1490  0011AA  AE74               	btfss	printf@exp+1,7,c
  1491  0011AC  D004               	goto	l2428
  1492                           
  1493                           ;doprnt.c: 842: exp--;
  1494  0011AE  0673               	decf	printf@exp,f,c
  1495  0011B0  A0D8               	btfss	status,0,c
  1496  0011B2  0674               	decf	printf@exp+1,f,c
  1497  0011B4  D000               	goto	l2428
  1498  0011B6                     l2428:
  1499                           
  1500                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1501  0011B6  5073               	movf	printf@exp,w,c
  1502  0011B8  0800               	sublw	0
  1503  0011BA  EC54  F00B         	call	_scale
  1504  0011BE  C03F  F075         	movff	?_scale,printf@tmpval
  1505  0011C2  C040  F076         	movff	?_scale+1,printf@tmpval+1
  1506  0011C6  C041  F077         	movff	?_scale+2,printf@tmpval+2
  1507                           
  1508                           ;doprnt.c: 847: tmpval.integ *= fval;
  1509  0011CA  C075  F00D         	movff	printf@tmpval,___ftmul@f1
  1510  0011CE  C076  F00E         	movff	printf@tmpval+1,___ftmul@f1+1
  1511  0011D2  C077  F00F         	movff	printf@tmpval+2,___ftmul@f1+2
  1512  0011D6  C079  F010         	movff	printf@fval,___ftmul@f2
  1513  0011DA  C07A  F011         	movff	printf@fval+1,___ftmul@f2+1
  1514  0011DE  C07B  F012         	movff	printf@fval+2,___ftmul@f2+2
  1515  0011E2  ECBA  F011         	call	___ftmul	;wreg free
  1516  0011E6  C00D  F075         	movff	?___ftmul,printf@tmpval
  1517  0011EA  C00E  F076         	movff	?___ftmul+1,printf@tmpval+1
  1518  0011EE  C00F  F077         	movff	?___ftmul+2,printf@tmpval+2
  1519                           
  1520                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1521  0011F2  C075  F001         	movff	printf@tmpval,___ftge@ff1
  1522  0011F6  C076  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1523  0011FA  C077  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1524  0011FE  0E00               	movlw	0
  1525  001200  6E04               	movwf	___ftge@ff2,c
  1526  001202  0E80               	movlw	128
  1527  001204  6E05               	movwf	___ftge@ff2+1,c
  1528  001206  0E3F               	movlw	63
  1529  001208  6E06               	movwf	___ftge@ff2+2,c
  1530  00120A  ECC8  F013         	call	___ftge	;wreg free
  1531  00120E  B0D8               	btfsc	status,0,c
  1532  001210  D004               	goto	l2436
  1533                           
  1534                           ;doprnt.c: 849: exp--;
  1535  001212  0673               	decf	printf@exp,f,c
  1536  001214  A0D8               	btfss	status,0,c
  1537  001216  0674               	decf	printf@exp+1,f,c
  1538  001218  D013               	goto	l2440
  1539  00121A                     l2436:
  1540                           
  1541                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1542  00121A  C075  F001         	movff	printf@tmpval,___ftge@ff1
  1543  00121E  C076  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1544  001222  C077  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1545  001226  0E00               	movlw	0
  1546  001228  6E04               	movwf	___ftge@ff2,c
  1547  00122A  0E20               	movlw	32
  1548  00122C  6E05               	movwf	___ftge@ff2+1,c
  1549  00122E  0E41               	movlw	65
  1550  001230  6E06               	movwf	___ftge@ff2+2,c
  1551  001232  ECC8  F013         	call	___ftge	;wreg free
  1552  001236  A0D8               	btfss	status,0,c
  1553  001238  D003               	goto	l2440
  1554                           
  1555                           ;doprnt.c: 851: exp++;
  1556  00123A  4A73               	infsnz	printf@exp,f,c
  1557  00123C  2A74               	incf	printf@exp+1,f,c
  1558  00123E  D000               	goto	l2440
  1559  001240                     l2440:
  1560                           
  1561                           ;doprnt.c: 852: }
  1562                           ;doprnt.c: 1112: if(prec <= 12)
  1563  001240  BE6E               	btfsc	printf@prec+1,7,c
  1564  001242  D006               	goto	l2442
  1565  001244  506E               	movf	printf@prec+1,w,c
  1566  001246  E11C               	bnz	l2444
  1567  001248  0E0D               	movlw	13
  1568  00124A  5C6D               	subwf	printf@prec,w,c
  1569  00124C  B0D8               	btfsc	status,0,c
  1570  00124E  D018               	goto	l2444
  1571  001250                     l2442:
  1572                           
  1573                           ;doprnt.c: 1113: fval += fround(prec);
  1574  001250  C079  F049         	movff	printf@fval,___ftadd@f1
  1575  001254  C07A  F04A         	movff	printf@fval+1,___ftadd@f1+1
  1576  001258  C07B  F04B         	movff	printf@fval+2,___ftadd@f1+2
  1577  00125C  506D               	movf	printf@prec,w,c
  1578  00125E  ECA9  F00E         	call	_fround
  1579  001262  C03F  F04C         	movff	?_fround,___ftadd@f2
  1580  001266  C040  F04D         	movff	?_fround+1,___ftadd@f2+1
  1581  00126A  C041  F04E         	movff	?_fround+2,___ftadd@f2+2
  1582  00126E  ECCB  F00F         	call	___ftadd	;wreg free
  1583  001272  C049  F079         	movff	?___ftadd,printf@fval
  1584  001276  C04A  F07A         	movff	?___ftadd+1,printf@fval+1
  1585  00127A  C04B  F07B         	movff	?___ftadd+2,printf@fval+2
  1586  00127E  D000               	goto	l2444
  1587  001280                     l2444:
  1588                           
  1589                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1590  001280  BE74               	btfsc	printf@exp+1,7,c
  1591  001282  D006               	goto	l2446
  1592  001284  5074               	movf	printf@exp+1,w,c
  1593  001286  E120               	bnz	l2452
  1594  001288  0E0A               	movlw	10
  1595  00128A  5C73               	subwf	printf@exp,w,c
  1596  00128C  B0D8               	btfsc	status,0,c
  1597  00128E  D01C               	goto	l2452
  1598  001290                     l2446:
  1599  001290  5079               	movf	printf@fval,w,c
  1600  001292  107A               	iorwf	printf@fval+1,w,c
  1601  001294  107B               	iorwf	printf@fval+2,w,c
  1602  001296  B4D8               	btfsc	status,2,c
  1603  001298  D06D               	goto	l2466
  1604  00129A  C079  F01C         	movff	printf@fval,___fttol@f1
  1605  00129E  C07A  F01D         	movff	printf@fval+1,___fttol@f1+1
  1606  0012A2  C07B  F01E         	movff	printf@fval+2,___fttol@f1+2
  1607  0012A6  EC36  F012         	call	___fttol	;wreg free
  1608  0012AA  501C               	movf	?___fttol,w,c
  1609  0012AC  101D               	iorwf	?___fttol+1,w,c
  1610  0012AE  101E               	iorwf	?___fttol+2,w,c
  1611  0012B0  101F               	iorwf	?___fttol+3,w,c
  1612  0012B2  B4D8               	btfsc	status,2,c
  1613  0012B4  BE74               	btfsc	printf@exp+1,7,c
  1614  0012B6  D05E               	goto	l2466
  1615  0012B8  5074               	movf	printf@exp+1,w,c
  1616  0012BA  E106               	bnz	l2452
  1617  0012BC  0E02               	movlw	2
  1618  0012BE  5C73               	subwf	printf@exp,w,c
  1619  0012C0  B0D8               	btfsc	status,0,c
  1620  0012C2  D002               	goto	l2452
  1621  0012C4  D057               	goto	l2466
  1622  0012C6  D000               	goto	l2452
  1623  0012C8                     l2452:
  1624                           
  1625                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1626  0012C8  C075  F001         	movff	printf@tmpval,___ftge@ff1
  1627  0012CC  C076  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1628  0012D0  C077  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1629  0012D4  0E70               	movlw	112
  1630  0012D6  6E04               	movwf	___ftge@ff2,c
  1631  0012D8  0E89               	movlw	137
  1632  0012DA  6E05               	movwf	___ftge@ff2+1,c
  1633  0012DC  0E40               	movlw	64
  1634  0012DE  6E06               	movwf	___ftge@ff2+2,c
  1635  0012E0  ECC8  F013         	call	___ftge	;wreg free
  1636  0012E4  B0D8               	btfsc	status,0,c
  1637  0012E6  D002               	goto	l2456
  1638                           
  1639                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1640  0012E8  0EF7               	movlw	247
  1641  0012EA  D001               	goto	L1
  1642  0012EC                     l2456:
  1643                           
  1644                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1645  0012EC  0EF8               	movlw	248
  1646  0012EE                     L1:
  1647  0012EE  2673               	addwf	printf@exp,f,c
  1648  0012F0  0EFF               	movlw	255
  1649  0012F2  2274               	addwfc	printf@exp+1,f,c
  1650  0012F4  D000               	goto	l2458
  1651  0012F6                     l2458:
  1652                           
  1653                           ;doprnt.c: 1124: }
  1654                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1655  0012F6  5073               	movf	printf@exp,w,c
  1656  0012F8  EC54  F00B         	call	_scale
  1657  0012FC  C03F  F075         	movff	?_scale,printf@tmpval
  1658  001300  C040  F076         	movff	?_scale+1,printf@tmpval+1
  1659  001304  C041  F077         	movff	?_scale+2,printf@tmpval+2
  1660                           
  1661                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1662  001308  D017               	goto	l2462
  1663  00130A  C079  F001         	movff	printf@fval,__div_to_l_@f1
  1664  00130E  C07A  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1665  001312  C07B  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1666  001316  C075  F004         	movff	printf@tmpval,__div_to_l_@f2
  1667  00131A  C076  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1668  00131E  C077  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1669  001322  EC35  F011         	call	__div_to_l_	;wreg free
  1670  001326  C001  F06F         	movff	?__div_to_l_,printf@val
  1671  00132A  C002  F070         	movff	?__div_to_l_+1,printf@val+1
  1672  00132E  C003  F071         	movff	?__div_to_l_+2,printf@val+2
  1673  001332  C004  F072         	movff	?__div_to_l_+3,printf@val+3
  1674  001336  D017               	goto	l2464
  1675  001338                     l2462:
  1676  001338  C079  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1677  00133C  C07A  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1678  001340  C07B  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1679  001344  C075  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1680  001348  C076  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1681  00134C  C077  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1682  001350  ECAD  F010         	call	__tdiv_to_l_	;wreg free
  1683  001354  C001  F06F         	movff	?__tdiv_to_l_,printf@val
  1684  001358  C002  F070         	movff	?__tdiv_to_l_+1,printf@val+1
  1685  00135C  C003  F071         	movff	?__tdiv_to_l_+2,printf@val+2
  1686  001360  C004  F072         	movff	?__tdiv_to_l_+3,printf@val+3
  1687  001364  D000               	goto	l2464
  1688  001366                     l2464:
  1689                           
  1690                           ;doprnt.c: 1129: fval = 0.0;
  1691  001366  0E00               	movlw	0
  1692  001368  6E79               	movwf	printf@fval,c
  1693  00136A  0E00               	movlw	0
  1694  00136C  6E7A               	movwf	printf@fval+1,c
  1695  00136E  0E00               	movlw	0
  1696  001370  6E7B               	movwf	printf@fval+2,c
  1697                           
  1698                           ;doprnt.c: 1130: } else {
  1699  001372  D033               	goto	l2470
  1700  001374                     l2466:
  1701                           
  1702                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1703  001374  C079  F01C         	movff	printf@fval,___fttol@f1
  1704  001378  C07A  F01D         	movff	printf@fval+1,___fttol@f1+1
  1705  00137C  C07B  F01E         	movff	printf@fval+2,___fttol@f1+2
  1706  001380  EC36  F012         	call	___fttol	;wreg free
  1707  001384  C01C  F06F         	movff	?___fttol,printf@val
  1708  001388  C01D  F070         	movff	?___fttol+1,printf@val+1
  1709  00138C  C01E  F071         	movff	?___fttol+2,printf@val+2
  1710  001390  C01F  F072         	movff	?___fttol+3,printf@val+3
  1711                           
  1712                           ;doprnt.c: 1132: fval -= (double)val;
  1713  001394  C079  F055         	movff	printf@fval,___ftsub@f1
  1714  001398  C07A  F056         	movff	printf@fval+1,___ftsub@f1+1
  1715  00139C  C07B  F057         	movff	printf@fval+2,___ftsub@f1+2
  1716  0013A0  C06F  F009         	movff	printf@val,___lltoft@c
  1717  0013A4  C070  F00A         	movff	printf@val+1,___lltoft@c+1
  1718  0013A8  C071  F00B         	movff	printf@val+2,___lltoft@c+2
  1719  0013AC  C072  F00C         	movff	printf@val+3,___lltoft@c+3
  1720  0013B0  EC0A  F015         	call	___lltoft	;wreg free
  1721  0013B4  C009  F058         	movff	?___lltoft,___ftsub@f2
  1722  0013B8  C00A  F059         	movff	?___lltoft+1,___ftsub@f2+1
  1723  0013BC  C00B  F05A         	movff	?___lltoft+2,___ftsub@f2+2
  1724  0013C0  EC3A  F015         	call	___ftsub	;wreg free
  1725  0013C4  C055  F079         	movff	?___ftsub,printf@fval
  1726  0013C8  C056  F07A         	movff	?___ftsub+1,printf@fval+1
  1727  0013CC  C057  F07B         	movff	?___ftsub+2,printf@fval+2
  1728                           
  1729                           ;doprnt.c: 1133: exp = 0;
  1730  0013D0  0E00               	movlw	0
  1731  0013D2  6E74               	movwf	printf@exp+1,c
  1732  0013D4  0E00               	movlw	0
  1733  0013D6  6E73               	movwf	printf@exp,c
  1734  0013D8  D000               	goto	l2470
  1735  0013DA                     l2470:
  1736                           
  1737                           ;doprnt.c: 1134: }
  1738                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1739  0013DA  0E01               	movlw	1
  1740  0013DC  6E7C               	movwf	printf@c,c
  1741  0013DE                     l2472:
  1742  0013DE  0E0A               	movlw	10
  1743  0013E0  187C               	xorwf	printf@c,w,c
  1744  0013E2  B4D8               	btfsc	status,2,c
  1745  0013E4  D01C               	goto	l2484
  1746  0013E6  D001               	goto	l2476
  1747  0013E8  D01A               	goto	l2484
  1748  0013EA                     l2476:
  1749                           
  1750                           ;doprnt.c: 1137: if(val < dpowers[c])
  1751  0013EA  507C               	movf	printf@c,w,c
  1752  0013EC  0D04               	mullw	4
  1753  0013EE  0E01               	movlw	low _dpowers
  1754  0013F0  24F3               	addwf	prodl,w,c
  1755  0013F2  6EF6               	movwf	tblptrl,c
  1756  0013F4  0E10               	movlw	high _dpowers
  1757  0013F6  20F4               	addwfc	prodh,w,c
  1758  0013F8  6EF7               	movwf	tblptrh,c
  1759  0013FA                     	if	0	;There are less than 3 active tblptr bytes
  1760  0013FA                     	endif
  1761  0013FA  0009               	tblrd		*+
  1762  0013FC  50F5               	movf	tablat,w,c
  1763  0013FE  5C6F               	subwf	printf@val,w,c
  1764  001400  0009               	tblrd		*+
  1765  001402  50F5               	movf	tablat,w,c
  1766  001404  5870               	subwfb	printf@val+1,w,c
  1767  001406  0009               	tblrd		*+
  1768  001408  50F5               	movf	tablat,w,c
  1769  00140A  5871               	subwfb	printf@val+2,w,c
  1770  00140C  0009               	tblrd		*+
  1771  00140E  50F5               	movf	tablat,w,c
  1772  001410  5872               	subwfb	printf@val+3,w,c
  1773  001412  A0D8               	btfss	status,0,c
  1774  001414  D004               	goto	l2484
  1775  001416  D001               	goto	l2480
  1776                           
  1777                           ;doprnt.c: 1138: break;
  1778  001418  D002               	goto	l2484
  1779  00141A                     l2480:
  1780  00141A  2A7C               	incf	printf@c,f,c
  1781  00141C  D7E0               	goto	l2472
  1782  00141E                     l2484:
  1783                           
  1784                           ;doprnt.c: 1175: {
  1785                           ;doprnt.c: 1188: if(flag & 0x03)
  1786  00141E  0E03               	movlw	3
  1787  001420  146B               	andwf	printf@flag,w,c
  1788  001422  6E60               	movwf	??_printf& (0+255),c
  1789  001424  0E00               	movlw	0
  1790  001426  146C               	andwf	printf@flag+1,w,c
  1791  001428  6E61               	movwf	(??_printf+1)& (0+255),c
  1792  00142A  5060               	movf	??_printf,w,c
  1793  00142C  1061               	iorwf	??_printf+1,w,c
  1794  00142E  B4D8               	btfsc	status,2,c
  1795  001430  D049               	goto	l2494
  1796                           
  1797                           ;doprnt.c: 1190: (putch('-') );
  1798  001432  0E2D               	movlw	45
  1799  001434  ECED  F015         	call	_putch
  1800                           
  1801                           ;doprnt.c: 1195: }
  1802                           ;doprnt.c: 1196: while(c--) {
  1803  001438  D045               	goto	l2494
  1804  00143A                     l2488:
  1805                           
  1806                           ;doprnt.c: 1200: {
  1807                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1808  00143A  C06F  F001         	movff	printf@val,___lldiv@dividend
  1809  00143E  C070  F002         	movff	printf@val+1,___lldiv@dividend+1
  1810  001442  C071  F003         	movff	printf@val+2,___lldiv@dividend+2
  1811  001446  C072  F004         	movff	printf@val+3,___lldiv@dividend+3
  1812  00144A  507C               	movf	printf@c,w,c
  1813  00144C  0D04               	mullw	4
  1814  00144E  0E01               	movlw	low _dpowers
  1815  001450  24F3               	addwf	prodl,w,c
  1816  001452  6EF6               	movwf	tblptrl,c
  1817  001454  0E10               	movlw	high _dpowers
  1818  001456  20F4               	addwfc	prodh,w,c
  1819  001458  6EF7               	movwf	tblptrh,c
  1820  00145A                     	if	0	;There are less than 3 active tblptr bytes
  1821  00145A                     	endif
  1822  00145A  0009               	tblrd		*+
  1823  00145C  CFF5 F005          	movff	tablat,___lldiv@divisor
  1824  001460  0009               	tblrd		*+
  1825  001462  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1826  001466  0009               	tblrd		*+
  1827  001468  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1828  00146C  000A               	tblrd		*-
  1829  00146E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1830  001472  EC13  F014         	call	___lldiv	;wreg free
  1831  001476  C001  F075         	movff	?___lldiv,printf@tmpval
  1832  00147A  C002  F076         	movff	?___lldiv+1,printf@tmpval+1
  1833  00147E  C003  F077         	movff	?___lldiv+2,printf@tmpval+2
  1834  001482  C004  F078         	movff	?___lldiv+3,printf@tmpval+3
  1835                           
  1836                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1837  001486  C075  F001         	movff	printf@tmpval,___llmod@dividend
  1838  00148A  C076  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1839  00148E  C077  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1840  001492  C078  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1841  001496  0E0A               	movlw	10
  1842  001498  6E05               	movwf	___llmod@divisor,c
  1843  00149A  0E00               	movlw	0
  1844  00149C  6E06               	movwf	___llmod@divisor+1,c
  1845  00149E  0E00               	movlw	0
  1846  0014A0  6E07               	movwf	___llmod@divisor+2,c
  1847  0014A2  0E00               	movlw	0
  1848  0014A4  6E08               	movwf	___llmod@divisor+3,c
  1849  0014A6  EC9A  F014         	call	___llmod	;wreg free
  1850  0014AA  C001  F075         	movff	?___llmod,printf@tmpval
  1851  0014AE  C002  F076         	movff	?___llmod+1,printf@tmpval+1
  1852  0014B2  C003  F077         	movff	?___llmod+2,printf@tmpval+2
  1853  0014B6  C004  F078         	movff	?___llmod+3,printf@tmpval+3
  1854                           
  1855                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1856  0014BA  5075               	movf	printf@tmpval,w,c
  1857  0014BC  0F30               	addlw	48
  1858  0014BE  ECED  F015         	call	_putch
  1859  0014C2  D000               	goto	l2494
  1860  0014C4                     l2494:
  1861  0014C4  067C               	decf	printf@c,f,c
  1862  0014C6  287C               	incf	printf@c,w,c
  1863  0014C8  B4D8               	btfsc	status,2,c
  1864  0014CA  D009               	goto	l2500
  1865  0014CC  D7B6               	goto	l2488
  1866                           
  1867                           ;doprnt.c: 1204: }
  1868                           ;doprnt.c: 1206: }
  1869                           ;doprnt.c: 1207: while(exp > 0) {
  1870  0014CE  D007               	goto	l2500
  1871  0014D0                     l2496:
  1872                           
  1873                           ;doprnt.c: 1208: (putch('0') );
  1874  0014D0  0E30               	movlw	48
  1875  0014D2  ECED  F015         	call	_putch
  1876                           
  1877                           ;doprnt.c: 1209: exp--;
  1878  0014D6  0673               	decf	printf@exp,f,c
  1879  0014D8  A0D8               	btfss	status,0,c
  1880  0014DA  0674               	decf	printf@exp+1,f,c
  1881  0014DC  D000               	goto	l2500
  1882  0014DE                     l2500:
  1883  0014DE  BE74               	btfsc	printf@exp+1,7,c
  1884  0014E0  D005               	goto	l2502
  1885  0014E2  5074               	movf	printf@exp+1,w,c
  1886  0014E4  E1F5               	bnz	l2496
  1887  0014E6  0473               	decf	printf@exp,w,c
  1888  0014E8  B0D8               	btfsc	status,0,c
  1889  0014EA  D7F2               	goto	l2496
  1890  0014EC                     l2502:
  1891                           
  1892                           ;doprnt.c: 1210: }
  1893                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1894  0014EC  BE6E               	btfsc	printf@prec+1,7,c
  1895  0014EE  D009               	goto	l180
  1896  0014F0  506E               	movf	printf@prec+1,w,c
  1897  0014F2  E104               	bnz	u2640
  1898  0014F4  0E09               	movlw	9
  1899  0014F6  5C6D               	subwf	printf@prec,w,c
  1900  0014F8  A0D8               	btfss	status,0,c
  1901  0014FA  D003               	goto	l180
  1902  0014FC                     u2640:
  1903                           
  1904                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1905  0014FC  0E08               	movlw	8
  1906  0014FE  6E7C               	movwf	printf@c,c
  1907  001500  D003               	goto	l2506
  1908  001502                     l180:
  1909                           
  1910                           ;doprnt.c: 1213: else
  1911                           ;doprnt.c: 1214: c = prec;
  1912  001502  C06D  F07C         	movff	printf@prec,printf@c
  1913  001506  D000               	goto	l2506
  1914  001508                     l2506:
  1915                           
  1916                           ;doprnt.c: 1215: prec -= c;
  1917  001508  507C               	movf	printf@c,w,c
  1918  00150A  5E6D               	subwf	printf@prec,f,c
  1919  00150C  0E00               	movlw	0
  1920  00150E  BE7C               	btfsc	printf@c,7,c
  1921  001510  0EFF               	movlw	255
  1922  001512  5A6E               	subwfb	printf@prec+1,f,c
  1923                           
  1924                           ;doprnt.c: 1219: if(c)
  1925  001514  507C               	movf	printf@c,w,c
  1926  001516  B4D8               	btfsc	status,2,c
  1927  001518  D004               	goto	l2512
  1928                           
  1929                           ;doprnt.c: 1221: (putch('.') );
  1930  00151A  0E2E               	movlw	46
  1931  00151C  ECED  F015         	call	_putch
  1932  001520  D000               	goto	l2512
  1933  001522                     l2512:
  1934                           
  1935                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1936  001522  507C               	movf	printf@c,w,c
  1937  001524  EC54  F00B         	call	_scale
  1938  001528  C03F  F066         	movff	?_scale,_printf$1187
  1939  00152C  C040  F067         	movff	?_scale+1,_printf$1187+1
  1940  001530  C041  F068         	movff	?_scale+2,_printf$1187+2
  1941                           
  1942                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1943  001534  C079  F010         	movff	printf@fval,___ftmul@f2
  1944  001538  C07A  F011         	movff	printf@fval+1,___ftmul@f2+1
  1945  00153C  C07B  F012         	movff	printf@fval+2,___ftmul@f2+2
  1946  001540  C066  F00D         	movff	_printf$1187,___ftmul@f1
  1947  001544  C067  F00E         	movff	_printf$1187+1,___ftmul@f1+1
  1948  001548  C068  F00F         	movff	_printf$1187+2,___ftmul@f1+2
  1949  00154C  ECBA  F011         	call	___ftmul	;wreg free
  1950  001550  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1951  001554  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1952  001558  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1953  00155C  EC36  F012         	call	___fttol	;wreg free
  1954  001560  C01C  F06F         	movff	?___fttol,printf@val
  1955  001564  C01D  F070         	movff	?___fttol+1,printf@val+1
  1956  001568  C01E  F071         	movff	?___fttol+2,printf@val+2
  1957  00156C  C01F  F072         	movff	?___fttol+3,printf@val+3
  1958                           
  1959                           ;doprnt.c: 1228: while(c--) {
  1960  001570  D06B               	goto	l2522
  1961  001572                     l2516:
  1962                           
  1963                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1964  001572  C06F  F001         	movff	printf@val,___lldiv@dividend
  1965  001576  C070  F002         	movff	printf@val+1,___lldiv@dividend+1
  1966  00157A  C071  F003         	movff	printf@val+2,___lldiv@dividend+2
  1967  00157E  C072  F004         	movff	printf@val+3,___lldiv@dividend+3
  1968  001582  507C               	movf	printf@c,w,c
  1969  001584  0D04               	mullw	4
  1970  001586  0E01               	movlw	low _dpowers
  1971  001588  24F3               	addwf	prodl,w,c
  1972  00158A  6EF6               	movwf	tblptrl,c
  1973  00158C  0E10               	movlw	high _dpowers
  1974  00158E  20F4               	addwfc	prodh,w,c
  1975  001590  6EF7               	movwf	tblptrh,c
  1976  001592                     	if	0	;There are less than 3 active tblptr bytes
  1977  001592                     	endif
  1978  001592  0009               	tblrd		*+
  1979  001594  CFF5 F005          	movff	tablat,___lldiv@divisor
  1980  001598  0009               	tblrd		*+
  1981  00159A  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1982  00159E  0009               	tblrd		*+
  1983  0015A0  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1984  0015A4  000A               	tblrd		*-
  1985  0015A6  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1986  0015AA  EC13  F014         	call	___lldiv	;wreg free
  1987  0015AE  C001  F075         	movff	?___lldiv,printf@tmpval
  1988  0015B2  C002  F076         	movff	?___lldiv+1,printf@tmpval+1
  1989  0015B6  C003  F077         	movff	?___lldiv+2,printf@tmpval+2
  1990  0015BA  C004  F078         	movff	?___lldiv+3,printf@tmpval+3
  1991                           
  1992                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1993  0015BE  C075  F001         	movff	printf@tmpval,___llmod@dividend
  1994  0015C2  C076  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1995  0015C6  C077  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1996  0015CA  C078  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1997  0015CE  0E0A               	movlw	10
  1998  0015D0  6E05               	movwf	___llmod@divisor,c
  1999  0015D2  0E00               	movlw	0
  2000  0015D4  6E06               	movwf	___llmod@divisor+1,c
  2001  0015D6  0E00               	movlw	0
  2002  0015D8  6E07               	movwf	___llmod@divisor+2,c
  2003  0015DA  0E00               	movlw	0
  2004  0015DC  6E08               	movwf	___llmod@divisor+3,c
  2005  0015DE  EC9A  F014         	call	___llmod	;wreg free
  2006  0015E2  C001  F075         	movff	?___llmod,printf@tmpval
  2007  0015E6  C002  F076         	movff	?___llmod+1,printf@tmpval+1
  2008  0015EA  C003  F077         	movff	?___llmod+2,printf@tmpval+2
  2009  0015EE  C004  F078         	movff	?___llmod+3,printf@tmpval+3
  2010                           
  2011                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2012  0015F2  5075               	movf	printf@tmpval,w,c
  2013  0015F4  0F30               	addlw	48
  2014  0015F6  ECED  F015         	call	_putch
  2015                           
  2016                           ;doprnt.c: 1232: val %= dpowers[c];
  2017  0015FA  C06F  F001         	movff	printf@val,___llmod@dividend
  2018  0015FE  C070  F002         	movff	printf@val+1,___llmod@dividend+1
  2019  001602  C071  F003         	movff	printf@val+2,___llmod@dividend+2
  2020  001606  C072  F004         	movff	printf@val+3,___llmod@dividend+3
  2021  00160A  507C               	movf	printf@c,w,c
  2022  00160C  0D04               	mullw	4
  2023  00160E  0E01               	movlw	low _dpowers
  2024  001610  24F3               	addwf	prodl,w,c
  2025  001612  6EF6               	movwf	tblptrl,c
  2026  001614  0E10               	movlw	high _dpowers
  2027  001616  20F4               	addwfc	prodh,w,c
  2028  001618  6EF7               	movwf	tblptrh,c
  2029  00161A                     	if	0	;There are less than 3 active tblptr bytes
  2030  00161A                     	endif
  2031  00161A  0009               	tblrd		*+
  2032  00161C  CFF5 F005          	movff	tablat,___llmod@divisor
  2033  001620  0009               	tblrd		*+
  2034  001622  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2035  001626  0009               	tblrd		*+
  2036  001628  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2037  00162C  000A               	tblrd		*-
  2038  00162E  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2039  001632  EC9A  F014         	call	___llmod	;wreg free
  2040  001636  C001  F06F         	movff	?___llmod,printf@val
  2041  00163A  C002  F070         	movff	?___llmod+1,printf@val+1
  2042  00163E  C003  F071         	movff	?___llmod+2,printf@val+2
  2043  001642  C004  F072         	movff	?___llmod+3,printf@val+3
  2044  001646  D000               	goto	l2522
  2045  001648                     l2522:
  2046  001648  067C               	decf	printf@c,f,c
  2047  00164A  287C               	incf	printf@c,w,c
  2048  00164C  B4D8               	btfsc	status,2,c
  2049  00164E  D009               	goto	l2528
  2050  001650  D790               	goto	l2516
  2051                           
  2052                           ;doprnt.c: 1233: }
  2053                           ;doprnt.c: 1235: while(prec) {
  2054  001652  D007               	goto	l2528
  2055  001654                     l2524:
  2056                           
  2057                           ;doprnt.c: 1236: (putch('0') );
  2058  001654  0E30               	movlw	48
  2059  001656  ECED  F015         	call	_putch
  2060                           
  2061                           ;doprnt.c: 1237: prec--;
  2062  00165A  066D               	decf	printf@prec,f,c
  2063  00165C  A0D8               	btfss	status,0,c
  2064  00165E  066E               	decf	printf@prec+1,f,c
  2065  001660  D000               	goto	l2528
  2066  001662                     l2528:
  2067  001662  506D               	movf	printf@prec,w,c
  2068  001664  106E               	iorwf	printf@prec+1,w,c
  2069  001666  B4D8               	btfsc	status,2,c
  2070  001668  D010               	goto	l2534
  2071  00166A  D7F4               	goto	l2524
  2072                           
  2073                           ;doprnt.c: 1238: }
  2074                           ;doprnt.c: 1245: continue;
  2075  00166C  D00E               	goto	l2534
  2076  00166E                     l2530:
  2077                           
  2078                           ;doprnt.c: 1246: }
  2079                           ;doprnt.c: 1422: {
  2080                           ;doprnt.c: 1438: if(flag & 0x03)
  2081  00166E  0E03               	movlw	3
  2082  001670  146B               	andwf	printf@flag,w,c
  2083  001672  6E60               	movwf	??_printf& (0+255),c
  2084  001674  0E00               	movlw	0
  2085  001676  146C               	andwf	printf@flag+1,w,c
  2086  001678  6E61               	movwf	(??_printf+1)& (0+255),c
  2087  00167A  5060               	movf	??_printf,w,c
  2088  00167C  1061               	iorwf	??_printf+1,w,c
  2089  00167E  B4D8               	btfsc	status,2,c
  2090  001680  D004               	goto	l2534
  2091                           
  2092                           ;doprnt.c: 1439: (putch('-') );
  2093  001682  0E2D               	movlw	45
  2094  001684  ECED  F015         	call	_putch
  2095  001688  D000               	goto	l2534
  2096  00168A                     l2534:
  2097  00168A  C05B  FFF6         	movff	printf@f,tblptrl
  2098  00168E  C05C  FFF7         	movff	printf@f+1,tblptrh
  2099  001692  4A5B               	infsnz	printf@f,f,c
  2100  001694  2A5C               	incf	printf@f+1,f,c
  2101  001696                     	if	0	;tblptru may be non-zero
  2102  001696                     	endif
  2103  001696                     	if	0	;tblptru may be non-zero
  2104  001696                     	endif
  2105  001696  0008               	tblrd		*
  2106  001698  CFF5 F07C          	movff	tablat,printf@c
  2107  00169C  507C               	movf	printf@c,w,c
  2108  00169E  B4D8               	btfsc	status,2,c
  2109  0016A0  D002               	goto	l191
  2110  0016A2  D4F4               	goto	l2386
  2111  0016A4  D000               	goto	l191
  2112  0016A6                     l191:
  2113  0016A6  0012               	return		;funcret
  2114  0016A8                     __end_of_printf:
  2115                           	opt stack 0
  2116                           tblptru	equ	0xFF8
  2117                           tblptrh	equ	0xFF7
  2118                           tblptrl	equ	0xFF6
  2119                           tablat	equ	0xFF5
  2120                           prodh	equ	0xFF4
  2121                           prodl	equ	0xFF3
  2122                           postinc0	equ	0xFEE
  2123                           wreg	equ	0xFE8
  2124                           postdec1	equ	0xFE5
  2125                           plusw1	equ	0xFE3
  2126                           fsr1l	equ	0xFE1
  2127                           indf2	equ	0xFDF
  2128                           postinc2	equ	0xFDE
  2129                           postdec2	equ	0xFDD
  2130                           plusw2	equ	0xFDB
  2131                           fsr2h	equ	0xFDA
  2132                           fsr2l	equ	0xFD9
  2133                           status	equ	0xFD8
  2134                           
  2135 ;; *************** function _scale *****************
  2136 ;; Defined at:
  2137 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  scl             1    wreg     char 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  scl             1   68[COMRAM] char 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  3   62[COMRAM] char 
  2144 ;; Registers used:
  2145 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2151 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;Total ram usage:        7 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    2
  2158 ;; This function calls:
  2159 ;;		___awdiv
  2160 ;;		___awmod
  2161 ;;		___ftmul
  2162 ;;		___wmul
  2163 ;; This function is called by:
  2164 ;;		_printf
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text2
  2169  0016A8                     __ptext2:
  2170                           	opt stack 0
  2171  0016A8                     _scale:
  2172                           	opt stack 27
  2173                           
  2174                           ;incstack = 0
  2175                           ;scale@scl stored from wreg
  2176  0016A8  6E45               	movwf	scale@scl,c
  2177                           
  2178                           ;doprnt.c: 428: if(scl < 0) {
  2179  0016AA  AE45               	btfss	scale@scl,7,c
  2180  0016AC  D0EF               	goto	l2110
  2181                           
  2182                           ;doprnt.c: 429: scl = -scl;
  2183  0016AE  6C45               	negf	scale@scl,c
  2184                           
  2185                           ;doprnt.c: 430: if(scl>=110)
  2186  0016B0  5045               	movf	scale@scl,w,c
  2187  0016B2  0A80               	xorlw	128
  2188  0016B4  0F12               	addlw	-238
  2189  0016B6  A0D8               	btfss	status,0,c
  2190  0016B8  D08D               	goto	l2100
  2191                           
  2192                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2193  0016BA  0E00               	movlw	0
  2194  0016BC  6E3C               	movwf	___wmul@multiplicand+1,c
  2195  0016BE  0E03               	movlw	3
  2196  0016C0  6E3B               	movwf	___wmul@multiplicand,c
  2197  0016C2  0E00               	movlw	0
  2198  0016C4  6E34               	movwf	___awdiv@divisor+1,c
  2199  0016C6  0E0A               	movlw	10
  2200  0016C8  6E33               	movwf	___awdiv@divisor,c
  2201  0016CA  0E00               	movlw	0
  2202  0016CC  6E2E               	movwf	___awmod@divisor+1,c
  2203  0016CE  0E64               	movlw	100
  2204  0016D0  6E2D               	movwf	___awmod@divisor,c
  2205  0016D2  5045               	movf	scale@scl,w,c
  2206  0016D4  6E2B               	movwf	___awmod@dividend,c
  2207  0016D6  6A2C               	clrf	___awmod@dividend+1,c
  2208  0016D8  BE2B               	btfsc	___awmod@dividend,7,c
  2209  0016DA  062C               	decf	___awmod@dividend+1,f,c
  2210  0016DC  EC59  F014         	call	___awmod	;wreg free
  2211  0016E0  C02B  F031         	movff	?___awmod,___awdiv@dividend
  2212  0016E4  C02C  F032         	movff	?___awmod+1,___awdiv@dividend+1
  2213  0016E8  EC7D  F013         	call	___awdiv	;wreg free
  2214  0016EC  0E09               	movlw	9
  2215  0016EE  2431               	addwf	?___awdiv,w,c
  2216  0016F0  6E39               	movwf	___wmul@multiplier,c
  2217  0016F2  0E00               	movlw	0
  2218  0016F4  2032               	addwfc	?___awdiv+1,w,c
  2219  0016F6  6E3A               	movwf	___wmul@multiplier+1,c
  2220  0016F8  EC8F  F015         	call	___wmul	;wreg free
  2221  0016FC  0E29               	movlw	low __npowers_
  2222  0016FE  2439               	addwf	?___wmul,w,c
  2223  001700  6EF6               	movwf	tblptrl,c
  2224  001702  0E10               	movlw	high __npowers_
  2225  001704  203A               	addwfc	?___wmul+1,w,c
  2226  001706  6EF7               	movwf	tblptrh,c
  2227  001708                     	if	0	;There are less than 3 active tblptr bytes
  2228  001708                     	endif
  2229  001708  0009               	tblrd		*+
  2230  00170A  CFF5 F010          	movff	tablat,___ftmul@f2
  2231  00170E  0009               	tblrd		*+
  2232  001710  CFF5 F011          	movff	tablat,___ftmul@f2+1
  2233  001714  000A               	tblrd		*-
  2234  001716  CFF5 F012          	movff	tablat,___ftmul@f2+2
  2235  00171A  0E00               	movlw	0
  2236  00171C  6E34               	movwf	___awdiv@divisor+1,c
  2237  00171E  0E64               	movlw	100
  2238  001720  6E33               	movwf	___awdiv@divisor,c
  2239  001722  5045               	movf	scale@scl,w,c
  2240  001724  6E31               	movwf	___awdiv@dividend,c
  2241  001726  6A32               	clrf	___awdiv@dividend+1,c
  2242  001728  BE31               	btfsc	___awdiv@dividend,7,c
  2243  00172A  0632               	decf	___awdiv@dividend+1,f,c
  2244  00172C  EC7D  F013         	call	___awdiv	;wreg free
  2245  001730  0E12               	movlw	18
  2246  001732  2431               	addwf	?___awdiv,w,c
  2247  001734  6E39               	movwf	___wmul@multiplier,c
  2248  001736  0E00               	movlw	0
  2249  001738  2032               	addwfc	?___awdiv+1,w,c
  2250  00173A  6E3A               	movwf	___wmul@multiplier+1,c
  2251  00173C  0E00               	movlw	0
  2252  00173E  6E3C               	movwf	___wmul@multiplicand+1,c
  2253  001740  0E03               	movlw	3
  2254  001742  6E3B               	movwf	___wmul@multiplicand,c
  2255  001744  EC8F  F015         	call	___wmul	;wreg free
  2256  001748  0E29               	movlw	low __npowers_
  2257  00174A  2439               	addwf	?___wmul,w,c
  2258  00174C  6EF6               	movwf	tblptrl,c
  2259  00174E  0E10               	movlw	high __npowers_
  2260  001750  203A               	addwfc	?___wmul+1,w,c
  2261  001752  6EF7               	movwf	tblptrh,c
  2262  001754                     	if	0	;There are less than 3 active tblptr bytes
  2263  001754                     	endif
  2264  001754  0009               	tblrd		*+
  2265  001756  CFF5 F00D          	movff	tablat,___ftmul@f1
  2266  00175A  0009               	tblrd		*+
  2267  00175C  CFF5 F00E          	movff	tablat,___ftmul@f1+1
  2268  001760  000A               	tblrd		*-
  2269  001762  CFF5 F00F          	movff	tablat,___ftmul@f1+2
  2270  001766  ECBA  F011         	call	___ftmul	;wreg free
  2271  00176A  C00D  F042         	movff	?___ftmul,_scale$1186
  2272  00176E  C00E  F043         	movff	?___ftmul+1,_scale$1186+1
  2273  001772  C00F  F044         	movff	?___ftmul+2,_scale$1186+2
  2274                           
  2275                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2276  001776  C042  F00D         	movff	_scale$1186,___ftmul@f1
  2277  00177A  C043  F00E         	movff	_scale$1186+1,___ftmul@f1+1
  2278  00177E  C044  F00F         	movff	_scale$1186+2,___ftmul@f1+2
  2279  001782  0E00               	movlw	0
  2280  001784  6E3C               	movwf	___wmul@multiplicand+1,c
  2281  001786  0E03               	movlw	3
  2282  001788  6E3B               	movwf	___wmul@multiplicand,c
  2283  00178A  0E00               	movlw	0
  2284  00178C  6E2E               	movwf	___awmod@divisor+1,c
  2285  00178E  0E0A               	movlw	10
  2286  001790  6E2D               	movwf	___awmod@divisor,c
  2287  001792  5045               	movf	scale@scl,w,c
  2288  001794  6E2B               	movwf	___awmod@dividend,c
  2289  001796  6A2C               	clrf	___awmod@dividend+1,c
  2290  001798  BE2B               	btfsc	___awmod@dividend,7,c
  2291  00179A  062C               	decf	___awmod@dividend+1,f,c
  2292  00179C  EC59  F014         	call	___awmod	;wreg free
  2293  0017A0  C02B  F039         	movff	?___awmod,___wmul@multiplier
  2294  0017A4  C02C  F03A         	movff	?___awmod+1,___wmul@multiplier+1
  2295  0017A8  EC8F  F015         	call	___wmul	;wreg free
  2296  0017AC  0E29               	movlw	low __npowers_
  2297  0017AE  2439               	addwf	?___wmul,w,c
  2298  0017B0  6EF6               	movwf	tblptrl,c
  2299  0017B2  0E10               	movlw	high __npowers_
  2300  0017B4  203A               	addwfc	?___wmul+1,w,c
  2301  0017B6  6EF7               	movwf	tblptrh,c
  2302  0017B8                     	if	0	;There are less than 3 active tblptr bytes
  2303  0017B8                     	endif
  2304  0017B8  0009               	tblrd		*+
  2305  0017BA  CFF5 F010          	movff	tablat,___ftmul@f2
  2306  0017BE  0009               	tblrd		*+
  2307  0017C0  CFF5 F011          	movff	tablat,___ftmul@f2+1
  2308  0017C4  000A               	tblrd		*-
  2309  0017C6  CFF5 F012          	movff	tablat,___ftmul@f2+2
  2310  0017CA  ECBA  F011         	call	___ftmul	;wreg free
  2311  0017CE  D141               	goto	L5
  2312  0017D0  D15A               	goto	l135
  2313  0017D2  D054               	goto	l2106
  2314  0017D4                     l2100:
  2315                           
  2316                           ;doprnt.c: 432: else if(scl > 10)
  2317  0017D4  5045               	movf	scale@scl,w,c
  2318  0017D6  0A80               	xorlw	128
  2319  0017D8  0F75               	addlw	-139
  2320  0017DA  A0D8               	btfss	status,0,c
  2321  0017DC  D04F               	goto	l2106
  2322                           
  2323                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2324  0017DE  0E00               	movlw	0
  2325  0017E0  6E34               	movwf	___awdiv@divisor+1,c
  2326  0017E2  0E0A               	movlw	10
  2327  0017E4  6E33               	movwf	___awdiv@divisor,c
  2328  0017E6  5045               	movf	scale@scl,w,c
  2329  0017E8  6E31               	movwf	___awdiv@dividend,c
  2330  0017EA  6A32               	clrf	___awdiv@dividend+1,c
  2331  0017EC  BE31               	btfsc	___awdiv@dividend,7,c
  2332  0017EE  0632               	decf	___awdiv@dividend+1,f,c
  2333  0017F0  EC7D  F013         	call	___awdiv	;wreg free
  2334  0017F4  0E09               	movlw	9
  2335  0017F6  2431               	addwf	?___awdiv,w,c
  2336  0017F8  6E39               	movwf	___wmul@multiplier,c
  2337  0017FA  0E00               	movlw	0
  2338  0017FC  2032               	addwfc	?___awdiv+1,w,c
  2339  0017FE  6E3A               	movwf	___wmul@multiplier+1,c
  2340  001800  0E00               	movlw	0
  2341  001802  6E3C               	movwf	___wmul@multiplicand+1,c
  2342  001804  0E03               	movlw	3
  2343  001806  6E3B               	movwf	___wmul@multiplicand,c
  2344  001808  EC8F  F015         	call	___wmul	;wreg free
  2345  00180C  0E29               	movlw	low __npowers_
  2346  00180E  2439               	addwf	?___wmul,w,c
  2347  001810  6EF6               	movwf	tblptrl,c
  2348  001812  0E10               	movlw	high __npowers_
  2349  001814  203A               	addwfc	?___wmul+1,w,c
  2350  001816  6EF7               	movwf	tblptrh,c
  2351  001818                     	if	0	;There are less than 3 active tblptr bytes
  2352  001818                     	endif
  2353  001818  0009               	tblrd		*+
  2354  00181A  CFF5 F00D          	movff	tablat,___ftmul@f1
  2355  00181E  0009               	tblrd		*+
  2356  001820  CFF5 F00E          	movff	tablat,___ftmul@f1+1
  2357  001824  000A               	tblrd		*-
  2358  001826  CFF5 F00F          	movff	tablat,___ftmul@f1+2
  2359  00182A  0E00               	movlw	0
  2360  00182C  6E3C               	movwf	___wmul@multiplicand+1,c
  2361  00182E  0E03               	movlw	3
  2362  001830  6E3B               	movwf	___wmul@multiplicand,c
  2363  001832  0E00               	movlw	0
  2364  001834  6E2E               	movwf	___awmod@divisor+1,c
  2365  001836  0E0A               	movlw	10
  2366  001838  6E2D               	movwf	___awmod@divisor,c
  2367  00183A  5045               	movf	scale@scl,w,c
  2368  00183C  6E2B               	movwf	___awmod@dividend,c
  2369  00183E  6A2C               	clrf	___awmod@dividend+1,c
  2370  001840  BE2B               	btfsc	___awmod@dividend,7,c
  2371  001842  062C               	decf	___awmod@dividend+1,f,c
  2372  001844  EC59  F014         	call	___awmod	;wreg free
  2373  001848  C02B  F039         	movff	?___awmod,___wmul@multiplier
  2374  00184C  C02C  F03A         	movff	?___awmod+1,___wmul@multiplier+1
  2375  001850  EC8F  F015         	call	___wmul	;wreg free
  2376  001854  0E29               	movlw	low __npowers_
  2377  001856  2439               	addwf	?___wmul,w,c
  2378  001858  6EF6               	movwf	tblptrl,c
  2379  00185A  0E10               	movlw	high __npowers_
  2380  00185C  203A               	addwfc	?___wmul+1,w,c
  2381  00185E  6EF7               	movwf	tblptrh,c
  2382  001860                     	if	0	;There are less than 3 active tblptr bytes
  2383  001860                     	endif
  2384  001860  0009               	tblrd		*+
  2385  001862  CFF5 F010          	movff	tablat,___ftmul@f2
  2386  001866  0009               	tblrd		*+
  2387  001868  CFF5 F011          	movff	tablat,___ftmul@f2+1
  2388  00186C  000A               	tblrd		*-
  2389  00186E  CFF5 F012          	movff	tablat,___ftmul@f2+2
  2390  001872  ECBA  F011         	call	___ftmul	;wreg free
  2391  001876  D0ED               	goto	L5
  2392  001878  D106               	goto	l135
  2393  00187A  D000               	goto	l2106
  2394  00187C                     l2106:
  2395                           
  2396                           ;doprnt.c: 434: return _npowers_[scl];
  2397  00187C  5045               	movf	scale@scl,w,c
  2398  00187E  0D03               	mullw	3
  2399  001880  0E29               	movlw	low __npowers_
  2400  001882  24F3               	addwf	prodl,w,c
  2401  001884  6EF6               	movwf	tblptrl,c
  2402  001886  0E10               	movlw	high __npowers_
  2403  001888  D0F2               	goto	L4
  2404  00188A  D0FD               	goto	l135
  2405  00188C                     l2110:
  2406                           
  2407                           ;doprnt.c: 435: }
  2408                           ;doprnt.c: 436: if(scl>=110)
  2409  00188C  5045               	movf	scale@scl,w,c
  2410  00188E  0A80               	xorlw	128
  2411  001890  0F12               	addlw	-238
  2412  001892  A0D8               	btfss	status,0,c
  2413  001894  D08D               	goto	l2118
  2414                           
  2415                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2416  001896  0E00               	movlw	0
  2417  001898  6E3C               	movwf	___wmul@multiplicand+1,c
  2418  00189A  0E03               	movlw	3
  2419  00189C  6E3B               	movwf	___wmul@multiplicand,c
  2420  00189E  0E00               	movlw	0
  2421  0018A0  6E34               	movwf	___awdiv@divisor+1,c
  2422  0018A2  0E0A               	movlw	10
  2423  0018A4  6E33               	movwf	___awdiv@divisor,c
  2424  0018A6  0E00               	movlw	0
  2425  0018A8  6E2E               	movwf	___awmod@divisor+1,c
  2426  0018AA  0E64               	movlw	100
  2427  0018AC  6E2D               	movwf	___awmod@divisor,c
  2428  0018AE  5045               	movf	scale@scl,w,c
  2429  0018B0  6E2B               	movwf	___awmod@dividend,c
  2430  0018B2  6A2C               	clrf	___awmod@dividend+1,c
  2431  0018B4  BE2B               	btfsc	___awmod@dividend,7,c
  2432  0018B6  062C               	decf	___awmod@dividend+1,f,c
  2433  0018B8  EC59  F014         	call	___awmod	;wreg free
  2434  0018BC  C02B  F031         	movff	?___awmod,___awdiv@dividend
  2435  0018C0  C02C  F032         	movff	?___awmod+1,___awdiv@dividend+1
  2436  0018C4  EC7D  F013         	call	___awdiv	;wreg free
  2437  0018C8  0E09               	movlw	9
  2438  0018CA  2431               	addwf	?___awdiv,w,c
  2439  0018CC  6E39               	movwf	___wmul@multiplier,c
  2440  0018CE  0E00               	movlw	0
  2441  0018D0  2032               	addwfc	?___awdiv+1,w,c
  2442  0018D2  6E3A               	movwf	___wmul@multiplier+1,c
  2443  0018D4  EC8F  F015         	call	___wmul	;wreg free
  2444  0018D8  0E50               	movlw	low __powers_
  2445  0018DA  2439               	addwf	?___wmul,w,c
  2446  0018DC  6EF6               	movwf	tblptrl,c
  2447  0018DE  0E10               	movlw	high __powers_
  2448  0018E0  203A               	addwfc	?___wmul+1,w,c
  2449  0018E2  6EF7               	movwf	tblptrh,c
  2450  0018E4                     	if	0	;There are less than 3 active tblptr bytes
  2451  0018E4                     	endif
  2452  0018E4  0009               	tblrd		*+
  2453  0018E6  CFF5 F010          	movff	tablat,___ftmul@f2
  2454  0018EA  0009               	tblrd		*+
  2455  0018EC  CFF5 F011          	movff	tablat,___ftmul@f2+1
  2456  0018F0  000A               	tblrd		*-
  2457  0018F2  CFF5 F012          	movff	tablat,___ftmul@f2+2
  2458  0018F6  0E00               	movlw	0
  2459  0018F8  6E34               	movwf	___awdiv@divisor+1,c
  2460  0018FA  0E64               	movlw	100
  2461  0018FC  6E33               	movwf	___awdiv@divisor,c
  2462  0018FE  5045               	movf	scale@scl,w,c
  2463  001900  6E31               	movwf	___awdiv@dividend,c
  2464  001902  6A32               	clrf	___awdiv@dividend+1,c
  2465  001904  BE31               	btfsc	___awdiv@dividend,7,c
  2466  001906  0632               	decf	___awdiv@dividend+1,f,c
  2467  001908  EC7D  F013         	call	___awdiv	;wreg free
  2468  00190C  0E12               	movlw	18
  2469  00190E  2431               	addwf	?___awdiv,w,c
  2470  001910  6E39               	movwf	___wmul@multiplier,c
  2471  001912  0E00               	movlw	0
  2472  001914  2032               	addwfc	?___awdiv+1,w,c
  2473  001916  6E3A               	movwf	___wmul@multiplier+1,c
  2474  001918  0E00               	movlw	0
  2475  00191A  6E3C               	movwf	___wmul@multiplicand+1,c
  2476  00191C  0E03               	movlw	3
  2477  00191E  6E3B               	movwf	___wmul@multiplicand,c
  2478  001920  EC8F  F015         	call	___wmul	;wreg free
  2479  001924  0E50               	movlw	low __powers_
  2480  001926  2439               	addwf	?___wmul,w,c
  2481  001928  6EF6               	movwf	tblptrl,c
  2482  00192A  0E10               	movlw	high __powers_
  2483  00192C  203A               	addwfc	?___wmul+1,w,c
  2484  00192E  6EF7               	movwf	tblptrh,c
  2485  001930                     	if	0	;There are less than 3 active tblptr bytes
  2486  001930                     	endif
  2487  001930  0009               	tblrd		*+
  2488  001932  CFF5 F00D          	movff	tablat,___ftmul@f1
  2489  001936  0009               	tblrd		*+
  2490  001938  CFF5 F00E          	movff	tablat,___ftmul@f1+1
  2491  00193C  000A               	tblrd		*-
  2492  00193E  CFF5 F00F          	movff	tablat,___ftmul@f1+2
  2493  001942  ECBA  F011         	call	___ftmul	;wreg free
  2494  001946  C00D  F042         	movff	?___ftmul,_scale$1186
  2495  00194A  C00E  F043         	movff	?___ftmul+1,_scale$1186+1
  2496  00194E  C00F  F044         	movff	?___ftmul+2,_scale$1186+2
  2497                           
  2498                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2499  001952  C042  F00D         	movff	_scale$1186,___ftmul@f1
  2500  001956  C043  F00E         	movff	_scale$1186+1,___ftmul@f1+1
  2501  00195A  C044  F00F         	movff	_scale$1186+2,___ftmul@f1+2
  2502  00195E  0E00               	movlw	0
  2503  001960  6E3C               	movwf	___wmul@multiplicand+1,c
  2504  001962  0E03               	movlw	3
  2505  001964  6E3B               	movwf	___wmul@multiplicand,c
  2506  001966  0E00               	movlw	0
  2507  001968  6E2E               	movwf	___awmod@divisor+1,c
  2508  00196A  0E0A               	movlw	10
  2509  00196C  6E2D               	movwf	___awmod@divisor,c
  2510  00196E  5045               	movf	scale@scl,w,c
  2511  001970  6E2B               	movwf	___awmod@dividend,c
  2512  001972  6A2C               	clrf	___awmod@dividend+1,c
  2513  001974  BE2B               	btfsc	___awmod@dividend,7,c
  2514  001976  062C               	decf	___awmod@dividend+1,f,c
  2515  001978  EC59  F014         	call	___awmod	;wreg free
  2516  00197C  C02B  F039         	movff	?___awmod,___wmul@multiplier
  2517  001980  C02C  F03A         	movff	?___awmod+1,___wmul@multiplier+1
  2518  001984  EC8F  F015         	call	___wmul	;wreg free
  2519  001988  0E50               	movlw	low __powers_
  2520  00198A  2439               	addwf	?___wmul,w,c
  2521  00198C  6EF6               	movwf	tblptrl,c
  2522  00198E  0E10               	movlw	high __powers_
  2523  001990  203A               	addwfc	?___wmul+1,w,c
  2524  001992  6EF7               	movwf	tblptrh,c
  2525  001994                     	if	0	;There are less than 3 active tblptr bytes
  2526  001994                     	endif
  2527  001994  0009               	tblrd		*+
  2528  001996  CFF5 F010          	movff	tablat,___ftmul@f2
  2529  00199A  0009               	tblrd		*+
  2530  00199C  CFF5 F011          	movff	tablat,___ftmul@f2+1
  2531  0019A0  000A               	tblrd		*-
  2532  0019A2  CFF5 F012          	movff	tablat,___ftmul@f2+2
  2533  0019A6  ECBA  F011         	call	___ftmul	;wreg free
  2534  0019AA  D053               	goto	L5
  2535  0019AC  D06C               	goto	l135
  2536  0019AE  D059               	goto	l2124
  2537  0019B0                     l2118:
  2538                           
  2539                           ;doprnt.c: 438: else if(scl > 10)
  2540  0019B0  5045               	movf	scale@scl,w,c
  2541  0019B2  0A80               	xorlw	128
  2542  0019B4  0F75               	addlw	-139
  2543  0019B6  A0D8               	btfss	status,0,c
  2544  0019B8  D054               	goto	l2124
  2545                           
  2546                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2547  0019BA  0E00               	movlw	0
  2548  0019BC  6E34               	movwf	___awdiv@divisor+1,c
  2549  0019BE  0E0A               	movlw	10
  2550  0019C0  6E33               	movwf	___awdiv@divisor,c
  2551  0019C2  5045               	movf	scale@scl,w,c
  2552  0019C4  6E31               	movwf	___awdiv@dividend,c
  2553  0019C6  6A32               	clrf	___awdiv@dividend+1,c
  2554  0019C8  BE31               	btfsc	___awdiv@dividend,7,c
  2555  0019CA  0632               	decf	___awdiv@dividend+1,f,c
  2556  0019CC  EC7D  F013         	call	___awdiv	;wreg free
  2557  0019D0  0E09               	movlw	9
  2558  0019D2  2431               	addwf	?___awdiv,w,c
  2559  0019D4  6E39               	movwf	___wmul@multiplier,c
  2560  0019D6  0E00               	movlw	0
  2561  0019D8  2032               	addwfc	?___awdiv+1,w,c
  2562  0019DA  6E3A               	movwf	___wmul@multiplier+1,c
  2563  0019DC  0E00               	movlw	0
  2564  0019DE  6E3C               	movwf	___wmul@multiplicand+1,c
  2565  0019E0  0E03               	movlw	3
  2566  0019E2  6E3B               	movwf	___wmul@multiplicand,c
  2567  0019E4  EC8F  F015         	call	___wmul	;wreg free
  2568  0019E8  0E50               	movlw	low __powers_
  2569  0019EA  2439               	addwf	?___wmul,w,c
  2570  0019EC  6EF6               	movwf	tblptrl,c
  2571  0019EE  0E10               	movlw	high __powers_
  2572  0019F0  203A               	addwfc	?___wmul+1,w,c
  2573  0019F2  6EF7               	movwf	tblptrh,c
  2574  0019F4                     	if	0	;There are less than 3 active tblptr bytes
  2575  0019F4                     	endif
  2576  0019F4  0009               	tblrd		*+
  2577  0019F6  CFF5 F00D          	movff	tablat,___ftmul@f1
  2578  0019FA  0009               	tblrd		*+
  2579  0019FC  CFF5 F00E          	movff	tablat,___ftmul@f1+1
  2580  001A00  000A               	tblrd		*-
  2581  001A02  CFF5 F00F          	movff	tablat,___ftmul@f1+2
  2582  001A06  0E00               	movlw	0
  2583  001A08  6E3C               	movwf	___wmul@multiplicand+1,c
  2584  001A0A  0E03               	movlw	3
  2585  001A0C  6E3B               	movwf	___wmul@multiplicand,c
  2586  001A0E  0E00               	movlw	0
  2587  001A10  6E2E               	movwf	___awmod@divisor+1,c
  2588  001A12  0E0A               	movlw	10
  2589  001A14  6E2D               	movwf	___awmod@divisor,c
  2590  001A16  5045               	movf	scale@scl,w,c
  2591  001A18  6E2B               	movwf	___awmod@dividend,c
  2592  001A1A  6A2C               	clrf	___awmod@dividend+1,c
  2593  001A1C  BE2B               	btfsc	___awmod@dividend,7,c
  2594  001A1E  062C               	decf	___awmod@dividend+1,f,c
  2595  001A20  EC59  F014         	call	___awmod	;wreg free
  2596  001A24  C02B  F039         	movff	?___awmod,___wmul@multiplier
  2597  001A28  C02C  F03A         	movff	?___awmod+1,___wmul@multiplier+1
  2598  001A2C  EC8F  F015         	call	___wmul	;wreg free
  2599  001A30  0E50               	movlw	low __powers_
  2600  001A32  2439               	addwf	?___wmul,w,c
  2601  001A34  6EF6               	movwf	tblptrl,c
  2602  001A36  0E10               	movlw	high __powers_
  2603  001A38  203A               	addwfc	?___wmul+1,w,c
  2604  001A3A  6EF7               	movwf	tblptrh,c
  2605  001A3C                     	if	0	;There are less than 3 active tblptr bytes
  2606  001A3C                     	endif
  2607  001A3C  0009               	tblrd		*+
  2608  001A3E  CFF5 F010          	movff	tablat,___ftmul@f2
  2609  001A42  0009               	tblrd		*+
  2610  001A44  CFF5 F011          	movff	tablat,___ftmul@f2+1
  2611  001A48  000A               	tblrd		*-
  2612  001A4A  CFF5 F012          	movff	tablat,___ftmul@f2+2
  2613  001A4E  ECBA  F011         	call	___ftmul	;wreg free
  2614  001A52                     L5:
  2615  001A52  C00D  F03F         	movff	?___ftmul,?_scale
  2616  001A56  C00E  F040         	movff	?___ftmul+1,?_scale+1
  2617  001A5A  C00F  F041         	movff	?___ftmul+2,?_scale+2
  2618  001A5E  D013               	goto	l135
  2619  001A60  D000               	goto	l2124
  2620  001A62                     l2124:
  2621                           
  2622                           ;doprnt.c: 440: return _powers_[scl];
  2623  001A62  5045               	movf	scale@scl,w,c
  2624  001A64  0D03               	mullw	3
  2625  001A66  0E50               	movlw	low __powers_
  2626  001A68  24F3               	addwf	prodl,w,c
  2627  001A6A  6EF6               	movwf	tblptrl,c
  2628  001A6C  0E10               	movlw	high __powers_
  2629  001A6E                     L4:
  2630  001A6E  20F4               	addwfc	prodh,w,c
  2631  001A70  6EF7               	movwf	tblptrh,c
  2632  001A72                     	if	0	;There are less than 3 active tblptr bytes
  2633  001A72                     	endif
  2634  001A72  0009               	tblrd		*+
  2635  001A74  CFF5 F03F          	movff	tablat,?_scale
  2636  001A78  0009               	tblrd		*+
  2637  001A7A  CFF5 F040          	movff	tablat,?_scale+1
  2638  001A7E  000A               	tblrd		*-
  2639  001A80  CFF5 F041          	movff	tablat,?_scale+2
  2640  001A84  D000               	goto	l135
  2641  001A86                     l135:
  2642  001A86  0012               	return		;funcret
  2643  001A88                     __end_of_scale:
  2644                           	opt stack 0
  2645                           tblptru	equ	0xFF8
  2646                           tblptrh	equ	0xFF7
  2647                           tblptrl	equ	0xFF6
  2648                           tablat	equ	0xFF5
  2649                           prodh	equ	0xFF4
  2650                           prodl	equ	0xFF3
  2651                           postinc0	equ	0xFEE
  2652                           wreg	equ	0xFE8
  2653                           postdec1	equ	0xFE5
  2654                           plusw1	equ	0xFE3
  2655                           fsr1l	equ	0xFE1
  2656                           indf2	equ	0xFDF
  2657                           postinc2	equ	0xFDE
  2658                           postdec2	equ	0xFDD
  2659                           plusw2	equ	0xFDB
  2660                           fsr2h	equ	0xFDA
  2661                           fsr2l	equ	0xFD9
  2662                           status	equ	0xFD8
  2663                           
  2664 ;; *************** function _putch *****************
  2665 ;; Defined at:
  2666 ;;		line 32 in file "Lab6pB3.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  c               1    wreg     unsigned char 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  c               1    0[COMRAM] unsigned char 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;		None               void
  2673 ;; Registers used:
  2674 ;;		wreg
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;Total ram usage:        1 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_printf
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text3
  2694  002BDA                     __ptext3:
  2695                           	opt stack 0
  2696  002BDA                     _putch:
  2697                           	opt stack 29
  2698                           
  2699                           ;incstack = 0
  2700                           ;putch@c stored from wreg
  2701  002BDA  6E01               	movwf	putch@c,c
  2702                           
  2703                           ;Lab6pB3.c: 34: while (!TRMT);
  2704  002BDC  D000               	goto	l68
  2705  002BDE                     l68:
  2706  002BDE  A2AC               	btfss	4012,1,c	;volatile
  2707  002BE0  D7FE               	goto	l68
  2708                           
  2709                           ;Lab6pB3.c: 35: TXREG = c;
  2710  002BE2  C001  FFAD         	movff	putch@c,4013	;volatile
  2711  002BE6  0012               	return		;funcret
  2712  002BE8                     __end_of_putch:
  2713                           	opt stack 0
  2714                           tblptru	equ	0xFF8
  2715                           tblptrh	equ	0xFF7
  2716                           tblptrl	equ	0xFF6
  2717                           tablat	equ	0xFF5
  2718                           prodh	equ	0xFF4
  2719                           prodl	equ	0xFF3
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           postdec1	equ	0xFE5
  2723                           plusw1	equ	0xFE3
  2724                           fsr1l	equ	0xFE1
  2725                           indf2	equ	0xFDF
  2726                           postinc2	equ	0xFDE
  2727                           postdec2	equ	0xFDD
  2728                           plusw2	equ	0xFDB
  2729                           fsr2h	equ	0xFDA
  2730                           fsr2l	equ	0xFD9
  2731                           status	equ	0xFD8
  2732                           
  2733 ;; *************** function _fround *****************
  2734 ;; Defined at:
  2735 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  prec            1    wreg     unsigned char 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  prec            1   71[COMRAM] unsigned char 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  3   62[COMRAM] unsigned char 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2749 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;Total ram usage:       10 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    2
  2756 ;; This function calls:
  2757 ;;		___awdiv
  2758 ;;		___awmod
  2759 ;;		___ftmul
  2760 ;;		___wmul
  2761 ;; This function is called by:
  2762 ;;		_printf
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text4
  2767  001D52                     __ptext4:
  2768                           	opt stack 0
  2769  001D52                     _fround:
  2770                           	opt stack 27
  2771                           
  2772                           ;incstack = 0
  2773                           ;fround@prec stored from wreg
  2774  001D52  6E48               	movwf	fround@prec,c
  2775                           
  2776                           ;doprnt.c: 413: if(prec>=110)
  2777  001D54  0E6D               	movlw	109
  2778  001D56  6448               	cpfsgt	fround@prec,c
  2779  001D58  D09B               	goto	l2078
  2780                           
  2781                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2782  001D5A  0E00               	movlw	0
  2783  001D5C  6E3C               	movwf	___wmul@multiplicand+1,c
  2784  001D5E  0E03               	movlw	3
  2785  001D60  6E3B               	movwf	___wmul@multiplicand,c
  2786  001D62  0E00               	movlw	0
  2787  001D64  6E34               	movwf	___awdiv@divisor+1,c
  2788  001D66  0E0A               	movlw	10
  2789  001D68  6E33               	movwf	___awdiv@divisor,c
  2790  001D6A  0E00               	movlw	0
  2791  001D6C  6E2E               	movwf	___awmod@divisor+1,c
  2792  001D6E  0E64               	movlw	100
  2793  001D70  6E2D               	movwf	___awmod@divisor,c
  2794  001D72  C048  F02B         	movff	fround@prec,___awmod@dividend
  2795  001D76  6A2C               	clrf	___awmod@dividend+1,c
  2796  001D78  EC59  F014         	call	___awmod	;wreg free
  2797  001D7C  C02B  F031         	movff	?___awmod,___awdiv@dividend
  2798  001D80  C02C  F032         	movff	?___awmod+1,___awdiv@dividend+1
  2799  001D84  EC7D  F013         	call	___awdiv	;wreg free
  2800  001D88  0E09               	movlw	9
  2801  001D8A  2431               	addwf	?___awdiv,w,c
  2802  001D8C  6E39               	movwf	___wmul@multiplier,c
  2803  001D8E  0E00               	movlw	0
  2804  001D90  2032               	addwfc	?___awdiv+1,w,c
  2805  001D92  6E3A               	movwf	___wmul@multiplier+1,c
  2806  001D94  EC8F  F015         	call	___wmul	;wreg free
  2807  001D98  0E29               	movlw	low __npowers_
  2808  001D9A  2439               	addwf	?___wmul,w,c
  2809  001D9C  6EF6               	movwf	tblptrl,c
  2810  001D9E  0E10               	movlw	high __npowers_
  2811  001DA0  203A               	addwfc	?___wmul+1,w,c
  2812  001DA2  6EF7               	movwf	tblptrh,c
  2813  001DA4                     	if	0	;There are less than 3 active tblptr bytes
  2814  001DA4                     	endif
  2815  001DA4  0009               	tblrd		*+
  2816  001DA6  CFF5 F010          	movff	tablat,___ftmul@f2
  2817  001DAA  0009               	tblrd		*+
  2818  001DAC  CFF5 F011          	movff	tablat,___ftmul@f2+1
  2819  001DB0  000A               	tblrd		*-
  2820  001DB2  CFF5 F012          	movff	tablat,___ftmul@f2+2
  2821  001DB6  0E00               	movlw	0
  2822  001DB8  6E34               	movwf	___awdiv@divisor+1,c
  2823  001DBA  0E64               	movlw	100
  2824  001DBC  6E33               	movwf	___awdiv@divisor,c
  2825  001DBE  C048  F031         	movff	fround@prec,___awdiv@dividend
  2826  001DC2  6A32               	clrf	___awdiv@dividend+1,c
  2827  001DC4  EC7D  F013         	call	___awdiv	;wreg free
  2828  001DC8  0E12               	movlw	18
  2829  001DCA  2431               	addwf	?___awdiv,w,c
  2830  001DCC  6E39               	movwf	___wmul@multiplier,c
  2831  001DCE  0E00               	movlw	0
  2832  001DD0  2032               	addwfc	?___awdiv+1,w,c
  2833  001DD2  6E3A               	movwf	___wmul@multiplier+1,c
  2834  001DD4  0E00               	movlw	0
  2835  001DD6  6E3C               	movwf	___wmul@multiplicand+1,c
  2836  001DD8  0E03               	movlw	3
  2837  001DDA  6E3B               	movwf	___wmul@multiplicand,c
  2838  001DDC  EC8F  F015         	call	___wmul	;wreg free
  2839  001DE0  0E29               	movlw	low __npowers_
  2840  001DE2  2439               	addwf	?___wmul,w,c
  2841  001DE4  6EF6               	movwf	tblptrl,c
  2842  001DE6  0E10               	movlw	high __npowers_
  2843  001DE8  203A               	addwfc	?___wmul+1,w,c
  2844  001DEA  6EF7               	movwf	tblptrh,c
  2845  001DEC                     	if	0	;There are less than 3 active tblptr bytes
  2846  001DEC                     	endif
  2847  001DEC  0009               	tblrd		*+
  2848  001DEE  CFF5 F00D          	movff	tablat,___ftmul@f1
  2849  001DF2  0009               	tblrd		*+
  2850  001DF4  CFF5 F00E          	movff	tablat,___ftmul@f1+1
  2851  001DF8  000A               	tblrd		*-
  2852  001DFA  CFF5 F00F          	movff	tablat,___ftmul@f1+2
  2853  001DFE  ECBA  F011         	call	___ftmul	;wreg free
  2854  001E02  C00D  F045         	movff	?___ftmul,_fround$1184
  2855  001E06  C00E  F046         	movff	?___ftmul+1,_fround$1184+1
  2856  001E0A  C00F  F047         	movff	?___ftmul+2,_fround$1184+2
  2857                           
  2858                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2859  001E0E  0E00               	movlw	0
  2860  001E10  6E3C               	movwf	___wmul@multiplicand+1,c
  2861  001E12  0E03               	movlw	3
  2862  001E14  6E3B               	movwf	___wmul@multiplicand,c
  2863  001E16  0E00               	movlw	0
  2864  001E18  6E2E               	movwf	___awmod@divisor+1,c
  2865  001E1A  0E0A               	movlw	10
  2866  001E1C  6E2D               	movwf	___awmod@divisor,c
  2867  001E1E  C048  F02B         	movff	fround@prec,___awmod@dividend
  2868  001E22  6A2C               	clrf	___awmod@dividend+1,c
  2869  001E24  EC59  F014         	call	___awmod	;wreg free
  2870  001E28  C02B  F039         	movff	?___awmod,___wmul@multiplier
  2871  001E2C  C02C  F03A         	movff	?___awmod+1,___wmul@multiplier+1
  2872  001E30  EC8F  F015         	call	___wmul	;wreg free
  2873  001E34  0E29               	movlw	low __npowers_
  2874  001E36  2439               	addwf	?___wmul,w,c
  2875  001E38  6EF6               	movwf	tblptrl,c
  2876  001E3A  0E10               	movlw	high __npowers_
  2877  001E3C  203A               	addwfc	?___wmul+1,w,c
  2878  001E3E  6EF7               	movwf	tblptrh,c
  2879  001E40                     	if	0	;There are less than 3 active tblptr bytes
  2880  001E40                     	endif
  2881  001E40  0009               	tblrd		*+
  2882  001E42  CFF5 F010          	movff	tablat,___ftmul@f2
  2883  001E46  0009               	tblrd		*+
  2884  001E48  CFF5 F011          	movff	tablat,___ftmul@f2+1
  2885  001E4C  000A               	tblrd		*-
  2886  001E4E  CFF5 F012          	movff	tablat,___ftmul@f2+2
  2887  001E52  C045  F00D         	movff	_fround$1184,___ftmul@f1
  2888  001E56  C046  F00E         	movff	_fround$1184+1,___ftmul@f1+1
  2889  001E5A  C047  F00F         	movff	_fround$1184+2,___ftmul@f1+2
  2890  001E5E  ECBA  F011         	call	___ftmul	;wreg free
  2891  001E62  C00D  F042         	movff	?___ftmul,_fround$1185
  2892  001E66  C00E  F043         	movff	?___ftmul+1,_fround$1185+1
  2893  001E6A  C00F  F044         	movff	?___ftmul+2,_fround$1185+2
  2894                           
  2895                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2896  001E6E  C042  F00D         	movff	_fround$1185,___ftmul@f1
  2897  001E72  C043  F00E         	movff	_fround$1185+1,___ftmul@f1+1
  2898  001E76  C044  F00F         	movff	_fround$1185+2,___ftmul@f1+2
  2899  001E7A  0E00               	movlw	0
  2900  001E7C  6E10               	movwf	___ftmul@f2,c
  2901  001E7E  0E00               	movlw	0
  2902  001E80  6E11               	movwf	___ftmul@f2+1,c
  2903  001E82  0E3F               	movlw	63
  2904  001E84  6E12               	movwf	___ftmul@f2+2,c
  2905  001E86  ECBA  F011         	call	___ftmul	;wreg free
  2906  001E8A  D07D               	goto	L7
  2907  001E8C  D083               	goto	l128
  2908  001E8E  D062               	goto	l2086
  2909  001E90                     l2078:
  2910                           
  2911                           ;doprnt.c: 415: else if(prec > 10)
  2912  001E90  0E0A               	movlw	10
  2913  001E92  6448               	cpfsgt	fround@prec,c
  2914  001E94  D05F               	goto	l2086
  2915                           
  2916                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2917  001E96  0E00               	movlw	0
  2918  001E98  6E3C               	movwf	___wmul@multiplicand+1,c
  2919  001E9A  0E03               	movlw	3
  2920  001E9C  6E3B               	movwf	___wmul@multiplicand,c
  2921  001E9E  0E00               	movlw	0
  2922  001EA0  6E2E               	movwf	___awmod@divisor+1,c
  2923  001EA2  0E0A               	movlw	10
  2924  001EA4  6E2D               	movwf	___awmod@divisor,c
  2925  001EA6  C048  F02B         	movff	fround@prec,___awmod@dividend
  2926  001EAA  6A2C               	clrf	___awmod@dividend+1,c
  2927  001EAC  EC59  F014         	call	___awmod	;wreg free
  2928  001EB0  C02B  F039         	movff	?___awmod,___wmul@multiplier
  2929  001EB4  C02C  F03A         	movff	?___awmod+1,___wmul@multiplier+1
  2930  001EB8  EC8F  F015         	call	___wmul	;wreg free
  2931  001EBC  0E29               	movlw	low __npowers_
  2932  001EBE  2439               	addwf	?___wmul,w,c
  2933  001EC0  6EF6               	movwf	tblptrl,c
  2934  001EC2  0E10               	movlw	high __npowers_
  2935  001EC4  203A               	addwfc	?___wmul+1,w,c
  2936  001EC6  6EF7               	movwf	tblptrh,c
  2937  001EC8                     	if	0	;There are less than 3 active tblptr bytes
  2938  001EC8                     	endif
  2939  001EC8  0009               	tblrd		*+
  2940  001ECA  CFF5 F010          	movff	tablat,___ftmul@f2
  2941  001ECE  0009               	tblrd		*+
  2942  001ED0  CFF5 F011          	movff	tablat,___ftmul@f2+1
  2943  001ED4  000A               	tblrd		*-
  2944  001ED6  CFF5 F012          	movff	tablat,___ftmul@f2+2
  2945  001EDA  0E00               	movlw	0
  2946  001EDC  6E34               	movwf	___awdiv@divisor+1,c
  2947  001EDE  0E0A               	movlw	10
  2948  001EE0  6E33               	movwf	___awdiv@divisor,c
  2949  001EE2  C048  F031         	movff	fround@prec,___awdiv@dividend
  2950  001EE6  6A32               	clrf	___awdiv@dividend+1,c
  2951  001EE8  EC7D  F013         	call	___awdiv	;wreg free
  2952  001EEC  0E09               	movlw	9
  2953  001EEE  2431               	addwf	?___awdiv,w,c
  2954  001EF0  6E39               	movwf	___wmul@multiplier,c
  2955  001EF2  0E00               	movlw	0
  2956  001EF4  2032               	addwfc	?___awdiv+1,w,c
  2957  001EF6  6E3A               	movwf	___wmul@multiplier+1,c
  2958  001EF8  0E00               	movlw	0
  2959  001EFA  6E3C               	movwf	___wmul@multiplicand+1,c
  2960  001EFC  0E03               	movlw	3
  2961  001EFE  6E3B               	movwf	___wmul@multiplicand,c
  2962  001F00  EC8F  F015         	call	___wmul	;wreg free
  2963  001F04  0E29               	movlw	low __npowers_
  2964  001F06  2439               	addwf	?___wmul,w,c
  2965  001F08  6EF6               	movwf	tblptrl,c
  2966  001F0A  0E10               	movlw	high __npowers_
  2967  001F0C  203A               	addwfc	?___wmul+1,w,c
  2968  001F0E  6EF7               	movwf	tblptrh,c
  2969  001F10                     	if	0	;There are less than 3 active tblptr bytes
  2970  001F10                     	endif
  2971  001F10  0009               	tblrd		*+
  2972  001F12  CFF5 F00D          	movff	tablat,___ftmul@f1
  2973  001F16  0009               	tblrd		*+
  2974  001F18  CFF5 F00E          	movff	tablat,___ftmul@f1+1
  2975  001F1C  000A               	tblrd		*-
  2976  001F1E  CFF5 F00F          	movff	tablat,___ftmul@f1+2
  2977  001F22  ECBA  F011         	call	___ftmul	;wreg free
  2978  001F26  C00D  F045         	movff	?___ftmul,_fround$1184
  2979  001F2A  C00E  F046         	movff	?___ftmul+1,_fround$1184+1
  2980  001F2E  C00F  F047         	movff	?___ftmul+2,_fround$1184+2
  2981                           
  2982                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2983  001F32  C045  F00D         	movff	_fround$1184,___ftmul@f1
  2984  001F36  C046  F00E         	movff	_fround$1184+1,___ftmul@f1+1
  2985  001F3A  C047  F00F         	movff	_fround$1184+2,___ftmul@f1+2
  2986  001F3E  0E00               	movlw	0
  2987  001F40  6E10               	movwf	___ftmul@f2,c
  2988  001F42  0E00               	movlw	0
  2989  001F44  6E11               	movwf	___ftmul@f2+1,c
  2990  001F46  0E3F               	movlw	63
  2991  001F48  6E12               	movwf	___ftmul@f2+2,c
  2992  001F4A  ECBA  F011         	call	___ftmul	;wreg free
  2993  001F4E  D01B               	goto	L7
  2994  001F50  D021               	goto	l128
  2995  001F52  D000               	goto	l2086
  2996  001F54                     l2086:
  2997                           
  2998                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  2999  001F54  5048               	movf	fround@prec,w,c
  3000  001F56  0D03               	mullw	3
  3001  001F58  0E29               	movlw	low __npowers_
  3002  001F5A  24F3               	addwf	prodl,w,c
  3003  001F5C  6EF6               	movwf	tblptrl,c
  3004  001F5E  0E10               	movlw	high __npowers_
  3005  001F60  20F4               	addwfc	prodh,w,c
  3006  001F62  6EF7               	movwf	tblptrh,c
  3007  001F64                     	if	0	;There are less than 3 active tblptr bytes
  3008  001F64                     	endif
  3009  001F64  0009               	tblrd		*+
  3010  001F66  CFF5 F00D          	movff	tablat,___ftmul@f1
  3011  001F6A  0009               	tblrd		*+
  3012  001F6C  CFF5 F00E          	movff	tablat,___ftmul@f1+1
  3013  001F70  000A               	tblrd		*-
  3014  001F72  CFF5 F00F          	movff	tablat,___ftmul@f1+2
  3015  001F76  0E00               	movlw	0
  3016  001F78  6E10               	movwf	___ftmul@f2,c
  3017  001F7A  0E00               	movlw	0
  3018  001F7C  6E11               	movwf	___ftmul@f2+1,c
  3019  001F7E  0E3F               	movlw	63
  3020  001F80  6E12               	movwf	___ftmul@f2+2,c
  3021  001F82  ECBA  F011         	call	___ftmul	;wreg free
  3022  001F86                     L7:
  3023  001F86  C00D  F03F         	movff	?___ftmul,?_fround
  3024  001F8A  C00E  F040         	movff	?___ftmul+1,?_fround+1
  3025  001F8E  C00F  F041         	movff	?___ftmul+2,?_fround+2
  3026  001F92  D000               	goto	l128
  3027  001F94                     l128:
  3028  001F94  0012               	return		;funcret
  3029  001F96                     __end_of_fround:
  3030                           	opt stack 0
  3031                           tblptru	equ	0xFF8
  3032                           tblptrh	equ	0xFF7
  3033                           tblptrl	equ	0xFF6
  3034                           tablat	equ	0xFF5
  3035                           prodh	equ	0xFF4
  3036                           prodl	equ	0xFF3
  3037                           postinc0	equ	0xFEE
  3038                           wreg	equ	0xFE8
  3039                           postdec1	equ	0xFE5
  3040                           plusw1	equ	0xFE3
  3041                           fsr1l	equ	0xFE1
  3042                           indf2	equ	0xFDF
  3043                           postinc2	equ	0xFDE
  3044                           postdec2	equ	0xFDD
  3045                           plusw2	equ	0xFDB
  3046                           fsr2h	equ	0xFDA
  3047                           fsr2l	equ	0xFD9
  3048                           status	equ	0xFD8
  3049                           
  3050 ;; *************** function ___wmul *****************
  3051 ;; Defined at:
  3052 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  multiplier      2   56[COMRAM] unsigned int 
  3055 ;;  multiplicand    2   58[COMRAM] unsigned int 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  product         2   60[COMRAM] unsigned int 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  2   56[COMRAM] unsigned int 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, prodl, prodh
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3067 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;Total ram usage:        6 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_fround
  3077 ;;		_scale
  3078 ;;		_printf
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text5
  3083  002B1E                     __ptext5:
  3084                           	opt stack 0
  3085  002B1E                     ___wmul:
  3086                           	opt stack 28
  3087                           
  3088                           ;incstack = 0
  3089  002B1E  5039               	movf	___wmul@multiplier,w,c
  3090  002B20  023B               	mulwf	___wmul@multiplicand,c
  3091  002B22  CFF3 F03D          	movff	prodl,___wmul@product
  3092  002B26  CFF4 F03E          	movff	prodh,___wmul@product+1
  3093  002B2A  5039               	movf	___wmul@multiplier,w,c
  3094  002B2C  023C               	mulwf	___wmul@multiplicand+1,c
  3095  002B2E  50F3               	movf	prodl,w,c
  3096  002B30  263E               	addwf	___wmul@product+1,f,c
  3097  002B32  503A               	movf	___wmul@multiplier+1,w,c
  3098  002B34  023B               	mulwf	___wmul@multiplicand,c
  3099  002B36  50F3               	movf	prodl,w,c
  3100  002B38  263E               	addwf	___wmul@product+1,f,c
  3101  002B3A  C03D  F039         	movff	___wmul@product,?___wmul
  3102  002B3E  C03E  F03A         	movff	___wmul@product+1,?___wmul+1
  3103  002B42  D000               	goto	l227
  3104  002B44                     l227:
  3105  002B44  0012               	return		;funcret
  3106  002B46                     __end_of___wmul:
  3107                           	opt stack 0
  3108                           tblptru	equ	0xFF8
  3109                           tblptrh	equ	0xFF7
  3110                           tblptrl	equ	0xFF6
  3111                           tablat	equ	0xFF5
  3112                           prodh	equ	0xFF4
  3113                           prodl	equ	0xFF3
  3114                           postinc0	equ	0xFEE
  3115                           wreg	equ	0xFE8
  3116                           postdec1	equ	0xFE5
  3117                           plusw1	equ	0xFE3
  3118                           fsr1l	equ	0xFE1
  3119                           indf2	equ	0xFDF
  3120                           postinc2	equ	0xFDE
  3121                           postdec2	equ	0xFDD
  3122                           plusw2	equ	0xFDB
  3123                           fsr2h	equ	0xFDA
  3124                           fsr2l	equ	0xFD9
  3125                           status	equ	0xFD8
  3126                           
  3127 ;; *************** function ___ftmul *****************
  3128 ;; Defined at:
  3129 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  f1              3   12[COMRAM] float 
  3132 ;;  f2              3   15[COMRAM] float 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3135 ;;  sign            1   26[COMRAM] unsigned char 
  3136 ;;  cntr            1   25[COMRAM] unsigned char 
  3137 ;;  exp             1   21[COMRAM] unsigned char 
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  3   12[COMRAM] float 
  3140 ;; Registers used:
  3141 ;;		wreg, status,2, status,0, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3147 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;Total ram usage:       15 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    1
  3154 ;; This function calls:
  3155 ;;		___ftpack
  3156 ;; This function is called by:
  3157 ;;		_main
  3158 ;;		_fround
  3159 ;;		_scale
  3160 ;;		_printf
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text6
  3165  002374                     __ptext6:
  3166                           	opt stack 0
  3167  002374                     ___ftmul:
  3168                           	opt stack 27
  3169                           
  3170                           ;incstack = 0
  3171  002374  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3172  002378  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3173  00237A  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3174  00237C  340E               	rlcf	___ftmul@f1+1,w,c
  3175  00237E  3613               	rlcf	??___ftmul& (0+255),f,c
  3176  002380  E301               	bnc	u1711
  3177  002382  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3178  002384                     u1711:
  3179  002384  5013               	movf	??___ftmul,w,c
  3180  002386  6E16               	movwf	___ftmul@exp,c
  3181  002388  5016               	movf	___ftmul@exp,w,c
  3182  00238A  A4D8               	btfss	status,2,c
  3183  00238C  D002               	goto	l1892
  3184  00238E  D00E               	goto	l1894
  3185  002390  D06C               	goto	l656
  3186  002392                     l1892:
  3187  002392  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3188  002396  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3189  002398  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3190  00239A  3411               	rlcf	___ftmul@f2+1,w,c
  3191  00239C  3613               	rlcf	??___ftmul& (0+255),f,c
  3192  00239E  E301               	bnc	u1731
  3193  0023A0  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3194  0023A2                     u1731:
  3195  0023A2  5013               	movf	??___ftmul,w,c
  3196  0023A4  6E1B               	movwf	___ftmul@sign,c
  3197  0023A6  501B               	movf	___ftmul@sign,w,c
  3198  0023A8  A4D8               	btfss	status,2,c
  3199  0023AA  D007               	goto	l1898
  3200  0023AC                     l1894:
  3201  0023AC  0E00               	movlw	0
  3202  0023AE  6E0D               	movwf	?___ftmul,c
  3203  0023B0  0E00               	movlw	0
  3204  0023B2  6E0E               	movwf	?___ftmul+1,c
  3205  0023B4  0E00               	movlw	0
  3206  0023B6  6E0F               	movwf	?___ftmul+2,c
  3207  0023B8  D058               	goto	l656
  3208  0023BA                     l1898:
  3209  0023BA  501B               	movf	___ftmul@sign,w,c
  3210  0023BC  0F7B               	addlw	123
  3211  0023BE  2616               	addwf	___ftmul@exp,f,c
  3212  0023C0  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3213  0023C4  5012               	movf	___ftmul@f2+2,w,c
  3214  0023C6  1A1B               	xorwf	___ftmul@sign,f,c
  3215  0023C8  0E80               	movlw	128
  3216  0023CA  161B               	andwf	___ftmul@sign,f,c
  3217  0023CC  8E0E               	bsf	___ftmul@f1+1,7,c
  3218  0023CE  8E11               	bsf	___ftmul@f2+1,7,c
  3219  0023D0  0EFF               	movlw	255
  3220  0023D2  1610               	andwf	___ftmul@f2,f,c
  3221  0023D4  0EFF               	movlw	255
  3222  0023D6  1611               	andwf	___ftmul@f2+1,f,c
  3223  0023D8  0E00               	movlw	0
  3224  0023DA  1612               	andwf	___ftmul@f2+2,f,c
  3225  0023DC  0E00               	movlw	0
  3226  0023DE  6E17               	movwf	___ftmul@f3_as_product,c
  3227  0023E0  0E00               	movlw	0
  3228  0023E2  6E18               	movwf	___ftmul@f3_as_product+1,c
  3229  0023E4  0E00               	movlw	0
  3230  0023E6  6E19               	movwf	___ftmul@f3_as_product+2,c
  3231  0023E8  0E07               	movlw	7
  3232  0023EA  6E1A               	movwf	___ftmul@cntr,c
  3233  0023EC  D000               	goto	l1912
  3234  0023EE                     l1912:
  3235  0023EE  A00D               	btfss	___ftmul@f1,0,c
  3236  0023F0  D007               	goto	l1916
  3237  0023F2  5010               	movf	___ftmul@f2,w,c
  3238  0023F4  2617               	addwf	___ftmul@f3_as_product,f,c
  3239  0023F6  5011               	movf	___ftmul@f2+1,w,c
  3240  0023F8  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3241  0023FA  5012               	movf	___ftmul@f2+2,w,c
  3242  0023FC  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3243  0023FE  D000               	goto	l1916
  3244  002400                     l1916:
  3245  002400  90D8               	bcf	status,0,c
  3246  002402  320F               	rrcf	___ftmul@f1+2,f,c
  3247  002404  320E               	rrcf	___ftmul@f1+1,f,c
  3248  002406  320D               	rrcf	___ftmul@f1,f,c
  3249  002408  90D8               	bcf	status,0,c
  3250  00240A  3610               	rlcf	___ftmul@f2,f,c
  3251  00240C  3611               	rlcf	___ftmul@f2+1,f,c
  3252  00240E  3612               	rlcf	___ftmul@f2+2,f,c
  3253  002410  2E1A               	decfsz	___ftmul@cntr,f,c
  3254  002412  D7ED               	goto	l1912
  3255  002414  D000               	goto	l1920
  3256  002416                     l1920:
  3257  002416  0E09               	movlw	9
  3258  002418  6E1A               	movwf	___ftmul@cntr,c
  3259  00241A  D000               	goto	l1922
  3260  00241C                     l1922:
  3261  00241C  A00D               	btfss	___ftmul@f1,0,c
  3262  00241E  D007               	goto	l1926
  3263  002420  5010               	movf	___ftmul@f2,w,c
  3264  002422  2617               	addwf	___ftmul@f3_as_product,f,c
  3265  002424  5011               	movf	___ftmul@f2+1,w,c
  3266  002426  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3267  002428  5012               	movf	___ftmul@f2+2,w,c
  3268  00242A  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3269  00242C  D000               	goto	l1926
  3270  00242E                     l1926:
  3271  00242E  90D8               	bcf	status,0,c
  3272  002430  320F               	rrcf	___ftmul@f1+2,f,c
  3273  002432  320E               	rrcf	___ftmul@f1+1,f,c
  3274  002434  320D               	rrcf	___ftmul@f1,f,c
  3275  002436  90D8               	bcf	status,0,c
  3276  002438  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  3277  00243A  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  3278  00243C  3217               	rrcf	___ftmul@f3_as_product,f,c
  3279  00243E  2E1A               	decfsz	___ftmul@cntr,f,c
  3280  002440  D7ED               	goto	l1922
  3281  002442  D000               	goto	l1930
  3282  002444                     l1930:
  3283  002444  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3284  002448  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3285  00244C  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3286  002450  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3287  002454  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3288  002458  EC1A  F013         	call	___ftpack	;wreg free
  3289  00245C  C001  F00D         	movff	?___ftpack,?___ftmul
  3290  002460  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3291  002464  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3292  002468  D000               	goto	l656
  3293  00246A                     l656:
  3294  00246A  0012               	return		;funcret
  3295  00246C                     __end_of___ftmul:
  3296                           	opt stack 0
  3297                           tblptru	equ	0xFF8
  3298                           tblptrh	equ	0xFF7
  3299                           tblptrl	equ	0xFF6
  3300                           tablat	equ	0xFF5
  3301                           prodh	equ	0xFF4
  3302                           prodl	equ	0xFF3
  3303                           postinc0	equ	0xFEE
  3304                           wreg	equ	0xFE8
  3305                           postdec1	equ	0xFE5
  3306                           plusw1	equ	0xFE3
  3307                           fsr1l	equ	0xFE1
  3308                           indf2	equ	0xFDF
  3309                           postinc2	equ	0xFDE
  3310                           postdec2	equ	0xFDD
  3311                           plusw2	equ	0xFDB
  3312                           fsr2h	equ	0xFDA
  3313                           fsr2l	equ	0xFD9
  3314                           status	equ	0xFD8
  3315                           
  3316 ;; *************** function ___awmod *****************
  3317 ;; Defined at:
  3318 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;  dividend        2   42[COMRAM] int 
  3321 ;;  divisor         2   44[COMRAM] int 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;  sign            1   47[COMRAM] unsigned char 
  3324 ;;  counter         1   46[COMRAM] unsigned char 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  2   42[COMRAM] int 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;Total ram usage:        6 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_main
  3344 ;;		_fround
  3345 ;;		_scale
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text7
  3350  0028B2                     __ptext7:
  3351                           	opt stack 0
  3352  0028B2                     ___awmod:
  3353                           	opt stack 28
  3354                           
  3355                           ;incstack = 0
  3356  0028B2  0E00               	movlw	0
  3357  0028B4  6E30               	movwf	___awmod@sign,c
  3358  0028B6  AE2C               	btfss	___awmod@dividend+1,7,c
  3359  0028B8  D007               	goto	l1986
  3360  0028BA  6C2B               	negf	___awmod@dividend,c
  3361  0028BC  1E2C               	comf	___awmod@dividend+1,f,c
  3362  0028BE  B0D8               	btfsc	status,0,c
  3363  0028C0  2A2C               	incf	___awmod@dividend+1,f,c
  3364  0028C2  0E01               	movlw	1
  3365  0028C4  6E30               	movwf	___awmod@sign,c
  3366  0028C6  D000               	goto	l1986
  3367  0028C8                     l1986:
  3368  0028C8  AE2E               	btfss	___awmod@divisor+1,7,c
  3369  0028CA  D005               	goto	l1990
  3370  0028CC  6C2D               	negf	___awmod@divisor,c
  3371  0028CE  1E2E               	comf	___awmod@divisor+1,f,c
  3372  0028D0  B0D8               	btfsc	status,0,c
  3373  0028D2  2A2E               	incf	___awmod@divisor+1,f,c
  3374  0028D4  D000               	goto	l1990
  3375  0028D6                     l1990:
  3376  0028D6  502D               	movf	___awmod@divisor,w,c
  3377  0028D8  102E               	iorwf	___awmod@divisor+1,w,c
  3378  0028DA  B4D8               	btfsc	status,2,c
  3379  0028DC  D01D               	goto	l2006
  3380  0028DE  0E01               	movlw	1
  3381  0028E0  6E2F               	movwf	___awmod@counter,c
  3382  0028E2  D005               	goto	l1996
  3383  0028E4                     l1994:
  3384  0028E4  90D8               	bcf	status,0,c
  3385  0028E6  362D               	rlcf	___awmod@divisor,f,c
  3386  0028E8  362E               	rlcf	___awmod@divisor+1,f,c
  3387  0028EA  2A2F               	incf	___awmod@counter,f,c
  3388  0028EC  D000               	goto	l1996
  3389  0028EE                     l1996:
  3390  0028EE  BE2E               	btfsc	___awmod@divisor+1,7,c
  3391  0028F0  D002               	goto	l1998
  3392  0028F2  D7F8               	goto	l1994
  3393  0028F4  D000               	goto	l1998
  3394  0028F6                     l1998:
  3395  0028F6  502D               	movf	___awmod@divisor,w,c
  3396  0028F8  5C2B               	subwf	___awmod@dividend,w,c
  3397  0028FA  502E               	movf	___awmod@divisor+1,w,c
  3398  0028FC  582C               	subwfb	___awmod@dividend+1,w,c
  3399  0028FE  A0D8               	btfss	status,0,c
  3400  002900  D005               	goto	l2002
  3401  002902  502D               	movf	___awmod@divisor,w,c
  3402  002904  5E2B               	subwf	___awmod@dividend,f,c
  3403  002906  502E               	movf	___awmod@divisor+1,w,c
  3404  002908  5A2C               	subwfb	___awmod@dividend+1,f,c
  3405  00290A  D000               	goto	l2002
  3406  00290C                     l2002:
  3407  00290C  90D8               	bcf	status,0,c
  3408  00290E  322E               	rrcf	___awmod@divisor+1,f,c
  3409  002910  322D               	rrcf	___awmod@divisor,f,c
  3410  002912  2E2F               	decfsz	___awmod@counter,f,c
  3411  002914  D7F0               	goto	l1998
  3412  002916  D000               	goto	l2006
  3413  002918                     l2006:
  3414  002918  5030               	movf	___awmod@sign,w,c
  3415  00291A  B4D8               	btfsc	status,2,c
  3416  00291C  D005               	goto	l2010
  3417  00291E  6C2B               	negf	___awmod@dividend,c
  3418  002920  1E2C               	comf	___awmod@dividend+1,f,c
  3419  002922  B0D8               	btfsc	status,0,c
  3420  002924  2A2C               	incf	___awmod@dividend+1,f,c
  3421  002926  D000               	goto	l2010
  3422  002928                     l2010:
  3423  002928  C02B  F02B         	movff	___awmod@dividend,?___awmod
  3424  00292C  C02C  F02C         	movff	___awmod@dividend+1,?___awmod+1
  3425  002930  D000               	goto	l433
  3426  002932                     l433:
  3427  002932  0012               	return		;funcret
  3428  002934                     __end_of___awmod:
  3429                           	opt stack 0
  3430                           tblptru	equ	0xFF8
  3431                           tblptrh	equ	0xFF7
  3432                           tblptrl	equ	0xFF6
  3433                           tablat	equ	0xFF5
  3434                           prodh	equ	0xFF4
  3435                           prodl	equ	0xFF3
  3436                           postinc0	equ	0xFEE
  3437                           wreg	equ	0xFE8
  3438                           postdec1	equ	0xFE5
  3439                           plusw1	equ	0xFE3
  3440                           fsr1l	equ	0xFE1
  3441                           indf2	equ	0xFDF
  3442                           postinc2	equ	0xFDE
  3443                           postdec2	equ	0xFDD
  3444                           plusw2	equ	0xFDB
  3445                           fsr2h	equ	0xFDA
  3446                           fsr2l	equ	0xFD9
  3447                           status	equ	0xFD8
  3448                           
  3449 ;; *************** function ___awdiv *****************
  3450 ;; Defined at:
  3451 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  dividend        2   48[COMRAM] int 
  3454 ;;  divisor         2   50[COMRAM] int 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  quotient        2   54[COMRAM] int 
  3457 ;;  sign            1   53[COMRAM] unsigned char 
  3458 ;;  counter         1   52[COMRAM] unsigned char 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  2   48[COMRAM] int 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;Total ram usage:        8 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;;		_fround
  3479 ;;		_scale
  3480 ;;		_printf
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text8
  3485  0026FA                     __ptext8:
  3486                           	opt stack 0
  3487  0026FA                     ___awdiv:
  3488                           	opt stack 28
  3489                           
  3490                           ;incstack = 0
  3491  0026FA  0E00               	movlw	0
  3492  0026FC  6E36               	movwf	___awdiv@sign,c
  3493  0026FE  AE34               	btfss	___awdiv@divisor+1,7,c
  3494  002700  D007               	goto	l1942
  3495  002702  6C33               	negf	___awdiv@divisor,c
  3496  002704  1E34               	comf	___awdiv@divisor+1,f,c
  3497  002706  B0D8               	btfsc	status,0,c
  3498  002708  2A34               	incf	___awdiv@divisor+1,f,c
  3499  00270A  0E01               	movlw	1
  3500  00270C  6E36               	movwf	___awdiv@sign,c
  3501  00270E  D000               	goto	l1942
  3502  002710                     l1942:
  3503  002710  AE32               	btfss	___awdiv@dividend+1,7,c
  3504  002712  D007               	goto	l1948
  3505  002714  6C31               	negf	___awdiv@dividend,c
  3506  002716  1E32               	comf	___awdiv@dividend+1,f,c
  3507  002718  B0D8               	btfsc	status,0,c
  3508  00271A  2A32               	incf	___awdiv@dividend+1,f,c
  3509  00271C  0E01               	movlw	1
  3510  00271E  1A36               	xorwf	___awdiv@sign,f,c
  3511  002720  D000               	goto	l1948
  3512  002722                     l1948:
  3513  002722  0E00               	movlw	0
  3514  002724  6E38               	movwf	___awdiv@quotient+1,c
  3515  002726  0E00               	movlw	0
  3516  002728  6E37               	movwf	___awdiv@quotient,c
  3517  00272A  5033               	movf	___awdiv@divisor,w,c
  3518  00272C  1034               	iorwf	___awdiv@divisor+1,w,c
  3519  00272E  B4D8               	btfsc	status,2,c
  3520  002730  D021               	goto	l1970
  3521  002732  0E01               	movlw	1
  3522  002734  6E35               	movwf	___awdiv@counter,c
  3523  002736  D005               	goto	l1956
  3524  002738                     l1954:
  3525  002738  90D8               	bcf	status,0,c
  3526  00273A  3633               	rlcf	___awdiv@divisor,f,c
  3527  00273C  3634               	rlcf	___awdiv@divisor+1,f,c
  3528  00273E  2A35               	incf	___awdiv@counter,f,c
  3529  002740  D000               	goto	l1956
  3530  002742                     l1956:
  3531  002742  BE34               	btfsc	___awdiv@divisor+1,7,c
  3532  002744  D002               	goto	l1958
  3533  002746  D7F8               	goto	l1954
  3534  002748  D000               	goto	l1958
  3535  00274A                     l1958:
  3536  00274A  90D8               	bcf	status,0,c
  3537  00274C  3637               	rlcf	___awdiv@quotient,f,c
  3538  00274E  3638               	rlcf	___awdiv@quotient+1,f,c
  3539  002750  5033               	movf	___awdiv@divisor,w,c
  3540  002752  5C31               	subwf	___awdiv@dividend,w,c
  3541  002754  5034               	movf	___awdiv@divisor+1,w,c
  3542  002756  5832               	subwfb	___awdiv@dividend+1,w,c
  3543  002758  A0D8               	btfss	status,0,c
  3544  00275A  D006               	goto	l1966
  3545  00275C  5033               	movf	___awdiv@divisor,w,c
  3546  00275E  5E31               	subwf	___awdiv@dividend,f,c
  3547  002760  5034               	movf	___awdiv@divisor+1,w,c
  3548  002762  5A32               	subwfb	___awdiv@dividend+1,f,c
  3549  002764  8037               	bsf	___awdiv@quotient,0,c
  3550  002766  D000               	goto	l1966
  3551  002768                     l1966:
  3552  002768  90D8               	bcf	status,0,c
  3553  00276A  3234               	rrcf	___awdiv@divisor+1,f,c
  3554  00276C  3233               	rrcf	___awdiv@divisor,f,c
  3555  00276E  2E35               	decfsz	___awdiv@counter,f,c
  3556  002770  D7EC               	goto	l1958
  3557  002772  D000               	goto	l1970
  3558  002774                     l1970:
  3559  002774  5036               	movf	___awdiv@sign,w,c
  3560  002776  B4D8               	btfsc	status,2,c
  3561  002778  D005               	goto	l1974
  3562  00277A  6C37               	negf	___awdiv@quotient,c
  3563  00277C  1E38               	comf	___awdiv@quotient+1,f,c
  3564  00277E  B0D8               	btfsc	status,0,c
  3565  002780  2A38               	incf	___awdiv@quotient+1,f,c
  3566  002782  D000               	goto	l1974
  3567  002784                     l1974:
  3568  002784  C037  F031         	movff	___awdiv@quotient,?___awdiv
  3569  002788  C038  F032         	movff	___awdiv@quotient+1,?___awdiv+1
  3570  00278C  D000               	goto	l420
  3571  00278E                     l420:
  3572  00278E  0012               	return		;funcret
  3573  002790                     __end_of___awdiv:
  3574                           	opt stack 0
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           postinc0	equ	0xFEE
  3582                           wreg	equ	0xFE8
  3583                           postdec1	equ	0xFE5
  3584                           plusw1	equ	0xFE3
  3585                           fsr1l	equ	0xFE1
  3586                           indf2	equ	0xFDF
  3587                           postinc2	equ	0xFDE
  3588                           postdec2	equ	0xFDD
  3589                           plusw2	equ	0xFDB
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594 ;; *************** function __tdiv_to_l_ *****************
  3595 ;; Defined at:
  3596 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  f1              3    0[COMRAM] float 
  3599 ;;  f2              3    3[COMRAM] float 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  quot            4    9[COMRAM] unsigned long 
  3602 ;;  exp1            1   14[COMRAM] unsigned char 
  3603 ;;  cntr            1   13[COMRAM] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  4    0[COMRAM] unsigned long 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3613 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;Total ram usage:       15 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_printf
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text9
  3627  00215A                     __ptext9:
  3628                           	opt stack 0
  3629  00215A                     __tdiv_to_l_:
  3630                           	opt stack 29
  3631                           
  3632                           ;incstack = 0
  3633  00215A  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3634  00215E  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3635  002160  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3636  002162  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3637  002164  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3638  002166  E301               	bnc	u2071
  3639  002168  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3640  00216A                     u2071:
  3641  00216A  5007               	movf	??__tdiv_to_l_,w,c
  3642  00216C  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3643  00216E  500F               	movf	__tdiv_to_l_@exp1,w,c
  3644  002170  A4D8               	btfss	status,2,c
  3645  002172  D002               	goto	l2134
  3646  002174  D05D               	goto	l2176
  3647  002176  D078               	goto	l632
  3648  002178                     l2134:
  3649  002178  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3650  00217C  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3651  00217E  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3652  002180  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3653  002182  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3654  002184  E301               	bnc	u2091
  3655  002186  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3656  002188                     u2091:
  3657  002188  5007               	movf	??__tdiv_to_l_,w,c
  3658  00218A  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3659  00218C  500E               	movf	__tdiv_to_l_@cntr,w,c
  3660  00218E  A4D8               	btfss	status,2,c
  3661  002190  D002               	goto	l2140
  3662  002192  D04E               	goto	l2176
  3663  002194  D069               	goto	l632
  3664  002196                     l2140:
  3665  002196  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3666  002198  0EFF               	movlw	255
  3667  00219A  1601               	andwf	__tdiv_to_l_@f1,f,c
  3668  00219C  0EFF               	movlw	255
  3669  00219E  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3670  0021A0  0E00               	movlw	0
  3671  0021A2  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3672  0021A4  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3673  0021A6  0EFF               	movlw	255
  3674  0021A8  1604               	andwf	__tdiv_to_l_@f2,f,c
  3675  0021AA  0EFF               	movlw	255
  3676  0021AC  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3677  0021AE  0E00               	movlw	0
  3678  0021B0  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3679  0021B2  0E00               	movlw	0
  3680  0021B4  6E0A               	movwf	__tdiv_to_l_@quot,c
  3681  0021B6  0E00               	movlw	0
  3682  0021B8  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3683  0021BA  0E00               	movlw	0
  3684  0021BC  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3685  0021BE  0E00               	movlw	0
  3686  0021C0  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3687  0021C2  0E7F               	movlw	127
  3688  0021C4  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3689  0021C6  500E               	movf	__tdiv_to_l_@cntr,w,c
  3690  0021C8  0F98               	addlw	152
  3691  0021CA  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3692  0021CC  0E18               	movlw	24
  3693  0021CE  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3694  0021D0                     l634:
  3695  0021D0  90D8               	bcf	status,0,c
  3696  0021D2  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3697  0021D4  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3698  0021D6  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3699  0021D8  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3700  0021DA  5004               	movf	__tdiv_to_l_@f2,w,c
  3701  0021DC  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3702  0021DE  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3703  0021E0  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3704  0021E2  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3705  0021E4  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3706  0021E6  A0D8               	btfss	status,0,c
  3707  0021E8  D007               	goto	l635
  3708  0021EA  5004               	movf	__tdiv_to_l_@f2,w,c
  3709  0021EC  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3710  0021EE  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3711  0021F0  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3712  0021F2  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3713  0021F4  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3714  0021F6  800A               	bsf	__tdiv_to_l_@quot,0,c
  3715  0021F8                     l635:
  3716  0021F8  90D8               	bcf	status,0,c
  3717  0021FA  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3718  0021FC  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3719  0021FE  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3720  002200  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3721  002202  D7E6               	goto	l634
  3722  002204  D000               	goto	l2162
  3723  002206                     l2162:
  3724  002206  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3725  002208  D010               	goto	l2174
  3726  00220A  500F               	movf	__tdiv_to_l_@exp1,w,c
  3727  00220C  0A80               	xorlw	128
  3728  00220E  0F97               	addlw	151
  3729  002210  B0D8               	btfsc	status,0,c
  3730  002212  D003               	goto	l2170
  3731  002214  D00D               	goto	l2176
  3732  002216  D028               	goto	l632
  3733  002218  D000               	goto	l2170
  3734  00221A                     l2170:
  3735  00221A  90D8               	bcf	status,0,c
  3736  00221C  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3737  00221E  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3738  002220  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3739  002222  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3740  002224  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3741  002226  D7F9               	goto	l2170
  3742  002228  D017               	goto	l641
  3743  00222A                     l2174:
  3744  00222A  0E17               	movlw	23
  3745  00222C  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3746  00222E  D011               	goto	l2182
  3747  002230                     l2176:
  3748  002230  0E00               	movlw	0
  3749  002232  6E01               	movwf	?__tdiv_to_l_,c
  3750  002234  0E00               	movlw	0
  3751  002236  6E02               	movwf	?__tdiv_to_l_+1,c
  3752  002238  0E00               	movlw	0
  3753  00223A  6E03               	movwf	?__tdiv_to_l_+2,c
  3754  00223C  0E00               	movlw	0
  3755  00223E  6E04               	movwf	?__tdiv_to_l_+3,c
  3756  002240  D013               	goto	l632
  3757  002242  D007               	goto	l2182
  3758  002244                     l2180:
  3759  002244  90D8               	bcf	status,0,c
  3760  002246  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3761  002248  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3762  00224A  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3763  00224C  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3764  00224E  060F               	decf	__tdiv_to_l_@exp1,f,c
  3765  002250  D000               	goto	l2182
  3766  002252                     l2182:
  3767  002252  500F               	movf	__tdiv_to_l_@exp1,w,c
  3768  002254  A4D8               	btfss	status,2,c
  3769  002256  D7F6               	goto	l2180
  3770  002258                     l641:
  3771  002258  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3772  00225C  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3773  002260  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3774  002264  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3775  002268                     l632:
  3776  002268  0012               	return		;funcret
  3777  00226A                     __end_of__tdiv_to_l_:
  3778                           	opt stack 0
  3779                           tblptru	equ	0xFF8
  3780                           tblptrh	equ	0xFF7
  3781                           tblptrl	equ	0xFF6
  3782                           tablat	equ	0xFF5
  3783                           prodh	equ	0xFF4
  3784                           prodl	equ	0xFF3
  3785                           postinc0	equ	0xFEE
  3786                           wreg	equ	0xFE8
  3787                           postdec1	equ	0xFE5
  3788                           plusw1	equ	0xFE3
  3789                           fsr1l	equ	0xFE1
  3790                           indf2	equ	0xFDF
  3791                           postinc2	equ	0xFDE
  3792                           postdec2	equ	0xFDD
  3793                           plusw2	equ	0xFDB
  3794                           fsr2h	equ	0xFDA
  3795                           fsr2l	equ	0xFD9
  3796                           status	equ	0xFD8
  3797                           
  3798 ;; *************** function __div_to_l_ *****************
  3799 ;; Defined at:
  3800 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  f1              3    0[COMRAM] unsigned long 
  3803 ;;  f2              3    3[COMRAM] unsigned long 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  quot            4    6[COMRAM] unsigned long 
  3806 ;;  exp1            1   11[COMRAM] unsigned char 
  3807 ;;  cntr            1   10[COMRAM] unsigned char 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  4    0[COMRAM] unsigned long 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3817 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;Total ram usage:       12 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_printf
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text10
  3831  00226A                     __ptext10:
  3832                           	opt stack 0
  3833  00226A                     __div_to_l_:
  3834                           	opt stack 29
  3835                           
  3836                           ;incstack = 0
  3837  00226A  3403               	rlcf	__div_to_l_@f1+2,w,c
  3838  00226C  3404               	rlcf	__div_to_l_@f1+3,w,c
  3839  00226E  6E0C               	movwf	__div_to_l_@exp1,c
  3840  002270  500C               	movf	__div_to_l_@exp1,w,c
  3841  002272  A4D8               	btfss	status,2,c
  3842  002274  D002               	goto	l2190
  3843  002276  D061               	goto	l2236
  3844  002278  D07C               	goto	l511
  3845  00227A                     l2190:
  3846  00227A  3406               	rlcf	__div_to_l_@f2+2,w,c
  3847  00227C  3407               	rlcf	__div_to_l_@f2+3,w,c
  3848  00227E  6E0B               	movwf	__div_to_l_@cntr,c
  3849  002280  500B               	movf	__div_to_l_@cntr,w,c
  3850  002282  A4D8               	btfss	status,2,c
  3851  002284  D002               	goto	l2196
  3852  002286  D059               	goto	l2236
  3853  002288  D074               	goto	l511
  3854  00228A                     l2196:
  3855  00228A  8E03               	bsf	__div_to_l_@f1+2,7,c
  3856  00228C  0EFF               	movlw	255
  3857  00228E  1601               	andwf	__div_to_l_@f1,f,c
  3858  002290  0EFF               	movlw	255
  3859  002292  1602               	andwf	__div_to_l_@f1+1,f,c
  3860  002294  0EFF               	movlw	255
  3861  002296  1603               	andwf	__div_to_l_@f1+2,f,c
  3862  002298  0E00               	movlw	0
  3863  00229A  1604               	andwf	__div_to_l_@f1+3,f,c
  3864  00229C  8E06               	bsf	__div_to_l_@f2+2,7,c
  3865  00229E  0EFF               	movlw	255
  3866  0022A0  1604               	andwf	__div_to_l_@f2,f,c
  3867  0022A2  0EFF               	movlw	255
  3868  0022A4  1605               	andwf	__div_to_l_@f2+1,f,c
  3869  0022A6  0EFF               	movlw	255
  3870  0022A8  1606               	andwf	__div_to_l_@f2+2,f,c
  3871  0022AA  0E00               	movlw	0
  3872  0022AC  1607               	andwf	__div_to_l_@f2+3,f,c
  3873  0022AE  0E00               	movlw	0
  3874  0022B0  6E07               	movwf	__div_to_l_@quot,c
  3875  0022B2  0E00               	movlw	0
  3876  0022B4  6E08               	movwf	__div_to_l_@quot+1,c
  3877  0022B6  0E00               	movlw	0
  3878  0022B8  6E09               	movwf	__div_to_l_@quot+2,c
  3879  0022BA  0E00               	movlw	0
  3880  0022BC  6E0A               	movwf	__div_to_l_@quot+3,c
  3881  0022BE  0E7F               	movlw	127
  3882  0022C0  5E0C               	subwf	__div_to_l_@exp1,f,c
  3883  0022C2  500B               	movf	__div_to_l_@cntr,w,c
  3884  0022C4  0FA0               	addlw	160
  3885  0022C6  5E0C               	subwf	__div_to_l_@exp1,f,c
  3886  0022C8  0E20               	movlw	32
  3887  0022CA  6E0B               	movwf	__div_to_l_@cntr,c
  3888  0022CC  D000               	goto	l2210
  3889  0022CE                     l2210:
  3890  0022CE  90D8               	bcf	status,0,c
  3891  0022D0  3607               	rlcf	__div_to_l_@quot,f,c
  3892  0022D2  3608               	rlcf	__div_to_l_@quot+1,f,c
  3893  0022D4  3609               	rlcf	__div_to_l_@quot+2,f,c
  3894  0022D6  360A               	rlcf	__div_to_l_@quot+3,f,c
  3895  0022D8  5004               	movf	__div_to_l_@f2,w,c
  3896  0022DA  5C01               	subwf	__div_to_l_@f1,w,c
  3897  0022DC  5005               	movf	__div_to_l_@f2+1,w,c
  3898  0022DE  5802               	subwfb	__div_to_l_@f1+1,w,c
  3899  0022E0  5006               	movf	__div_to_l_@f2+2,w,c
  3900  0022E2  5803               	subwfb	__div_to_l_@f1+2,w,c
  3901  0022E4  5007               	movf	__div_to_l_@f2+3,w,c
  3902  0022E6  5804               	subwfb	__div_to_l_@f1+3,w,c
  3903  0022E8  A0D8               	btfss	status,0,c
  3904  0022EA  D00A               	goto	l2218
  3905  0022EC  5004               	movf	__div_to_l_@f2,w,c
  3906  0022EE  5E01               	subwf	__div_to_l_@f1,f,c
  3907  0022F0  5005               	movf	__div_to_l_@f2+1,w,c
  3908  0022F2  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3909  0022F4  5006               	movf	__div_to_l_@f2+2,w,c
  3910  0022F6  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3911  0022F8  5007               	movf	__div_to_l_@f2+3,w,c
  3912  0022FA  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3913  0022FC  8007               	bsf	__div_to_l_@quot,0,c
  3914  0022FE  D000               	goto	l2218
  3915  002300                     l2218:
  3916  002300  90D8               	bcf	status,0,c
  3917  002302  3601               	rlcf	__div_to_l_@f1,f,c
  3918  002304  3602               	rlcf	__div_to_l_@f1+1,f,c
  3919  002306  3603               	rlcf	__div_to_l_@f1+2,f,c
  3920  002308  3604               	rlcf	__div_to_l_@f1+3,f,c
  3921  00230A  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3922  00230C  D7E0               	goto	l2210
  3923  00230E  D000               	goto	l2222
  3924  002310                     l2222:
  3925  002310  AE0C               	btfss	__div_to_l_@exp1,7,c
  3926  002312  D010               	goto	l2234
  3927  002314  500C               	movf	__div_to_l_@exp1,w,c
  3928  002316  0A80               	xorlw	128
  3929  002318  0F9F               	addlw	159
  3930  00231A  B0D8               	btfsc	status,0,c
  3931  00231C  D003               	goto	l2230
  3932  00231E  D00D               	goto	l2236
  3933  002320  D028               	goto	l511
  3934  002322  D000               	goto	l2230
  3935  002324                     l2230:
  3936  002324  90D8               	bcf	status,0,c
  3937  002326  320A               	rrcf	__div_to_l_@quot+3,f,c
  3938  002328  3209               	rrcf	__div_to_l_@quot+2,f,c
  3939  00232A  3208               	rrcf	__div_to_l_@quot+1,f,c
  3940  00232C  3207               	rrcf	__div_to_l_@quot,f,c
  3941  00232E  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3942  002330  D7F9               	goto	l2230
  3943  002332  D017               	goto	l520
  3944  002334                     l2234:
  3945  002334  0E1F               	movlw	31
  3946  002336  640C               	cpfsgt	__div_to_l_@exp1,c
  3947  002338  D011               	goto	l2242
  3948  00233A                     l2236:
  3949  00233A  0E00               	movlw	0
  3950  00233C  6E01               	movwf	?__div_to_l_,c
  3951  00233E  0E00               	movlw	0
  3952  002340  6E02               	movwf	?__div_to_l_+1,c
  3953  002342  0E00               	movlw	0
  3954  002344  6E03               	movwf	?__div_to_l_+2,c
  3955  002346  0E00               	movlw	0
  3956  002348  6E04               	movwf	?__div_to_l_+3,c
  3957  00234A  D013               	goto	l511
  3958  00234C  D007               	goto	l2242
  3959  00234E                     l2240:
  3960  00234E  90D8               	bcf	status,0,c
  3961  002350  3607               	rlcf	__div_to_l_@quot,f,c
  3962  002352  3608               	rlcf	__div_to_l_@quot+1,f,c
  3963  002354  3609               	rlcf	__div_to_l_@quot+2,f,c
  3964  002356  360A               	rlcf	__div_to_l_@quot+3,f,c
  3965  002358  060C               	decf	__div_to_l_@exp1,f,c
  3966  00235A  D000               	goto	l2242
  3967  00235C                     l2242:
  3968  00235C  500C               	movf	__div_to_l_@exp1,w,c
  3969  00235E  A4D8               	btfss	status,2,c
  3970  002360  D7F6               	goto	l2240
  3971  002362                     l520:
  3972  002362  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3973  002366  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3974  00236A  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3975  00236E  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3976  002372                     l511:
  3977  002372  0012               	return		;funcret
  3978  002374                     __end_of__div_to_l_:
  3979                           	opt stack 0
  3980                           tblptru	equ	0xFF8
  3981                           tblptrh	equ	0xFF7
  3982                           tblptrl	equ	0xFF6
  3983                           tablat	equ	0xFF5
  3984                           prodh	equ	0xFF4
  3985                           prodl	equ	0xFF3
  3986                           postinc0	equ	0xFEE
  3987                           wreg	equ	0xFE8
  3988                           postdec1	equ	0xFE5
  3989                           plusw1	equ	0xFE3
  3990                           fsr1l	equ	0xFE1
  3991                           indf2	equ	0xFDF
  3992                           postinc2	equ	0xFDE
  3993                           postdec2	equ	0xFDD
  3994                           plusw2	equ	0xFDB
  3995                           fsr2h	equ	0xFDA
  3996                           fsr2l	equ	0xFD9
  3997                           status	equ	0xFD8
  3998                           
  3999 ;; *************** function ___lltoft *****************
  4000 ;; Defined at:
  4001 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  c               4    8[COMRAM] unsigned long 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  exp             1   16[COMRAM] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  3    8[COMRAM] float 
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4015 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;Total ram usage:        9 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    1
  4022 ;; This function calls:
  4023 ;;		___ftpack
  4024 ;; This function is called by:
  4025 ;;		_printf
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text11
  4030  002A14                     __ptext11:
  4031                           	opt stack 0
  4032  002A14                     ___lltoft:
  4033                           	opt stack 28
  4034                           
  4035                           ;incstack = 0
  4036  002A14  0E8E               	movlw	142
  4037  002A16  6E11               	movwf	___lltoft@exp,c
  4038  002A18  D007               	goto	l2362
  4039  002A1A                     l2360:
  4040  002A1A  90D8               	bcf	status,0,c
  4041  002A1C  320C               	rrcf	___lltoft@c+3,f,c
  4042  002A1E  320B               	rrcf	___lltoft@c+2,f,c
  4043  002A20  320A               	rrcf	___lltoft@c+1,f,c
  4044  002A22  3209               	rrcf	___lltoft@c,f,c
  4045  002A24  2A11               	incf	___lltoft@exp,f,c
  4046  002A26  D000               	goto	l2362
  4047  002A28                     l2362:
  4048  002A28  0E00               	movlw	0
  4049  002A2A  1409               	andwf	___lltoft@c,w,c
  4050  002A2C  6E0D               	movwf	??___lltoft& (0+255),c
  4051  002A2E  0E00               	movlw	0
  4052  002A30  140A               	andwf	___lltoft@c+1,w,c
  4053  002A32  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4054  002A34  0E00               	movlw	0
  4055  002A36  140B               	andwf	___lltoft@c+2,w,c
  4056  002A38  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4057  002A3A  0EFF               	movlw	255
  4058  002A3C  140C               	andwf	___lltoft@c+3,w,c
  4059  002A3E  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4060  002A40  500D               	movf	??___lltoft,w,c
  4061  002A42  100E               	iorwf	??___lltoft+1,w,c
  4062  002A44  100F               	iorwf	??___lltoft+2,w,c
  4063  002A46  1010               	iorwf	??___lltoft+3,w,c
  4064  002A48  A4D8               	btfss	status,2,c
  4065  002A4A  D7E7               	goto	l2360
  4066  002A4C  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4067  002A50  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4068  002A54  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4069  002A58  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4070  002A5C  0E00               	movlw	0
  4071  002A5E  6E05               	movwf	___ftpack@sign,c
  4072  002A60  EC1A  F013         	call	___ftpack	;wreg free
  4073  002A64  C001  F009         	movff	?___ftpack,?___lltoft
  4074  002A68  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4075  002A6C  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4076  002A70  D000               	goto	l746
  4077  002A72                     l746:
  4078  002A72  0012               	return		;funcret
  4079  002A74                     __end_of___lltoft:
  4080                           	opt stack 0
  4081                           tblptru	equ	0xFF8
  4082                           tblptrh	equ	0xFF7
  4083                           tblptrl	equ	0xFF6
  4084                           tablat	equ	0xFF5
  4085                           prodh	equ	0xFF4
  4086                           prodl	equ	0xFF3
  4087                           postinc0	equ	0xFEE
  4088                           wreg	equ	0xFE8
  4089                           postdec1	equ	0xFE5
  4090                           plusw1	equ	0xFE3
  4091                           fsr1l	equ	0xFE1
  4092                           indf2	equ	0xFDF
  4093                           postinc2	equ	0xFDE
  4094                           postdec2	equ	0xFDD
  4095                           plusw2	equ	0xFDB
  4096                           fsr2h	equ	0xFDA
  4097                           fsr2l	equ	0xFD9
  4098                           status	equ	0xFD8
  4099                           
  4100 ;; *************** function ___llmod *****************
  4101 ;; Defined at:
  4102 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  dividend        4    0[COMRAM] unsigned long 
  4105 ;;  divisor         4    4[COMRAM] unsigned long 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  counter         1    8[COMRAM] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  4    0[COMRAM] unsigned long 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4117 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;Total ram usage:        9 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		_printf
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text12
  4131  002934                     __ptext12:
  4132                           	opt stack 0
  4133  002934                     ___llmod:
  4134                           	opt stack 29
  4135                           
  4136                           ;incstack = 0
  4137  002934  5005               	movf	___llmod@divisor,w,c
  4138  002936  1006               	iorwf	___llmod@divisor+1,w,c
  4139  002938  1007               	iorwf	___llmod@divisor+2,w,c
  4140  00293A  1008               	iorwf	___llmod@divisor+3,w,c
  4141  00293C  B4D8               	btfsc	status,2,c
  4142  00293E  D029               	goto	l726
  4143  002940  0E01               	movlw	1
  4144  002942  6E09               	movwf	___llmod@counter,c
  4145  002944  D007               	goto	l2348
  4146  002946                     l2346:
  4147  002946  90D8               	bcf	status,0,c
  4148  002948  3605               	rlcf	___llmod@divisor,f,c
  4149  00294A  3606               	rlcf	___llmod@divisor+1,f,c
  4150  00294C  3607               	rlcf	___llmod@divisor+2,f,c
  4151  00294E  3608               	rlcf	___llmod@divisor+3,f,c
  4152  002950  2A09               	incf	___llmod@counter,f,c
  4153  002952  D000               	goto	l2348
  4154  002954                     l2348:
  4155  002954  BE08               	btfsc	___llmod@divisor+3,7,c
  4156  002956  D002               	goto	l2350
  4157  002958  D7F6               	goto	l2346
  4158  00295A  D000               	goto	l2350
  4159  00295C                     l2350:
  4160  00295C  5005               	movf	___llmod@divisor,w,c
  4161  00295E  5C01               	subwf	___llmod@dividend,w,c
  4162  002960  5006               	movf	___llmod@divisor+1,w,c
  4163  002962  5802               	subwfb	___llmod@dividend+1,w,c
  4164  002964  5007               	movf	___llmod@divisor+2,w,c
  4165  002966  5803               	subwfb	___llmod@dividend+2,w,c
  4166  002968  5008               	movf	___llmod@divisor+3,w,c
  4167  00296A  5804               	subwfb	___llmod@dividend+3,w,c
  4168  00296C  A0D8               	btfss	status,0,c
  4169  00296E  D009               	goto	l2354
  4170  002970  5005               	movf	___llmod@divisor,w,c
  4171  002972  5E01               	subwf	___llmod@dividend,f,c
  4172  002974  5006               	movf	___llmod@divisor+1,w,c
  4173  002976  5A02               	subwfb	___llmod@dividend+1,f,c
  4174  002978  5007               	movf	___llmod@divisor+2,w,c
  4175  00297A  5A03               	subwfb	___llmod@dividend+2,f,c
  4176  00297C  5008               	movf	___llmod@divisor+3,w,c
  4177  00297E  5A04               	subwfb	___llmod@dividend+3,f,c
  4178  002980  D000               	goto	l2354
  4179  002982                     l2354:
  4180  002982  90D8               	bcf	status,0,c
  4181  002984  3208               	rrcf	___llmod@divisor+3,f,c
  4182  002986  3207               	rrcf	___llmod@divisor+2,f,c
  4183  002988  3206               	rrcf	___llmod@divisor+1,f,c
  4184  00298A  3205               	rrcf	___llmod@divisor,f,c
  4185  00298C  2E09               	decfsz	___llmod@counter,f,c
  4186  00298E  D7E6               	goto	l2350
  4187  002990  D000               	goto	l726
  4188  002992                     l726:
  4189  002992  C001  F001         	movff	___llmod@dividend,?___llmod
  4190  002996  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4191  00299A  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4192  00299E  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4193  0029A2  0012               	return		;funcret
  4194  0029A4                     __end_of___llmod:
  4195                           	opt stack 0
  4196                           tblptru	equ	0xFF8
  4197                           tblptrh	equ	0xFF7
  4198                           tblptrl	equ	0xFF6
  4199                           tablat	equ	0xFF5
  4200                           prodh	equ	0xFF4
  4201                           prodl	equ	0xFF3
  4202                           postinc0	equ	0xFEE
  4203                           wreg	equ	0xFE8
  4204                           postdec1	equ	0xFE5
  4205                           plusw1	equ	0xFE3
  4206                           fsr1l	equ	0xFE1
  4207                           indf2	equ	0xFDF
  4208                           postinc2	equ	0xFDE
  4209                           postdec2	equ	0xFDD
  4210                           plusw2	equ	0xFDB
  4211                           fsr2h	equ	0xFDA
  4212                           fsr2l	equ	0xFD9
  4213                           status	equ	0xFD8
  4214                           
  4215 ;; *************** function ___lldiv *****************
  4216 ;; Defined at:
  4217 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  dividend        4    0[COMRAM] unsigned long 
  4220 ;;  divisor         4    4[COMRAM] unsigned long 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  quotient        4    8[COMRAM] unsigned long 
  4223 ;;  counter         1   12[COMRAM] unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  4    0[COMRAM] unsigned long 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4233 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;Total ram usage:       13 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_printf
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text13
  4247  002826                     __ptext13:
  4248                           	opt stack 0
  4249  002826                     ___lldiv:
  4250                           	opt stack 29
  4251                           
  4252                           ;incstack = 0
  4253  002826  0E00               	movlw	0
  4254  002828  6E09               	movwf	___lldiv@quotient,c
  4255  00282A  0E00               	movlw	0
  4256  00282C  6E0A               	movwf	___lldiv@quotient+1,c
  4257  00282E  0E00               	movlw	0
  4258  002830  6E0B               	movwf	___lldiv@quotient+2,c
  4259  002832  0E00               	movlw	0
  4260  002834  6E0C               	movwf	___lldiv@quotient+3,c
  4261  002836  5005               	movf	___lldiv@divisor,w,c
  4262  002838  1006               	iorwf	___lldiv@divisor+1,w,c
  4263  00283A  1007               	iorwf	___lldiv@divisor+2,w,c
  4264  00283C  1008               	iorwf	___lldiv@divisor+3,w,c
  4265  00283E  B4D8               	btfsc	status,2,c
  4266  002840  D02F               	goto	l716
  4267  002842  0E01               	movlw	1
  4268  002844  6E0D               	movwf	___lldiv@counter,c
  4269  002846  D007               	goto	l2328
  4270  002848                     l2326:
  4271  002848  90D8               	bcf	status,0,c
  4272  00284A  3605               	rlcf	___lldiv@divisor,f,c
  4273  00284C  3606               	rlcf	___lldiv@divisor+1,f,c
  4274  00284E  3607               	rlcf	___lldiv@divisor+2,f,c
  4275  002850  3608               	rlcf	___lldiv@divisor+3,f,c
  4276  002852  2A0D               	incf	___lldiv@counter,f,c
  4277  002854  D000               	goto	l2328
  4278  002856                     l2328:
  4279  002856  BE08               	btfsc	___lldiv@divisor+3,7,c
  4280  002858  D002               	goto	l2330
  4281  00285A  D7F6               	goto	l2326
  4282  00285C  D000               	goto	l2330
  4283  00285E                     l2330:
  4284  00285E  90D8               	bcf	status,0,c
  4285  002860  3609               	rlcf	___lldiv@quotient,f,c
  4286  002862  360A               	rlcf	___lldiv@quotient+1,f,c
  4287  002864  360B               	rlcf	___lldiv@quotient+2,f,c
  4288  002866  360C               	rlcf	___lldiv@quotient+3,f,c
  4289  002868  5005               	movf	___lldiv@divisor,w,c
  4290  00286A  5C01               	subwf	___lldiv@dividend,w,c
  4291  00286C  5006               	movf	___lldiv@divisor+1,w,c
  4292  00286E  5802               	subwfb	___lldiv@dividend+1,w,c
  4293  002870  5007               	movf	___lldiv@divisor+2,w,c
  4294  002872  5803               	subwfb	___lldiv@dividend+2,w,c
  4295  002874  5008               	movf	___lldiv@divisor+3,w,c
  4296  002876  5804               	subwfb	___lldiv@dividend+3,w,c
  4297  002878  A0D8               	btfss	status,0,c
  4298  00287A  D00A               	goto	l2338
  4299  00287C  5005               	movf	___lldiv@divisor,w,c
  4300  00287E  5E01               	subwf	___lldiv@dividend,f,c
  4301  002880  5006               	movf	___lldiv@divisor+1,w,c
  4302  002882  5A02               	subwfb	___lldiv@dividend+1,f,c
  4303  002884  5007               	movf	___lldiv@divisor+2,w,c
  4304  002886  5A03               	subwfb	___lldiv@dividend+2,f,c
  4305  002888  5008               	movf	___lldiv@divisor+3,w,c
  4306  00288A  5A04               	subwfb	___lldiv@dividend+3,f,c
  4307  00288C  8009               	bsf	___lldiv@quotient,0,c
  4308  00288E  D000               	goto	l2338
  4309  002890                     l2338:
  4310  002890  90D8               	bcf	status,0,c
  4311  002892  3208               	rrcf	___lldiv@divisor+3,f,c
  4312  002894  3207               	rrcf	___lldiv@divisor+2,f,c
  4313  002896  3206               	rrcf	___lldiv@divisor+1,f,c
  4314  002898  3205               	rrcf	___lldiv@divisor,f,c
  4315  00289A  2E0D               	decfsz	___lldiv@counter,f,c
  4316  00289C  D7E0               	goto	l2330
  4317  00289E  D000               	goto	l716
  4318  0028A0                     l716:
  4319  0028A0  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4320  0028A4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4321  0028A8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4322  0028AC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4323  0028B0  0012               	return		;funcret
  4324  0028B2                     __end_of___lldiv:
  4325                           	opt stack 0
  4326                           tblptru	equ	0xFF8
  4327                           tblptrh	equ	0xFF7
  4328                           tblptrl	equ	0xFF6
  4329                           tablat	equ	0xFF5
  4330                           prodh	equ	0xFF4
  4331                           prodl	equ	0xFF3
  4332                           postinc0	equ	0xFEE
  4333                           wreg	equ	0xFE8
  4334                           postdec1	equ	0xFE5
  4335                           plusw1	equ	0xFE3
  4336                           fsr1l	equ	0xFE1
  4337                           indf2	equ	0xFDF
  4338                           postinc2	equ	0xFDE
  4339                           postdec2	equ	0xFDD
  4340                           plusw2	equ	0xFDB
  4341                           fsr2h	equ	0xFDA
  4342                           fsr2l	equ	0xFD9
  4343                           status	equ	0xFD8
  4344                           
  4345 ;; *************** function ___fttol *****************
  4346 ;; Defined at:
  4347 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  f1              3   27[COMRAM] float 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  lval            4   37[COMRAM] unsigned long 
  4352 ;;  exp1            1   41[COMRAM] unsigned char 
  4353 ;;  sign1           1   36[COMRAM] unsigned char 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  4   27[COMRAM] long 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;Total ram usage:       15 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_main
  4373 ;;		_printf
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text14
  4378  00246C                     __ptext14:
  4379                           	opt stack 0
  4380  00246C                     ___fttol:
  4381                           	opt stack 29
  4382                           
  4383                           ;incstack = 0
  4384  00246C  C01E  F020         	movff	___fttol@f1+2,??___fttol
  4385  002470  6A21               	clrf	(??___fttol+1)& (0+255),c
  4386  002472  6A22               	clrf	(??___fttol+2)& (0+255),c
  4387  002474  341D               	rlcf	___fttol@f1+1,w,c
  4388  002476  3620               	rlcf	??___fttol& (0+255),f,c
  4389  002478  E301               	bnc	u2281
  4390  00247A  8021               	bsf	(??___fttol+1)& (0+255),0,c
  4391  00247C                     u2281:
  4392  00247C  5020               	movf	??___fttol,w,c
  4393  00247E  6E2A               	movwf	___fttol@exp1,c
  4394  002480  502A               	movf	___fttol@exp1,w,c
  4395  002482  A4D8               	btfss	status,2,c
  4396  002484  D002               	goto	l2280
  4397  002486  D039               	goto	l2304
  4398  002488  D063               	goto	l677
  4399  00248A                     l2280:
  4400  00248A  0E17               	movlw	23
  4401  00248C  6E20               	movwf	??___fttol& (0+255),c
  4402  00248E  C01C  F021         	movff	___fttol@f1,??___fttol+1
  4403  002492  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  4404  002496  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  4405  00249A  2820               	incf	??___fttol,w,c
  4406  00249C  6E24               	movwf	(??___fttol+4)& (0+255),c
  4407  00249E  D004               	goto	u2300
  4408  0024A0                     u2305:
  4409  0024A0  90D8               	bcf	status,0,c
  4410  0024A2  3223               	rrcf	??___fttol+3,f,c
  4411  0024A4  3222               	rrcf	??___fttol+2,f,c
  4412  0024A6  3221               	rrcf	??___fttol+1,f,c
  4413  0024A8                     u2300:
  4414  0024A8  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  4415  0024AA  D7FA               	goto	u2305
  4416  0024AC  5021               	movf	??___fttol+1,w,c
  4417  0024AE  6E25               	movwf	___fttol@sign1,c
  4418  0024B0  8E1D               	bsf	___fttol@f1+1,7,c
  4419  0024B2  0EFF               	movlw	255
  4420  0024B4  161C               	andwf	___fttol@f1,f,c
  4421  0024B6  0EFF               	movlw	255
  4422  0024B8  161D               	andwf	___fttol@f1+1,f,c
  4423  0024BA  0E00               	movlw	0
  4424  0024BC  161E               	andwf	___fttol@f1+2,f,c
  4425  0024BE  501C               	movf	___fttol@f1,w,c
  4426  0024C0  6E26               	movwf	___fttol@lval,c
  4427  0024C2  501D               	movf	___fttol@f1+1,w,c
  4428  0024C4  6E27               	movwf	___fttol@lval+1,c
  4429  0024C6  501E               	movf	___fttol@f1+2,w,c
  4430  0024C8  6E28               	movwf	___fttol@lval+2,c
  4431  0024CA  6A29               	clrf	___fttol@lval+3,c
  4432  0024CC  0E8E               	movlw	142
  4433  0024CE  5E2A               	subwf	___fttol@exp1,f,c
  4434  0024D0  AE2A               	btfss	___fttol@exp1,7,c
  4435  0024D2  D010               	goto	l2302
  4436  0024D4  502A               	movf	___fttol@exp1,w,c
  4437  0024D6  0A80               	xorlw	128
  4438  0024D8  0F8F               	addlw	143
  4439  0024DA  B0D8               	btfsc	status,0,c
  4440  0024DC  D003               	goto	l2298
  4441  0024DE  D00D               	goto	l2304
  4442  0024E0  D037               	goto	l677
  4443  0024E2  D000               	goto	l2298
  4444  0024E4                     l2298:
  4445  0024E4  90D8               	bcf	status,0,c
  4446  0024E6  3229               	rrcf	___fttol@lval+3,f,c
  4447  0024E8  3228               	rrcf	___fttol@lval+2,f,c
  4448  0024EA  3227               	rrcf	___fttol@lval+1,f,c
  4449  0024EC  3226               	rrcf	___fttol@lval,f,c
  4450  0024EE  3E2A               	incfsz	___fttol@exp1,f,c
  4451  0024F0  D7F9               	goto	l2298
  4452  0024F2  D019               	goto	l2312
  4453  0024F4                     l2302:
  4454  0024F4  0E17               	movlw	23
  4455  0024F6  642A               	cpfsgt	___fttol@exp1,c
  4456  0024F8  D011               	goto	l2310
  4457  0024FA                     l2304:
  4458  0024FA  0E00               	movlw	0
  4459  0024FC  6E1C               	movwf	?___fttol,c
  4460  0024FE  0E00               	movlw	0
  4461  002500  6E1D               	movwf	?___fttol+1,c
  4462  002502  0E00               	movlw	0
  4463  002504  6E1E               	movwf	?___fttol+2,c
  4464  002506  0E00               	movlw	0
  4465  002508  6E1F               	movwf	?___fttol+3,c
  4466  00250A  D022               	goto	l677
  4467  00250C  D007               	goto	l2310
  4468  00250E                     l2308:
  4469  00250E  90D8               	bcf	status,0,c
  4470  002510  3626               	rlcf	___fttol@lval,f,c
  4471  002512  3627               	rlcf	___fttol@lval+1,f,c
  4472  002514  3628               	rlcf	___fttol@lval+2,f,c
  4473  002516  3629               	rlcf	___fttol@lval+3,f,c
  4474  002518  062A               	decf	___fttol@exp1,f,c
  4475  00251A  D000               	goto	l2310
  4476  00251C                     l2310:
  4477  00251C  502A               	movf	___fttol@exp1,w,c
  4478  00251E  B4D8               	btfsc	status,2,c
  4479  002520  D002               	goto	l2312
  4480  002522  D7F5               	goto	l2308
  4481  002524  D000               	goto	l2312
  4482  002526                     l2312:
  4483  002526  5025               	movf	___fttol@sign1,w,c
  4484  002528  B4D8               	btfsc	status,2,c
  4485  00252A  D009               	goto	l2316
  4486  00252C  1E29               	comf	___fttol@lval+3,f,c
  4487  00252E  1E28               	comf	___fttol@lval+2,f,c
  4488  002530  1E27               	comf	___fttol@lval+1,f,c
  4489  002532  6C26               	negf	___fttol@lval,c
  4490  002534  0E00               	movlw	0
  4491  002536  2227               	addwfc	___fttol@lval+1,f,c
  4492  002538  2228               	addwfc	___fttol@lval+2,f,c
  4493  00253A  2229               	addwfc	___fttol@lval+3,f,c
  4494  00253C  D000               	goto	l2316
  4495  00253E                     l2316:
  4496  00253E  C026  F01C         	movff	___fttol@lval,?___fttol
  4497  002542  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  4498  002546  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  4499  00254A  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  4500  00254E  D000               	goto	l677
  4501  002550                     l677:
  4502  002550  0012               	return		;funcret
  4503  002552                     __end_of___fttol:
  4504                           	opt stack 0
  4505                           tblptru	equ	0xFF8
  4506                           tblptrh	equ	0xFF7
  4507                           tblptrl	equ	0xFF6
  4508                           tablat	equ	0xFF5
  4509                           prodh	equ	0xFF4
  4510                           prodl	equ	0xFF3
  4511                           postinc0	equ	0xFEE
  4512                           wreg	equ	0xFE8
  4513                           postdec1	equ	0xFE5
  4514                           plusw1	equ	0xFE3
  4515                           fsr1l	equ	0xFE1
  4516                           indf2	equ	0xFDF
  4517                           postinc2	equ	0xFDE
  4518                           postdec2	equ	0xFDD
  4519                           plusw2	equ	0xFDB
  4520                           fsr2h	equ	0xFDA
  4521                           fsr2l	equ	0xFD9
  4522                           status	equ	0xFD8
  4523                           
  4524 ;; *************** function ___ftsub *****************
  4525 ;; Defined at:
  4526 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  f1              3   84[COMRAM] float 
  4529 ;;  f2              3   87[COMRAM] float 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  3   84[COMRAM] float 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4541 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;Total ram usage:        6 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    2
  4548 ;; This function calls:
  4549 ;;		___ftadd
  4550 ;; This function is called by:
  4551 ;;		_printf
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text15
  4556  002A74                     __ptext15:
  4557                           	opt stack 0
  4558  002A74                     ___ftsub:
  4559                           	opt stack 27
  4560                           
  4561                           ;incstack = 0
  4562  002A74  5058               	movf	___ftsub@f2,w,c
  4563  002A76  1059               	iorwf	___ftsub@f2+1,w,c
  4564  002A78  105A               	iorwf	___ftsub@f2+2,w,c
  4565  002A7A  B4D8               	btfsc	status,2,c
  4566  002A7C  D007               	goto	l2248
  4567  002A7E  0E00               	movlw	0
  4568  002A80  1A58               	xorwf	___ftsub@f2,f,c
  4569  002A82  0E00               	movlw	0
  4570  002A84  1A59               	xorwf	___ftsub@f2+1,f,c
  4571  002A86  0E80               	movlw	128
  4572  002A88  1A5A               	xorwf	___ftsub@f2+2,f,c
  4573  002A8A  D000               	goto	l2248
  4574  002A8C                     l2248:
  4575  002A8C  C055  F049         	movff	___ftsub@f1,___ftadd@f1
  4576  002A90  C056  F04A         	movff	___ftsub@f1+1,___ftadd@f1+1
  4577  002A94  C057  F04B         	movff	___ftsub@f1+2,___ftadd@f1+2
  4578  002A98  C058  F04C         	movff	___ftsub@f2,___ftadd@f2
  4579  002A9C  C059  F04D         	movff	___ftsub@f2+1,___ftadd@f2+1
  4580  002AA0  C05A  F04E         	movff	___ftsub@f2+2,___ftadd@f2+2
  4581  002AA4  ECCB  F00F         	call	___ftadd	;wreg free
  4582  002AA8  C049  F055         	movff	?___ftadd,?___ftsub
  4583  002AAC  C04A  F056         	movff	?___ftadd+1,?___ftsub+1
  4584  002AB0  C04B  F057         	movff	?___ftadd+2,?___ftsub+2
  4585  002AB4  D000               	goto	l673
  4586  002AB6                     l673:
  4587  002AB6  0012               	return		;funcret
  4588  002AB8                     __end_of___ftsub:
  4589                           	opt stack 0
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           prodh	equ	0xFF4
  4595                           prodl	equ	0xFF3
  4596                           postinc0	equ	0xFEE
  4597                           wreg	equ	0xFE8
  4598                           postdec1	equ	0xFE5
  4599                           plusw1	equ	0xFE3
  4600                           fsr1l	equ	0xFE1
  4601                           indf2	equ	0xFDF
  4602                           postinc2	equ	0xFDE
  4603                           postdec2	equ	0xFDD
  4604                           plusw2	equ	0xFDB
  4605                           fsr2h	equ	0xFDA
  4606                           fsr2l	equ	0xFD9
  4607                           status	equ	0xFD8
  4608                           
  4609 ;; *************** function ___ftadd *****************
  4610 ;; Defined at:
  4611 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  f1              3   72[COMRAM] float 
  4614 ;;  f2              3   75[COMRAM] float 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  exp1            1   83[COMRAM] unsigned char 
  4617 ;;  exp2            1   82[COMRAM] unsigned char 
  4618 ;;  sign            1   81[COMRAM] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  3   72[COMRAM] float 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4628 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4629 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;Total ram usage:       12 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    1
  4635 ;; This function calls:
  4636 ;;		___ftpack
  4637 ;; This function is called by:
  4638 ;;		_main
  4639 ;;		_printf
  4640 ;;		___ftsub
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text16
  4645  001F96                     __ptext16:
  4646                           	opt stack 0
  4647  001F96                     ___ftadd:
  4648                           	opt stack 27
  4649                           
  4650                           ;incstack = 0
  4651  001F96  C04B  F04F         	movff	___ftadd@f1+2,??___ftadd
  4652  001F9A  6A50               	clrf	(??___ftadd+1)& (0+255),c
  4653  001F9C  6A51               	clrf	(??___ftadd+2)& (0+255),c
  4654  001F9E  344A               	rlcf	___ftadd@f1+1,w,c
  4655  001FA0  364F               	rlcf	??___ftadd& (0+255),f,c
  4656  001FA2  E301               	bnc	u1501
  4657  001FA4  8050               	bsf	(??___ftadd+1)& (0+255),0,c
  4658  001FA6                     u1501:
  4659  001FA6  504F               	movf	??___ftadd,w,c
  4660  001FA8  6E54               	movwf	___ftadd@exp1,c
  4661  001FAA  C04E  F04F         	movff	___ftadd@f2+2,??___ftadd
  4662  001FAE  6A50               	clrf	(??___ftadd+1)& (0+255),c
  4663  001FB0  6A51               	clrf	(??___ftadd+2)& (0+255),c
  4664  001FB2  344D               	rlcf	___ftadd@f2+1,w,c
  4665  001FB4  364F               	rlcf	??___ftadd& (0+255),f,c
  4666  001FB6  E301               	bnc	u1511
  4667  001FB8  8050               	bsf	(??___ftadd+1)& (0+255),0,c
  4668  001FBA                     u1511:
  4669  001FBA  504F               	movf	??___ftadd,w,c
  4670  001FBC  6E53               	movwf	___ftadd@exp2,c
  4671  001FBE  5054               	movf	___ftadd@exp1,w,c
  4672  001FC0  B4D8               	btfsc	status,2,c
  4673  001FC2  D00B               	goto	l592
  4674  001FC4  5053               	movf	___ftadd@exp2,w,c
  4675  001FC6  5C54               	subwf	___ftadd@exp1,w,c
  4676  001FC8  B0D8               	btfsc	status,0,c
  4677  001FCA  D00E               	goto	l1824
  4678  001FCC  5054               	movf	___ftadd@exp1,w,c
  4679  001FCE  0800               	sublw	0
  4680  001FD0  2453               	addwf	___ftadd@exp2,w,c
  4681  001FD2  6E4F               	movwf	??___ftadd& (0+255),c
  4682  001FD4  0E18               	movlw	24
  4683  001FD6  644F               	cpfsgt	??___ftadd,c
  4684  001FD8  D007               	goto	l1824
  4685  001FDA                     l592:
  4686  001FDA  C04C  F049         	movff	___ftadd@f2,?___ftadd
  4687  001FDE  C04D  F04A         	movff	___ftadd@f2+1,?___ftadd+1
  4688  001FE2  C04E  F04B         	movff	___ftadd@f2+2,?___ftadd+2
  4689  001FE6  D0B8               	goto	l593
  4690  001FE8                     l1824:
  4691  001FE8  5053               	movf	___ftadd@exp2,w,c
  4692  001FEA  B4D8               	btfsc	status,2,c
  4693  001FEC  D00B               	goto	l596
  4694  001FEE  5054               	movf	___ftadd@exp1,w,c
  4695  001FF0  5C53               	subwf	___ftadd@exp2,w,c
  4696  001FF2  B0D8               	btfsc	status,0,c
  4697  001FF4  D00E               	goto	l1830
  4698  001FF6  5053               	movf	___ftadd@exp2,w,c
  4699  001FF8  0800               	sublw	0
  4700  001FFA  2454               	addwf	___ftadd@exp1,w,c
  4701  001FFC  6E4F               	movwf	??___ftadd& (0+255),c
  4702  001FFE  0E18               	movlw	24
  4703  002000  644F               	cpfsgt	??___ftadd,c
  4704  002002  D007               	goto	l1830
  4705  002004                     l596:
  4706  002004  C049  F049         	movff	___ftadd@f1,?___ftadd
  4707  002008  C04A  F04A         	movff	___ftadd@f1+1,?___ftadd+1
  4708  00200C  C04B  F04B         	movff	___ftadd@f1+2,?___ftadd+2
  4709  002010  D0A3               	goto	l593
  4710  002012                     l1830:
  4711  002012  0E06               	movlw	6
  4712  002014  6E52               	movwf	___ftadd@sign,c
  4713  002016  AE4B               	btfss	___ftadd@f1+2,7,c
  4714  002018  D002               	goto	l1836
  4715  00201A  8E52               	bsf	___ftadd@sign,7,c
  4716  00201C  D000               	goto	l1836
  4717  00201E                     l1836:
  4718  00201E  BE4E               	btfsc	___ftadd@f2+2,7,c
  4719  002020  8C52               	bsf	___ftadd@sign,6,c
  4720  002022  8E4A               	bsf	___ftadd@f1+1,7,c
  4721  002024  0EFF               	movlw	255
  4722  002026  1649               	andwf	___ftadd@f1,f,c
  4723  002028  0EFF               	movlw	255
  4724  00202A  164A               	andwf	___ftadd@f1+1,f,c
  4725  00202C  0E00               	movlw	0
  4726  00202E  164B               	andwf	___ftadd@f1+2,f,c
  4727  002030  8E4D               	bsf	___ftadd@f2+1,7,c
  4728  002032  0EFF               	movlw	255
  4729  002034  164C               	andwf	___ftadd@f2,f,c
  4730  002036  0EFF               	movlw	255
  4731  002038  164D               	andwf	___ftadd@f2+1,f,c
  4732  00203A  0E00               	movlw	0
  4733  00203C  164E               	andwf	___ftadd@f2+2,f,c
  4734  00203E  5053               	movf	___ftadd@exp2,w,c
  4735  002040  5C54               	subwf	___ftadd@exp1,w,c
  4736  002042  B0D8               	btfsc	status,0,c
  4737  002044  D01E               	goto	l1856
  4738  002046                     l1846:
  4739  002046  90D8               	bcf	status,0,c
  4740  002048  364C               	rlcf	___ftadd@f2,f,c
  4741  00204A  364D               	rlcf	___ftadd@f2+1,f,c
  4742  00204C  364E               	rlcf	___ftadd@f2+2,f,c
  4743  00204E  0653               	decf	___ftadd@exp2,f,c
  4744  002050  5054               	movf	___ftadd@exp1,w,c
  4745  002052  1853               	xorwf	___ftadd@exp2,w,c
  4746  002054  B4D8               	btfsc	status,2,c
  4747  002056  D00F               	goto	l1854
  4748  002058  0652               	decf	___ftadd@sign,f,c
  4749  00205A  C052  F04F         	movff	___ftadd@sign,??___ftadd
  4750  00205E  0E07               	movlw	7
  4751  002060  164F               	andwf	??___ftadd,f,c
  4752  002062  B4D8               	btfsc	status,2,c
  4753  002064  D008               	goto	l1854
  4754  002066  D7EF               	goto	l1846
  4755  002068  D006               	goto	l1854
  4756  00206A                     l1852:
  4757  00206A  90D8               	bcf	status,0,c
  4758  00206C  324B               	rrcf	___ftadd@f1+2,f,c
  4759  00206E  324A               	rrcf	___ftadd@f1+1,f,c
  4760  002070  3249               	rrcf	___ftadd@f1,f,c
  4761  002072  2A54               	incf	___ftadd@exp1,f,c
  4762  002074  D000               	goto	l1854
  4763  002076                     l1854:
  4764  002076  5053               	movf	___ftadd@exp2,w,c
  4765  002078  1854               	xorwf	___ftadd@exp1,w,c
  4766  00207A  B4D8               	btfsc	status,2,c
  4767  00207C  D024               	goto	l607
  4768  00207E  D7F5               	goto	l1852
  4769  002080  D022               	goto	l607
  4770  002082                     l1856:
  4771  002082  5054               	movf	___ftadd@exp1,w,c
  4772  002084  5C53               	subwf	___ftadd@exp2,w,c
  4773  002086  B0D8               	btfsc	status,0,c
  4774  002088  D01E               	goto	l607
  4775  00208A                     l1858:
  4776  00208A  90D8               	bcf	status,0,c
  4777  00208C  3649               	rlcf	___ftadd@f1,f,c
  4778  00208E  364A               	rlcf	___ftadd@f1+1,f,c
  4779  002090  364B               	rlcf	___ftadd@f1+2,f,c
  4780  002092  0654               	decf	___ftadd@exp1,f,c
  4781  002094  5054               	movf	___ftadd@exp1,w,c
  4782  002096  1853               	xorwf	___ftadd@exp2,w,c
  4783  002098  B4D8               	btfsc	status,2,c
  4784  00209A  D00F               	goto	l1866
  4785  00209C  0652               	decf	___ftadd@sign,f,c
  4786  00209E  C052  F04F         	movff	___ftadd@sign,??___ftadd
  4787  0020A2  0E07               	movlw	7
  4788  0020A4  164F               	andwf	??___ftadd,f,c
  4789  0020A6  B4D8               	btfsc	status,2,c
  4790  0020A8  D008               	goto	l1866
  4791  0020AA  D7EF               	goto	l1858
  4792  0020AC  D006               	goto	l1866
  4793  0020AE                     l1864:
  4794  0020AE  90D8               	bcf	status,0,c
  4795  0020B0  324E               	rrcf	___ftadd@f2+2,f,c
  4796  0020B2  324D               	rrcf	___ftadd@f2+1,f,c
  4797  0020B4  324C               	rrcf	___ftadd@f2,f,c
  4798  0020B6  2A53               	incf	___ftadd@exp2,f,c
  4799  0020B8  D000               	goto	l1866
  4800  0020BA                     l1866:
  4801  0020BA  5053               	movf	___ftadd@exp2,w,c
  4802  0020BC  1854               	xorwf	___ftadd@exp1,w,c
  4803  0020BE  B4D8               	btfsc	status,2,c
  4804  0020C0  D002               	goto	l607
  4805  0020C2  D7F5               	goto	l1864
  4806  0020C4  D000               	goto	l607
  4807  0020C6                     l607:
  4808  0020C6  AE52               	btfss	___ftadd@sign,7,c
  4809  0020C8  D00C               	goto	l616
  4810  0020CA  0EFF               	movlw	255
  4811  0020CC  1A49               	xorwf	___ftadd@f1,f,c
  4812  0020CE  0EFF               	movlw	255
  4813  0020D0  1A4A               	xorwf	___ftadd@f1+1,f,c
  4814  0020D2  0EFF               	movlw	255
  4815  0020D4  1A4B               	xorwf	___ftadd@f1+2,f,c
  4816  0020D6  0E01               	movlw	1
  4817  0020D8  2649               	addwf	___ftadd@f1,f,c
  4818  0020DA  0E00               	movlw	0
  4819  0020DC  224A               	addwfc	___ftadd@f1+1,f,c
  4820  0020DE  0E00               	movlw	0
  4821  0020E0  224B               	addwfc	___ftadd@f1+2,f,c
  4822  0020E2                     l616:
  4823  0020E2  AC52               	btfss	___ftadd@sign,6,c
  4824  0020E4  D00D               	goto	l1872
  4825  0020E6  0EFF               	movlw	255
  4826  0020E8  1A4C               	xorwf	___ftadd@f2,f,c
  4827  0020EA  0EFF               	movlw	255
  4828  0020EC  1A4D               	xorwf	___ftadd@f2+1,f,c
  4829  0020EE  0EFF               	movlw	255
  4830  0020F0  1A4E               	xorwf	___ftadd@f2+2,f,c
  4831  0020F2  0E01               	movlw	1
  4832  0020F4  264C               	addwf	___ftadd@f2,f,c
  4833  0020F6  0E00               	movlw	0
  4834  0020F8  224D               	addwfc	___ftadd@f2+1,f,c
  4835  0020FA  0E00               	movlw	0
  4836  0020FC  224E               	addwfc	___ftadd@f2+2,f,c
  4837  0020FE  D000               	goto	l1872
  4838  002100                     l1872:
  4839  002100  0E00               	movlw	0
  4840  002102  6E52               	movwf	___ftadd@sign,c
  4841  002104  5049               	movf	___ftadd@f1,w,c
  4842  002106  264C               	addwf	___ftadd@f2,f,c
  4843  002108  504A               	movf	___ftadd@f1+1,w,c
  4844  00210A  224D               	addwfc	___ftadd@f2+1,f,c
  4845  00210C  504B               	movf	___ftadd@f1+2,w,c
  4846  00210E  224E               	addwfc	___ftadd@f2+2,f,c
  4847  002110  AE4E               	btfss	___ftadd@f2+2,7,c
  4848  002112  D00F               	goto	l1882
  4849  002114  0EFF               	movlw	255
  4850  002116  1A4C               	xorwf	___ftadd@f2,f,c
  4851  002118  0EFF               	movlw	255
  4852  00211A  1A4D               	xorwf	___ftadd@f2+1,f,c
  4853  00211C  0EFF               	movlw	255
  4854  00211E  1A4E               	xorwf	___ftadd@f2+2,f,c
  4855  002120  0E01               	movlw	1
  4856  002122  264C               	addwf	___ftadd@f2,f,c
  4857  002124  0E00               	movlw	0
  4858  002126  224D               	addwfc	___ftadd@f2+1,f,c
  4859  002128  0E00               	movlw	0
  4860  00212A  224E               	addwfc	___ftadd@f2+2,f,c
  4861  00212C  0E01               	movlw	1
  4862  00212E  6E52               	movwf	___ftadd@sign,c
  4863  002130  D000               	goto	l1882
  4864  002132                     l1882:
  4865  002132  C04C  F001         	movff	___ftadd@f2,___ftpack@arg
  4866  002136  C04D  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4867  00213A  C04E  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4868  00213E  C054  F004         	movff	___ftadd@exp1,___ftpack@exp
  4869  002142  C052  F005         	movff	___ftadd@sign,___ftpack@sign
  4870  002146  EC1A  F013         	call	___ftpack	;wreg free
  4871  00214A  C001  F049         	movff	?___ftpack,?___ftadd
  4872  00214E  C002  F04A         	movff	?___ftpack+1,?___ftadd+1
  4873  002152  C003  F04B         	movff	?___ftpack+2,?___ftadd+2
  4874  002156  D000               	goto	l593
  4875  002158                     l593:
  4876  002158  0012               	return		;funcret
  4877  00215A                     __end_of___ftadd:
  4878                           	opt stack 0
  4879                           tblptru	equ	0xFF8
  4880                           tblptrh	equ	0xFF7
  4881                           tblptrl	equ	0xFF6
  4882                           tablat	equ	0xFF5
  4883                           prodh	equ	0xFF4
  4884                           prodl	equ	0xFF3
  4885                           postinc0	equ	0xFEE
  4886                           wreg	equ	0xFE8
  4887                           postdec1	equ	0xFE5
  4888                           plusw1	equ	0xFE3
  4889                           fsr1l	equ	0xFE1
  4890                           indf2	equ	0xFDF
  4891                           postinc2	equ	0xFDE
  4892                           postdec2	equ	0xFDD
  4893                           plusw2	equ	0xFDB
  4894                           fsr2h	equ	0xFDA
  4895                           fsr2l	equ	0xFD9
  4896                           status	equ	0xFD8
  4897                           
  4898 ;; *************** function ___ftneg *****************
  4899 ;; Defined at:
  4900 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  f1              3    0[COMRAM] float 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  3    0[COMRAM] float 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4914 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;Total ram usage:        3 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_main
  4924 ;;		_printf
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text17
  4929  002B6C                     __ptext17:
  4930                           	opt stack 0
  4931  002B6C                     ___ftneg:
  4932                           	opt stack 29
  4933                           
  4934                           ;incstack = 0
  4935  002B6C  5001               	movf	___ftneg@f1,w,c
  4936  002B6E  1002               	iorwf	___ftneg@f1+1,w,c
  4937  002B70  1003               	iorwf	___ftneg@f1+2,w,c
  4938  002B72  B4D8               	btfsc	status,2,c
  4939  002B74  D006               	goto	l666
  4940  002B76  0E00               	movlw	0
  4941  002B78  1A01               	xorwf	___ftneg@f1,f,c
  4942  002B7A  0E00               	movlw	0
  4943  002B7C  1A02               	xorwf	___ftneg@f1+1,f,c
  4944  002B7E  0E80               	movlw	128
  4945  002B80  1A03               	xorwf	___ftneg@f1+2,f,c
  4946  002B82                     l666:
  4947  002B82  C001  F001         	movff	___ftneg@f1,?___ftneg
  4948  002B86  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4949  002B8A  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4950  002B8E  0012               	return		;funcret
  4951  002B90                     __end_of___ftneg:
  4952                           	opt stack 0
  4953                           tblptru	equ	0xFF8
  4954                           tblptrh	equ	0xFF7
  4955                           tblptrl	equ	0xFF6
  4956                           tablat	equ	0xFF5
  4957                           prodh	equ	0xFF4
  4958                           prodl	equ	0xFF3
  4959                           postinc0	equ	0xFEE
  4960                           wreg	equ	0xFE8
  4961                           postdec1	equ	0xFE5
  4962                           plusw1	equ	0xFE3
  4963                           fsr1l	equ	0xFE1
  4964                           indf2	equ	0xFDF
  4965                           postinc2	equ	0xFDE
  4966                           postdec2	equ	0xFDD
  4967                           plusw2	equ	0xFDB
  4968                           fsr2h	equ	0xFDA
  4969                           fsr2l	equ	0xFD9
  4970                           status	equ	0xFD8
  4971                           
  4972 ;; *************** function ___ftge *****************
  4973 ;; Defined at:
  4974 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  ff1             3    0[COMRAM] float 
  4977 ;;  ff2             3    3[COMRAM] float 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;		None
  4980 ;; Return value:  Size  Location     Type
  4981 ;;		None               void
  4982 ;; Registers used:
  4983 ;;		wreg, status,2, status,0
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4989 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;Total ram usage:        9 bytes
  4994 ;; Hardware stack levels used:    1
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_main
  4999 ;;		_printf
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text18
  5004  002790                     __ptext18:
  5005                           	opt stack 0
  5006  002790                     ___ftge:
  5007                           	opt stack 29
  5008                           
  5009                           ;incstack = 0
  5010  002790  AE03               	btfss	___ftge@ff1+2,7,c
  5011  002792  D017               	goto	l2256
  5012  002794  C001  F007         	movff	___ftge@ff1,??___ftge
  5013  002798  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5014  00279C  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5015  0027A0  1E07               	comf	??___ftge,f,c
  5016  0027A2  1E08               	comf	??___ftge+1,f,c
  5017  0027A4  1E09               	comf	??___ftge+2,f,c
  5018  0027A6  2A07               	incf	??___ftge,f,c
  5019  0027A8  0E00               	movlw	0
  5020  0027AA  2208               	addwfc	??___ftge+1,f,c
  5021  0027AC  2209               	addwfc	??___ftge+2,f,c
  5022  0027AE  0E00               	movlw	0
  5023  0027B0  2407               	addwf	??___ftge,w,c
  5024  0027B2  6E01               	movwf	___ftge@ff1,c
  5025  0027B4  0E00               	movlw	0
  5026  0027B6  2008               	addwfc	??___ftge+1,w,c
  5027  0027B8  6E02               	movwf	___ftge@ff1+1,c
  5028  0027BA  0E80               	movlw	128
  5029  0027BC  2009               	addwfc	??___ftge+2,w,c
  5030  0027BE  6E03               	movwf	___ftge@ff1+2,c
  5031  0027C0  D000               	goto	l2256
  5032  0027C2                     l2256:
  5033  0027C2  AE06               	btfss	___ftge@ff2+2,7,c
  5034  0027C4  D017               	goto	l2260
  5035  0027C6  C004  F007         	movff	___ftge@ff2,??___ftge
  5036  0027CA  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5037  0027CE  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5038  0027D2  1E07               	comf	??___ftge,f,c
  5039  0027D4  1E08               	comf	??___ftge+1,f,c
  5040  0027D6  1E09               	comf	??___ftge+2,f,c
  5041  0027D8  2A07               	incf	??___ftge,f,c
  5042  0027DA  0E00               	movlw	0
  5043  0027DC  2208               	addwfc	??___ftge+1,f,c
  5044  0027DE  2209               	addwfc	??___ftge+2,f,c
  5045  0027E0  0E00               	movlw	0
  5046  0027E2  2407               	addwf	??___ftge,w,c
  5047  0027E4  6E04               	movwf	___ftge@ff2,c
  5048  0027E6  0E00               	movlw	0
  5049  0027E8  2008               	addwfc	??___ftge+1,w,c
  5050  0027EA  6E05               	movwf	___ftge@ff2+1,c
  5051  0027EC  0E80               	movlw	128
  5052  0027EE  2009               	addwfc	??___ftge+2,w,c
  5053  0027F0  6E06               	movwf	___ftge@ff2+2,c
  5054  0027F2  D000               	goto	l2260
  5055  0027F4                     l2260:
  5056  0027F4  0E00               	movlw	0
  5057  0027F6  1A01               	xorwf	___ftge@ff1,f,c
  5058  0027F8  0E00               	movlw	0
  5059  0027FA  1A02               	xorwf	___ftge@ff1+1,f,c
  5060  0027FC  0E80               	movlw	128
  5061  0027FE  1A03               	xorwf	___ftge@ff1+2,f,c
  5062  002800  0E00               	movlw	0
  5063  002802  1A04               	xorwf	___ftge@ff2,f,c
  5064  002804  0E00               	movlw	0
  5065  002806  1A05               	xorwf	___ftge@ff2+1,f,c
  5066  002808  0E80               	movlw	128
  5067  00280A  1A06               	xorwf	___ftge@ff2+2,f,c
  5068  00280C  5004               	movf	___ftge@ff2,w,c
  5069  00280E  5C01               	subwf	___ftge@ff1,w,c
  5070  002810  5005               	movf	___ftge@ff2+1,w,c
  5071  002812  5802               	subwfb	___ftge@ff1+1,w,c
  5072  002814  5006               	movf	___ftge@ff2+2,w,c
  5073  002816  5803               	subwfb	___ftge@ff1+2,w,c
  5074  002818  B0D8               	btfsc	status,0,c
  5075  00281A  D002               	goto	l2266
  5076  00281C  90D8               	bcf	status,0,c
  5077  00281E  D002               	goto	l650
  5078  002820                     l2266:
  5079  002820  80D8               	bsf	status,0,c
  5080  002822  D000               	goto	l650
  5081  002824                     l650:
  5082  002824  0012               	return		;funcret
  5083  002826                     __end_of___ftge:
  5084                           	opt stack 0
  5085                           tblptru	equ	0xFF8
  5086                           tblptrh	equ	0xFF7
  5087                           tblptrl	equ	0xFF6
  5088                           tablat	equ	0xFF5
  5089                           prodh	equ	0xFF4
  5090                           prodl	equ	0xFF3
  5091                           postinc0	equ	0xFEE
  5092                           wreg	equ	0xFE8
  5093                           postdec1	equ	0xFE5
  5094                           plusw1	equ	0xFE3
  5095                           fsr1l	equ	0xFE1
  5096                           indf2	equ	0xFDF
  5097                           postinc2	equ	0xFDE
  5098                           postdec2	equ	0xFDD
  5099                           plusw2	equ	0xFDB
  5100                           fsr2h	equ	0xFDA
  5101                           fsr2l	equ	0xFD9
  5102                           status	equ	0xFD8
  5103                           
  5104 ;; *************** function _get_full_ADC *****************
  5105 ;; Defined at:
  5106 ;;		line 117 in file "Lab6pB3.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;		None
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  result          2    4[COMRAM] int 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  2    0[COMRAM] unsigned int 
  5113 ;; Registers used:
  5114 ;;		wreg, status,2, status,0
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5121 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;Total ram usage:        6 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; This function calls:
  5127 ;;		Nothing
  5128 ;; This function is called by:
  5129 ;;		_main
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text19
  5134  002B46                     __ptext19:
  5135                           	opt stack 0
  5136  002B46                     _get_full_ADC:
  5137                           	opt stack 30
  5138                           
  5139                           ;Lab6pB3.c: 119: int result;
  5140                           ;Lab6pB3.c: 120: ADCON0bits.GO=1;
  5141                           
  5142                           ;incstack = 0
  5143  002B46  82C2               	bsf	4034,1,c	;volatile
  5144                           
  5145                           ;Lab6pB3.c: 121: while(ADCON0bits.DONE==1);
  5146  002B48  D000               	goto	l96
  5147  002B4A                     l96:
  5148  002B4A  B2C2               	btfsc	4034,1,c	;volatile
  5149  002B4C  D7FE               	goto	l96
  5150                           
  5151                           ;Lab6pB3.c: 122: result = (ADRESH * 0x100) + ADRESL;
  5152  002B4E  50C4               	movf	4036,w,c	;volatile
  5153  002B50  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5154  002B52  6A03               	clrf	??_get_full_ADC& (0+255),c
  5155  002B54  50C3               	movf	4035,w,c	;volatile
  5156  002B56  2403               	addwf	??_get_full_ADC,w,c
  5157  002B58  6E05               	movwf	get_full_ADC@result,c
  5158  002B5A  0E00               	movlw	0
  5159  002B5C  2004               	addwfc	??_get_full_ADC+1,w,c
  5160  002B5E  6E06               	movwf	get_full_ADC@result+1,c
  5161                           
  5162                           ;Lab6pB3.c: 124: return result;
  5163  002B60  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5164  002B64  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5165  002B68  D000               	goto	l99
  5166  002B6A                     l99:
  5167  002B6A  0012               	return		;funcret
  5168  002B6C                     __end_of_get_full_ADC:
  5169                           	opt stack 0
  5170                           tblptru	equ	0xFF8
  5171                           tblptrh	equ	0xFF7
  5172                           tblptrl	equ	0xFF6
  5173                           tablat	equ	0xFF5
  5174                           prodh	equ	0xFF4
  5175                           prodl	equ	0xFF3
  5176                           postinc0	equ	0xFEE
  5177                           wreg	equ	0xFE8
  5178                           postdec1	equ	0xFE5
  5179                           plusw1	equ	0xFE3
  5180                           fsr1l	equ	0xFE1
  5181                           indf2	equ	0xFDF
  5182                           postinc2	equ	0xFDE
  5183                           postdec2	equ	0xFDD
  5184                           plusw2	equ	0xFDB
  5185                           fsr2h	equ	0xFDA
  5186                           fsr2l	equ	0xFD9
  5187                           status	equ	0xFD8
  5188                           
  5189 ;; *************** function ___ftdiv *****************
  5190 ;; Defined at:
  5191 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  f1              3   84[COMRAM] float 
  5194 ;;  f2              3   87[COMRAM] float 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;  f3              3   94[COMRAM] float 
  5197 ;;  sign            1   98[COMRAM] unsigned char 
  5198 ;;  exp             1   97[COMRAM] unsigned char 
  5199 ;;  cntr            1   93[COMRAM] unsigned char 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  3   84[COMRAM] float 
  5202 ;; Registers used:
  5203 ;;		wreg, status,2, status,0, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5209 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;Total ram usage:       15 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    1
  5216 ;; This function calls:
  5217 ;;		___ftpack
  5218 ;; This function is called by:
  5219 ;;		_main
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text20
  5224  002552                     __ptext20:
  5225                           	opt stack 0
  5226  002552                     ___ftdiv:
  5227                           	opt stack 29
  5228                           
  5229                           ;incstack = 0
  5230  002552  C057  F05B         	movff	___ftdiv@f1+2,??___ftdiv
  5231  002556  6A5C               	clrf	(??___ftdiv+1)& (0+255),c
  5232  002558  6A5D               	clrf	(??___ftdiv+2)& (0+255),c
  5233  00255A  3456               	rlcf	___ftdiv@f1+1,w,c
  5234  00255C  365B               	rlcf	??___ftdiv& (0+255),f,c
  5235  00255E  E301               	bnc	u2721
  5236  002560  805C               	bsf	(??___ftdiv+1)& (0+255),0,c
  5237  002562                     u2721:
  5238  002562  505B               	movf	??___ftdiv,w,c
  5239  002564  6E62               	movwf	___ftdiv@exp,c
  5240  002566  5062               	movf	___ftdiv@exp,w,c
  5241  002568  A4D8               	btfss	status,2,c
  5242  00256A  D002               	goto	l2558
  5243  00256C  D00E               	goto	l2560
  5244  00256E  D061               	goto	l624
  5245  002570                     l2558:
  5246  002570  C05A  F05B         	movff	___ftdiv@f2+2,??___ftdiv
  5247  002574  6A5C               	clrf	(??___ftdiv+1)& (0+255),c
  5248  002576  6A5D               	clrf	(??___ftdiv+2)& (0+255),c
  5249  002578  3459               	rlcf	___ftdiv@f2+1,w,c
  5250  00257A  365B               	rlcf	??___ftdiv& (0+255),f,c
  5251  00257C  E301               	bnc	u2741
  5252  00257E  805C               	bsf	(??___ftdiv+1)& (0+255),0,c
  5253  002580                     u2741:
  5254  002580  505B               	movf	??___ftdiv,w,c
  5255  002582  6E63               	movwf	___ftdiv@sign,c
  5256  002584  5063               	movf	___ftdiv@sign,w,c
  5257  002586  A4D8               	btfss	status,2,c
  5258  002588  D007               	goto	l2564
  5259  00258A                     l2560:
  5260  00258A  0E00               	movlw	0
  5261  00258C  6E55               	movwf	?___ftdiv,c
  5262  00258E  0E00               	movlw	0
  5263  002590  6E56               	movwf	?___ftdiv+1,c
  5264  002592  0E00               	movlw	0
  5265  002594  6E57               	movwf	?___ftdiv+2,c
  5266  002596  D04D               	goto	l624
  5267  002598                     l2564:
  5268  002598  0E00               	movlw	0
  5269  00259A  6E5F               	movwf	___ftdiv@f3,c
  5270  00259C  0E00               	movlw	0
  5271  00259E  6E60               	movwf	___ftdiv@f3+1,c
  5272  0025A0  0E00               	movlw	0
  5273  0025A2  6E61               	movwf	___ftdiv@f3+2,c
  5274  0025A4  5063               	movf	___ftdiv@sign,w,c
  5275  0025A6  0F89               	addlw	137
  5276  0025A8  5E62               	subwf	___ftdiv@exp,f,c
  5277  0025AA  C057  F063         	movff	___ftdiv@f1+2,___ftdiv@sign
  5278  0025AE  505A               	movf	___ftdiv@f2+2,w,c
  5279  0025B0  1A63               	xorwf	___ftdiv@sign,f,c
  5280  0025B2  0E80               	movlw	128
  5281  0025B4  1663               	andwf	___ftdiv@sign,f,c
  5282  0025B6  8E56               	bsf	___ftdiv@f1+1,7,c
  5283  0025B8  0EFF               	movlw	255
  5284  0025BA  1655               	andwf	___ftdiv@f1,f,c
  5285  0025BC  0EFF               	movlw	255
  5286  0025BE  1656               	andwf	___ftdiv@f1+1,f,c
  5287  0025C0  0E00               	movlw	0
  5288  0025C2  1657               	andwf	___ftdiv@f1+2,f,c
  5289  0025C4  8E59               	bsf	___ftdiv@f2+1,7,c
  5290  0025C6  0EFF               	movlw	255
  5291  0025C8  1658               	andwf	___ftdiv@f2,f,c
  5292  0025CA  0EFF               	movlw	255
  5293  0025CC  1659               	andwf	___ftdiv@f2+1,f,c
  5294  0025CE  0E00               	movlw	0
  5295  0025D0  165A               	andwf	___ftdiv@f2+2,f,c
  5296  0025D2  0E18               	movlw	24
  5297  0025D4  6E5E               	movwf	___ftdiv@cntr,c
  5298  0025D6  D000               	goto	l2584
  5299  0025D8                     l2584:
  5300  0025D8  90D8               	bcf	status,0,c
  5301  0025DA  365F               	rlcf	___ftdiv@f3,f,c
  5302  0025DC  3660               	rlcf	___ftdiv@f3+1,f,c
  5303  0025DE  3661               	rlcf	___ftdiv@f3+2,f,c
  5304  0025E0  5058               	movf	___ftdiv@f2,w,c
  5305  0025E2  5C55               	subwf	___ftdiv@f1,w,c
  5306  0025E4  5059               	movf	___ftdiv@f2+1,w,c
  5307  0025E6  5856               	subwfb	___ftdiv@f1+1,w,c
  5308  0025E8  505A               	movf	___ftdiv@f2+2,w,c
  5309  0025EA  5857               	subwfb	___ftdiv@f1+2,w,c
  5310  0025EC  A0D8               	btfss	status,0,c
  5311  0025EE  D007               	goto	l627
  5312  0025F0  5058               	movf	___ftdiv@f2,w,c
  5313  0025F2  5E55               	subwf	___ftdiv@f1,f,c
  5314  0025F4  5059               	movf	___ftdiv@f2+1,w,c
  5315  0025F6  5A56               	subwfb	___ftdiv@f1+1,f,c
  5316  0025F8  505A               	movf	___ftdiv@f2+2,w,c
  5317  0025FA  5A57               	subwfb	___ftdiv@f1+2,f,c
  5318  0025FC  805F               	bsf	___ftdiv@f3,0,c
  5319  0025FE                     l627:
  5320  0025FE  90D8               	bcf	status,0,c
  5321  002600  3655               	rlcf	___ftdiv@f1,f,c
  5322  002602  3656               	rlcf	___ftdiv@f1+1,f,c
  5323  002604  3657               	rlcf	___ftdiv@f1+2,f,c
  5324  002606  2E5E               	decfsz	___ftdiv@cntr,f,c
  5325  002608  D7E7               	goto	l2584
  5326  00260A  D000               	goto	l2594
  5327  00260C                     l2594:
  5328  00260C  C05F  F001         	movff	___ftdiv@f3,___ftpack@arg
  5329  002610  C060  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5330  002614  C061  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5331  002618  C062  F004         	movff	___ftdiv@exp,___ftpack@exp
  5332  00261C  C063  F005         	movff	___ftdiv@sign,___ftpack@sign
  5333  002620  EC1A  F013         	call	___ftpack	;wreg free
  5334  002624  C001  F055         	movff	?___ftpack,?___ftdiv
  5335  002628  C002  F056         	movff	?___ftpack+1,?___ftdiv+1
  5336  00262C  C003  F057         	movff	?___ftpack+2,?___ftdiv+2
  5337  002630  D000               	goto	l624
  5338  002632                     l624:
  5339  002632  0012               	return		;funcret
  5340  002634                     __end_of___ftdiv:
  5341                           	opt stack 0
  5342                           tblptru	equ	0xFF8
  5343                           tblptrh	equ	0xFF7
  5344                           tblptrl	equ	0xFF6
  5345                           tablat	equ	0xFF5
  5346                           prodh	equ	0xFF4
  5347                           prodl	equ	0xFF3
  5348                           postinc0	equ	0xFEE
  5349                           wreg	equ	0xFE8
  5350                           postdec1	equ	0xFE5
  5351                           plusw1	equ	0xFE3
  5352                           fsr1l	equ	0xFE1
  5353                           indf2	equ	0xFDF
  5354                           postinc2	equ	0xFDE
  5355                           postdec2	equ	0xFDD
  5356                           plusw2	equ	0xFDB
  5357                           fsr2h	equ	0xFDA
  5358                           fsr2l	equ	0xFD9
  5359                           status	equ	0xFD8
  5360                           
  5361 ;; *************** function ___awtoft *****************
  5362 ;; Defined at:
  5363 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  c               2    8[COMRAM] int 
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;  sign            1   11[COMRAM] unsigned char 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  3    8[COMRAM] float 
  5370 ;; Registers used:
  5371 ;;		wreg, status,2, status,0, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5377 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;Total ram usage:        4 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    1
  5384 ;; This function calls:
  5385 ;;		___ftpack
  5386 ;; This function is called by:
  5387 ;;		_main
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           	psect	text21
  5392  002AB8                     __ptext21:
  5393                           	opt stack 0
  5394  002AB8                     ___awtoft:
  5395                           	opt stack 29
  5396                           
  5397                           ;incstack = 0
  5398  002AB8  0E00               	movlw	0
  5399  002ABA  6E0C               	movwf	___awtoft@sign,c
  5400  002ABC  AE0A               	btfss	___awtoft@c+1,7,c
  5401  002ABE  D007               	goto	l2606
  5402  002AC0  6C09               	negf	___awtoft@c,c
  5403  002AC2  1E0A               	comf	___awtoft@c+1,f,c
  5404  002AC4  B0D8               	btfsc	status,0,c
  5405  002AC6  2A0A               	incf	___awtoft@c+1,f,c
  5406  002AC8  0E01               	movlw	1
  5407  002ACA  6E0C               	movwf	___awtoft@sign,c
  5408  002ACC  D000               	goto	l2606
  5409  002ACE                     l2606:
  5410  002ACE  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5411  002AD2  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5412  002AD6  6A03               	clrf	___ftpack@arg+2,c
  5413  002AD8  0E8E               	movlw	142
  5414  002ADA  6E04               	movwf	___ftpack@exp,c
  5415  002ADC  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5416  002AE0  EC1A  F013         	call	___ftpack	;wreg free
  5417  002AE4  C001  F009         	movff	?___ftpack,?___awtoft
  5418  002AE8  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5419  002AEC  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5420  002AF0  D000               	goto	l445
  5421  002AF2                     l445:
  5422  002AF2  0012               	return		;funcret
  5423  002AF4                     __end_of___awtoft:
  5424                           	opt stack 0
  5425                           tblptru	equ	0xFF8
  5426                           tblptrh	equ	0xFF7
  5427                           tblptrl	equ	0xFF6
  5428                           tablat	equ	0xFF5
  5429                           prodh	equ	0xFF4
  5430                           prodl	equ	0xFF3
  5431                           postinc0	equ	0xFEE
  5432                           wreg	equ	0xFE8
  5433                           postdec1	equ	0xFE5
  5434                           plusw1	equ	0xFE3
  5435                           fsr1l	equ	0xFE1
  5436                           indf2	equ	0xFDF
  5437                           postinc2	equ	0xFDE
  5438                           postdec2	equ	0xFDD
  5439                           plusw2	equ	0xFDB
  5440                           fsr2h	equ	0xFDA
  5441                           fsr2l	equ	0xFD9
  5442                           status	equ	0xFD8
  5443                           
  5444 ;; *************** function ___ftpack *****************
  5445 ;; Defined at:
  5446 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  arg             3    0[COMRAM] unsigned um
  5449 ;;  exp             1    3[COMRAM] unsigned char 
  5450 ;;  sign            1    4[COMRAM] unsigned char 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;		None
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  3    0[COMRAM] float 
  5455 ;; Registers used:
  5456 ;;		wreg, status,2, status,0
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5462 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5466 ;;Total ram usage:        8 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		___awtoft
  5472 ;;		___ftadd
  5473 ;;		___ftdiv
  5474 ;;		___ftmul
  5475 ;;		___lltoft
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text22
  5480  002634                     __ptext22:
  5481                           	opt stack 0
  5482  002634                     ___ftpack:
  5483                           	opt stack 27
  5484                           
  5485                           ;incstack = 0
  5486  002634  5004               	movf	___ftpack@exp,w,c
  5487  002636  B4D8               	btfsc	status,2,c
  5488  002638  D005               	goto	l1778
  5489  00263A  5001               	movf	___ftpack@arg,w,c
  5490  00263C  1002               	iorwf	___ftpack@arg+1,w,c
  5491  00263E  1003               	iorwf	___ftpack@arg+2,w,c
  5492  002640  A4D8               	btfss	status,2,c
  5493  002642  D00E               	goto	l1784
  5494  002644                     l1778:
  5495  002644  0E00               	movlw	0
  5496  002646  6E01               	movwf	?___ftpack,c
  5497  002648  0E00               	movlw	0
  5498  00264A  6E02               	movwf	?___ftpack+1,c
  5499  00264C  0E00               	movlw	0
  5500  00264E  6E03               	movwf	?___ftpack+2,c
  5501  002650  D053               	goto	l552
  5502  002652  D006               	goto	l1784
  5503  002654                     l1782:
  5504  002654  2A04               	incf	___ftpack@exp,f,c
  5505  002656  90D8               	bcf	status,0,c
  5506  002658  3203               	rrcf	___ftpack@arg+2,f,c
  5507  00265A  3202               	rrcf	___ftpack@arg+1,f,c
  5508  00265C  3201               	rrcf	___ftpack@arg,f,c
  5509  00265E  D000               	goto	l1784
  5510  002660                     l1784:
  5511  002660  0E00               	movlw	0
  5512  002662  1401               	andwf	___ftpack@arg,w,c
  5513  002664  6E06               	movwf	??___ftpack& (0+255),c
  5514  002666  0E00               	movlw	0
  5515  002668  1402               	andwf	___ftpack@arg+1,w,c
  5516  00266A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5517  00266C  0EFE               	movlw	254
  5518  00266E  1403               	andwf	___ftpack@arg+2,w,c
  5519  002670  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5520  002672  5006               	movf	??___ftpack,w,c
  5521  002674  1007               	iorwf	??___ftpack+1,w,c
  5522  002676  1008               	iorwf	??___ftpack+2,w,c
  5523  002678  B4D8               	btfsc	status,2,c
  5524  00267A  D00E               	goto	l1790
  5525  00267C  D7EB               	goto	l1782
  5526  00267E  D00C               	goto	l1790
  5527  002680                     l1786:
  5528  002680  2A04               	incf	___ftpack@exp,f,c
  5529  002682  0E01               	movlw	1
  5530  002684  2601               	addwf	___ftpack@arg,f,c
  5531  002686  0E00               	movlw	0
  5532  002688  2202               	addwfc	___ftpack@arg+1,f,c
  5533  00268A  0E00               	movlw	0
  5534  00268C  2203               	addwfc	___ftpack@arg+2,f,c
  5535  00268E  90D8               	bcf	status,0,c
  5536  002690  3203               	rrcf	___ftpack@arg+2,f,c
  5537  002692  3202               	rrcf	___ftpack@arg+1,f,c
  5538  002694  3201               	rrcf	___ftpack@arg,f,c
  5539  002696  D000               	goto	l1790
  5540  002698                     l1790:
  5541  002698  0E00               	movlw	0
  5542  00269A  1401               	andwf	___ftpack@arg,w,c
  5543  00269C  6E06               	movwf	??___ftpack& (0+255),c
  5544  00269E  0E00               	movlw	0
  5545  0026A0  1402               	andwf	___ftpack@arg+1,w,c
  5546  0026A2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5547  0026A4  0EFF               	movlw	255
  5548  0026A6  1403               	andwf	___ftpack@arg+2,w,c
  5549  0026A8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5550  0026AA  5006               	movf	??___ftpack,w,c
  5551  0026AC  1007               	iorwf	??___ftpack+1,w,c
  5552  0026AE  1008               	iorwf	??___ftpack+2,w,c
  5553  0026B0  B4D8               	btfsc	status,2,c
  5554  0026B2  D008               	goto	l1794
  5555  0026B4  D7E5               	goto	l1786
  5556  0026B6  D006               	goto	l1794
  5557  0026B8                     l1792:
  5558  0026B8  0604               	decf	___ftpack@exp,f,c
  5559  0026BA  90D8               	bcf	status,0,c
  5560  0026BC  3601               	rlcf	___ftpack@arg,f,c
  5561  0026BE  3602               	rlcf	___ftpack@arg+1,f,c
  5562  0026C0  3603               	rlcf	___ftpack@arg+2,f,c
  5563  0026C2  D000               	goto	l1794
  5564  0026C4                     l1794:
  5565  0026C4  BE02               	btfsc	___ftpack@arg+1,7,c
  5566  0026C6  D004               	goto	l563
  5567  0026C8  0E02               	movlw	2
  5568  0026CA  6004               	cpfslt	___ftpack@exp,c
  5569  0026CC  D7F5               	goto	l1792
  5570  0026CE  D000               	goto	l563
  5571  0026D0                     l563:
  5572  0026D0  B004               	btfsc	___ftpack@exp,0,c
  5573  0026D2  D002               	goto	l1800
  5574  0026D4  9E02               	bcf	___ftpack@arg+1,7,c
  5575  0026D6  D000               	goto	l1800
  5576  0026D8                     l1800:
  5577  0026D8  90D8               	bcf	status,0,c
  5578  0026DA  3204               	rrcf	___ftpack@exp,f,c
  5579  0026DC  5004               	movf	___ftpack@exp,w,c
  5580  0026DE  1203               	iorwf	___ftpack@arg+2,f,c
  5581  0026E0  5005               	movf	___ftpack@sign,w,c
  5582  0026E2  B4D8               	btfsc	status,2,c
  5583  0026E4  D002               	goto	l1806
  5584  0026E6  8E03               	bsf	___ftpack@arg+2,7,c
  5585  0026E8  D000               	goto	l1806
  5586  0026EA                     l1806:
  5587  0026EA  C001  F001         	movff	___ftpack@arg,?___ftpack
  5588  0026EE  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5589  0026F2  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5590  0026F6  D000               	goto	l552
  5591  0026F8                     l552:
  5592  0026F8  0012               	return		;funcret
  5593  0026FA                     __end_of___ftpack:
  5594                           	opt stack 0
  5595                           tblptru	equ	0xFF8
  5596                           tblptrh	equ	0xFF7
  5597                           tblptrl	equ	0xFF6
  5598                           tablat	equ	0xFF5
  5599                           prodh	equ	0xFF4
  5600                           prodl	equ	0xFF3
  5601                           postinc0	equ	0xFEE
  5602                           wreg	equ	0xFE8
  5603                           postdec1	equ	0xFE5
  5604                           plusw1	equ	0xFE3
  5605                           fsr1l	equ	0xFE1
  5606                           indf2	equ	0xFDF
  5607                           postinc2	equ	0xFDE
  5608                           postdec2	equ	0xFDD
  5609                           plusw2	equ	0xFDB
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8
  5613                           
  5614 ;; *************** function _Select_ADC_Channel *****************
  5615 ;; Defined at:
  5616 ;;		line 111 in file "Lab6pB3.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  channel         1    wreg     unsigned char 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  channel         1    0[COMRAM] unsigned char 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;		None               void
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0, prodl, prodh
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;Total ram usage:        1 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_main
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text23
  5644  002BF6                     __ptext23:
  5645                           	opt stack 0
  5646  002BF6                     _Select_ADC_Channel:
  5647                           	opt stack 30
  5648                           
  5649                           ;incstack = 0
  5650                           ;Select_ADC_Channel@channel stored from wreg
  5651  002BF6  6E01               	movwf	Select_ADC_Channel@channel,c
  5652                           
  5653                           ;Lab6pB3.c: 113: ADCON0 = channel *4 + 1;
  5654  002BF8  5001               	movf	Select_ADC_Channel@channel,w,c
  5655  002BFA  0D04               	mullw	4
  5656  002BFC  28F3               	incf	prodl,w,c
  5657  002BFE  6EC2               	movwf	4034,c	;volatile
  5658  002C00  0012               	return		;funcret
  5659  002C02                     __end_of_Select_ADC_Channel:
  5660                           	opt stack 0
  5661                           tblptru	equ	0xFF8
  5662                           tblptrh	equ	0xFF7
  5663                           tblptrl	equ	0xFF6
  5664                           tablat	equ	0xFF5
  5665                           prodh	equ	0xFF4
  5666                           prodl	equ	0xFF3
  5667                           postinc0	equ	0xFEE
  5668                           wreg	equ	0xFE8
  5669                           postdec1	equ	0xFE5
  5670                           plusw1	equ	0xFE3
  5671                           fsr1l	equ	0xFE1
  5672                           indf2	equ	0xFDF
  5673                           postinc2	equ	0xFDE
  5674                           postdec2	equ	0xFDD
  5675                           plusw2	equ	0xFDB
  5676                           fsr2h	equ	0xFDA
  5677                           fsr2l	equ	0xFD9
  5678                           status	equ	0xFD8
  5679                           
  5680 ;; *************** function _Init_UART *****************
  5681 ;; Defined at:
  5682 ;;		line 25 in file "Lab6pB3.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;		None
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;		None
  5687 ;; Return value:  Size  Location     Type
  5688 ;;		None               void
  5689 ;; Registers used:
  5690 ;;		wreg, status,2, cstack
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;Total ram usage:        0 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; Hardware stack levels required when called:    1
  5703 ;; This function calls:
  5704 ;;		_OpenUSART
  5705 ;; This function is called by:
  5706 ;;		_main
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text24
  5711  002BB4                     __ptext24:
  5712                           	opt stack 0
  5713  002BB4                     _Init_UART:
  5714                           	opt stack 29
  5715                           
  5716                           ;Lab6pB3.c: 27: OpenUSART (0b01111111 & 0b10111111 &
  5717                           ;Lab6pB3.c: 28: 0b11111110 & 0b11111101 & 0b11111111 &
  5718                           ;Lab6pB3.c: 29: 0b11111111, 25);
  5719                           
  5720                           ;incstack = 0
  5721  002BB4  0E00               	movlw	0
  5722  002BB6  6E02               	movwf	OpenUSART@spbrg+1,c
  5723  002BB8  0E19               	movlw	25
  5724  002BBA  6E01               	movwf	OpenUSART@spbrg,c
  5725  002BBC  0E3C               	movlw	60
  5726  002BBE  ECD2  F014         	call	_OpenUSART
  5727                           
  5728                           ;Lab6pB3.c: 30: OSCCON = 0x60;
  5729  002BC2  0E60               	movlw	96
  5730  002BC4  6ED3               	movwf	4051,c	;volatile
  5731  002BC6  0012               	return		;funcret
  5732  002BC8                     __end_of_Init_UART:
  5733                           	opt stack 0
  5734                           tblptru	equ	0xFF8
  5735                           tblptrh	equ	0xFF7
  5736                           tblptrl	equ	0xFF6
  5737                           tablat	equ	0xFF5
  5738                           prodh	equ	0xFF4
  5739                           prodl	equ	0xFF3
  5740                           postinc0	equ	0xFEE
  5741                           wreg	equ	0xFE8
  5742                           postdec1	equ	0xFE5
  5743                           plusw1	equ	0xFE3
  5744                           fsr1l	equ	0xFE1
  5745                           indf2	equ	0xFDF
  5746                           postinc2	equ	0xFDE
  5747                           postdec2	equ	0xFDD
  5748                           plusw2	equ	0xFDB
  5749                           fsr2h	equ	0xFDA
  5750                           fsr2l	equ	0xFD9
  5751                           status	equ	0xFD8
  5752                           
  5753 ;; *************** function _OpenUSART *****************
  5754 ;; Defined at:
  5755 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;  config          1    wreg     unsigned char 
  5758 ;;  spbrg           2    0[COMRAM] unsigned int 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  config          1    2[COMRAM] unsigned char 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;		None               void
  5763 ;; Registers used:
  5764 ;;		wreg, status,2
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;Total ram usage:        3 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_Init_UART
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text25
  5784  0029A4                     __ptext25:
  5785                           	opt stack 0
  5786  0029A4                     _OpenUSART:
  5787                           	opt stack 29
  5788                           
  5789                           ;incstack = 0
  5790                           ;OpenUSART@config stored from wreg
  5791  0029A4  6E03               	movwf	OpenUSART@config,c
  5792  0029A6  0E00               	movlw	0
  5793  0029A8  6EAC               	movwf	4012,c	;volatile
  5794  0029AA  0E00               	movlw	0
  5795  0029AC  6EAB               	movwf	4011,c	;volatile
  5796  0029AE  A003               	btfss	OpenUSART@config,0,c
  5797  0029B0  D002               	goto	l2020
  5798  0029B2  88AC               	bsf	4012,4,c	;volatile
  5799  0029B4  D000               	goto	l2020
  5800  0029B6                     l2020:
  5801  0029B6  A203               	btfss	OpenUSART@config,1,c
  5802  0029B8  D003               	goto	l2024
  5803  0029BA  8CAC               	bsf	4012,6,c	;volatile
  5804  0029BC  8CAB               	bsf	4011,6,c	;volatile
  5805  0029BE  D000               	goto	l2024
  5806  0029C0                     l2024:
  5807  0029C0  A403               	btfss	OpenUSART@config,2,c
  5808  0029C2  D002               	goto	l2028
  5809  0029C4  8EAC               	bsf	4012,7,c	;volatile
  5810  0029C6  D000               	goto	l2028
  5811  0029C8                     l2028:
  5812  0029C8  A603               	btfss	OpenUSART@config,3,c
  5813  0029CA  D002               	goto	l215
  5814  0029CC  88AB               	bsf	4011,4,c	;volatile
  5815  0029CE  D002               	goto	l2032
  5816  0029D0                     l215:
  5817  0029D0  8AAB               	bsf	4011,5,c	;volatile
  5818  0029D2  D000               	goto	l2032
  5819  0029D4                     l2032:
  5820  0029D4  B803               	btfsc	OpenUSART@config,4,c
  5821  0029D6  84AC               	bsf	4012,2,c	;volatile
  5822  0029D8  989E               	bcf	3998,4,c	;volatile
  5823  0029DA  AA03               	btfss	OpenUSART@config,5,c
  5824  0029DC  D002               	goto	l2040
  5825  0029DE  86AB               	bsf	4011,3,c	;volatile
  5826  0029E0  D000               	goto	l2040
  5827  0029E2                     l2040:
  5828  0029E2  AC03               	btfss	OpenUSART@config,6,c
  5829  0029E4  D002               	goto	l219
  5830  0029E6  8A9D               	bsf	3997,5,c	;volatile
  5831  0029E8  D001               	goto	l220
  5832  0029EA                     l219:
  5833  0029EA  9A9D               	bcf	3997,5,c	;volatile
  5834  0029EC                     l220:
  5835  0029EC  9A9E               	bcf	3998,5,c	;volatile
  5836  0029EE  AE03               	btfss	OpenUSART@config,7,c
  5837  0029F0  D002               	goto	l221
  5838  0029F2  889D               	bsf	3997,4,c	;volatile
  5839  0029F4  D001               	goto	l222
  5840  0029F6                     l221:
  5841  0029F6  989D               	bcf	3997,4,c	;volatile
  5842  0029F8                     l222:
  5843  0029F8  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5844  0029FC  5002               	movf	OpenUSART@spbrg+1,w,c
  5845  0029FE  6EB0               	movwf	4016,c	;volatile
  5846  002A00  8AAC               	bsf	4012,5,c	;volatile
  5847  002A02  8EAB               	bsf	4011,7,c	;volatile
  5848  002A04  9C94               	bcf	3988,6,c	;volatile
  5849  002A06  8E94               	bsf	3988,7,c	;volatile
  5850  002A08  B8AC               	btfsc	4012,4,c	;volatile
  5851  002A0A  BEAC               	btfsc	4012,7,c	;volatile
  5852  002A0C  D002               	goto	l224
  5853  002A0E  8C94               	bsf	3988,6,c	;volatile
  5854  002A10  D000               	goto	l224
  5855  002A12                     l224:
  5856  002A12  0012               	return		;funcret
  5857  002A14                     __end_of_OpenUSART:
  5858                           	opt stack 0
  5859                           tblptru	equ	0xFF8
  5860                           tblptrh	equ	0xFF7
  5861                           tblptrl	equ	0xFF6
  5862                           tablat	equ	0xFF5
  5863                           prodh	equ	0xFF4
  5864                           prodl	equ	0xFF3
  5865                           postinc0	equ	0xFEE
  5866                           wreg	equ	0xFE8
  5867                           postdec1	equ	0xFE5
  5868                           plusw1	equ	0xFE3
  5869                           fsr1l	equ	0xFE1
  5870                           indf2	equ	0xFDF
  5871                           postinc2	equ	0xFDE
  5872                           postdec2	equ	0xFDD
  5873                           plusw2	equ	0xFDB
  5874                           fsr2h	equ	0xFDA
  5875                           fsr2l	equ	0xFD9
  5876                           status	equ	0xFD8
  5877                           
  5878 ;; *************** function _Init_ADC *****************
  5879 ;; Defined at:
  5880 ;;		line 127 in file "Lab6pB3.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;		None               void
  5887 ;; Registers used:
  5888 ;;		wreg, status,2
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;Total ram usage:        0 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; This function calls:
  5901 ;;		Nothing
  5902 ;; This function is called by:
  5903 ;;		_main
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text26
  5908  002BE8                     __ptext26:
  5909                           	opt stack 0
  5910  002BE8                     _Init_ADC:
  5911                           	opt stack 30
  5912                           
  5913                           ;Lab6pB3.c: 129: ADCON0 = 0x01;
  5914                           
  5915                           ;incstack = 0
  5916  002BE8  0E01               	movlw	1
  5917  002BEA  6EC2               	movwf	4034,c	;volatile
  5918                           
  5919                           ;Lab6pB3.c: 130: ADCON1 = 0x1E;
  5920  002BEC  0E1E               	movlw	30
  5921  002BEE  6EC1               	movwf	4033,c	;volatile
  5922                           
  5923                           ;Lab6pB3.c: 131: ADCON2=0xA9;
  5924  002BF0  0EA9               	movlw	169
  5925  002BF2  6EC0               	movwf	4032,c	;volatile
  5926  002BF4  0012               	return		;funcret
  5927  002BF6                     __end_of_Init_ADC:
  5928                           	opt stack 0
  5929                           tblptru	equ	0xFF8
  5930                           tblptrh	equ	0xFF7
  5931                           tblptrl	equ	0xFF6
  5932                           tablat	equ	0xFF5
  5933                           prodh	equ	0xFF4
  5934                           prodl	equ	0xFF3
  5935                           postinc0	equ	0xFEE
  5936                           wreg	equ	0xFE8
  5937                           postdec1	equ	0xFE5
  5938                           plusw1	equ	0xFE3
  5939                           fsr1l	equ	0xFE1
  5940                           indf2	equ	0xFDF
  5941                           postinc2	equ	0xFDE
  5942                           postdec2	equ	0xFDD
  5943                           plusw2	equ	0xFDB
  5944                           fsr2h	equ	0xFDA
  5945                           fsr2l	equ	0xFD9
  5946                           status	equ	0xFD8
  5947                           
  5948 ;; *************** function _Delay_One_Sec *****************
  5949 ;; Defined at:
  5950 ;;		line 105 in file "Lab6pB3.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;		None
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  I               2    0[COMRAM] int 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;		None               void
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, status,0
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;Total ram usage:        2 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; This function calls:
  5971 ;;		Nothing
  5972 ;; This function is called by:
  5973 ;;		_main
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text27
  5978  002B90                     __ptext27:
  5979                           	opt stack 0
  5980  002B90                     _Delay_One_Sec:
  5981                           	opt stack 30
  5982                           
  5983                           ;Lab6pB3.c: 107: for(int I=0; I <17000; I++);
  5984                           
  5985                           ;incstack = 0
  5986  002B90  0E00               	movlw	0
  5987  002B92  6E02               	movwf	Delay_One_Sec@I+1,c
  5988  002B94  0E00               	movlw	0
  5989  002B96  6E01               	movwf	Delay_One_Sec@I,c
  5990  002B98                     l2544:
  5991  002B98  BE02               	btfsc	Delay_One_Sec@I+1,7,c
  5992  002B9A  D008               	goto	l2548
  5993  002B9C  0E68               	movlw	104
  5994  002B9E  5C01               	subwf	Delay_One_Sec@I,w,c
  5995  002BA0  0E42               	movlw	66
  5996  002BA2  5802               	subwfb	Delay_One_Sec@I+1,w,c
  5997  002BA4  B0D8               	btfsc	status,0,c
  5998  002BA6  D005               	goto	l90
  5999  002BA8  D001               	goto	l2548
  6000  002BAA  D003               	goto	l90
  6001  002BAC                     l2548:
  6002  002BAC  4A01               	infsnz	Delay_One_Sec@I,f,c
  6003  002BAE  2A02               	incf	Delay_One_Sec@I+1,f,c
  6004  002BB0  D7F3               	goto	l2544
  6005  002BB2                     l90:
  6006  002BB2  0012               	return		;funcret
  6007  002BB4                     __end_of_Delay_One_Sec:
  6008                           	opt stack 0
  6009                           tblptru	equ	0xFF8
  6010                           tblptrh	equ	0xFF7
  6011                           tblptrl	equ	0xFF6
  6012                           tablat	equ	0xFF5
  6013                           prodh	equ	0xFF4
  6014                           prodl	equ	0xFF3
  6015                           postinc0	equ	0xFEE
  6016                           wreg	equ	0xFE8
  6017                           postdec1	equ	0xFE5
  6018                           plusw1	equ	0xFE3
  6019                           fsr1l	equ	0xFE1
  6020                           indf2	equ	0xFDF
  6021                           postinc2	equ	0xFDE
  6022                           postdec2	equ	0xFDD
  6023                           plusw2	equ	0xFDB
  6024                           fsr2h	equ	0xFDA
  6025                           fsr2l	equ	0xFD9
  6026                           status	equ	0xFD8
  6027                           
  6028 ;; *************** function _Deactivate_Buzzer *****************
  6029 ;; Defined at:
  6030 ;;		line 142 in file "Lab6pB3.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;		None
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;		None
  6035 ;; Return value:  Size  Location     Type
  6036 ;;		None               void
  6037 ;; Registers used:
  6038 ;;		wreg, status,2
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;Total ram usage:        0 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; This function calls:
  6051 ;;		Nothing
  6052 ;; This function is called by:
  6053 ;;		_main
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text28
  6058  002C0C                     __ptext28:
  6059                           	opt stack 0
  6060  002C0C                     _Deactivate_Buzzer:
  6061                           	opt stack 30
  6062                           
  6063                           ;Lab6pB3.c: 144: CCP2CON = 0x0;
  6064                           
  6065                           ;incstack = 0
  6066  002C0C  0E00               	movlw	0
  6067  002C0E  6EBA               	movwf	4026,c	;volatile
  6068                           
  6069                           ;Lab6pB3.c: 145: PORTBbits.RB3 = 0;
  6070  002C10  9681               	bcf	3969,3,c	;volatile
  6071  002C12  0012               	return		;funcret
  6072  002C14                     __end_of_Deactivate_Buzzer:
  6073                           	opt stack 0
  6074                           tblptru	equ	0xFF8
  6075                           tblptrh	equ	0xFF7
  6076                           tblptrl	equ	0xFF6
  6077                           tablat	equ	0xFF5
  6078                           prodh	equ	0xFF4
  6079                           prodl	equ	0xFF3
  6080                           postinc0	equ	0xFEE
  6081                           wreg	equ	0xFE8
  6082                           postdec1	equ	0xFE5
  6083                           plusw1	equ	0xFE3
  6084                           fsr1l	equ	0xFE1
  6085                           indf2	equ	0xFDF
  6086                           postinc2	equ	0xFDE
  6087                           postdec2	equ	0xFDD
  6088                           plusw2	equ	0xFDB
  6089                           fsr2h	equ	0xFDA
  6090                           fsr2l	equ	0xFD9
  6091                           status	equ	0xFD8
  6092                           
  6093 ;; *************** function _Activate_Buzzer *****************
  6094 ;; Defined at:
  6095 ;;		line 134 in file "Lab6pB3.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;		None
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;		None
  6100 ;; Return value:  Size  Location     Type
  6101 ;;		None               void
  6102 ;; Registers used:
  6103 ;;		wreg, status,2
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;Total ram usage:        0 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_main
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text29
  6123  002BC8                     __ptext29:
  6124                           	opt stack 0
  6125  002BC8                     _Activate_Buzzer:
  6126                           	opt stack 30
  6127                           
  6128                           ;Lab6pB3.c: 136: PR2 = 0b11111001 ;
  6129                           
  6130                           ;incstack = 0
  6131  002BC8  0EF9               	movlw	249
  6132  002BCA  6ECB               	movwf	4043,c	;volatile
  6133                           
  6134                           ;Lab6pB3.c: 137: T2CON = 0b00000101 ;
  6135  002BCC  0E05               	movlw	5
  6136  002BCE  6ECA               	movwf	4042,c	;volatile
  6137                           
  6138                           ;Lab6pB3.c: 138: CCPR2L = 0b01001010 ;
  6139  002BD0  0E4A               	movlw	74
  6140  002BD2  6EBB               	movwf	4027,c	;volatile
  6141                           
  6142                           ;Lab6pB3.c: 139: CCP2CON = 0b00111100 ;
  6143  002BD4  0E3C               	movlw	60
  6144  002BD6  6EBA               	movwf	4026,c	;volatile
  6145  002BD8  0012               	return		;funcret
  6146  002BDA                     __end_of_Activate_Buzzer:
  6147                           	opt stack 0
  6148                           tblptru	equ	0xFF8
  6149                           tblptrh	equ	0xFF7
  6150                           tblptrl	equ	0xFF6
  6151                           tablat	equ	0xFF5
  6152                           prodh	equ	0xFF4
  6153                           prodl	equ	0xFF3
  6154                           postinc0	equ	0xFEE
  6155                           wreg	equ	0xFE8
  6156                           postdec1	equ	0xFE5
  6157                           plusw1	equ	0xFE3
  6158                           fsr1l	equ	0xFE1
  6159                           indf2	equ	0xFDF
  6160                           postinc2	equ	0xFDE
  6161                           postdec2	equ	0xFDD
  6162                           plusw2	equ	0xFDB
  6163                           fsr2h	equ	0xFDA
  6164                           fsr2l	equ	0xFD9
  6165                           status	equ	0xFD8
  6166                           tblptru	equ	0xFF8
  6167                           tblptrh	equ	0xFF7
  6168                           tblptrl	equ	0xFF6
  6169                           tablat	equ	0xFF5
  6170                           prodh	equ	0xFF4
  6171                           prodl	equ	0xFF3
  6172                           postinc0	equ	0xFEE
  6173                           wreg	equ	0xFE8
  6174                           postdec1	equ	0xFE5
  6175                           plusw1	equ	0xFE3
  6176                           fsr1l	equ	0xFE1
  6177                           indf2	equ	0xFDF
  6178                           postinc2	equ	0xFDE
  6179                           postdec2	equ	0xFDD
  6180                           plusw2	equ	0xFDB
  6181                           fsr2h	equ	0xFDA
  6182                           fsr2l	equ	0xFD9
  6183                           status	equ	0xFD8
  6184                           
  6185                           	psect	rparam
  6186  0000                     tblptru	equ	0xFF8
  6187                           tblptrh	equ	0xFF7
  6188                           tblptrl	equ	0xFF6
  6189                           tablat	equ	0xFF5
  6190                           prodh	equ	0xFF4
  6191                           prodl	equ	0xFF3
  6192                           postinc0	equ	0xFEE
  6193                           wreg	equ	0xFE8
  6194                           postdec1	equ	0xFE5
  6195                           plusw1	equ	0xFE3
  6196                           fsr1l	equ	0xFE1
  6197                           indf2	equ	0xFDF
  6198                           postinc2	equ	0xFDE
  6199                           postdec2	equ	0xFDD
  6200                           plusw2	equ	0xFDB
  6201                           fsr2h	equ	0xFDA
  6202                           fsr2l	equ	0xFD9
  6203                           status	equ	0xFD8


Data Sizes:
    Strings     9
    Constant    118
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    124     124
    BANK0           128     30      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___awtoft
    ___awmod->___fttol
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _Init_UART->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   54700
                                              0 BANK0     30    30      0
                    _Activate_Buzzer
                  _Deactivate_Buzzer
                      _Delay_One_Sec
                           _Init_ADC
                          _Init_UART
                 _Select_ADC_Channel
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                       _get_full_ADC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   38332
                                             90 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    9226
                                             62 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    9028
                                             62 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             56 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3954
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1462
                                             42 COMRAM     6     2      4
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1466
                                             48 COMRAM     8     4      4
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     570
                                             27 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3237
                                             84 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2984
                                             72 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     666
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2318
                                             84 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1890
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay_One_Sec                                        2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Activate_Buzzer
   _Deactivate_Buzzer
   _Delay_One_Sec
   _Init_ADC
   _Init_UART
     _OpenUSART
   _Select_ADC_Channel
   ___awdiv
     ___awmod (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___awmod
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftneg (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___awmod
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___awmod
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftneg
   ___fttol
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _get_full_ADC
   _printf
     ___awdiv
       ___awmod (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___awmod
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___awmod
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___awmod (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___awmod
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___awmod
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1E      28       5       31.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7C      7C       1       97.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      34        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 06 18:08:28 2022

                         l81 1D3E                           l90 2BB2                           l68 2BDE  
                         l96 2B4A                           l99 2B6A                 ___awdiv@sign 0036  
        ___wmul@multiplicand 003B                 ___ftadd@exp1 0054                 ___ftadd@exp2 0053  
               ___ftadd@sign 0052                          l220 29EC                          l221 29F6  
                        l222 29F8                          l215 29D0                          l135 1A86  
                        l224 2A12                          l128 1F94                          l219 29EA  
                        l227 2B44                          l420 278E                          l180 1502  
                        l511 2372                          l191 16A6                          l520 2362  
                        l433 2932                          l445 2AF2                          l607 20C6  
                        l552 26F8                          l624 2632                          l616 20E2  
                        l632 2268                          l641 2258                          l650 2824  
                        l634 21D0                          l563 26D0                          l627 25FE  
                        l635 21F8                          l716 28A0                          l726 2992  
                        l592 1FDA                          l656 246A                          l593 2158  
                        l673 2AB6                          l666 2B82                          l746 2A72  
                        l596 2004                          l677 2550                          _PR2 000FCB  
          _Deactivate_Buzzer 2C0C                 ___awmod@sign 0030                          wreg 000FE8  
         ?_Deactivate_Buzzer 0001                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 005E  
               ___ftdiv@sign 0063                 __CFG_WDT$OFF 000000                         l2010 2928  
                       l2002 290C                         l2020 29B6                         l2100 17D4  
                       l2006 2918                         l2110 188C                         l2040 29E2  
                       l2032 29D4                         l2024 29C0                         l2210 22CE  
                       l2106 187C                         l2028 29C8                         l2140 2196  
                       l2124 1A62                         l2310 251C                         l2302 24F4  
                       l2230 2324                         l2222 2310                         l2134 2178  
                       l2118 19B0                         l2304 24FA                         l2312 2526  
                       l2240 234E                         l2330 285E                         l2242 235C  
                       l2234 2334                         l2218 2300                         l2170 221A  
                       l2162 2206                         l2260 27F4                         l2316 253E  
                       l2308 250E                         l2236 233A                         l2180 2244  
                       l2500 14DE                         l2412 1124                         l2326 2848  
                       l2350 295C                         l2190 227A                         l2182 2252  
                       l2174 222A                         l2086 1F54                         l2078 1E90  
                       l2502 14EC                         l1800 26D8                         l2256 27C2  
                       l2248 2A8C                         l2280 248A                         l2328 2856  
                       l2360 2A1A                         l2176 2230                         l2512 1522  
                       l2440 1240                         l2266 2820                         l2338 2890  
                       l2354 2982                         l2346 2946                         l2362 2A28  
                       l2522 1648                         l2506 1508                         l2442 1250  
                       l2530 166E                         l2348 2954                         l2196 228A  
                       l2524 1654                         l2516 1572                         l2452 12C8  
                       l2444 1280                         l2436 121A                         l2428 11B6  
                       l1806 26EA                         l2606 2ACE                         l1830 2012  
                       l2470 13DA                         l2462 1338                         l2446 1290  
                       l2390 109C                         l2534 168A                         l2544 2B98  
                       l2560 258A                         l1824 1FE8                         l1920 2416  
                       l1912 23EE                         l2528 1662                         l2480 141A  
                       l2472 13DE                         l2464 1366                         l2456 12EC  
                       l2392 10A8                         l2624 1AB6                         l2298 24E4  
                       l1930 2444                         l1922 241C                         l2458 12F6  
                       l2466 1374                         l2386 108C                         l2548 2BAC  
                       l2564 2598                         l1852 206A                         l1836 201E  
                       l1916 2400                         l2484 141E                         l2476 13EA  
                       l2396 10B0                         l2652 1C66                         l1790 2698  
                       l1782 2654                         l2558 2570                         l1854 2076  
                       l1846 2046                         l1942 2710                         l1926 242E  
                       l2494 14C4                         l2398 10D2                         l2670 1D14  
                       l1792 26B8                         l1784 2660                         l2584 25D8  
                       l1872 2100                         l1864 20AE                         l1856 2082  
                       l2496 14D0                         l2488 143A                         l2648 1C4A  
                       l1794 26C4                         l1786 2680                         l1778 2644  
                       l2594 260C                         l1882 2132                         l1866 20BA  
                       l1858 208A                         l1954 2738                         l1970 2774  
                       l2666 1CF8                         l1956 2742                         l1948 2722  
                       l1892 2392                         l1974 2784                         l1966 2768  
                       l1958 274A                         l1990 28D6                         l1894 23AC  
                       l2678 1D48                         l1994 28E4                         l1986 28C8  
                       l1898 23BA                         l1996 28EE                         l1998 28F6  
                       STR_1 1077                         STR_2 1077                         u2300 24A8  
                       u1501 1FA6                         u1511 1FBA                         u2071 216A  
                       u2305 24A0                         u2091 2188                         u1711 2384  
                       u2281 247C                         u1731 23A2                         u2640 14FC  
                       u2480 115C                         u2721 2562                 printf@tmpval 0075  
                       u2741 2580                         u2485 1152                         u2781 1A9A  
                       _TRMT 007D61          ??_Deactivate_Buzzer 0001                         _main 1A88  
               ___ftpack@arg 0001                 ___ftpack@exp 0004               ??_get_full_ADC 0003  
                       fsr2h 000FDA                         fsr1l 000FE1                         indf2 000FDF  
                       fsr2l 000FD9                         prodh 000FF4                         prodl 000FF3  
                       start 0000                 ___ftmul@cntr 001A                 ___param_bank 000010  
               ___ftmul@sign 001B                 ___fttol@exp1 002A                 ___fttol@lval 0026  
  __end_of_Deactivate_Buzzer 2C14                        ?_main 0001              __end_of___awdiv 2790  
            __end_of___ftadd 215A              __end_of___awmod 2934              __end_of___ftdiv 2634  
            __end_of___ftneg 2B90              __end_of___lldiv 28B2              __end_of___ftmul 246C  
            ___awdiv@divisor 0033              __end_of___llmod 29A4              __end_of___ftsub 2AB8  
            __end_of___fttol 2552                        _T2CON 000FCA              ___awdiv@counter 0035  
                      _RCSTA 000FAB                        _SPBRG 000FAF                        _PORTC 000F82  
                      _PORTD 000F83                        _PORTE 000F84                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        _TXREG 000FAD                        _TXSTA 000FAC  
               ___lltoft@exp 0011                ___awtoft@sign 000C              __end_of_dpowers 1029  
                      _scale 16A8                ___ftpack@sign 0005                        _putch 2BDA  
                      main@l 008E                        main@t 0099                        main@u 008C  
               main@num_step 008A               __CFG_BOREN$OFF 000000                        tablat 000FF5  
                      plusw1 000FE3                        plusw2 000FDB                        status 000FD8  
            __initialization 2AF4                 __end_of_main 1D52             __end_of_Init_ADC 2BF6  
                     ??_main 007D                ___fttol@sign1 0025                __activetblptr 000002  
       __size_of__tdiv_to_l_ 0110                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _ADCON2 000FC0             ___llmod@dividend 0001                       ?_scale 003F  
                     _ADRESH 000FC4                       _ADRESL 000FC3                       _CCPR2L 000FBB  
           ___awdiv@dividend 0031             __end_of___awtoft 2AF4                       ?_putch 0001  
           __end_of___ftpack 26FA             __end_of___lltoft 2A74                       _OSCCON 000FD3  
         __size_of_Init_UART 0014                       _SPBRGH 000FB0             __end_of__powers_ 1077  
         __size_of_OpenUSART 0070                       ___ftge 2790     __size_of_Activate_Buzzer 0012  
                     ___wmul 2B1E                    ??___awdiv 0035                    ??___ftadd 004F  
                  ??___awmod 002F                    ??___ftdiv 005B                    ??___ftneg 0004  
                  ??___lldiv 0009                    ??___ftmul 0013                    ??___llmod 0009  
                  ??___ftsub 005B                    ??___fttol 0020                       _fround 1D52  
           ___awdiv@quotient 0037              ___awmod@divisor 002D   __size_of_Deactivate_Buzzer 0008  
            ___awmod@counter 002F                       _printf 1082                       main@RL 009B  
      ___ftmul@f3_as_product 0017         __end_of_get_full_ADC 2B6C                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                     putch@c 0001                   __accesstop 0080      __end_of__initialization 2B14  
                 ___ftadd@f1 0049                   ___ftadd@f2 004C                   ___ftge@ff1 0001  
                 ___ftge@ff2 0004                ___rparam_used 000001                   ___ftdiv@f1 0055  
                 ___ftdiv@f2 0058                   ___ftdiv@f3 005F                   ___ftneg@f1 0001  
                 ___awtoft@c 0009                   ___ftmul@f1 000D                   ___ftmul@f2 0010  
                 ___ftsub@f1 0055                   ___ftsub@f2 0058                   ___fttol@f1 001C  
             __pcstackCOMRAM 0001                 __pidataBANK0 2C02                   ___lltoft@c 0009  
              __end_of_scale 1A88                __end_of_putch 2BE8            __end_of_Init_UART 2BC8  
                 __div_to_l_ 226A            __end_of_OpenUSART 2A14              __div_to_l_@exp1 000C  
            __div_to_l_@cntr 000B                      ??_scale 0042              __div_to_l_@quot 0007  
                    ??_putch 0001                    ?_Init_ADC 0001               Delay_One_Sec@I 0001  
 __end_of_Select_ADC_Channel 2C02                __div_to_l_@f1 0001                __div_to_l_@f2 0004  
         __CFG_CCP2MX$PORTBE 000000                      ?___ftge 0001                      ?___wmul 0039  
                    _CCP2CON 000FBA       __size_of_Delay_One_Sec 0024                      ?_fround 003F  
                  ?___awtoft 0009                    ?___ftpack 0001                      ?_printf 005B  
  Select_ADC_Channel@channel 0001                    ?___lltoft 0009            ??_Activate_Buzzer 0001  
                 ??_Init_ADC 0001            __end_of__npowers_ 1050                      __Hparam 0000  
                 _scale$1186 0042                      __Lparam 0000              __size_of___ftge 0096  
                    ___awdiv 26FA                      ___ftadd 1F96                      ___awmod 28B2  
                    ___ftdiv 2552                      ___ftneg 2B6C                      ___lldiv 2826  
            __size_of___wmul 0028                      ___ftmul 2374                      ___llmod 2934  
                    ___ftsub 2A74                      ___fttol 246C        __size_of_get_full_ADC 0026  
               __psmallconst 1000                      __pcinit 2AF4                   ??___awtoft 000C  
                 ??___ftpack 0006              __size_of_fround 0244                      __ramtop 1000  
                 ??___lltoft 000D                      __ptext0 1A88                      __ptext1 1082  
                    __ptext2 16A8                      __ptext3 2BDA                      __ptext4 1D52  
                    __ptext5 2B1E                      __ptext6 2374                      __ptext7 28B2  
                    __ptext8 26FA                      __ptext9 215A              __size_of_printf 0626  
                ?__div_to_l_ 0001                      _dpowers 1001             ___awmod@dividend 002B  
       end_of_initialization 2B14                _Delay_One_Sec 2B90                __Lmediumconst 0000  
               _get_full_ADC 2B46              ___lldiv@divisor 0005              ___lldiv@counter 000D  
                  _RCSTAbits 000FAB                      printf@c 007C                      printf@f 005B  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE               __tdiv_to_l_@f1 0001               __tdiv_to_l_@f2 0004  
              ??__tdiv_to_l_ 0007                    _PORTBbits 000F81                    _PORTDbits 000F83  
                  _TRISCbits 000F94               main@voltage_mv 0094               ?_Delay_One_Sec 0001  
                ___ftdiv@exp 0062                    _TXSTAbits 000FAC           get_full_ADC@result 0005  
        __size_of__div_to_l_ 010A                  ___ftmul@exp 0016               __end_of___ftge 2826  
             __end_of___wmul 2B46               __end_of_fround 1F96               __end_of_printf 16A8  
        start_initialization 2AF4                    _Init_UART 2BB4          __end_of__tdiv_to_l_ 226A  
                  _OpenUSART 29A4              ___llmod@divisor 0005             __CFG_OSC$INTIO67 000000  
          __size_of_Init_ADC 000E              ___llmod@counter 0009              _Activate_Buzzer 2BC8  
                   ??___ftge 0007                     ??___wmul 003D                  __pdataBANK0 009E  
         _Select_ADC_Channel 2BF6                     ??_fround 0042                     ??_printf 0060  
                 fround@prec 0048            __size_of___awtoft 003C            __size_of___ftpack 00C6  
        ?_Select_ADC_Channel 0001            __size_of___lltoft 0060                   ?_Init_UART 0001  
              __pcstackBANK0 0080              ??_Delay_One_Sec 0001                   ?_OpenUSART 0001  
       ??_Select_ADC_Channel 0001                     ?___awdiv 0031                     ?___ftadd 0049  
                   ?___awmod 002B                     ?___ftdiv 0055                     ?___ftneg 0001  
                   ?___lldiv 0001                     ?___ftmul 000D                     ?___llmod 0001  
                   ?___ftsub 0055                    __npowers_ 1029                     ?___fttol 001C  
                __tdiv_to_l_ 215A                 ??__div_to_l_ 0007                  __smallconst 1000  
             __size_of_scale 03E0               __size_of_putch 000E      __end_of_Activate_Buzzer 2BDA  
             ___wmul@product 003D                     _PIE1bits 000F9D                     _PIR1bits 000F9E  
         __end_of__div_to_l_ 2374                    main@F4283 009E                    main@RLint 0097  
                 _ADCON0bits 000FC2            ___wmul@multiplier 0039                    main@l_300 0092  
                  main@t_301 009A                    main@u_299 0090                   printf@flag 006B  
                 printf@fval 0079                   printf@prec 006D                  ??_Init_UART 0004  
                  copy_data0 2B08                     _Init_ADC 2BE8                  ??_OpenUSART 0003  
            OpenUSART@config 0003                     __Hrparam 0000                     __Lrparam 0000  
           __size_of___awdiv 0096             __size_of___ftadd 01C4             __size_of___awmod 0082  
           __size_of___ftdiv 00E2             __size_of___ftneg 0024             __size_of___lldiv 008C  
           __size_of___ftmul 00F8             __size_of___llmod 0070             __size_of___ftsub 0044  
           __size_of___fttol 00E6                     ___awtoft 2AB8                     ___ftpack 2634  
                _fround$1184 0045                  _fround$1185 0042                     ___lltoft 2A14  
                   __ptext10 226A                     __ptext11 2A14                     __ptext20 2552  
                   __ptext12 2934                     __ptext21 2AB8                     __ptext13 2826  
                   __ptext22 2634                     __ptext14 246C                     __ptext23 2BF6  
                   __ptext15 2A74                     __ptext24 2BB4                     __ptext16 1F96  
                   __ptext25 29A4                     __ptext17 2B6C                     __ptext26 2BE8  
                   __ptext18 2790                     __ptext27 2B90                     __ptext19 2B46  
                   __ptext28 2C0C                     __ptext29 2BC8                     __powers_ 1050  
           ?_Activate_Buzzer 0001                __size_of_main 02CA                    printf@exp 0073  
                  printf@val 006F               OpenUSART@spbrg 0001                     scale@scl 0045  
           __tdiv_to_l_@exp1 000F             __tdiv_to_l_@cntr 000E             __tdiv_to_l_@quot 000A  
           ___lldiv@dividend 0001                     printf@ap 0069                 ?__tdiv_to_l_ 0001  
                _printf$1187 0066             ___lldiv@quotient 0009                 main@LED_7seg 0080  
      __end_of_Delay_One_Sec 2BB4                ?_get_full_ADC 0001  __size_of_Select_ADC_Channel 000C  
