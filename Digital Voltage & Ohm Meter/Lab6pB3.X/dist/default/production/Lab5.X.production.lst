

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Oct 02 21:51:20 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           	psect	idataBANK0
    53  002DB6                     __pidataBANK0:
    54                           	opt stack 0
    55                           
    56                           ;initializer for main@F4301
    57  002DB6  01                 	db	1
    58  002DB7  4F                 	db	79
    59  002DB8  12                 	db	18
    60  002DB9  06                 	db	6
    61  002DBA  4C                 	db	76
    62  002DBB  24                 	db	36
    63  002DBC  20                 	db	32
    64  002DBD  0F                 	db	15
    65  002DBE  00                 	db	0
    66  002DBF  04                 	db	4
    67                           
    68                           	psect	smallconst
    69  001000                     __psmallconst:
    70                           	opt stack 0
    71  001000  00                 	db	0
    72  001001                     _dpowers:
    73                           	opt stack 0
    74  001001  0001               	dw	1
    75  001003  0000               	dw	0
    76  001005  000A               	dw	10
    77  001007  0000               	dw	0
    78  001009  0064               	dw	100
    79  00100B  0000               	dw	0
    80  00100D  03E8               	dw	1000
    81  00100F  0000               	dw	0
    82  001011  2710               	dw	10000
    83  001013  0000               	dw	0
    84  001015  86A0               	dw	34464
    85  001017  0001               	dw	1
    86  001019  4240               	dw	16960
    87  00101B  000F               	dw	15
    88  00101D  9680               	dw	38528
    89  00101F  0098               	dw	152
    90  001021  E100               	dw	57600
    91  001023  05F5               	dw	1525
    92  001025  CA00               	dw	51712
    93  001027  3B9A               	dw	15258
    94  001029                     __end_of_dpowers:
    95                           	opt stack 0
    96  001029                     __npowers_:
    97                           	opt stack 0
    98  001029  00                 	db	0
    99  00102A  80                 	db	128
   100  00102B  3F                 	db	63
   101  00102C  CD                 	db	205
   102  00102D  CC                 	db	204
   103  00102E  3D                 	db	61
   104  00102F  D7                 	db	215
   105  001030  23                 	db	35
   106  001031  3C                 	db	60
   107  001032  12                 	db	18
   108  001033  83                 	db	131
   109  001034  3A                 	db	58
   110  001035  B7                 	db	183
   111  001036  D1                 	db	209
   112  001037  38                 	db	56
   113  001038  C6                 	db	198
   114  001039  27                 	db	39
   115  00103A  37                 	db	55
   116  00103B  38                 	db	56
   117  00103C  86                 	db	134
   118  00103D  35                 	db	53
   119  00103E  C0                 	db	192
   120  00103F  D6                 	db	214
   121  001040  33                 	db	51
   122  001041  CC                 	db	204
   123  001042  2B                 	db	43
   124  001043  32                 	db	50
   125  001044  70                 	db	112
   126  001045  89                 	db	137
   127  001046  30                 	db	48
   128  001047  E7                 	db	231
   129  001048  DB                 	db	219
   130  001049  2E                 	db	46
   131  00104A  E5                 	db	229
   132  00104B  3C                 	db	60
   133  00104C  1E                 	db	30
   134  00104D  42                 	db	66
   135  00104E  A2                 	db	162
   136  00104F  0D                 	db	13
   137  001050                     __end_of__npowers_:
   138                           	opt stack 0
   139  001050                     __powers_:
   140                           	opt stack 0
   141  001050  00                 	db	0
   142  001051  80                 	db	128
   143  001052  3F                 	db	63
   144  001053  00                 	db	0
   145  001054  20                 	db	32
   146  001055  41                 	db	65
   147  001056  00                 	db	0
   148  001057  C8                 	db	200
   149  001058  42                 	db	66
   150  001059  00                 	db	0
   151  00105A  7A                 	db	122
   152  00105B  44                 	db	68
   153  00105C  40                 	db	64
   154  00105D  1C                 	db	28
   155  00105E  46                 	db	70
   156  00105F  50                 	db	80
   157  001060  C3                 	db	195
   158  001061  47                 	db	71
   159  001062  24                 	db	36
   160  001063  74                 	db	116
   161  001064  49                 	db	73
   162  001065  97                 	db	151
   163  001066  18                 	db	24
   164  001067  4B                 	db	75
   165  001068  BC                 	db	188
   166  001069  BE                 	db	190
   167  00106A  4C                 	db	76
   168  00106B  6B                 	db	107
   169  00106C  6E                 	db	110
   170  00106D  4E                 	db	78
   171  00106E  03                 	db	3
   172  00106F  15                 	db	21
   173  001070  50                 	db	80
   174  001071  79                 	db	121
   175  001072  AD                 	db	173
   176  001073  60                 	db	96
   177  001074  F3                 	db	243
   178  001075  49                 	db	73
   179  001076  71                 	db	113
   180  001077                     __end_of__powers_:
   181                           	opt stack 0
   182  0000                     _ADCON0	set	4034
   183  0000                     _ADCON0bits	set	4034
   184  0000                     _ADCON1	set	4033
   185  0000                     _ADCON2	set	4032
   186  0000                     _ADRESH	set	4036
   187  0000                     _ADRESL	set	4035
   188  0000                     _OSCCON	set	4051
   189  0000                     _PIE1bits	set	3997
   190  0000                     _PIR1bits	set	3998
   191  0000                     _PORTAbits	set	3968
   192  0000                     _PORTB	set	3969
   193  0000                     _PORTBbits	set	3969
   194  0000                     _PORTC	set	3970
   195  0000                     _PORTD	set	3971
   196  0000                     _PORTE	set	3972
   197  0000                     _RCSTA	set	4011
   198  0000                     _RCSTAbits	set	4011
   199  0000                     _SPBRG	set	4015
   200  0000                     _SPBRGH	set	4016
   201  0000                     _TRISA	set	3986
   202  0000                     _TRISB	set	3987
   203  0000                     _TRISC	set	3988
   204  0000                     _TRISCbits	set	3988
   205  0000                     _TRISD	set	3989
   206  0000                     _TRISE	set	3990
   207  0000                     _TXREG	set	4013
   208  0000                     _TXSTA	set	4012
   209  0000                     _TXSTAbits	set	4012
   210  0000                     _TRMT	set	32097
   211  001077                     STR_1:
   212  001077  74                 	db	116	;'t'
   213  001078  65                 	db	101	;'e'
   214  001079  6D                 	db	109	;'m'
   215  00107A  70                 	db	112	;'p'
   216  00107B  65                 	db	101	;'e'
   217  00107C  72                 	db	114	;'r'
   218  00107D  61                 	db	97	;'a'
   219  00107E  74                 	db	116	;'t'
   220  00107F  75                 	db	117	;'u'
   221  001080  72                 	db	114	;'r'
   222  001081  65                 	db	101	;'e'
   223  001082  20                 	db	32
   224  001083  3D                 	db	61	;'='
   225  001084  25                 	db	37
   226  001085  64                 	db	100	;'d'
   227  001086  0D                 	db	13
   228  001087  0A                 	db	10
   229  001088  00                 	db	0
   230  001089                     STR_2:
   231  001089  76                 	db	118	;'v'
   232  00108A  6F                 	db	111	;'o'
   233  00108B  6C                 	db	108	;'l'
   234  00108C  74                 	db	116	;'t'
   235  00108D  61                 	db	97	;'a'
   236  00108E  67                 	db	103	;'g'
   237  00108F  65                 	db	101	;'e'
   238  001090  20                 	db	32
   239  001091  3D                 	db	61	;'='
   240  001092  25                 	db	37
   241  001093  66                 	db	102	;'f'
   242  001094  0D                 	db	13
   243  001095  0A                 	db	10
   244  001096  00                 	db	0
   245                           
   246                           ; #config settings
   247  001097  00                 	db	0	; dummy byte at the end
   248  0000                     
   249                           	psect	cinit
   250  002CA4                     __pcinit:
   251                           	opt stack 0
   252  002CA4                     start_initialization:
   253                           	opt stack 0
   254  002CA4                     __initialization:
   255                           	opt stack 0
   256                           
   257                           ; Initialize objects allocated to BANK0 (10 bytes)
   258                           ; load TBLPTR registers with __pidataBANK0
   259  002CA4  0EB6               	movlw	low __pidataBANK0
   260  002CA6  6EF6               	movwf	tblptrl,c
   261  002CA8  0E2D               	movlw	high __pidataBANK0
   262  002CAA  6EF7               	movwf	tblptrh,c
   263  002CAC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   264  002CAE  6EF8               	movwf	tblptru,c
   265  002CB0  EE00  F080         	lfsr	0,__pdataBANK0
   266  002CB4  EE10 F00A          	lfsr	1,10
   267  002CB8                     copy_data0:
   268  002CB8  0009               	tblrd		*+
   269  002CBA  CFF5 FFEE          	movff	tablat,postinc0
   270  002CBE  50E5               	movf	postdec1,w,c
   271  002CC0  50E1               	movf	fsr1l,w,c
   272  002CC2  E1FA               	bnz	copy_data0
   273  002CC4                     end_of_initialization:
   274                           	opt stack 0
   275  002CC4                     __end_of__initialization:
   276                           	opt stack 0
   277  002CC4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   278  002CC6  6EF8               	movwf	tblptru,c
   279  002CC8  0100               	movlb	0
   280  002CCA  EFE3  F00D         	goto	_main	;jump to C main() function
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           postdec1	equ	0xFE5
   287                           fsr1l	equ	0xFE1
   288                           
   289                           	psect	dataBANK0
   290  000080                     __pdataBANK0:
   291                           	opt stack 0
   292  000080                     main@F4301:
   293                           	opt stack 0
   294  000080                     	ds	10
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           postdec1	equ	0xFE5
   301                           fsr1l	equ	0xFE1
   302                           
   303                           	psect	cstackCOMRAM
   304  000001                     __pcstackCOMRAM:
   305                           	opt stack 0
   306  000001                     ?_get_full_ADC:
   307                           	opt stack 0
   308  000001                     ?___awmod:
   309                           	opt stack 0
   310  000001                     ?___ftpack:
   311                           	opt stack 0
   312  000001                     ?___ftneg:
   313                           	opt stack 0
   314  000001                     ?__tdiv_to_l_:
   315                           	opt stack 0
   316  000001                     ?__div_to_l_:
   317                           	opt stack 0
   318  000001                     ?___lldiv:
   319                           	opt stack 0
   320  000001                     putch@c:
   321                           	opt stack 0
   322  000001                     Select_ADC_Channel@channel:
   323                           	opt stack 0
   324  000001                     Delay_One_Sec@I:
   325                           	opt stack 0
   326  000001                     OpenUSART@spbrg:
   327                           	opt stack 0
   328  000001                     ___awmod@dividend:
   329                           	opt stack 0
   330  000001                     __div_to_l_@f1:
   331                           	opt stack 0
   332  000001                     ___ftpack@arg:
   333                           	opt stack 0
   334  000001                     __tdiv_to_l_@f1:
   335                           	opt stack 0
   336  000001                     ___ftge@ff1:
   337                           	opt stack 0
   338  000001                     ___ftneg@f1:
   339                           	opt stack 0
   340  000001                     ___lldiv@dividend:
   341                           	opt stack 0
   342                           
   343                           ; 4 bytes @ 0x0
   344  000001                     	ds	2
   345  000003                     ??_get_full_ADC:
   346  000003                     OpenUSART@config:
   347                           	opt stack 0
   348  000003                     ___awmod@divisor:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x2
   352  000003                     	ds	1
   353  000004                     ___ftpack@exp:
   354                           	opt stack 0
   355  000004                     __div_to_l_@f2:
   356                           	opt stack 0
   357  000004                     __tdiv_to_l_@f2:
   358                           	opt stack 0
   359  000004                     ___ftge@ff2:
   360                           	opt stack 0
   361                           
   362                           ; 3 bytes @ 0x3
   363  000004                     	ds	1
   364  000005                     ___awmod@counter:
   365                           	opt stack 0
   366  000005                     ___ftpack@sign:
   367                           	opt stack 0
   368  000005                     get_full_ADC@result:
   369                           	opt stack 0
   370  000005                     ___lldiv@divisor:
   371                           	opt stack 0
   372                           
   373                           ; 4 bytes @ 0x4
   374  000005                     	ds	1
   375  000006                     ??___ftpack:
   376  000006                     ___awmod@sign:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x5
   380  000006                     	ds	1
   381  000007                     ??__tdiv_to_l_:
   382  000007                     ??___ftge:
   383  000007                     ?___awdiv:
   384                           	opt stack 0
   385  000007                     ___awdiv@dividend:
   386                           	opt stack 0
   387  000007                     __div_to_l_@quot:
   388                           	opt stack 0
   389                           
   390                           ; 4 bytes @ 0x6
   391  000007                     	ds	2
   392  000009                     ?___awtoft:
   393                           	opt stack 0
   394  000009                     ?___lltoft:
   395                           	opt stack 0
   396  000009                     ___awdiv@divisor:
   397                           	opt stack 0
   398  000009                     ___awtoft@c:
   399                           	opt stack 0
   400  000009                     ___lldiv@quotient:
   401                           	opt stack 0
   402  000009                     ___lltoft@c:
   403                           	opt stack 0
   404                           
   405                           ; 4 bytes @ 0x8
   406  000009                     	ds	1
   407  00000A                     __tdiv_to_l_@quot:
   408                           	opt stack 0
   409                           
   410                           ; 4 bytes @ 0x9
   411  00000A                     	ds	1
   412  00000B                     ___awdiv@counter:
   413                           	opt stack 0
   414  00000B                     __div_to_l_@cntr:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0xA
   418  00000B                     	ds	1
   419  00000C                     ___awdiv@sign:
   420                           	opt stack 0
   421  00000C                     ___awtoft@sign:
   422                           	opt stack 0
   423  00000C                     __div_to_l_@exp1:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0xB
   427  00000C                     	ds	1
   428  00000D                     ??___lltoft:
   429  00000D                     ?___ftdiv:
   430                           	opt stack 0
   431  00000D                     ___lldiv@counter:
   432                           	opt stack 0
   433  00000D                     ___awdiv@quotient:
   434                           	opt stack 0
   435  00000D                     ___ftdiv@f1:
   436                           	opt stack 0
   437                           
   438                           ; 3 bytes @ 0xC
   439  00000D                     	ds	1
   440  00000E                     ?___llmod:
   441                           	opt stack 0
   442  00000E                     __tdiv_to_l_@cntr:
   443                           	opt stack 0
   444  00000E                     ___llmod@dividend:
   445                           	opt stack 0
   446                           
   447                           ; 4 bytes @ 0xD
   448  00000E                     	ds	1
   449  00000F                     ?___wmul:
   450                           	opt stack 0
   451  00000F                     __tdiv_to_l_@exp1:
   452                           	opt stack 0
   453  00000F                     ___wmul@multiplier:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0xE
   457  00000F                     	ds	1
   458  000010                     ___ftdiv@f2:
   459                           	opt stack 0
   460                           
   461                           ; 3 bytes @ 0xF
   462  000010                     	ds	1
   463  000011                     ___lltoft@exp:
   464                           	opt stack 0
   465  000011                     ___wmul@multiplicand:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x10
   469  000011                     	ds	1
   470  000012                     ___llmod@divisor:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x11
   474  000012                     	ds	1
   475  000013                     ??___ftdiv:
   476  000013                     ___wmul@product:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x12
   480  000013                     	ds	2
   481  000015                     ?___ftmul:
   482                           	opt stack 0
   483  000015                     ___ftmul@f1:
   484                           	opt stack 0
   485                           
   486                           ; 3 bytes @ 0x14
   487  000015                     	ds	1
   488  000016                     ___ftdiv@cntr:
   489                           	opt stack 0
   490  000016                     ___llmod@counter:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x15
   494  000016                     	ds	1
   495  000017                     ___ftdiv@f3:
   496                           	opt stack 0
   497                           
   498                           ; 3 bytes @ 0x16
   499  000017                     	ds	1
   500  000018                     ___ftmul@f2:
   501                           	opt stack 0
   502                           
   503                           ; 3 bytes @ 0x17
   504  000018                     	ds	2
   505  00001A                     ___ftdiv@exp:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x19
   509  00001A                     	ds	1
   510  00001B                     ??___ftmul:
   511  00001B                     ___ftdiv@sign:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x1A
   515  00001B                     	ds	3
   516  00001E                     ___ftmul@exp:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x1D
   520  00001E                     	ds	1
   521  00001F                     ___ftmul@f3_as_product:
   522                           	opt stack 0
   523                           
   524                           ; 3 bytes @ 0x1E
   525  00001F                     	ds	3
   526  000022                     ___ftmul@cntr:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x21
   530  000022                     	ds	1
   531  000023                     ___ftmul@sign:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x22
   535  000023                     	ds	1
   536  000024                     ?_fround:
   537                           	opt stack 0
   538  000024                     ?_scale:
   539                           	opt stack 0
   540                           
   541                           ; 3 bytes @ 0x23
   542  000024                     	ds	3
   543  000027                     _fround$1245:
   544                           	opt stack 0
   545  000027                     _scale$1246:
   546                           	opt stack 0
   547                           
   548                           ; 3 bytes @ 0x26
   549  000027                     	ds	3
   550  00002A                     scale@scl:
   551                           	opt stack 0
   552  00002A                     _fround$1244:
   553                           	opt stack 0
   554                           
   555                           ; 3 bytes @ 0x29
   556  00002A                     	ds	1
   557  00002B                     ?___fttol:
   558                           	opt stack 0
   559  00002B                     ___fttol@f1:
   560                           	opt stack 0
   561                           
   562                           ; 3 bytes @ 0x2A
   563  00002B                     	ds	2
   564  00002D                     fround@prec:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x2C
   568  00002D                     	ds	1
   569  00002E                     ?___ftadd:
   570                           	opt stack 0
   571  00002E                     ___ftadd@f1:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x2D
   575  00002E                     	ds	1
   576  00002F                     ??___fttol:
   577                           
   578                           ; 0 bytes @ 0x2E
   579  00002F                     	ds	2
   580  000031                     ___ftadd@f2:
   581                           	opt stack 0
   582                           
   583                           ; 3 bytes @ 0x30
   584  000031                     	ds	3
   585  000034                     ??___ftadd:
   586  000034                     ___fttol@sign1:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x33
   590  000034                     	ds	1
   591  000035                     ___fttol@lval:
   592                           	opt stack 0
   593                           
   594                           ; 4 bytes @ 0x34
   595  000035                     	ds	2
   596  000037                     ___ftadd@sign:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x36
   600  000037                     	ds	1
   601  000038                     ___ftadd@exp2:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x37
   605  000038                     	ds	1
   606  000039                     ___ftadd@exp1:
   607                           	opt stack 0
   608  000039                     ___fttol@exp1:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x38
   612  000039                     	ds	1
   613  00003A                     ?___ftsub:
   614                           	opt stack 0
   615  00003A                     ___ftsub@f1:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0x39
   619  00003A                     	ds	3
   620  00003D                     ___ftsub@f2:
   621                           	opt stack 0
   622                           
   623                           ; 3 bytes @ 0x3C
   624  00003D                     	ds	3
   625  000040                     ?_printf:
   626                           	opt stack 0
   627  000040                     printf@f:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x3F
   631  000040                     	ds	5
   632  000045                     ??_printf:
   633                           
   634                           ; 0 bytes @ 0x44
   635  000045                     	ds	6
   636  00004B                     _printf$1247:
   637                           	opt stack 0
   638                           
   639                           ; 3 bytes @ 0x4A
   640  00004B                     	ds	3
   641  00004E                     printf@ap:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x4D
   645  00004E                     	ds	2
   646  000050                     printf@flag:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x4F
   650  000050                     	ds	2
   651  000052                     printf@prec:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x51
   655  000052                     	ds	2
   656  000054                     printf@val:
   657                           	opt stack 0
   658                           
   659                           ; 4 bytes @ 0x53
   660  000054                     	ds	4
   661  000058                     printf@exp:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x57
   665  000058                     	ds	2
   666  00005A                     printf@tmpval:
   667                           	opt stack 0
   668                           
   669                           ; 4 bytes @ 0x59
   670  00005A                     	ds	4
   671  00005E                     printf@fval:
   672                           	opt stack 0
   673                           
   674                           ; 3 bytes @ 0x5D
   675  00005E                     	ds	3
   676  000061                     printf@c:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x60
   680  000061                     	ds	1
   681  000062                     ??_main:
   682                           
   683                           ; 0 bytes @ 0x61
   684  000062                     	ds	2
   685  000064                     main@LED_7seg:
   686                           	opt stack 0
   687                           
   688                           ; 10 bytes @ 0x63
   689  000064                     	ds	10
   690  00006E                     main@tempC:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x6D
   694  00006E                     	ds	3
   695  000071                     main@voltage_t:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x70
   699  000071                     	ds	2
   700  000073                     main@l:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x72
   704  000073                     	ds	1
   705  000074                     main@num_step:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x73
   709  000074                     	ds	2
   710  000076                     main@t:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x75
   714  000076                     	ds	1
   715  000077                     main@tempF:
   716                           	opt stack 0
   717                           
   718                           ; 3 bytes @ 0x76
   719  000077                     	ds	3
   720  00007A                     main@voltage_mv2:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x79
   724  00007A                     	ds	3
   725  00007D                     main@u:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x7C
   729  00007D                     	ds	1
   730  00007E                     main@tempF_int:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x7D
   734  00007E                     	ds	2
   735                           tblptru	equ	0xFF8
   736                           tblptrh	equ	0xFF7
   737                           tblptrl	equ	0xFF6
   738                           tablat	equ	0xFF5
   739                           postinc0	equ	0xFEE
   740                           postdec1	equ	0xFE5
   741                           fsr1l	equ	0xFE1
   742                           
   743 ;;
   744 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   745 ;;
   746 ;; *************** function _main *****************
   747 ;; Defined at:
   748 ;;		line 55 in file "Lab5.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  voltage_mv2     3  121[COMRAM] float 
   753 ;;  tempF           3  118[COMRAM] float 
   754 ;;  tempC           3  109[COMRAM] float 
   755 ;;  tempF_int       2  125[COMRAM] int 
   756 ;;  num_step        2  115[COMRAM] int 
   757 ;;  voltage_t       2  112[COMRAM] int 
   758 ;;  u               1  124[COMRAM] unsigned char 
   759 ;;  t               1  117[COMRAM] unsigned char 
   760 ;;  l               1  114[COMRAM] unsigned char 
   761 ;;  LED_7seg       10   99[COMRAM] unsigned char [10]
   762 ;; Return value:  Size  Location     Type
   763 ;;		None               void
   764 ;; Registers used:
   765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   772 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;Total ram usage:       30 bytes
   776 ;; Hardware stack levels required when called:    4
   777 ;; This function calls:
   778 ;;		_Delay_One_Sec
   779 ;;		_Init_ADC
   780 ;;		_Init_TRIS
   781 ;;		_Init_UART
   782 ;;		_SET_D1_BLUE
   783 ;;		_SET_D1_GREEN
   784 ;;		_SET_D1_OFF
   785 ;;		_SET_D1_RED
   786 ;;		_SET_D1_WHITE
   787 ;;		_SET_D2_OFF
   788 ;;		_SET_D2_WHITE
   789 ;;		_SET_D3_BLUE
   790 ;;		_SET_D3_PURPLE
   791 ;;		_SET_D3_RED
   792 ;;		_Select_ADC_Channel
   793 ;;		___awdiv
   794 ;;		___awmod
   795 ;;		___awtoft
   796 ;;		___ftadd
   797 ;;		___ftdiv
   798 ;;		___ftge
   799 ;;		___ftmul
   800 ;;		___fttol
   801 ;;		_get_full_ADC
   802 ;;		_printf
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text0
   809  001BC6                     __ptext0:
   810                           	opt stack 0
   811  001BC6                     _main:
   812                           	opt stack 27
   813                           
   814                           ;Lab5.c: 57: Init_UART();
   815                           
   816                           ;incstack = 0
   817  001BC6  ECBD  F016         	call	_Init_UART	;wreg free
   818                           
   819                           ;Lab5.c: 58: Init_ADC();
   820  001BCA  ECCE  F016         	call	_Init_ADC	;wreg free
   821                           
   822                           ;Lab5.c: 59: Init_TRIS();
   823  001BCE  ECB2  F016         	call	_Init_TRIS	;wreg free
   824                           
   825                           ;Lab5.c: 60: char LED_7seg[10] = {0x01,0x4F, 0x12, 0x06, 0x4C, 0x24, 0x20, 0x0F, 0x00, 0
      +                          x04};
   826  001BD2  EE20  F080         	lfsr	2,main@F4301
   827  001BD6  EE10  F064         	lfsr	1,main@LED_7seg
   828  001BDA  0E09               	movlw	9
   829  001BDC                     u3001:
   830  001BDC  CFDB FFE3          	movff	plusw2,plusw1
   831  001BE0  06E8               	decf	wreg,f,c
   832  001BE2  E2FC               	bc	u3001
   833  001BE4  D000               	goto	l2798
   834  001BE6                     l2798:
   835                           
   836                           ;Lab5.c: 63: {
   837                           ;Lab5.c: 64: Select_ADC_Channel(0);
   838  001BE6  0E00               	movlw	0
   839  001BE8  ECD5  F016         	call	_Select_ADC_Channel
   840                           
   841                           ;Lab5.c: 65: int num_step = get_full_ADC();
   842  001BEC  EC7B  F016         	call	_get_full_ADC	;wreg free
   843  001BF0  C001  F074         	movff	?_get_full_ADC,main@num_step
   844  001BF4  C002  F075         	movff	?_get_full_ADC+1,main@num_step+1
   845                           
   846                           ;Lab5.c: 66: int voltage_t = num_step*4;
   847  001BF8  C074  F062         	movff	main@num_step,??_main
   848  001BFC  C075  F063         	movff	main@num_step+1,??_main+1
   849  001C00  90D8               	bcf	status,0,c
   850  001C02  3662               	rlcf	??_main,f,c
   851  001C04  3663               	rlcf	??_main+1,f,c
   852  001C06  90D8               	bcf	status,0,c
   853  001C08  3662               	rlcf	??_main,f,c
   854  001C0A  3663               	rlcf	??_main+1,f,c
   855  001C0C  C062  F071         	movff	??_main,main@voltage_t
   856  001C10  C063  F072         	movff	??_main+1,main@voltage_t+1
   857                           
   858                           ;Lab5.c: 67: float tempC = (1035 - voltage_t) / 5.5;
   859  001C14  C071  F062         	movff	main@voltage_t,??_main
   860  001C18  C072  F063         	movff	main@voltage_t+1,??_main+1
   861  001C1C  1E62               	comf	??_main,f,c
   862  001C1E  1E63               	comf	??_main+1,f,c
   863  001C20  4A62               	infsnz	??_main,f,c
   864  001C22  2A63               	incf	??_main+1,f,c
   865  001C24  0E0B               	movlw	11
   866  001C26  2462               	addwf	??_main,w,c
   867  001C28  6E09               	movwf	___awtoft@c,c
   868  001C2A  0E04               	movlw	4
   869  001C2C  2063               	addwfc	??_main+1,w,c
   870  001C2E  6E0A               	movwf	___awtoft@c+1,c
   871  001C30  EC34  F016         	call	___awtoft	;wreg free
   872  001C34  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   873  001C38  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   874  001C3C  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   875  001C40  0E00               	movlw	0
   876  001C42  6E10               	movwf	___ftdiv@f2,c
   877  001C44  0EB0               	movlw	176
   878  001C46  6E11               	movwf	___ftdiv@f2+1,c
   879  001C48  0E40               	movlw	64
   880  001C4A  6E12               	movwf	___ftdiv@f2+2,c
   881  001C4C  EC81  F013         	call	___ftdiv	;wreg free
   882  001C50  C00D  F06E         	movff	?___ftdiv,main@tempC
   883  001C54  C00E  F06F         	movff	?___ftdiv+1,main@tempC+1
   884  001C58  C00F  F070         	movff	?___ftdiv+2,main@tempC+2
   885                           
   886                           ;Lab5.c: 68: float tempF = (1.5 * tempC) + 32;
   887  001C5C  0E00               	movlw	0
   888  001C5E  6E18               	movwf	___ftmul@f2,c
   889  001C60  0EC0               	movlw	192
   890  001C62  6E19               	movwf	___ftmul@f2+1,c
   891  001C64  0E3F               	movlw	63
   892  001C66  6E1A               	movwf	___ftmul@f2+2,c
   893  001C68  C06E  F015         	movff	main@tempC,___ftmul@f1
   894  001C6C  C06F  F016         	movff	main@tempC+1,___ftmul@f1+1
   895  001C70  C070  F017         	movff	main@tempC+2,___ftmul@f1+2
   896  001C74  EC92  F012         	call	___ftmul	;wreg free
   897  001C78  C015  F02E         	movff	?___ftmul,___ftadd@f1
   898  001C7C  C016  F02F         	movff	?___ftmul+1,___ftadd@f1+1
   899  001C80  C017  F030         	movff	?___ftmul+2,___ftadd@f1+2
   900  001C84  0E00               	movlw	0
   901  001C86  6E31               	movwf	___ftadd@f2,c
   902  001C88  0E00               	movlw	0
   903  001C8A  6E32               	movwf	___ftadd@f2+1,c
   904  001C8C  0E42               	movlw	66
   905  001C8E  6E33               	movwf	___ftadd@f2+2,c
   906  001C90  ECA3  F010         	call	___ftadd	;wreg free
   907  001C94  C02E  F077         	movff	?___ftadd,main@tempF
   908  001C98  C02F  F078         	movff	?___ftadd+1,main@tempF+1
   909  001C9C  C030  F079         	movff	?___ftadd+2,main@tempF+2
   910                           
   911                           ;Lab5.c: 69: int tempF_int = (int) tempF;
   912  001CA0  C077  F02B         	movff	main@tempF,___fttol@f1
   913  001CA4  C078  F02C         	movff	main@tempF+1,___fttol@f1+1
   914  001CA8  C079  F02D         	movff	main@tempF+2,___fttol@f1+2
   915  001CAC  EC0E  F013         	call	___fttol	;wreg free
   916  001CB0  C02B  F07E         	movff	?___fttol,main@tempF_int
   917  001CB4  C02C  F07F         	movff	?___fttol+1,main@tempF_int+1
   918                           
   919                           ;Lab5.c: 70: char u = tempF_int / 10;
   920  001CB8  C07E  F007         	movff	main@tempF_int,___awdiv@dividend
   921  001CBC  C07F  F008         	movff	main@tempF_int+1,___awdiv@dividend+1
   922  001CC0  0E00               	movlw	0
   923  001CC2  6E0A               	movwf	___awdiv@divisor+1,c
   924  001CC4  0E0A               	movlw	10
   925  001CC6  6E09               	movwf	___awdiv@divisor,c
   926  001CC8  EC55  F014         	call	___awdiv	;wreg free
   927  001CCC  5007               	movf	?___awdiv,w,c
   928  001CCE  6E7D               	movwf	main@u,c
   929                           
   930                           ;Lab5.c: 71: char l = tempF_int % 10;
   931  001CD0  C07E  F001         	movff	main@tempF_int,___awmod@dividend
   932  001CD4  C07F  F002         	movff	main@tempF_int+1,___awmod@dividend+1
   933  001CD8  0E00               	movlw	0
   934  001CDA  6E04               	movwf	___awmod@divisor+1,c
   935  001CDC  0E0A               	movlw	10
   936  001CDE  6E03               	movwf	___awmod@divisor,c
   937  001CE0  EC31  F015         	call	___awmod	;wreg free
   938  001CE4  5001               	movf	?___awmod,w,c
   939  001CE6  6E73               	movwf	main@l,c
   940                           
   941                           ;Lab5.c: 72: PORTD = LED_7seg[l];
   942  001CE8  5073               	movf	main@l,w,c
   943  001CEA  0D01               	mullw	1
   944  001CEC  0E64               	movlw	low main@LED_7seg
   945  001CEE  24F3               	addwf	prodl,w,c
   946  001CF0  6ED9               	movwf	fsr2l,c
   947  001CF2  0E00               	movlw	high main@LED_7seg
   948  001CF4  20F4               	addwfc	prodh,w,c
   949  001CF6  6EDA               	movwf	fsr2h,c
   950  001CF8  50DF               	movf	indf2,w,c
   951  001CFA  6E83               	movwf	3971,c	;volatile
   952                           
   953                           ;Lab5.c: 73: char t = LED_7seg[u];
   954  001CFC  507D               	movf	main@u,w,c
   955  001CFE  0D01               	mullw	1
   956  001D00  0E64               	movlw	low main@LED_7seg
   957  001D02  24F3               	addwf	prodl,w,c
   958  001D04  6ED9               	movwf	fsr2l,c
   959  001D06  0E00               	movlw	high main@LED_7seg
   960  001D08  20F4               	addwfc	prodh,w,c
   961  001D0A  6EDA               	movwf	fsr2h,c
   962  001D0C  50DF               	movf	indf2,w,c
   963  001D0E  6E76               	movwf	main@t,c
   964                           
   965                           ;Lab5.c: 74: PORTC = t & 0x3f;
   966  001D10  5076               	movf	main@t,w,c
   967  001D12  0B3F               	andlw	63
   968  001D14  6E82               	movwf	3970,c	;volatile
   969                           
   970                           ;Lab5.c: 75: PORTE = 0;
   971  001D16  0E00               	movlw	0
   972  001D18  6E84               	movwf	3972,c	;volatile
   973                           
   974                           ;Lab5.c: 76: if (t & 0x40) PORTE = 2;
   975  001D1A  AC76               	btfss	main@t,6,c
   976  001D1C  D003               	goto	l2826
   977  001D1E  0E02               	movlw	2
   978  001D20  6E84               	movwf	3972,c	;volatile
   979  001D22  D000               	goto	l2826
   980  001D24                     l2826:
   981                           
   982                           ;Lab5.c: 77: printf("temperature =%d\r\n", tempF_int);
   983  001D24  0E77               	movlw	low STR_1
   984  001D26  6E40               	movwf	printf@f,c
   985  001D28  0E10               	movlw	high STR_1
   986  001D2A  6E41               	movwf	printf@f+1,c
   987  001D2C  C07E  F042         	movff	main@tempF_int,?_printf+2
   988  001D30  C07F  F043         	movff	main@tempF_int+1,?_printf+3
   989  001D34  EC4C  F008         	call	_printf	;wreg free
   990                           
   991                           ;Lab5.c: 79: if (u ==0 ) SET_D2_OFF();
   992  001D38  507D               	movf	main@u,w,c
   993  001D3A  A4D8               	btfss	status,2,c
   994  001D3C  D003               	goto	l2832
   995  001D3E  ECE4  F016         	call	_SET_D2_OFF	;wreg free
   996  001D42  D00F               	goto	l2842
   997  001D44                     l2832:
   998                           
   999                           ;Lab5.c: 80: else if((u >= 1) & (u < 7)) PORTB = u;
  1000  001D44  507D               	movf	main@u,w,c
  1001  001D46  B4D8               	btfsc	status,2,c
  1002  001D48  D006               	goto	l2838
  1003  001D4A  0E07               	movlw	7
  1004  001D4C  607D               	cpfslt	main@u,c
  1005  001D4E  D003               	goto	l2838
  1006  001D50  C07D  FF81         	movff	main@u,3969	;volatile
  1007  001D54  D006               	goto	l2842
  1008  001D56                     l2838:
  1009                           
  1010                           ;Lab5.c: 81: else if (u>=7) SET_D2_WHITE();
  1011  001D56  0E06               	movlw	6
  1012  001D58  647D               	cpfsgt	main@u,c
  1013  001D5A  D003               	goto	l2842
  1014  001D5C  ECE0  F016         	call	_SET_D2_WHITE	;wreg free
  1015  001D60  D000               	goto	l2842
  1016  001D62                     l2842:
  1017                           
  1018                           ;Lab5.c: 83: if(tempF_int < 45)
  1019  001D62  BE7F               	btfsc	main@tempF_int+1,7,c
  1020  001D64  D006               	goto	l2844
  1021  001D66  507F               	movf	main@tempF_int+1,w,c
  1022  001D68  E107               	bnz	l2846
  1023  001D6A  0E2D               	movlw	45
  1024  001D6C  5C7E               	subwf	main@tempF_int,w,c
  1025  001D6E  B0D8               	btfsc	status,0,c
  1026  001D70  D003               	goto	l2846
  1027  001D72                     l2844:
  1028                           
  1029                           ;Lab5.c: 84: {
  1030                           ;Lab5.c: 85: SET_D1_OFF();
  1031  001D72  ECF0  F016         	call	_SET_D1_OFF	;wreg free
  1032                           
  1033                           ;Lab5.c: 86: }
  1034  001D76  D04C               	goto	l2866
  1035  001D78                     l2846:
  1036                           
  1037                           ;Lab5.c: 87: else if(tempF_int<=55)
  1038  001D78  BE7F               	btfsc	main@tempF_int+1,7,c
  1039  001D7A  D006               	goto	l2848
  1040  001D7C  507F               	movf	main@tempF_int+1,w,c
  1041  001D7E  E107               	bnz	l2850
  1042  001D80  0E38               	movlw	56
  1043  001D82  5C7E               	subwf	main@tempF_int,w,c
  1044  001D84  B0D8               	btfsc	status,0,c
  1045  001D86  D003               	goto	l2850
  1046  001D88                     l2848:
  1047                           
  1048                           ;Lab5.c: 88: {
  1049                           ;Lab5.c: 89: SET_D1_RED();
  1050  001D88  ECEC  F016         	call	_SET_D1_RED	;wreg free
  1051                           
  1052                           ;Lab5.c: 90: }
  1053  001D8C  D041               	goto	l2866
  1054  001D8E                     l2850:
  1055                           
  1056                           ;Lab5.c: 91: else if(tempF_int<=65 & tempF>55)
  1057  001D8E  BE7F               	btfsc	main@tempF_int+1,7,c
  1058  001D90  D006               	goto	l2852
  1059  001D92  507F               	movf	main@tempF_int+1,w,c
  1060  001D94  E117               	bnz	l2856
  1061  001D96  0E42               	movlw	66
  1062  001D98  5C7E               	subwf	main@tempF_int,w,c
  1063  001D9A  B0D8               	btfsc	status,0,c
  1064  001D9C  D013               	goto	l2856
  1065  001D9E                     l2852:
  1066  001D9E  0E00               	movlw	0
  1067  001DA0  6E01               	movwf	___ftge@ff1,c
  1068  001DA2  0E5C               	movlw	92
  1069  001DA4  6E02               	movwf	___ftge@ff1+1,c
  1070  001DA6  0E42               	movlw	66
  1071  001DA8  6E03               	movwf	___ftge@ff1+2,c
  1072  001DAA  C077  F004         	movff	main@tempF,___ftge@ff2
  1073  001DAE  C078  F005         	movff	main@tempF+1,___ftge@ff2+1
  1074  001DB2  C079  F006         	movff	main@tempF+2,___ftge@ff2+2
  1075  001DB6  ECA0  F014         	call	___ftge	;wreg free
  1076  001DBA  B0D8               	btfsc	status,0,c
  1077  001DBC  D003               	goto	l2856
  1078                           
  1079                           ;Lab5.c: 92: {
  1080                           ;Lab5.c: 93: SET_D1_GREEN();
  1081  001DBE  ECF4  F016         	call	_SET_D1_GREEN	;wreg free
  1082                           
  1083                           ;Lab5.c: 94: }
  1084  001DC2  D026               	goto	l2866
  1085  001DC4                     l2856:
  1086                           
  1087                           ;Lab5.c: 95: else if(tempF_int<=75 & tempF>65)
  1088  001DC4  BE7F               	btfsc	main@tempF_int+1,7,c
  1089  001DC6  D006               	goto	l2858
  1090  001DC8  507F               	movf	main@tempF_int+1,w,c
  1091  001DCA  E117               	bnz	l2862
  1092  001DCC  0E4C               	movlw	76
  1093  001DCE  5C7E               	subwf	main@tempF_int,w,c
  1094  001DD0  B0D8               	btfsc	status,0,c
  1095  001DD2  D013               	goto	l2862
  1096  001DD4                     l2858:
  1097  001DD4  0E00               	movlw	0
  1098  001DD6  6E01               	movwf	___ftge@ff1,c
  1099  001DD8  0E82               	movlw	130
  1100  001DDA  6E02               	movwf	___ftge@ff1+1,c
  1101  001DDC  0E42               	movlw	66
  1102  001DDE  6E03               	movwf	___ftge@ff1+2,c
  1103  001DE0  C077  F004         	movff	main@tempF,___ftge@ff2
  1104  001DE4  C078  F005         	movff	main@tempF+1,___ftge@ff2+1
  1105  001DE8  C079  F006         	movff	main@tempF+2,___ftge@ff2+2
  1106  001DEC  ECA0  F014         	call	___ftge	;wreg free
  1107  001DF0  B0D8               	btfsc	status,0,c
  1108  001DF2  D003               	goto	l2862
  1109                           
  1110                           ;Lab5.c: 96: {
  1111                           ;Lab5.c: 97: SET_D1_BLUE();
  1112  001DF4  ECF8  F016         	call	_SET_D1_BLUE	;wreg free
  1113                           
  1114                           ;Lab5.c: 98: }
  1115  001DF8  D00B               	goto	l2866
  1116  001DFA                     l2862:
  1117                           
  1118                           ;Lab5.c: 99: else if(tempF_int>76)
  1119  001DFA  BE7F               	btfsc	main@tempF_int+1,7,c
  1120  001DFC  D009               	goto	l2866
  1121  001DFE  507F               	movf	main@tempF_int+1,w,c
  1122  001E00  E104               	bnz	u3120
  1123  001E02  0E4D               	movlw	77
  1124  001E04  5C7E               	subwf	main@tempF_int,w,c
  1125  001E06  A0D8               	btfss	status,0,c
  1126  001E08  D003               	goto	l2866
  1127  001E0A                     u3120:
  1128                           
  1129                           ;Lab5.c: 100: {
  1130                           ;Lab5.c: 101: SET_D1_WHITE();
  1131  001E0A  ECE8  F016         	call	_SET_D1_WHITE	;wreg free
  1132  001E0E  D000               	goto	l2866
  1133  001E10                     l2866:
  1134                           
  1135                           ;Lab5.c: 102: }
  1136                           ;Lab5.c: 104: Select_ADC_Channel(2);
  1137  001E10  0E02               	movlw	2
  1138  001E12  ECD5  F016         	call	_Select_ADC_Channel
  1139                           
  1140                           ;Lab5.c: 105: int num_step = get_full_ADC();
  1141  001E16  EC7B  F016         	call	_get_full_ADC	;wreg free
  1142  001E1A  C001  F074         	movff	?_get_full_ADC,main@num_step
  1143  001E1E  C002  F075         	movff	?_get_full_ADC+1,main@num_step+1
  1144                           
  1145                           ;Lab5.c: 106: float voltage_mv2 = num_step*4;
  1146  001E22  C074  F062         	movff	main@num_step,??_main
  1147  001E26  C075  F063         	movff	main@num_step+1,??_main+1
  1148  001E2A  90D8               	bcf	status,0,c
  1149  001E2C  3662               	rlcf	??_main,f,c
  1150  001E2E  3663               	rlcf	??_main+1,f,c
  1151  001E30  90D8               	bcf	status,0,c
  1152  001E32  3662               	rlcf	??_main,f,c
  1153  001E34  3663               	rlcf	??_main+1,f,c
  1154  001E36  C062  F009         	movff	??_main,___awtoft@c
  1155  001E3A  C063  F00A         	movff	??_main+1,___awtoft@c+1
  1156  001E3E  EC34  F016         	call	___awtoft	;wreg free
  1157  001E42  C009  F07A         	movff	?___awtoft,main@voltage_mv2
  1158  001E46  C00A  F07B         	movff	?___awtoft+1,main@voltage_mv2+1
  1159  001E4A  C00B  F07C         	movff	?___awtoft+2,main@voltage_mv2+2
  1160                           
  1161                           ;Lab5.c: 107: printf("voltage =%f\r\n", voltage_mv2);
  1162  001E4E  0E89               	movlw	low STR_2
  1163  001E50  6E40               	movwf	printf@f,c
  1164  001E52  0E10               	movlw	high STR_2
  1165  001E54  6E41               	movwf	printf@f+1,c
  1166  001E56  C07A  F042         	movff	main@voltage_mv2,?_printf+2
  1167  001E5A  C07B  F043         	movff	main@voltage_mv2+1,?_printf+3
  1168  001E5E  C07C  F044         	movff	main@voltage_mv2+2,?_printf+4
  1169  001E62  EC4C  F008         	call	_printf	;wreg free
  1170                           
  1171                           ;Lab5.c: 109: if (voltage_mv2 <2100)
  1172  001E66  C07A  F001         	movff	main@voltage_mv2,___ftge@ff1
  1173  001E6A  C07B  F002         	movff	main@voltage_mv2+1,___ftge@ff1+1
  1174  001E6E  C07C  F003         	movff	main@voltage_mv2+2,___ftge@ff1+2
  1175  001E72  0E40               	movlw	64
  1176  001E74  6E04               	movwf	___ftge@ff2,c
  1177  001E76  0E03               	movlw	3
  1178  001E78  6E05               	movwf	___ftge@ff2+1,c
  1179  001E7A  0E45               	movlw	69
  1180  001E7C  6E06               	movwf	___ftge@ff2+2,c
  1181  001E7E  ECA0  F014         	call	___ftge	;wreg free
  1182  001E82  B0D8               	btfsc	status,0,c
  1183  001E84  D003               	goto	l2878
  1184                           
  1185                           ;Lab5.c: 110: {
  1186                           ;Lab5.c: 111: SET_D3_RED();
  1187  001E86  ECFC  F016         	call	_SET_D3_RED	;wreg free
  1188                           
  1189                           ;Lab5.c: 112: }
  1190  001E8A  D036               	goto	l2888
  1191  001E8C                     l2878:
  1192                           
  1193                           ;Lab5.c: 113: else if (voltage_mv2 >= 2100 & voltage_mv2 < 3000)
  1194  001E8C  C07A  F001         	movff	main@voltage_mv2,___ftge@ff1
  1195  001E90  C07B  F002         	movff	main@voltage_mv2+1,___ftge@ff1+1
  1196  001E94  C07C  F003         	movff	main@voltage_mv2+2,___ftge@ff1+2
  1197  001E98  0E40               	movlw	64
  1198  001E9A  6E04               	movwf	___ftge@ff2,c
  1199  001E9C  0E03               	movlw	3
  1200  001E9E  6E05               	movwf	___ftge@ff2+1,c
  1201  001EA0  0E45               	movlw	69
  1202  001EA2  6E06               	movwf	___ftge@ff2+2,c
  1203  001EA4  ECA0  F014         	call	___ftge	;wreg free
  1204  001EA8  A0D8               	btfss	status,0,c
  1205  001EAA  D013               	goto	l2884
  1206  001EAC  C07A  F001         	movff	main@voltage_mv2,___ftge@ff1
  1207  001EB0  C07B  F002         	movff	main@voltage_mv2+1,___ftge@ff1+1
  1208  001EB4  C07C  F003         	movff	main@voltage_mv2+2,___ftge@ff1+2
  1209  001EB8  0E80               	movlw	128
  1210  001EBA  6E04               	movwf	___ftge@ff2,c
  1211  001EBC  0E3B               	movlw	59
  1212  001EBE  6E05               	movwf	___ftge@ff2+1,c
  1213  001EC0  0E45               	movlw	69
  1214  001EC2  6E06               	movwf	___ftge@ff2+2,c
  1215  001EC4  ECA0  F014         	call	___ftge	;wreg free
  1216  001EC8  B0D8               	btfsc	status,0,c
  1217  001ECA  D003               	goto	l2884
  1218                           
  1219                           ;Lab5.c: 114: {
  1220                           ;Lab5.c: 115: SET_D3_BLUE();
  1221  001ECC  EC02  F017         	call	_SET_D3_BLUE	;wreg free
  1222                           
  1223                           ;Lab5.c: 116: }
  1224  001ED0  D013               	goto	l2888
  1225  001ED2                     l2884:
  1226                           
  1227                           ;Lab5.c: 117: else if(voltage_mv2 >= 3000)
  1228  001ED2  C07A  F001         	movff	main@voltage_mv2,___ftge@ff1
  1229  001ED6  C07B  F002         	movff	main@voltage_mv2+1,___ftge@ff1+1
  1230  001EDA  C07C  F003         	movff	main@voltage_mv2+2,___ftge@ff1+2
  1231  001EDE  0E80               	movlw	128
  1232  001EE0  6E04               	movwf	___ftge@ff2,c
  1233  001EE2  0E3B               	movlw	59
  1234  001EE4  6E05               	movwf	___ftge@ff2+1,c
  1235  001EE6  0E45               	movlw	69
  1236  001EE8  6E06               	movwf	___ftge@ff2+2,c
  1237  001EEA  ECA0  F014         	call	___ftge	;wreg free
  1238  001EEE  A0D8               	btfss	status,0,c
  1239  001EF0  D003               	goto	l2888
  1240                           
  1241                           ;Lab5.c: 118: {
  1242                           ;Lab5.c: 119: SET_D3_PURPLE();
  1243  001EF2  ECFF  F016         	call	_SET_D3_PURPLE	;wreg free
  1244  001EF6  D000               	goto	l2888
  1245  001EF8                     l2888:
  1246                           
  1247                           ;Lab5.c: 120: }
  1248                           ;Lab5.c: 122: Delay_One_Sec();
  1249  001EF8  ECA0  F016         	call	_Delay_One_Sec	;wreg free
  1250  001EFC  D674               	goto	l2798
  1251  001EFE  EF00  F000         	goto	start
  1252  001F02                     __end_of_main:
  1253                           	opt stack 0
  1254                           tblptru	equ	0xFF8
  1255                           tblptrh	equ	0xFF7
  1256                           tblptrl	equ	0xFF6
  1257                           tablat	equ	0xFF5
  1258                           prodh	equ	0xFF4
  1259                           prodl	equ	0xFF3
  1260                           postinc0	equ	0xFEE
  1261                           wreg	equ	0xFE8
  1262                           postdec1	equ	0xFE5
  1263                           plusw1	equ	0xFE3
  1264                           fsr1l	equ	0xFE1
  1265                           indf2	equ	0xFDF
  1266                           plusw2	equ	0xFDB
  1267                           fsr2h	equ	0xFDA
  1268                           fsr2l	equ	0xFD9
  1269                           status	equ	0xFD8
  1270                           
  1271 ;; *************** function _printf *****************
  1272 ;; Defined at:
  1273 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  f               2   63[COMRAM] PTR const unsigned char 
  1276 ;;		 -> STR_2(14), STR_1(18), 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  tmpval          4   89[COMRAM] struct .
  1279 ;;  val             4   83[COMRAM] unsigned long 
  1280 ;;  fval            3   93[COMRAM] unsigned long 
  1281 ;;  cp              3    0        PTR const unsigned char 
  1282 ;;  exp             2   87[COMRAM] int 
  1283 ;;  prec            2   81[COMRAM] int 
  1284 ;;  flag            2   79[COMRAM] unsigned short 
  1285 ;;  ap              2   77[COMRAM] PTR void [1]
  1286 ;;		 -> ?_printf(2), 
  1287 ;;  len             2    0        unsigned int 
  1288 ;;  width           2    0        int 
  1289 ;;  c               1   96[COMRAM] char 
  1290 ;;  d               1    0        unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  2   63[COMRAM] int 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1300 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;Total ram usage:       34 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    3
  1307 ;; This function calls:
  1308 ;;		___awdiv
  1309 ;;		___ftadd
  1310 ;;		___ftge
  1311 ;;		___ftmul
  1312 ;;		___ftneg
  1313 ;;		___ftsub
  1314 ;;		___fttol
  1315 ;;		___lldiv
  1316 ;;		___llmod
  1317 ;;		___lltoft
  1318 ;;		___wmul
  1319 ;;		__div_to_l_
  1320 ;;		__tdiv_to_l_
  1321 ;;		_fround
  1322 ;;		_putch
  1323 ;;		_scale
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text1
  1330  001098                     __ptext1:
  1331                           	opt stack 0
  1332  001098                     _printf:
  1333                           	opt stack 27
  1334                           
  1335                           ;doprnt.c: 466: va_list ap;
  1336                           ;doprnt.c: 499: signed char c;
  1337                           ;doprnt.c: 501: int width;
  1338                           ;doprnt.c: 504: int prec;
  1339                           ;doprnt.c: 508: unsigned short flag;
  1340                           ;doprnt.c: 515: char d;
  1341                           ;doprnt.c: 516: double fval;
  1342                           ;doprnt.c: 517: int exp;
  1343                           ;doprnt.c: 523: union {
  1344                           ;doprnt.c: 524: unsigned long vd;
  1345                           ;doprnt.c: 525: double integ;
  1346                           ;doprnt.c: 526: } tmpval;
  1347                           ;doprnt.c: 528: unsigned long val;
  1348                           ;doprnt.c: 529: unsigned len;
  1349                           ;doprnt.c: 530: const char * cp;
  1350                           ;doprnt.c: 533: *ap = __va_start();
  1351                           
  1352                           ;incstack = 0
  1353  001098  0E42               	movlw	low (?_printf+2)
  1354  00109A  6E4E               	movwf	printf@ap,c
  1355  00109C  0E00               	movlw	high (?_printf+2)
  1356  00109E  6E4F               	movwf	printf@ap+1,c
  1357                           
  1358                           ;doprnt.c: 536: while(c = *f++) {
  1359  0010A0  D393               	goto	l2704
  1360  0010A2                     l2524:
  1361                           
  1362                           ;doprnt.c: 538: if(c != '%')
  1363  0010A2  0E25               	movlw	37
  1364  0010A4  1861               	xorwf	printf@c,w,c
  1365  0010A6  B4D8               	btfsc	status,2,c
  1366  0010A8  D004               	goto	l2528
  1367                           
  1368                           ;doprnt.c: 540: {
  1369                           ;doprnt.c: 541: (putch(c) );
  1370  0010AA  5061               	movf	printf@c,w,c
  1371  0010AC  ECC7  F016         	call	_putch
  1372                           
  1373                           ;doprnt.c: 542: continue;
  1374  0010B0  D38B               	goto	l2704
  1375  0010B2                     l2528:
  1376                           
  1377                           ;doprnt.c: 543: }
  1378                           ;doprnt.c: 548: flag = 0;
  1379  0010B2  0E00               	movlw	0
  1380  0010B4  6E51               	movwf	printf@flag+1,c
  1381  0010B6  0E00               	movlw	0
  1382  0010B8  6E50               	movwf	printf@flag,c
  1383                           
  1384                           ;doprnt.c: 635: switch(c = *f++) {
  1385  0010BA  D005               	goto	l2534
  1386                           
  1387                           ;doprnt.c: 638: goto alldone;
  1388                           
  1389                           ;doprnt.c: 637: case 0:
  1390  0010BC  D393               	goto	l253
  1391  0010BE                     l2530:
  1392                           
  1393                           ;doprnt.c: 663: flag |= 0x400;
  1394  0010BE  8451               	bsf	printf@flag+1,2,c
  1395                           
  1396                           ;doprnt.c: 698: case 'i':
  1397                           ;doprnt.c: 699: break;
  1398                           
  1399                           ;doprnt.c: 697: case 'd':
  1400                           
  1401                           ;doprnt.c: 664: break;
  1402  0010C0  D018               	goto	l2536
  1403                           
  1404                           ;doprnt.c: 813: continue;
  1405                           
  1406                           ;doprnt.c: 802: default:
  1407  0010C2  D382               	goto	l2704
  1408                           
  1409                           ;doprnt.c: 822: }
  1410  0010C4  D016               	goto	l2536
  1411  0010C6                     l2534:
  1412  0010C6  C040  FFF6         	movff	printf@f,tblptrl
  1413  0010CA  C041  FFF7         	movff	printf@f+1,tblptrh
  1414  0010CE  4A40               	infsnz	printf@f,f,c
  1415  0010D0  2A41               	incf	printf@f+1,f,c
  1416  0010D2                     	if	0	;tblptru may be non-zero
  1417  0010D2                     	endif
  1418  0010D2                     	if	0	;tblptru may be non-zero
  1419  0010D2                     	endif
  1420  0010D2  0008               	tblrd		*
  1421  0010D4  CFF5 F061          	movff	tablat,printf@c
  1422  0010D8  5061               	movf	printf@c,w,c
  1423                           
  1424                           ; Switch size 1, requested type "space"
  1425                           ; Number of cases is 4, Range of values is 0 to 105
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte           13     7 (average)
  1429                           ;	Chosen strategy is simple_byte
  1430  0010DA  0A00               	xorlw	0	; case 0
  1431  0010DC  B4D8               	btfsc	status,2,c
  1432  0010DE  D382               	goto	l253
  1433  0010E0  0A64               	xorlw	100	; case 100
  1434  0010E2  B4D8               	btfsc	status,2,c
  1435  0010E4  D006               	goto	l2536
  1436  0010E6  0A02               	xorlw	2	; case 102
  1437  0010E8  B4D8               	btfsc	status,2,c
  1438  0010EA  D7E9               	goto	l2530
  1439  0010EC  0A0F               	xorlw	15	; case 105
  1440  0010EE  A4D8               	btfss	status,2,c
  1441  0010F0  D36B               	goto	l2704
  1442  0010F2                     l2536:
  1443                           
  1444                           ;doprnt.c: 825: if(flag & (0x700)) {
  1445  0010F2  0E07               	movlw	7
  1446  0010F4  1451               	andwf	printf@flag+1,w,c
  1447  0010F6  B4D8               	btfsc	status,2,c
  1448  0010F8  D2CA               	goto	l2668
  1449                           
  1450                           ;doprnt.c: 829: prec = 6;
  1451  0010FA  0E00               	movlw	0
  1452  0010FC  6E53               	movwf	printf@prec+1,c
  1453  0010FE  0E06               	movlw	6
  1454  001100  6E52               	movwf	printf@prec,c
  1455                           
  1456                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1457  001102  C04E  FFD9         	movff	printf@ap,fsr2l
  1458  001106  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1459  00110A  CFDE F05E          	movff	postinc2,printf@fval
  1460  00110E  CFDE F05F          	movff	postinc2,printf@fval+1
  1461  001112  CFDD F060          	movff	postdec2,printf@fval+2
  1462  001116  0E03               	movlw	3
  1463  001118  264E               	addwf	printf@ap,f,c
  1464  00111A  0E00               	movlw	0
  1465  00111C  224F               	addwfc	printf@ap+1,f,c
  1466                           
  1467                           ;doprnt.c: 831: if(fval < 0.0) {
  1468  00111E  AE60               	btfss	printf@fval+2,7,c
  1469  001120  D011               	goto	l2550
  1470                           
  1471                           ;doprnt.c: 832: fval = -fval;
  1472  001122  C05E  F001         	movff	printf@fval,___ftneg@f1
  1473  001126  C05F  F002         	movff	printf@fval+1,___ftneg@f1+1
  1474  00112A  C060  F003         	movff	printf@fval+2,___ftneg@f1+2
  1475  00112E  EC8E  F016         	call	___ftneg	;wreg free
  1476  001132  C001  F05E         	movff	?___ftneg,printf@fval
  1477  001136  C002  F05F         	movff	?___ftneg+1,printf@fval+1
  1478  00113A  C003  F060         	movff	?___ftneg+2,printf@fval+2
  1479                           
  1480                           ;doprnt.c: 833: flag |= 0x03;
  1481  00113E  0E03               	movlw	3
  1482  001140  1250               	iorwf	printf@flag,f,c
  1483  001142  D000               	goto	l2550
  1484  001144                     l2550:
  1485                           
  1486                           ;doprnt.c: 834: }
  1487                           ;doprnt.c: 835: exp = 0;
  1488  001144  0E00               	movlw	0
  1489  001146  6E59               	movwf	printf@exp+1,c
  1490  001148  0E00               	movlw	0
  1491  00114A  6E58               	movwf	printf@exp,c
  1492                           
  1493                           ;doprnt.c: 836: if( fval!=0) {
  1494  00114C  505E               	movf	printf@fval,w,c
  1495  00114E  105F               	iorwf	printf@fval+1,w,c
  1496  001150  1060               	iorwf	printf@fval+2,w,c
  1497  001152  B4D8               	btfsc	status,2,c
  1498  001154  D085               	goto	l2578
  1499                           
  1500                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1501  001156  0E82               	movlw	130
  1502  001158  6E45               	movwf	??_printf& (0+255),c
  1503  00115A  0EFF               	movlw	255
  1504  00115C  6E46               	movwf	(??_printf+1)& (0+255),c
  1505  00115E  C05E  F047         	movff	printf@fval,??_printf+2
  1506  001162  C05F  F048         	movff	printf@fval+1,??_printf+3
  1507  001166  C060  F049         	movff	printf@fval+2,??_printf+4
  1508  00116A  C061  F04A         	movff	printf@fval+3,??_printf+5
  1509  00116E  0E10               	movlw	16
  1510  001170  D005               	goto	u2650
  1511  001172                     u2655:
  1512  001172  90D8               	bcf	status,0,c
  1513  001174  324A               	rrcf	??_printf+5,f,c
  1514  001176  3249               	rrcf	??_printf+4,f,c
  1515  001178  3248               	rrcf	??_printf+3,f,c
  1516  00117A  3247               	rrcf	??_printf+2,f,c
  1517  00117C                     u2650:
  1518  00117C  2EE8               	decfsz	wreg,f,c
  1519  00117E  D7F9               	goto	u2655
  1520  001180  5047               	movf	??_printf+2,w,c
  1521  001182  2445               	addwf	??_printf,w,c
  1522  001184  6E58               	movwf	printf@exp,c
  1523  001186  0E00               	movlw	0
  1524  001188  2046               	addwfc	??_printf+1,w,c
  1525  00118A  6E59               	movwf	printf@exp+1,c
  1526                           
  1527                           ;doprnt.c: 838: exp--;
  1528  00118C  0658               	decf	printf@exp,f,c
  1529  00118E  A0D8               	btfss	status,0,c
  1530  001190  0659               	decf	printf@exp+1,f,c
  1531                           
  1532                           ;doprnt.c: 839: exp *= 3;
  1533  001192  C058  F00F         	movff	printf@exp,___wmul@multiplier
  1534  001196  C059  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1535  00119A  0E00               	movlw	0
  1536  00119C  6E12               	movwf	___wmul@multiplicand+1,c
  1537  00119E  0E03               	movlw	3
  1538  0011A0  6E11               	movwf	___wmul@multiplicand,c
  1539  0011A2  EC67  F016         	call	___wmul	;wreg free
  1540  0011A6  C00F  F058         	movff	?___wmul,printf@exp
  1541  0011AA  C010  F059         	movff	?___wmul+1,printf@exp+1
  1542                           
  1543                           ;doprnt.c: 840: exp /= 10;
  1544  0011AE  C058  F007         	movff	printf@exp,___awdiv@dividend
  1545  0011B2  C059  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1546  0011B6  0E00               	movlw	0
  1547  0011B8  6E0A               	movwf	___awdiv@divisor+1,c
  1548  0011BA  0E0A               	movlw	10
  1549  0011BC  6E09               	movwf	___awdiv@divisor,c
  1550  0011BE  EC55  F014         	call	___awdiv	;wreg free
  1551  0011C2  C007  F058         	movff	?___awdiv,printf@exp
  1552  0011C6  C008  F059         	movff	?___awdiv+1,printf@exp+1
  1553                           
  1554                           ;doprnt.c: 841: if(exp < 0)
  1555  0011CA  AE59               	btfss	printf@exp+1,7,c
  1556  0011CC  D004               	goto	l2566
  1557                           
  1558                           ;doprnt.c: 842: exp--;
  1559  0011CE  0658               	decf	printf@exp,f,c
  1560  0011D0  A0D8               	btfss	status,0,c
  1561  0011D2  0659               	decf	printf@exp+1,f,c
  1562  0011D4  D000               	goto	l2566
  1563  0011D6                     l2566:
  1564                           
  1565                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1566  0011D6  5058               	movf	printf@exp,w,c
  1567  0011D8  0800               	sublw	0
  1568  0011DA  ECF3  F00B         	call	_scale
  1569  0011DE  C024  F05A         	movff	?_scale,printf@tmpval
  1570  0011E2  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1571  0011E6  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1572                           
  1573                           ;doprnt.c: 847: tmpval.integ *= fval;
  1574  0011EA  C05A  F015         	movff	printf@tmpval,___ftmul@f1
  1575  0011EE  C05B  F016         	movff	printf@tmpval+1,___ftmul@f1+1
  1576  0011F2  C05C  F017         	movff	printf@tmpval+2,___ftmul@f1+2
  1577  0011F6  C05E  F018         	movff	printf@fval,___ftmul@f2
  1578  0011FA  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1579  0011FE  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1580  001202  EC92  F012         	call	___ftmul	;wreg free
  1581  001206  C015  F05A         	movff	?___ftmul,printf@tmpval
  1582  00120A  C016  F05B         	movff	?___ftmul+1,printf@tmpval+1
  1583  00120E  C017  F05C         	movff	?___ftmul+2,printf@tmpval+2
  1584                           
  1585                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1586  001212  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1587  001216  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1588  00121A  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1589  00121E  0E00               	movlw	0
  1590  001220  6E04               	movwf	___ftge@ff2,c
  1591  001222  0E80               	movlw	128
  1592  001224  6E05               	movwf	___ftge@ff2+1,c
  1593  001226  0E3F               	movlw	63
  1594  001228  6E06               	movwf	___ftge@ff2+2,c
  1595  00122A  ECA0  F014         	call	___ftge	;wreg free
  1596  00122E  B0D8               	btfsc	status,0,c
  1597  001230  D004               	goto	l2574
  1598                           
  1599                           ;doprnt.c: 849: exp--;
  1600  001232  0658               	decf	printf@exp,f,c
  1601  001234  A0D8               	btfss	status,0,c
  1602  001236  0659               	decf	printf@exp+1,f,c
  1603  001238  D013               	goto	l2578
  1604  00123A                     l2574:
  1605                           
  1606                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1607  00123A  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1608  00123E  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1609  001242  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1610  001246  0E00               	movlw	0
  1611  001248  6E04               	movwf	___ftge@ff2,c
  1612  00124A  0E20               	movlw	32
  1613  00124C  6E05               	movwf	___ftge@ff2+1,c
  1614  00124E  0E41               	movlw	65
  1615  001250  6E06               	movwf	___ftge@ff2+2,c
  1616  001252  ECA0  F014         	call	___ftge	;wreg free
  1617  001256  A0D8               	btfss	status,0,c
  1618  001258  D003               	goto	l2578
  1619                           
  1620                           ;doprnt.c: 851: exp++;
  1621  00125A  4A58               	infsnz	printf@exp,f,c
  1622  00125C  2A59               	incf	printf@exp+1,f,c
  1623  00125E  D000               	goto	l2578
  1624  001260                     l2578:
  1625                           
  1626                           ;doprnt.c: 852: }
  1627                           ;doprnt.c: 1112: if(prec <= 12)
  1628  001260  BE53               	btfsc	printf@prec+1,7,c
  1629  001262  D006               	goto	l2580
  1630  001264  5053               	movf	printf@prec+1,w,c
  1631  001266  E11C               	bnz	l2582
  1632  001268  0E0D               	movlw	13
  1633  00126A  5C52               	subwf	printf@prec,w,c
  1634  00126C  B0D8               	btfsc	status,0,c
  1635  00126E  D018               	goto	l2582
  1636  001270                     l2580:
  1637                           
  1638                           ;doprnt.c: 1113: fval += fround(prec);
  1639  001270  C05E  F02E         	movff	printf@fval,___ftadd@f1
  1640  001274  C05F  F02F         	movff	printf@fval+1,___ftadd@f1+1
  1641  001278  C060  F030         	movff	printf@fval+2,___ftadd@f1+2
  1642  00127C  5052               	movf	printf@prec,w,c
  1643  00127E  EC81  F00F         	call	_fround
  1644  001282  C024  F031         	movff	?_fround,___ftadd@f2
  1645  001286  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  1646  00128A  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  1647  00128E  ECA3  F010         	call	___ftadd	;wreg free
  1648  001292  C02E  F05E         	movff	?___ftadd,printf@fval
  1649  001296  C02F  F05F         	movff	?___ftadd+1,printf@fval+1
  1650  00129A  C030  F060         	movff	?___ftadd+2,printf@fval+2
  1651  00129E  D000               	goto	l2582
  1652  0012A0                     l2582:
  1653                           
  1654                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1655  0012A0  BE59               	btfsc	printf@exp+1,7,c
  1656  0012A2  D006               	goto	l2584
  1657  0012A4  5059               	movf	printf@exp+1,w,c
  1658  0012A6  E120               	bnz	l2590
  1659  0012A8  0E0A               	movlw	10
  1660  0012AA  5C58               	subwf	printf@exp,w,c
  1661  0012AC  B0D8               	btfsc	status,0,c
  1662  0012AE  D01C               	goto	l2590
  1663  0012B0                     l2584:
  1664  0012B0  505E               	movf	printf@fval,w,c
  1665  0012B2  105F               	iorwf	printf@fval+1,w,c
  1666  0012B4  1060               	iorwf	printf@fval+2,w,c
  1667  0012B6  B4D8               	btfsc	status,2,c
  1668  0012B8  D06D               	goto	l2604
  1669  0012BA  C05E  F02B         	movff	printf@fval,___fttol@f1
  1670  0012BE  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1671  0012C2  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1672  0012C6  EC0E  F013         	call	___fttol	;wreg free
  1673  0012CA  502B               	movf	?___fttol,w,c
  1674  0012CC  102C               	iorwf	?___fttol+1,w,c
  1675  0012CE  102D               	iorwf	?___fttol+2,w,c
  1676  0012D0  102E               	iorwf	?___fttol+3,w,c
  1677  0012D2  B4D8               	btfsc	status,2,c
  1678  0012D4  BE59               	btfsc	printf@exp+1,7,c
  1679  0012D6  D05E               	goto	l2604
  1680  0012D8  5059               	movf	printf@exp+1,w,c
  1681  0012DA  E106               	bnz	l2590
  1682  0012DC  0E02               	movlw	2
  1683  0012DE  5C58               	subwf	printf@exp,w,c
  1684  0012E0  B0D8               	btfsc	status,0,c
  1685  0012E2  D002               	goto	l2590
  1686  0012E4  D057               	goto	l2604
  1687  0012E6  D000               	goto	l2590
  1688  0012E8                     l2590:
  1689                           
  1690                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1691  0012E8  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1692  0012EC  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1693  0012F0  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1694  0012F4  0E70               	movlw	112
  1695  0012F6  6E04               	movwf	___ftge@ff2,c
  1696  0012F8  0E89               	movlw	137
  1697  0012FA  6E05               	movwf	___ftge@ff2+1,c
  1698  0012FC  0E40               	movlw	64
  1699  0012FE  6E06               	movwf	___ftge@ff2+2,c
  1700  001300  ECA0  F014         	call	___ftge	;wreg free
  1701  001304  B0D8               	btfsc	status,0,c
  1702  001306  D002               	goto	l2594
  1703                           
  1704                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1705  001308  0EF7               	movlw	247
  1706  00130A  D001               	goto	L1
  1707  00130C                     l2594:
  1708                           
  1709                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1710  00130C  0EF8               	movlw	248
  1711  00130E                     L1:
  1712  00130E  2658               	addwf	printf@exp,f,c
  1713  001310  0EFF               	movlw	255
  1714  001312  2259               	addwfc	printf@exp+1,f,c
  1715  001314  D000               	goto	l2596
  1716  001316                     l2596:
  1717                           
  1718                           ;doprnt.c: 1124: }
  1719                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1720  001316  5058               	movf	printf@exp,w,c
  1721  001318  ECF3  F00B         	call	_scale
  1722  00131C  C024  F05A         	movff	?_scale,printf@tmpval
  1723  001320  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1724  001324  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1725                           
  1726                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1727  001328  D017               	goto	l2600
  1728  00132A  C05E  F001         	movff	printf@fval,__div_to_l_@f1
  1729  00132E  C05F  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1730  001332  C060  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1731  001336  C05A  F004         	movff	printf@tmpval,__div_to_l_@f2
  1732  00133A  C05B  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1733  00133E  C05C  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1734  001342  EC0D  F012         	call	__div_to_l_	;wreg free
  1735  001346  C001  F054         	movff	?__div_to_l_,printf@val
  1736  00134A  C002  F055         	movff	?__div_to_l_+1,printf@val+1
  1737  00134E  C003  F056         	movff	?__div_to_l_+2,printf@val+2
  1738  001352  C004  F057         	movff	?__div_to_l_+3,printf@val+3
  1739  001356  D017               	goto	l2602
  1740  001358                     l2600:
  1741  001358  C05E  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1742  00135C  C05F  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1743  001360  C060  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1744  001364  C05A  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1745  001368  C05B  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1746  00136C  C05C  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1747  001370  EC85  F011         	call	__tdiv_to_l_	;wreg free
  1748  001374  C001  F054         	movff	?__tdiv_to_l_,printf@val
  1749  001378  C002  F055         	movff	?__tdiv_to_l_+1,printf@val+1
  1750  00137C  C003  F056         	movff	?__tdiv_to_l_+2,printf@val+2
  1751  001380  C004  F057         	movff	?__tdiv_to_l_+3,printf@val+3
  1752  001384  D000               	goto	l2602
  1753  001386                     l2602:
  1754                           
  1755                           ;doprnt.c: 1129: fval = 0.0;
  1756  001386  0E00               	movlw	0
  1757  001388  6E5E               	movwf	printf@fval,c
  1758  00138A  0E00               	movlw	0
  1759  00138C  6E5F               	movwf	printf@fval+1,c
  1760  00138E  0E00               	movlw	0
  1761  001390  6E60               	movwf	printf@fval+2,c
  1762                           
  1763                           ;doprnt.c: 1130: } else {
  1764  001392  D033               	goto	l2608
  1765  001394                     l2604:
  1766                           
  1767                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1768  001394  C05E  F02B         	movff	printf@fval,___fttol@f1
  1769  001398  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1770  00139C  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1771  0013A0  EC0E  F013         	call	___fttol	;wreg free
  1772  0013A4  C02B  F054         	movff	?___fttol,printf@val
  1773  0013A8  C02C  F055         	movff	?___fttol+1,printf@val+1
  1774  0013AC  C02D  F056         	movff	?___fttol+2,printf@val+2
  1775  0013B0  C02E  F057         	movff	?___fttol+3,printf@val+3
  1776                           
  1777                           ;doprnt.c: 1132: fval -= (double)val;
  1778  0013B4  C05E  F03A         	movff	printf@fval,___ftsub@f1
  1779  0013B8  C05F  F03B         	movff	printf@fval+1,___ftsub@f1+1
  1780  0013BC  C060  F03C         	movff	printf@fval+2,___ftsub@f1+2
  1781  0013C0  C054  F009         	movff	printf@val,___lltoft@c
  1782  0013C4  C055  F00A         	movff	printf@val+1,___lltoft@c+1
  1783  0013C8  C056  F00B         	movff	printf@val+2,___lltoft@c+2
  1784  0013CC  C057  F00C         	movff	printf@val+3,___lltoft@c+3
  1785  0013D0  ECE2  F015         	call	___lltoft	;wreg free
  1786  0013D4  C009  F03D         	movff	?___lltoft,___ftsub@f2
  1787  0013D8  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  1788  0013DC  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  1789  0013E0  EC12  F016         	call	___ftsub	;wreg free
  1790  0013E4  C03A  F05E         	movff	?___ftsub,printf@fval
  1791  0013E8  C03B  F05F         	movff	?___ftsub+1,printf@fval+1
  1792  0013EC  C03C  F060         	movff	?___ftsub+2,printf@fval+2
  1793                           
  1794                           ;doprnt.c: 1133: exp = 0;
  1795  0013F0  0E00               	movlw	0
  1796  0013F2  6E59               	movwf	printf@exp+1,c
  1797  0013F4  0E00               	movlw	0
  1798  0013F6  6E58               	movwf	printf@exp,c
  1799  0013F8  D000               	goto	l2608
  1800  0013FA                     l2608:
  1801                           
  1802                           ;doprnt.c: 1134: }
  1803                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1804  0013FA  0E01               	movlw	1
  1805  0013FC  6E61               	movwf	printf@c,c
  1806  0013FE                     l2610:
  1807  0013FE  0E0A               	movlw	10
  1808  001400  1861               	xorwf	printf@c,w,c
  1809  001402  B4D8               	btfsc	status,2,c
  1810  001404  D01C               	goto	l2622
  1811  001406  D001               	goto	l2614
  1812  001408  D01A               	goto	l2622
  1813  00140A                     l2614:
  1814                           
  1815                           ;doprnt.c: 1137: if(val < dpowers[c])
  1816  00140A  5061               	movf	printf@c,w,c
  1817  00140C  0D04               	mullw	4
  1818  00140E  0E01               	movlw	low _dpowers
  1819  001410  24F3               	addwf	prodl,w,c
  1820  001412  6EF6               	movwf	tblptrl,c
  1821  001414  0E10               	movlw	high _dpowers
  1822  001416  20F4               	addwfc	prodh,w,c
  1823  001418  6EF7               	movwf	tblptrh,c
  1824  00141A                     	if	0	;There are less than 3 active tblptr bytes
  1825  00141A                     	endif
  1826  00141A  0009               	tblrd		*+
  1827  00141C  50F5               	movf	tablat,w,c
  1828  00141E  5C54               	subwf	printf@val,w,c
  1829  001420  0009               	tblrd		*+
  1830  001422  50F5               	movf	tablat,w,c
  1831  001424  5855               	subwfb	printf@val+1,w,c
  1832  001426  0009               	tblrd		*+
  1833  001428  50F5               	movf	tablat,w,c
  1834  00142A  5856               	subwfb	printf@val+2,w,c
  1835  00142C  0009               	tblrd		*+
  1836  00142E  50F5               	movf	tablat,w,c
  1837  001430  5857               	subwfb	printf@val+3,w,c
  1838  001432  A0D8               	btfss	status,0,c
  1839  001434  D004               	goto	l2622
  1840  001436  D001               	goto	l2618
  1841                           
  1842                           ;doprnt.c: 1138: break;
  1843  001438  D002               	goto	l2622
  1844  00143A                     l2618:
  1845  00143A  2A61               	incf	printf@c,f,c
  1846  00143C  D7E0               	goto	l2610
  1847  00143E                     l2622:
  1848                           
  1849                           ;doprnt.c: 1175: {
  1850                           ;doprnt.c: 1188: if(flag & 0x03)
  1851  00143E  0E03               	movlw	3
  1852  001440  1450               	andwf	printf@flag,w,c
  1853  001442  6E45               	movwf	??_printf& (0+255),c
  1854  001444  0E00               	movlw	0
  1855  001446  1451               	andwf	printf@flag+1,w,c
  1856  001448  6E46               	movwf	(??_printf+1)& (0+255),c
  1857  00144A  5045               	movf	??_printf,w,c
  1858  00144C  1046               	iorwf	??_printf+1,w,c
  1859  00144E  B4D8               	btfsc	status,2,c
  1860  001450  D049               	goto	l2632
  1861                           
  1862                           ;doprnt.c: 1190: (putch('-') );
  1863  001452  0E2D               	movlw	45
  1864  001454  ECC7  F016         	call	_putch
  1865                           
  1866                           ;doprnt.c: 1195: }
  1867                           ;doprnt.c: 1196: while(c--) {
  1868  001458  D045               	goto	l2632
  1869  00145A                     l2626:
  1870                           
  1871                           ;doprnt.c: 1200: {
  1872                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1873  00145A  C054  F001         	movff	printf@val,___lldiv@dividend
  1874  00145E  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1875  001462  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1876  001466  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1877  00146A  5061               	movf	printf@c,w,c
  1878  00146C  0D04               	mullw	4
  1879  00146E  0E01               	movlw	low _dpowers
  1880  001470  24F3               	addwf	prodl,w,c
  1881  001472  6EF6               	movwf	tblptrl,c
  1882  001474  0E10               	movlw	high _dpowers
  1883  001476  20F4               	addwfc	prodh,w,c
  1884  001478  6EF7               	movwf	tblptrh,c
  1885  00147A                     	if	0	;There are less than 3 active tblptr bytes
  1886  00147A                     	endif
  1887  00147A  0009               	tblrd		*+
  1888  00147C  CFF5 F005          	movff	tablat,___lldiv@divisor
  1889  001480  0009               	tblrd		*+
  1890  001482  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1891  001486  0009               	tblrd		*+
  1892  001488  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1893  00148C  000A               	tblrd		*-
  1894  00148E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1895  001492  ECEB  F014         	call	___lldiv	;wreg free
  1896  001496  C001  F05A         	movff	?___lldiv,printf@tmpval
  1897  00149A  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1898  00149E  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1899  0014A2  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1900                           
  1901                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1902  0014A6  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  1903  0014AA  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1904  0014AE  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1905  0014B2  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1906  0014B6  0E0A               	movlw	10
  1907  0014B8  6E12               	movwf	___llmod@divisor,c
  1908  0014BA  0E00               	movlw	0
  1909  0014BC  6E13               	movwf	___llmod@divisor+1,c
  1910  0014BE  0E00               	movlw	0
  1911  0014C0  6E14               	movwf	___llmod@divisor+2,c
  1912  0014C2  0E00               	movlw	0
  1913  0014C4  6E15               	movwf	___llmod@divisor+3,c
  1914  0014C6  EC72  F015         	call	___llmod	;wreg free
  1915  0014CA  C00E  F05A         	movff	?___llmod,printf@tmpval
  1916  0014CE  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  1917  0014D2  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  1918  0014D6  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  1919                           
  1920                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1921  0014DA  505A               	movf	printf@tmpval,w,c
  1922  0014DC  0F30               	addlw	48
  1923  0014DE  ECC7  F016         	call	_putch
  1924  0014E2  D000               	goto	l2632
  1925  0014E4                     l2632:
  1926  0014E4  0661               	decf	printf@c,f,c
  1927  0014E6  2861               	incf	printf@c,w,c
  1928  0014E8  B4D8               	btfsc	status,2,c
  1929  0014EA  D009               	goto	l2638
  1930  0014EC  D7B6               	goto	l2626
  1931                           
  1932                           ;doprnt.c: 1204: }
  1933                           ;doprnt.c: 1206: }
  1934                           ;doprnt.c: 1207: while(exp > 0) {
  1935  0014EE  D007               	goto	l2638
  1936  0014F0                     l2634:
  1937                           
  1938                           ;doprnt.c: 1208: (putch('0') );
  1939  0014F0  0E30               	movlw	48
  1940  0014F2  ECC7  F016         	call	_putch
  1941                           
  1942                           ;doprnt.c: 1209: exp--;
  1943  0014F6  0658               	decf	printf@exp,f,c
  1944  0014F8  A0D8               	btfss	status,0,c
  1945  0014FA  0659               	decf	printf@exp+1,f,c
  1946  0014FC  D000               	goto	l2638
  1947  0014FE                     l2638:
  1948  0014FE  BE59               	btfsc	printf@exp+1,7,c
  1949  001500  D005               	goto	l2640
  1950  001502  5059               	movf	printf@exp+1,w,c
  1951  001504  E1F5               	bnz	l2634
  1952  001506  0458               	decf	printf@exp,w,c
  1953  001508  B0D8               	btfsc	status,0,c
  1954  00150A  D7F2               	goto	l2634
  1955  00150C                     l2640:
  1956                           
  1957                           ;doprnt.c: 1210: }
  1958                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1959  00150C  BE53               	btfsc	printf@prec+1,7,c
  1960  00150E  D009               	goto	l235
  1961  001510  5053               	movf	printf@prec+1,w,c
  1962  001512  E104               	bnz	u2810
  1963  001514  0E09               	movlw	9
  1964  001516  5C52               	subwf	printf@prec,w,c
  1965  001518  A0D8               	btfss	status,0,c
  1966  00151A  D003               	goto	l235
  1967  00151C                     u2810:
  1968                           
  1969                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1970  00151C  0E08               	movlw	8
  1971  00151E  6E61               	movwf	printf@c,c
  1972  001520  D003               	goto	l2644
  1973  001522                     l235:
  1974                           
  1975                           ;doprnt.c: 1213: else
  1976                           ;doprnt.c: 1214: c = prec;
  1977  001522  C052  F061         	movff	printf@prec,printf@c
  1978  001526  D000               	goto	l2644
  1979  001528                     l2644:
  1980                           
  1981                           ;doprnt.c: 1215: prec -= c;
  1982  001528  5061               	movf	printf@c,w,c
  1983  00152A  5E52               	subwf	printf@prec,f,c
  1984  00152C  0E00               	movlw	0
  1985  00152E  BE61               	btfsc	printf@c,7,c
  1986  001530  0EFF               	movlw	255
  1987  001532  5A53               	subwfb	printf@prec+1,f,c
  1988                           
  1989                           ;doprnt.c: 1219: if(c)
  1990  001534  5061               	movf	printf@c,w,c
  1991  001536  B4D8               	btfsc	status,2,c
  1992  001538  D004               	goto	l2650
  1993                           
  1994                           ;doprnt.c: 1221: (putch('.') );
  1995  00153A  0E2E               	movlw	46
  1996  00153C  ECC7  F016         	call	_putch
  1997  001540  D000               	goto	l2650
  1998  001542                     l2650:
  1999                           
  2000                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2001  001542  5061               	movf	printf@c,w,c
  2002  001544  ECF3  F00B         	call	_scale
  2003  001548  C024  F04B         	movff	?_scale,_printf$1247
  2004  00154C  C025  F04C         	movff	?_scale+1,_printf$1247+1
  2005  001550  C026  F04D         	movff	?_scale+2,_printf$1247+2
  2006                           
  2007                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2008  001554  C05E  F018         	movff	printf@fval,___ftmul@f2
  2009  001558  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  2010  00155C  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  2011  001560  C04B  F015         	movff	_printf$1247,___ftmul@f1
  2012  001564  C04C  F016         	movff	_printf$1247+1,___ftmul@f1+1
  2013  001568  C04D  F017         	movff	_printf$1247+2,___ftmul@f1+2
  2014  00156C  EC92  F012         	call	___ftmul	;wreg free
  2015  001570  C015  F02B         	movff	?___ftmul,___fttol@f1
  2016  001574  C016  F02C         	movff	?___ftmul+1,___fttol@f1+1
  2017  001578  C017  F02D         	movff	?___ftmul+2,___fttol@f1+2
  2018  00157C  EC0E  F013         	call	___fttol	;wreg free
  2019  001580  C02B  F054         	movff	?___fttol,printf@val
  2020  001584  C02C  F055         	movff	?___fttol+1,printf@val+1
  2021  001588  C02D  F056         	movff	?___fttol+2,printf@val+2
  2022  00158C  C02E  F057         	movff	?___fttol+3,printf@val+3
  2023                           
  2024                           ;doprnt.c: 1228: while(c--) {
  2025  001590  D06B               	goto	l2660
  2026  001592                     l2654:
  2027                           
  2028                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2029  001592  C054  F001         	movff	printf@val,___lldiv@dividend
  2030  001596  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  2031  00159A  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  2032  00159E  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  2033  0015A2  5061               	movf	printf@c,w,c
  2034  0015A4  0D04               	mullw	4
  2035  0015A6  0E01               	movlw	low _dpowers
  2036  0015A8  24F3               	addwf	prodl,w,c
  2037  0015AA  6EF6               	movwf	tblptrl,c
  2038  0015AC  0E10               	movlw	high _dpowers
  2039  0015AE  20F4               	addwfc	prodh,w,c
  2040  0015B0  6EF7               	movwf	tblptrh,c
  2041  0015B2                     	if	0	;There are less than 3 active tblptr bytes
  2042  0015B2                     	endif
  2043  0015B2  0009               	tblrd		*+
  2044  0015B4  CFF5 F005          	movff	tablat,___lldiv@divisor
  2045  0015B8  0009               	tblrd		*+
  2046  0015BA  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2047  0015BE  0009               	tblrd		*+
  2048  0015C0  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2049  0015C4  000A               	tblrd		*-
  2050  0015C6  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2051  0015CA  ECEB  F014         	call	___lldiv	;wreg free
  2052  0015CE  C001  F05A         	movff	?___lldiv,printf@tmpval
  2053  0015D2  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  2054  0015D6  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  2055  0015DA  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  2056                           
  2057                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2058  0015DE  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  2059  0015E2  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  2060  0015E6  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  2061  0015EA  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  2062  0015EE  0E0A               	movlw	10
  2063  0015F0  6E12               	movwf	___llmod@divisor,c
  2064  0015F2  0E00               	movlw	0
  2065  0015F4  6E13               	movwf	___llmod@divisor+1,c
  2066  0015F6  0E00               	movlw	0
  2067  0015F8  6E14               	movwf	___llmod@divisor+2,c
  2068  0015FA  0E00               	movlw	0
  2069  0015FC  6E15               	movwf	___llmod@divisor+3,c
  2070  0015FE  EC72  F015         	call	___llmod	;wreg free
  2071  001602  C00E  F05A         	movff	?___llmod,printf@tmpval
  2072  001606  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  2073  00160A  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  2074  00160E  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  2075                           
  2076                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2077  001612  505A               	movf	printf@tmpval,w,c
  2078  001614  0F30               	addlw	48
  2079  001616  ECC7  F016         	call	_putch
  2080                           
  2081                           ;doprnt.c: 1232: val %= dpowers[c];
  2082  00161A  C054  F00E         	movff	printf@val,___llmod@dividend
  2083  00161E  C055  F00F         	movff	printf@val+1,___llmod@dividend+1
  2084  001622  C056  F010         	movff	printf@val+2,___llmod@dividend+2
  2085  001626  C057  F011         	movff	printf@val+3,___llmod@dividend+3
  2086  00162A  5061               	movf	printf@c,w,c
  2087  00162C  0D04               	mullw	4
  2088  00162E  0E01               	movlw	low _dpowers
  2089  001630  24F3               	addwf	prodl,w,c
  2090  001632  6EF6               	movwf	tblptrl,c
  2091  001634  0E10               	movlw	high _dpowers
  2092  001636  20F4               	addwfc	prodh,w,c
  2093  001638  6EF7               	movwf	tblptrh,c
  2094  00163A                     	if	0	;There are less than 3 active tblptr bytes
  2095  00163A                     	endif
  2096  00163A  0009               	tblrd		*+
  2097  00163C  CFF5 F012          	movff	tablat,___llmod@divisor
  2098  001640  0009               	tblrd		*+
  2099  001642  CFF5 F013          	movff	tablat,___llmod@divisor+1
  2100  001646  0009               	tblrd		*+
  2101  001648  CFF5 F014          	movff	tablat,___llmod@divisor+2
  2102  00164C  000A               	tblrd		*-
  2103  00164E  CFF5 F015          	movff	tablat,___llmod@divisor+3
  2104  001652  EC72  F015         	call	___llmod	;wreg free
  2105  001656  C00E  F054         	movff	?___llmod,printf@val
  2106  00165A  C00F  F055         	movff	?___llmod+1,printf@val+1
  2107  00165E  C010  F056         	movff	?___llmod+2,printf@val+2
  2108  001662  C011  F057         	movff	?___llmod+3,printf@val+3
  2109  001666  D000               	goto	l2660
  2110  001668                     l2660:
  2111  001668  0661               	decf	printf@c,f,c
  2112  00166A  2861               	incf	printf@c,w,c
  2113  00166C  B4D8               	btfsc	status,2,c
  2114  00166E  D009               	goto	l2666
  2115  001670  D790               	goto	l2654
  2116                           
  2117                           ;doprnt.c: 1233: }
  2118                           ;doprnt.c: 1235: while(prec) {
  2119  001672  D007               	goto	l2666
  2120  001674                     l2662:
  2121                           
  2122                           ;doprnt.c: 1236: (putch('0') );
  2123  001674  0E30               	movlw	48
  2124  001676  ECC7  F016         	call	_putch
  2125                           
  2126                           ;doprnt.c: 1237: prec--;
  2127  00167A  0652               	decf	printf@prec,f,c
  2128  00167C  A0D8               	btfss	status,0,c
  2129  00167E  0653               	decf	printf@prec+1,f,c
  2130  001680  D000               	goto	l2666
  2131  001682                     l2666:
  2132  001682  5052               	movf	printf@prec,w,c
  2133  001684  1053               	iorwf	printf@prec+1,w,c
  2134  001686  B4D8               	btfsc	status,2,c
  2135  001688  D09F               	goto	l2704
  2136  00168A  D7F4               	goto	l2662
  2137                           
  2138                           ;doprnt.c: 1238: }
  2139                           ;doprnt.c: 1245: continue;
  2140  00168C  D09D               	goto	l2704
  2141  00168E                     l2668:
  2142                           
  2143                           ;doprnt.c: 1246: }
  2144                           ;doprnt.c: 1253: {
  2145                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  2146  00168E  C04E  FFD9         	movff	printf@ap,fsr2l
  2147  001692  C04F  FFDA         	movff	printf@ap+1,fsr2h
  2148  001696  CFDE F054          	movff	postinc2,printf@val
  2149  00169A  CFDD F055          	movff	postdec2,printf@val+1
  2150  00169E  0E00               	movlw	0
  2151  0016A0  BE55               	btfsc	printf@val+1,7,c
  2152  0016A2  0EFF               	movlw	-1
  2153  0016A4  6E56               	movwf	printf@val+2,c
  2154  0016A6  6E57               	movwf	printf@val+3,c
  2155  0016A8  0E02               	movlw	2
  2156  0016AA  264E               	addwf	printf@ap,f,c
  2157  0016AC  0E00               	movlw	0
  2158  0016AE  224F               	addwfc	printf@ap+1,f,c
  2159                           
  2160                           ;doprnt.c: 1261: if((long)val < 0) {
  2161  0016B0  AE57               	btfss	printf@val+3,7,c
  2162  0016B2  D00B               	goto	l2678
  2163                           
  2164                           ;doprnt.c: 1262: flag |= 0x03;
  2165  0016B4  0E03               	movlw	3
  2166  0016B6  1250               	iorwf	printf@flag,f,c
  2167                           
  2168                           ;doprnt.c: 1263: val = -val;
  2169  0016B8  1E57               	comf	printf@val+3,f,c
  2170  0016BA  1E56               	comf	printf@val+2,f,c
  2171  0016BC  1E55               	comf	printf@val+1,f,c
  2172  0016BE  6C54               	negf	printf@val,c
  2173  0016C0  0E00               	movlw	0
  2174  0016C2  2255               	addwfc	printf@val+1,f,c
  2175  0016C4  2256               	addwfc	printf@val+2,f,c
  2176  0016C6  2257               	addwfc	printf@val+3,f,c
  2177  0016C8  D000               	goto	l2678
  2178  0016CA                     l2678:
  2179                           
  2180                           ;doprnt.c: 1264: }
  2181                           ;doprnt.c: 1266: }
  2182                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2183  0016CA  0E01               	movlw	1
  2184  0016CC  6E61               	movwf	printf@c,c
  2185  0016CE                     l2680:
  2186  0016CE  0E0A               	movlw	10
  2187  0016D0  1861               	xorwf	printf@c,w,c
  2188  0016D2  B4D8               	btfsc	status,2,c
  2189  0016D4  D01C               	goto	l2692
  2190  0016D6  D001               	goto	l2684
  2191  0016D8  D01A               	goto	l2692
  2192  0016DA                     l2684:
  2193                           
  2194                           ;doprnt.c: 1306: if(val < dpowers[c])
  2195  0016DA  5061               	movf	printf@c,w,c
  2196  0016DC  0D04               	mullw	4
  2197  0016DE  0E01               	movlw	low _dpowers
  2198  0016E0  24F3               	addwf	prodl,w,c
  2199  0016E2  6EF6               	movwf	tblptrl,c
  2200  0016E4  0E10               	movlw	high _dpowers
  2201  0016E6  20F4               	addwfc	prodh,w,c
  2202  0016E8  6EF7               	movwf	tblptrh,c
  2203  0016EA                     	if	0	;There are less than 3 active tblptr bytes
  2204  0016EA                     	endif
  2205  0016EA  0009               	tblrd		*+
  2206  0016EC  50F5               	movf	tablat,w,c
  2207  0016EE  5C54               	subwf	printf@val,w,c
  2208  0016F0  0009               	tblrd		*+
  2209  0016F2  50F5               	movf	tablat,w,c
  2210  0016F4  5855               	subwfb	printf@val+1,w,c
  2211  0016F6  0009               	tblrd		*+
  2212  0016F8  50F5               	movf	tablat,w,c
  2213  0016FA  5856               	subwfb	printf@val+2,w,c
  2214  0016FC  0009               	tblrd		*+
  2215  0016FE  50F5               	movf	tablat,w,c
  2216  001700  5857               	subwfb	printf@val+3,w,c
  2217  001702  A0D8               	btfss	status,0,c
  2218  001704  D004               	goto	l2692
  2219  001706  D001               	goto	l2688
  2220                           
  2221                           ;doprnt.c: 1307: break;
  2222  001708  D002               	goto	l2692
  2223  00170A                     l2688:
  2224  00170A  2A61               	incf	printf@c,f,c
  2225  00170C  D7E0               	goto	l2680
  2226  00170E                     l2692:
  2227                           
  2228                           ;doprnt.c: 1422: {
  2229                           ;doprnt.c: 1438: if(flag & 0x03)
  2230  00170E  0E03               	movlw	3
  2231  001710  1450               	andwf	printf@flag,w,c
  2232  001712  6E45               	movwf	??_printf& (0+255),c
  2233  001714  0E00               	movlw	0
  2234  001716  1451               	andwf	printf@flag+1,w,c
  2235  001718  6E46               	movwf	(??_printf+1)& (0+255),c
  2236  00171A  5045               	movf	??_printf,w,c
  2237  00171C  1046               	iorwf	??_printf+1,w,c
  2238  00171E  B4D8               	btfsc	status,2,c
  2239  001720  D004               	goto	l2696
  2240                           
  2241                           ;doprnt.c: 1439: (putch('-') );
  2242  001722  0E2D               	movlw	45
  2243  001724  ECC7  F016         	call	_putch
  2244  001728  D000               	goto	l2696
  2245  00172A                     l2696:
  2246                           
  2247                           ;doprnt.c: 1469: }
  2248                           ;doprnt.c: 1472: prec = c;
  2249  00172A  5061               	movf	printf@c,w,c
  2250  00172C  6E52               	movwf	printf@prec,c
  2251  00172E  6A53               	clrf	printf@prec+1,c
  2252  001730  BE52               	btfsc	printf@prec,7,c
  2253  001732  0653               	decf	printf@prec+1,f,c
  2254                           
  2255                           ;doprnt.c: 1474: while(prec--) {
  2256  001734  D03F               	goto	l2702
  2257  001736                     l2698:
  2258                           
  2259                           ;doprnt.c: 1478: {
  2260                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2261  001736  C052  F045         	movff	printf@prec,??_printf
  2262  00173A  C053  F046         	movff	printf@prec+1,??_printf+1
  2263  00173E  90D8               	bcf	status,0,c
  2264  001740  3645               	rlcf	??_printf,f,c
  2265  001742  3646               	rlcf	??_printf+1,f,c
  2266  001744  90D8               	bcf	status,0,c
  2267  001746  3645               	rlcf	??_printf,f,c
  2268  001748  3646               	rlcf	??_printf+1,f,c
  2269  00174A  0E01               	movlw	low _dpowers
  2270  00174C  2445               	addwf	??_printf,w,c
  2271  00174E  6EF6               	movwf	tblptrl,c
  2272  001750  0E10               	movlw	high _dpowers
  2273  001752  2046               	addwfc	??_printf+1,w,c
  2274  001754  6EF7               	movwf	tblptrh,c
  2275  001756                     	if	0	;There are less than 3 active tblptr bytes
  2276  001756                     	endif
  2277  001756  0009               	tblrd		*+
  2278  001758  CFF5 F005          	movff	tablat,___lldiv@divisor
  2279  00175C  0009               	tblrd		*+
  2280  00175E  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2281  001762  0009               	tblrd		*+
  2282  001764  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2283  001768  000A               	tblrd		*-
  2284  00176A  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2285  00176E  C054  F001         	movff	printf@val,___lldiv@dividend
  2286  001772  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  2287  001776  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  2288  00177A  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  2289  00177E  ECEB  F014         	call	___lldiv	;wreg free
  2290  001782  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2291  001786  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2292  00178A  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2293  00178E  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2294  001792  0E0A               	movlw	10
  2295  001794  6E12               	movwf	___llmod@divisor,c
  2296  001796  0E00               	movlw	0
  2297  001798  6E13               	movwf	___llmod@divisor+1,c
  2298  00179A  0E00               	movlw	0
  2299  00179C  6E14               	movwf	___llmod@divisor+2,c
  2300  00179E  0E00               	movlw	0
  2301  0017A0  6E15               	movwf	___llmod@divisor+3,c
  2302  0017A2  EC72  F015         	call	___llmod	;wreg free
  2303  0017A6  500E               	movf	?___llmod,w,c
  2304  0017A8  0F30               	addlw	48
  2305  0017AA  6E61               	movwf	printf@c,c
  2306                           
  2307                           ;doprnt.c: 1523: }
  2308                           ;doprnt.c: 1524: (putch(c) );
  2309  0017AC  5061               	movf	printf@c,w,c
  2310  0017AE  ECC7  F016         	call	_putch
  2311  0017B2  D000               	goto	l2702
  2312  0017B4                     l2702:
  2313  0017B4  0652               	decf	printf@prec,f,c
  2314  0017B6  A0D8               	btfss	status,0,c
  2315  0017B8  0653               	decf	printf@prec+1,f,c
  2316  0017BA  2852               	incf	printf@prec,w,c
  2317  0017BC  E1BC               	bnz	l2698
  2318  0017BE  2853               	incf	printf@prec+1,w,c
  2319  0017C0  B4D8               	btfsc	status,2,c
  2320  0017C2  D002               	goto	l2704
  2321  0017C4  D7B8               	goto	l2698
  2322  0017C6  D000               	goto	l2704
  2323  0017C8                     l2704:
  2324  0017C8  C040  FFF6         	movff	printf@f,tblptrl
  2325  0017CC  C041  FFF7         	movff	printf@f+1,tblptrh
  2326  0017D0  4A40               	infsnz	printf@f,f,c
  2327  0017D2  2A41               	incf	printf@f+1,f,c
  2328  0017D4                     	if	0	;tblptru may be non-zero
  2329  0017D4                     	endif
  2330  0017D4                     	if	0	;tblptru may be non-zero
  2331  0017D4                     	endif
  2332  0017D4  0008               	tblrd		*
  2333  0017D6  CFF5 F061          	movff	tablat,printf@c
  2334  0017DA  5061               	movf	printf@c,w,c
  2335  0017DC  B4D8               	btfsc	status,2,c
  2336  0017DE  D002               	goto	l253
  2337  0017E0  D460               	goto	l2524
  2338  0017E2  D000               	goto	l253
  2339  0017E4                     l253:
  2340  0017E4  0012               	return		;funcret
  2341  0017E6                     __end_of_printf:
  2342                           	opt stack 0
  2343                           tblptru	equ	0xFF8
  2344                           tblptrh	equ	0xFF7
  2345                           tblptrl	equ	0xFF6
  2346                           tablat	equ	0xFF5
  2347                           prodh	equ	0xFF4
  2348                           prodl	equ	0xFF3
  2349                           postinc0	equ	0xFEE
  2350                           wreg	equ	0xFE8
  2351                           postdec1	equ	0xFE5
  2352                           plusw1	equ	0xFE3
  2353                           fsr1l	equ	0xFE1
  2354                           indf2	equ	0xFDF
  2355                           postinc2	equ	0xFDE
  2356                           postdec2	equ	0xFDD
  2357                           plusw2	equ	0xFDB
  2358                           fsr2h	equ	0xFDA
  2359                           fsr2l	equ	0xFD9
  2360                           status	equ	0xFD8
  2361                           
  2362 ;; *************** function _scale *****************
  2363 ;; Defined at:
  2364 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  scl             1    wreg     char 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  scl             1   41[COMRAM] char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  3   35[COMRAM] char 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2378 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;Total ram usage:        7 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    2
  2385 ;; This function calls:
  2386 ;;		___awdiv
  2387 ;;		___awmod
  2388 ;;		___ftmul
  2389 ;;		___wmul
  2390 ;; This function is called by:
  2391 ;;		_printf
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text2
  2396  0017E6                     __ptext2:
  2397                           	opt stack 0
  2398  0017E6                     _scale:
  2399                           	opt stack 27
  2400                           
  2401                           ;incstack = 0
  2402                           ;scale@scl stored from wreg
  2403  0017E6  6E2A               	movwf	scale@scl,c
  2404                           
  2405                           ;doprnt.c: 428: if(scl < 0) {
  2406  0017E8  AE2A               	btfss	scale@scl,7,c
  2407  0017EA  D0EF               	goto	l2246
  2408                           
  2409                           ;doprnt.c: 429: scl = -scl;
  2410  0017EC  6C2A               	negf	scale@scl,c
  2411                           
  2412                           ;doprnt.c: 430: if(scl>=110)
  2413  0017EE  502A               	movf	scale@scl,w,c
  2414  0017F0  0A80               	xorlw	128
  2415  0017F2  0F12               	addlw	-238
  2416  0017F4  A0D8               	btfss	status,0,c
  2417  0017F6  D08D               	goto	l2236
  2418                           
  2419                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2420  0017F8  0E00               	movlw	0
  2421  0017FA  6E12               	movwf	___wmul@multiplicand+1,c
  2422  0017FC  0E03               	movlw	3
  2423  0017FE  6E11               	movwf	___wmul@multiplicand,c
  2424  001800  0E00               	movlw	0
  2425  001802  6E0A               	movwf	___awdiv@divisor+1,c
  2426  001804  0E0A               	movlw	10
  2427  001806  6E09               	movwf	___awdiv@divisor,c
  2428  001808  0E00               	movlw	0
  2429  00180A  6E04               	movwf	___awmod@divisor+1,c
  2430  00180C  0E64               	movlw	100
  2431  00180E  6E03               	movwf	___awmod@divisor,c
  2432  001810  502A               	movf	scale@scl,w,c
  2433  001812  6E01               	movwf	___awmod@dividend,c
  2434  001814  6A02               	clrf	___awmod@dividend+1,c
  2435  001816  BE01               	btfsc	___awmod@dividend,7,c
  2436  001818  0602               	decf	___awmod@dividend+1,f,c
  2437  00181A  EC31  F015         	call	___awmod	;wreg free
  2438  00181E  C001  F007         	movff	?___awmod,___awdiv@dividend
  2439  001822  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2440  001826  EC55  F014         	call	___awdiv	;wreg free
  2441  00182A  0E09               	movlw	9
  2442  00182C  2407               	addwf	?___awdiv,w,c
  2443  00182E  6E0F               	movwf	___wmul@multiplier,c
  2444  001830  0E00               	movlw	0
  2445  001832  2008               	addwfc	?___awdiv+1,w,c
  2446  001834  6E10               	movwf	___wmul@multiplier+1,c
  2447  001836  EC67  F016         	call	___wmul	;wreg free
  2448  00183A  0E29               	movlw	low __npowers_
  2449  00183C  240F               	addwf	?___wmul,w,c
  2450  00183E  6EF6               	movwf	tblptrl,c
  2451  001840  0E10               	movlw	high __npowers_
  2452  001842  2010               	addwfc	?___wmul+1,w,c
  2453  001844  6EF7               	movwf	tblptrh,c
  2454  001846                     	if	0	;There are less than 3 active tblptr bytes
  2455  001846                     	endif
  2456  001846  0009               	tblrd		*+
  2457  001848  CFF5 F018          	movff	tablat,___ftmul@f2
  2458  00184C  0009               	tblrd		*+
  2459  00184E  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2460  001852  000A               	tblrd		*-
  2461  001854  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2462  001858  0E00               	movlw	0
  2463  00185A  6E0A               	movwf	___awdiv@divisor+1,c
  2464  00185C  0E64               	movlw	100
  2465  00185E  6E09               	movwf	___awdiv@divisor,c
  2466  001860  502A               	movf	scale@scl,w,c
  2467  001862  6E07               	movwf	___awdiv@dividend,c
  2468  001864  6A08               	clrf	___awdiv@dividend+1,c
  2469  001866  BE07               	btfsc	___awdiv@dividend,7,c
  2470  001868  0608               	decf	___awdiv@dividend+1,f,c
  2471  00186A  EC55  F014         	call	___awdiv	;wreg free
  2472  00186E  0E12               	movlw	18
  2473  001870  2407               	addwf	?___awdiv,w,c
  2474  001872  6E0F               	movwf	___wmul@multiplier,c
  2475  001874  0E00               	movlw	0
  2476  001876  2008               	addwfc	?___awdiv+1,w,c
  2477  001878  6E10               	movwf	___wmul@multiplier+1,c
  2478  00187A  0E00               	movlw	0
  2479  00187C  6E12               	movwf	___wmul@multiplicand+1,c
  2480  00187E  0E03               	movlw	3
  2481  001880  6E11               	movwf	___wmul@multiplicand,c
  2482  001882  EC67  F016         	call	___wmul	;wreg free
  2483  001886  0E29               	movlw	low __npowers_
  2484  001888  240F               	addwf	?___wmul,w,c
  2485  00188A  6EF6               	movwf	tblptrl,c
  2486  00188C  0E10               	movlw	high __npowers_
  2487  00188E  2010               	addwfc	?___wmul+1,w,c
  2488  001890  6EF7               	movwf	tblptrh,c
  2489  001892                     	if	0	;There are less than 3 active tblptr bytes
  2490  001892                     	endif
  2491  001892  0009               	tblrd		*+
  2492  001894  CFF5 F015          	movff	tablat,___ftmul@f1
  2493  001898  0009               	tblrd		*+
  2494  00189A  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2495  00189E  000A               	tblrd		*-
  2496  0018A0  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2497  0018A4  EC92  F012         	call	___ftmul	;wreg free
  2498  0018A8  C015  F027         	movff	?___ftmul,_scale$1246
  2499  0018AC  C016  F028         	movff	?___ftmul+1,_scale$1246+1
  2500  0018B0  C017  F029         	movff	?___ftmul+2,_scale$1246+2
  2501                           
  2502                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2503  0018B4  C027  F015         	movff	_scale$1246,___ftmul@f1
  2504  0018B8  C028  F016         	movff	_scale$1246+1,___ftmul@f1+1
  2505  0018BC  C029  F017         	movff	_scale$1246+2,___ftmul@f1+2
  2506  0018C0  0E00               	movlw	0
  2507  0018C2  6E12               	movwf	___wmul@multiplicand+1,c
  2508  0018C4  0E03               	movlw	3
  2509  0018C6  6E11               	movwf	___wmul@multiplicand,c
  2510  0018C8  0E00               	movlw	0
  2511  0018CA  6E04               	movwf	___awmod@divisor+1,c
  2512  0018CC  0E0A               	movlw	10
  2513  0018CE  6E03               	movwf	___awmod@divisor,c
  2514  0018D0  502A               	movf	scale@scl,w,c
  2515  0018D2  6E01               	movwf	___awmod@dividend,c
  2516  0018D4  6A02               	clrf	___awmod@dividend+1,c
  2517  0018D6  BE01               	btfsc	___awmod@dividend,7,c
  2518  0018D8  0602               	decf	___awmod@dividend+1,f,c
  2519  0018DA  EC31  F015         	call	___awmod	;wreg free
  2520  0018DE  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2521  0018E2  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2522  0018E6  EC67  F016         	call	___wmul	;wreg free
  2523  0018EA  0E29               	movlw	low __npowers_
  2524  0018EC  240F               	addwf	?___wmul,w,c
  2525  0018EE  6EF6               	movwf	tblptrl,c
  2526  0018F0  0E10               	movlw	high __npowers_
  2527  0018F2  2010               	addwfc	?___wmul+1,w,c
  2528  0018F4  6EF7               	movwf	tblptrh,c
  2529  0018F6                     	if	0	;There are less than 3 active tblptr bytes
  2530  0018F6                     	endif
  2531  0018F6  0009               	tblrd		*+
  2532  0018F8  CFF5 F018          	movff	tablat,___ftmul@f2
  2533  0018FC  0009               	tblrd		*+
  2534  0018FE  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2535  001902  000A               	tblrd		*-
  2536  001904  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2537  001908  EC92  F012         	call	___ftmul	;wreg free
  2538  00190C  D141               	goto	L5
  2539  00190E  D15A               	goto	l188
  2540  001910  D054               	goto	l2242
  2541  001912                     l2236:
  2542                           
  2543                           ;doprnt.c: 432: else if(scl > 10)
  2544  001912  502A               	movf	scale@scl,w,c
  2545  001914  0A80               	xorlw	128
  2546  001916  0F75               	addlw	-139
  2547  001918  A0D8               	btfss	status,0,c
  2548  00191A  D04F               	goto	l2242
  2549                           
  2550                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2551  00191C  0E00               	movlw	0
  2552  00191E  6E0A               	movwf	___awdiv@divisor+1,c
  2553  001920  0E0A               	movlw	10
  2554  001922  6E09               	movwf	___awdiv@divisor,c
  2555  001924  502A               	movf	scale@scl,w,c
  2556  001926  6E07               	movwf	___awdiv@dividend,c
  2557  001928  6A08               	clrf	___awdiv@dividend+1,c
  2558  00192A  BE07               	btfsc	___awdiv@dividend,7,c
  2559  00192C  0608               	decf	___awdiv@dividend+1,f,c
  2560  00192E  EC55  F014         	call	___awdiv	;wreg free
  2561  001932  0E09               	movlw	9
  2562  001934  2407               	addwf	?___awdiv,w,c
  2563  001936  6E0F               	movwf	___wmul@multiplier,c
  2564  001938  0E00               	movlw	0
  2565  00193A  2008               	addwfc	?___awdiv+1,w,c
  2566  00193C  6E10               	movwf	___wmul@multiplier+1,c
  2567  00193E  0E00               	movlw	0
  2568  001940  6E12               	movwf	___wmul@multiplicand+1,c
  2569  001942  0E03               	movlw	3
  2570  001944  6E11               	movwf	___wmul@multiplicand,c
  2571  001946  EC67  F016         	call	___wmul	;wreg free
  2572  00194A  0E29               	movlw	low __npowers_
  2573  00194C  240F               	addwf	?___wmul,w,c
  2574  00194E  6EF6               	movwf	tblptrl,c
  2575  001950  0E10               	movlw	high __npowers_
  2576  001952  2010               	addwfc	?___wmul+1,w,c
  2577  001954  6EF7               	movwf	tblptrh,c
  2578  001956                     	if	0	;There are less than 3 active tblptr bytes
  2579  001956                     	endif
  2580  001956  0009               	tblrd		*+
  2581  001958  CFF5 F015          	movff	tablat,___ftmul@f1
  2582  00195C  0009               	tblrd		*+
  2583  00195E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2584  001962  000A               	tblrd		*-
  2585  001964  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2586  001968  0E00               	movlw	0
  2587  00196A  6E12               	movwf	___wmul@multiplicand+1,c
  2588  00196C  0E03               	movlw	3
  2589  00196E  6E11               	movwf	___wmul@multiplicand,c
  2590  001970  0E00               	movlw	0
  2591  001972  6E04               	movwf	___awmod@divisor+1,c
  2592  001974  0E0A               	movlw	10
  2593  001976  6E03               	movwf	___awmod@divisor,c
  2594  001978  502A               	movf	scale@scl,w,c
  2595  00197A  6E01               	movwf	___awmod@dividend,c
  2596  00197C  6A02               	clrf	___awmod@dividend+1,c
  2597  00197E  BE01               	btfsc	___awmod@dividend,7,c
  2598  001980  0602               	decf	___awmod@dividend+1,f,c
  2599  001982  EC31  F015         	call	___awmod	;wreg free
  2600  001986  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2601  00198A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2602  00198E  EC67  F016         	call	___wmul	;wreg free
  2603  001992  0E29               	movlw	low __npowers_
  2604  001994  240F               	addwf	?___wmul,w,c
  2605  001996  6EF6               	movwf	tblptrl,c
  2606  001998  0E10               	movlw	high __npowers_
  2607  00199A  2010               	addwfc	?___wmul+1,w,c
  2608  00199C  6EF7               	movwf	tblptrh,c
  2609  00199E                     	if	0	;There are less than 3 active tblptr bytes
  2610  00199E                     	endif
  2611  00199E  0009               	tblrd		*+
  2612  0019A0  CFF5 F018          	movff	tablat,___ftmul@f2
  2613  0019A4  0009               	tblrd		*+
  2614  0019A6  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2615  0019AA  000A               	tblrd		*-
  2616  0019AC  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2617  0019B0  EC92  F012         	call	___ftmul	;wreg free
  2618  0019B4  D0ED               	goto	L5
  2619  0019B6  D106               	goto	l188
  2620  0019B8  D000               	goto	l2242
  2621  0019BA                     l2242:
  2622                           
  2623                           ;doprnt.c: 434: return _npowers_[scl];
  2624  0019BA  502A               	movf	scale@scl,w,c
  2625  0019BC  0D03               	mullw	3
  2626  0019BE  0E29               	movlw	low __npowers_
  2627  0019C0  24F3               	addwf	prodl,w,c
  2628  0019C2  6EF6               	movwf	tblptrl,c
  2629  0019C4  0E10               	movlw	high __npowers_
  2630  0019C6  D0F2               	goto	L4
  2631  0019C8  D0FD               	goto	l188
  2632  0019CA                     l2246:
  2633                           
  2634                           ;doprnt.c: 435: }
  2635                           ;doprnt.c: 436: if(scl>=110)
  2636  0019CA  502A               	movf	scale@scl,w,c
  2637  0019CC  0A80               	xorlw	128
  2638  0019CE  0F12               	addlw	-238
  2639  0019D0  A0D8               	btfss	status,0,c
  2640  0019D2  D08D               	goto	l2254
  2641                           
  2642                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2643  0019D4  0E00               	movlw	0
  2644  0019D6  6E12               	movwf	___wmul@multiplicand+1,c
  2645  0019D8  0E03               	movlw	3
  2646  0019DA  6E11               	movwf	___wmul@multiplicand,c
  2647  0019DC  0E00               	movlw	0
  2648  0019DE  6E0A               	movwf	___awdiv@divisor+1,c
  2649  0019E0  0E0A               	movlw	10
  2650  0019E2  6E09               	movwf	___awdiv@divisor,c
  2651  0019E4  0E00               	movlw	0
  2652  0019E6  6E04               	movwf	___awmod@divisor+1,c
  2653  0019E8  0E64               	movlw	100
  2654  0019EA  6E03               	movwf	___awmod@divisor,c
  2655  0019EC  502A               	movf	scale@scl,w,c
  2656  0019EE  6E01               	movwf	___awmod@dividend,c
  2657  0019F0  6A02               	clrf	___awmod@dividend+1,c
  2658  0019F2  BE01               	btfsc	___awmod@dividend,7,c
  2659  0019F4  0602               	decf	___awmod@dividend+1,f,c
  2660  0019F6  EC31  F015         	call	___awmod	;wreg free
  2661  0019FA  C001  F007         	movff	?___awmod,___awdiv@dividend
  2662  0019FE  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2663  001A02  EC55  F014         	call	___awdiv	;wreg free
  2664  001A06  0E09               	movlw	9
  2665  001A08  2407               	addwf	?___awdiv,w,c
  2666  001A0A  6E0F               	movwf	___wmul@multiplier,c
  2667  001A0C  0E00               	movlw	0
  2668  001A0E  2008               	addwfc	?___awdiv+1,w,c
  2669  001A10  6E10               	movwf	___wmul@multiplier+1,c
  2670  001A12  EC67  F016         	call	___wmul	;wreg free
  2671  001A16  0E50               	movlw	low __powers_
  2672  001A18  240F               	addwf	?___wmul,w,c
  2673  001A1A  6EF6               	movwf	tblptrl,c
  2674  001A1C  0E10               	movlw	high __powers_
  2675  001A1E  2010               	addwfc	?___wmul+1,w,c
  2676  001A20  6EF7               	movwf	tblptrh,c
  2677  001A22                     	if	0	;There are less than 3 active tblptr bytes
  2678  001A22                     	endif
  2679  001A22  0009               	tblrd		*+
  2680  001A24  CFF5 F018          	movff	tablat,___ftmul@f2
  2681  001A28  0009               	tblrd		*+
  2682  001A2A  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2683  001A2E  000A               	tblrd		*-
  2684  001A30  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2685  001A34  0E00               	movlw	0
  2686  001A36  6E0A               	movwf	___awdiv@divisor+1,c
  2687  001A38  0E64               	movlw	100
  2688  001A3A  6E09               	movwf	___awdiv@divisor,c
  2689  001A3C  502A               	movf	scale@scl,w,c
  2690  001A3E  6E07               	movwf	___awdiv@dividend,c
  2691  001A40  6A08               	clrf	___awdiv@dividend+1,c
  2692  001A42  BE07               	btfsc	___awdiv@dividend,7,c
  2693  001A44  0608               	decf	___awdiv@dividend+1,f,c
  2694  001A46  EC55  F014         	call	___awdiv	;wreg free
  2695  001A4A  0E12               	movlw	18
  2696  001A4C  2407               	addwf	?___awdiv,w,c
  2697  001A4E  6E0F               	movwf	___wmul@multiplier,c
  2698  001A50  0E00               	movlw	0
  2699  001A52  2008               	addwfc	?___awdiv+1,w,c
  2700  001A54  6E10               	movwf	___wmul@multiplier+1,c
  2701  001A56  0E00               	movlw	0
  2702  001A58  6E12               	movwf	___wmul@multiplicand+1,c
  2703  001A5A  0E03               	movlw	3
  2704  001A5C  6E11               	movwf	___wmul@multiplicand,c
  2705  001A5E  EC67  F016         	call	___wmul	;wreg free
  2706  001A62  0E50               	movlw	low __powers_
  2707  001A64  240F               	addwf	?___wmul,w,c
  2708  001A66  6EF6               	movwf	tblptrl,c
  2709  001A68  0E10               	movlw	high __powers_
  2710  001A6A  2010               	addwfc	?___wmul+1,w,c
  2711  001A6C  6EF7               	movwf	tblptrh,c
  2712  001A6E                     	if	0	;There are less than 3 active tblptr bytes
  2713  001A6E                     	endif
  2714  001A6E  0009               	tblrd		*+
  2715  001A70  CFF5 F015          	movff	tablat,___ftmul@f1
  2716  001A74  0009               	tblrd		*+
  2717  001A76  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2718  001A7A  000A               	tblrd		*-
  2719  001A7C  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2720  001A80  EC92  F012         	call	___ftmul	;wreg free
  2721  001A84  C015  F027         	movff	?___ftmul,_scale$1246
  2722  001A88  C016  F028         	movff	?___ftmul+1,_scale$1246+1
  2723  001A8C  C017  F029         	movff	?___ftmul+2,_scale$1246+2
  2724                           
  2725                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2726  001A90  C027  F015         	movff	_scale$1246,___ftmul@f1
  2727  001A94  C028  F016         	movff	_scale$1246+1,___ftmul@f1+1
  2728  001A98  C029  F017         	movff	_scale$1246+2,___ftmul@f1+2
  2729  001A9C  0E00               	movlw	0
  2730  001A9E  6E12               	movwf	___wmul@multiplicand+1,c
  2731  001AA0  0E03               	movlw	3
  2732  001AA2  6E11               	movwf	___wmul@multiplicand,c
  2733  001AA4  0E00               	movlw	0
  2734  001AA6  6E04               	movwf	___awmod@divisor+1,c
  2735  001AA8  0E0A               	movlw	10
  2736  001AAA  6E03               	movwf	___awmod@divisor,c
  2737  001AAC  502A               	movf	scale@scl,w,c
  2738  001AAE  6E01               	movwf	___awmod@dividend,c
  2739  001AB0  6A02               	clrf	___awmod@dividend+1,c
  2740  001AB2  BE01               	btfsc	___awmod@dividend,7,c
  2741  001AB4  0602               	decf	___awmod@dividend+1,f,c
  2742  001AB6  EC31  F015         	call	___awmod	;wreg free
  2743  001ABA  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2744  001ABE  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2745  001AC2  EC67  F016         	call	___wmul	;wreg free
  2746  001AC6  0E50               	movlw	low __powers_
  2747  001AC8  240F               	addwf	?___wmul,w,c
  2748  001ACA  6EF6               	movwf	tblptrl,c
  2749  001ACC  0E10               	movlw	high __powers_
  2750  001ACE  2010               	addwfc	?___wmul+1,w,c
  2751  001AD0  6EF7               	movwf	tblptrh,c
  2752  001AD2                     	if	0	;There are less than 3 active tblptr bytes
  2753  001AD2                     	endif
  2754  001AD2  0009               	tblrd		*+
  2755  001AD4  CFF5 F018          	movff	tablat,___ftmul@f2
  2756  001AD8  0009               	tblrd		*+
  2757  001ADA  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2758  001ADE  000A               	tblrd		*-
  2759  001AE0  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2760  001AE4  EC92  F012         	call	___ftmul	;wreg free
  2761  001AE8  D053               	goto	L5
  2762  001AEA  D06C               	goto	l188
  2763  001AEC  D059               	goto	l2260
  2764  001AEE                     l2254:
  2765                           
  2766                           ;doprnt.c: 438: else if(scl > 10)
  2767  001AEE  502A               	movf	scale@scl,w,c
  2768  001AF0  0A80               	xorlw	128
  2769  001AF2  0F75               	addlw	-139
  2770  001AF4  A0D8               	btfss	status,0,c
  2771  001AF6  D054               	goto	l2260
  2772                           
  2773                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2774  001AF8  0E00               	movlw	0
  2775  001AFA  6E0A               	movwf	___awdiv@divisor+1,c
  2776  001AFC  0E0A               	movlw	10
  2777  001AFE  6E09               	movwf	___awdiv@divisor,c
  2778  001B00  502A               	movf	scale@scl,w,c
  2779  001B02  6E07               	movwf	___awdiv@dividend,c
  2780  001B04  6A08               	clrf	___awdiv@dividend+1,c
  2781  001B06  BE07               	btfsc	___awdiv@dividend,7,c
  2782  001B08  0608               	decf	___awdiv@dividend+1,f,c
  2783  001B0A  EC55  F014         	call	___awdiv	;wreg free
  2784  001B0E  0E09               	movlw	9
  2785  001B10  2407               	addwf	?___awdiv,w,c
  2786  001B12  6E0F               	movwf	___wmul@multiplier,c
  2787  001B14  0E00               	movlw	0
  2788  001B16  2008               	addwfc	?___awdiv+1,w,c
  2789  001B18  6E10               	movwf	___wmul@multiplier+1,c
  2790  001B1A  0E00               	movlw	0
  2791  001B1C  6E12               	movwf	___wmul@multiplicand+1,c
  2792  001B1E  0E03               	movlw	3
  2793  001B20  6E11               	movwf	___wmul@multiplicand,c
  2794  001B22  EC67  F016         	call	___wmul	;wreg free
  2795  001B26  0E50               	movlw	low __powers_
  2796  001B28  240F               	addwf	?___wmul,w,c
  2797  001B2A  6EF6               	movwf	tblptrl,c
  2798  001B2C  0E10               	movlw	high __powers_
  2799  001B2E  2010               	addwfc	?___wmul+1,w,c
  2800  001B30  6EF7               	movwf	tblptrh,c
  2801  001B32                     	if	0	;There are less than 3 active tblptr bytes
  2802  001B32                     	endif
  2803  001B32  0009               	tblrd		*+
  2804  001B34  CFF5 F015          	movff	tablat,___ftmul@f1
  2805  001B38  0009               	tblrd		*+
  2806  001B3A  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2807  001B3E  000A               	tblrd		*-
  2808  001B40  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2809  001B44  0E00               	movlw	0
  2810  001B46  6E12               	movwf	___wmul@multiplicand+1,c
  2811  001B48  0E03               	movlw	3
  2812  001B4A  6E11               	movwf	___wmul@multiplicand,c
  2813  001B4C  0E00               	movlw	0
  2814  001B4E  6E04               	movwf	___awmod@divisor+1,c
  2815  001B50  0E0A               	movlw	10
  2816  001B52  6E03               	movwf	___awmod@divisor,c
  2817  001B54  502A               	movf	scale@scl,w,c
  2818  001B56  6E01               	movwf	___awmod@dividend,c
  2819  001B58  6A02               	clrf	___awmod@dividend+1,c
  2820  001B5A  BE01               	btfsc	___awmod@dividend,7,c
  2821  001B5C  0602               	decf	___awmod@dividend+1,f,c
  2822  001B5E  EC31  F015         	call	___awmod	;wreg free
  2823  001B62  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2824  001B66  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2825  001B6A  EC67  F016         	call	___wmul	;wreg free
  2826  001B6E  0E50               	movlw	low __powers_
  2827  001B70  240F               	addwf	?___wmul,w,c
  2828  001B72  6EF6               	movwf	tblptrl,c
  2829  001B74  0E10               	movlw	high __powers_
  2830  001B76  2010               	addwfc	?___wmul+1,w,c
  2831  001B78  6EF7               	movwf	tblptrh,c
  2832  001B7A                     	if	0	;There are less than 3 active tblptr bytes
  2833  001B7A                     	endif
  2834  001B7A  0009               	tblrd		*+
  2835  001B7C  CFF5 F018          	movff	tablat,___ftmul@f2
  2836  001B80  0009               	tblrd		*+
  2837  001B82  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2838  001B86  000A               	tblrd		*-
  2839  001B88  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2840  001B8C  EC92  F012         	call	___ftmul	;wreg free
  2841  001B90                     L5:
  2842  001B90  C015  F024         	movff	?___ftmul,?_scale
  2843  001B94  C016  F025         	movff	?___ftmul+1,?_scale+1
  2844  001B98  C017  F026         	movff	?___ftmul+2,?_scale+2
  2845  001B9C  D013               	goto	l188
  2846  001B9E  D000               	goto	l2260
  2847  001BA0                     l2260:
  2848                           
  2849                           ;doprnt.c: 440: return _powers_[scl];
  2850  001BA0  502A               	movf	scale@scl,w,c
  2851  001BA2  0D03               	mullw	3
  2852  001BA4  0E50               	movlw	low __powers_
  2853  001BA6  24F3               	addwf	prodl,w,c
  2854  001BA8  6EF6               	movwf	tblptrl,c
  2855  001BAA  0E10               	movlw	high __powers_
  2856  001BAC                     L4:
  2857  001BAC  20F4               	addwfc	prodh,w,c
  2858  001BAE  6EF7               	movwf	tblptrh,c
  2859  001BB0                     	if	0	;There are less than 3 active tblptr bytes
  2860  001BB0                     	endif
  2861  001BB0  0009               	tblrd		*+
  2862  001BB2  CFF5 F024          	movff	tablat,?_scale
  2863  001BB6  0009               	tblrd		*+
  2864  001BB8  CFF5 F025          	movff	tablat,?_scale+1
  2865  001BBC  000A               	tblrd		*-
  2866  001BBE  CFF5 F026          	movff	tablat,?_scale+2
  2867  001BC2  D000               	goto	l188
  2868  001BC4                     l188:
  2869  001BC4  0012               	return		;funcret
  2870  001BC6                     __end_of_scale:
  2871                           	opt stack 0
  2872                           tblptru	equ	0xFF8
  2873                           tblptrh	equ	0xFF7
  2874                           tblptrl	equ	0xFF6
  2875                           tablat	equ	0xFF5
  2876                           prodh	equ	0xFF4
  2877                           prodl	equ	0xFF3
  2878                           postinc0	equ	0xFEE
  2879                           wreg	equ	0xFE8
  2880                           postdec1	equ	0xFE5
  2881                           plusw1	equ	0xFE3
  2882                           fsr1l	equ	0xFE1
  2883                           indf2	equ	0xFDF
  2884                           postinc2	equ	0xFDE
  2885                           postdec2	equ	0xFDD
  2886                           plusw2	equ	0xFDB
  2887                           fsr2h	equ	0xFDA
  2888                           fsr2l	equ	0xFD9
  2889                           status	equ	0xFD8
  2890                           
  2891 ;; *************** function _putch *****************
  2892 ;; Defined at:
  2893 ;;		line 48 in file "Lab5.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  c               1    wreg     unsigned char 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  c               1    0[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;		None               void
  2900 ;; Registers used:
  2901 ;;		wreg
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;Total ram usage:        1 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_printf
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text3
  2921  002D8E                     __ptext3:
  2922                           	opt stack 0
  2923  002D8E                     _putch:
  2924                           	opt stack 29
  2925                           
  2926                           ;incstack = 0
  2927                           ;putch@c stored from wreg
  2928  002D8E  6E01               	movwf	putch@c,c
  2929                           
  2930                           ;Lab5.c: 50: while (!TRMT);
  2931  002D90  D000               	goto	l80
  2932  002D92                     l80:
  2933  002D92  A2AC               	btfss	4012,1,c	;volatile
  2934  002D94  D7FE               	goto	l80
  2935                           
  2936                           ;Lab5.c: 51: TXREG = c;
  2937  002D96  C001  FFAD         	movff	putch@c,4013	;volatile
  2938  002D9A  0012               	return		;funcret
  2939  002D9C                     __end_of_putch:
  2940                           	opt stack 0
  2941                           tblptru	equ	0xFF8
  2942                           tblptrh	equ	0xFF7
  2943                           tblptrl	equ	0xFF6
  2944                           tablat	equ	0xFF5
  2945                           prodh	equ	0xFF4
  2946                           prodl	equ	0xFF3
  2947                           postinc0	equ	0xFEE
  2948                           wreg	equ	0xFE8
  2949                           postdec1	equ	0xFE5
  2950                           plusw1	equ	0xFE3
  2951                           fsr1l	equ	0xFE1
  2952                           indf2	equ	0xFDF
  2953                           postinc2	equ	0xFDE
  2954                           postdec2	equ	0xFDD
  2955                           plusw2	equ	0xFDB
  2956                           fsr2h	equ	0xFDA
  2957                           fsr2l	equ	0xFD9
  2958                           status	equ	0xFD8
  2959                           
  2960 ;; *************** function _fround *****************
  2961 ;; Defined at:
  2962 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  prec            1    wreg     unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  prec            1   44[COMRAM] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  3   35[COMRAM] unsigned char 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2976 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;Total ram usage:       10 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    2
  2983 ;; This function calls:
  2984 ;;		___awdiv
  2985 ;;		___awmod
  2986 ;;		___ftmul
  2987 ;;		___wmul
  2988 ;; This function is called by:
  2989 ;;		_printf
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text4
  2994  001F02                     __ptext4:
  2995                           	opt stack 0
  2996  001F02                     _fround:
  2997                           	opt stack 27
  2998                           
  2999                           ;incstack = 0
  3000                           ;fround@prec stored from wreg
  3001  001F02  6E2D               	movwf	fround@prec,c
  3002                           
  3003                           ;doprnt.c: 413: if(prec>=110)
  3004  001F04  0E6D               	movlw	109
  3005  001F06  642D               	cpfsgt	fround@prec,c
  3006  001F08  D09B               	goto	l2214
  3007                           
  3008                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3009  001F0A  0E00               	movlw	0
  3010  001F0C  6E12               	movwf	___wmul@multiplicand+1,c
  3011  001F0E  0E03               	movlw	3
  3012  001F10  6E11               	movwf	___wmul@multiplicand,c
  3013  001F12  0E00               	movlw	0
  3014  001F14  6E0A               	movwf	___awdiv@divisor+1,c
  3015  001F16  0E0A               	movlw	10
  3016  001F18  6E09               	movwf	___awdiv@divisor,c
  3017  001F1A  0E00               	movlw	0
  3018  001F1C  6E04               	movwf	___awmod@divisor+1,c
  3019  001F1E  0E64               	movlw	100
  3020  001F20  6E03               	movwf	___awmod@divisor,c
  3021  001F22  C02D  F001         	movff	fround@prec,___awmod@dividend
  3022  001F26  6A02               	clrf	___awmod@dividend+1,c
  3023  001F28  EC31  F015         	call	___awmod	;wreg free
  3024  001F2C  C001  F007         	movff	?___awmod,___awdiv@dividend
  3025  001F30  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3026  001F34  EC55  F014         	call	___awdiv	;wreg free
  3027  001F38  0E09               	movlw	9
  3028  001F3A  2407               	addwf	?___awdiv,w,c
  3029  001F3C  6E0F               	movwf	___wmul@multiplier,c
  3030  001F3E  0E00               	movlw	0
  3031  001F40  2008               	addwfc	?___awdiv+1,w,c
  3032  001F42  6E10               	movwf	___wmul@multiplier+1,c
  3033  001F44  EC67  F016         	call	___wmul	;wreg free
  3034  001F48  0E29               	movlw	low __npowers_
  3035  001F4A  240F               	addwf	?___wmul,w,c
  3036  001F4C  6EF6               	movwf	tblptrl,c
  3037  001F4E  0E10               	movlw	high __npowers_
  3038  001F50  2010               	addwfc	?___wmul+1,w,c
  3039  001F52  6EF7               	movwf	tblptrh,c
  3040  001F54                     	if	0	;There are less than 3 active tblptr bytes
  3041  001F54                     	endif
  3042  001F54  0009               	tblrd		*+
  3043  001F56  CFF5 F018          	movff	tablat,___ftmul@f2
  3044  001F5A  0009               	tblrd		*+
  3045  001F5C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3046  001F60  000A               	tblrd		*-
  3047  001F62  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3048  001F66  0E00               	movlw	0
  3049  001F68  6E0A               	movwf	___awdiv@divisor+1,c
  3050  001F6A  0E64               	movlw	100
  3051  001F6C  6E09               	movwf	___awdiv@divisor,c
  3052  001F6E  C02D  F007         	movff	fround@prec,___awdiv@dividend
  3053  001F72  6A08               	clrf	___awdiv@dividend+1,c
  3054  001F74  EC55  F014         	call	___awdiv	;wreg free
  3055  001F78  0E12               	movlw	18
  3056  001F7A  2407               	addwf	?___awdiv,w,c
  3057  001F7C  6E0F               	movwf	___wmul@multiplier,c
  3058  001F7E  0E00               	movlw	0
  3059  001F80  2008               	addwfc	?___awdiv+1,w,c
  3060  001F82  6E10               	movwf	___wmul@multiplier+1,c
  3061  001F84  0E00               	movlw	0
  3062  001F86  6E12               	movwf	___wmul@multiplicand+1,c
  3063  001F88  0E03               	movlw	3
  3064  001F8A  6E11               	movwf	___wmul@multiplicand,c
  3065  001F8C  EC67  F016         	call	___wmul	;wreg free
  3066  001F90  0E29               	movlw	low __npowers_
  3067  001F92  240F               	addwf	?___wmul,w,c
  3068  001F94  6EF6               	movwf	tblptrl,c
  3069  001F96  0E10               	movlw	high __npowers_
  3070  001F98  2010               	addwfc	?___wmul+1,w,c
  3071  001F9A  6EF7               	movwf	tblptrh,c
  3072  001F9C                     	if	0	;There are less than 3 active tblptr bytes
  3073  001F9C                     	endif
  3074  001F9C  0009               	tblrd		*+
  3075  001F9E  CFF5 F015          	movff	tablat,___ftmul@f1
  3076  001FA2  0009               	tblrd		*+
  3077  001FA4  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3078  001FA8  000A               	tblrd		*-
  3079  001FAA  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3080  001FAE  EC92  F012         	call	___ftmul	;wreg free
  3081  001FB2  C015  F02A         	movff	?___ftmul,_fround$1244
  3082  001FB6  C016  F02B         	movff	?___ftmul+1,_fround$1244+1
  3083  001FBA  C017  F02C         	movff	?___ftmul+2,_fround$1244+2
  3084                           
  3085                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3086  001FBE  0E00               	movlw	0
  3087  001FC0  6E12               	movwf	___wmul@multiplicand+1,c
  3088  001FC2  0E03               	movlw	3
  3089  001FC4  6E11               	movwf	___wmul@multiplicand,c
  3090  001FC6  0E00               	movlw	0
  3091  001FC8  6E04               	movwf	___awmod@divisor+1,c
  3092  001FCA  0E0A               	movlw	10
  3093  001FCC  6E03               	movwf	___awmod@divisor,c
  3094  001FCE  C02D  F001         	movff	fround@prec,___awmod@dividend
  3095  001FD2  6A02               	clrf	___awmod@dividend+1,c
  3096  001FD4  EC31  F015         	call	___awmod	;wreg free
  3097  001FD8  C001  F00F         	movff	?___awmod,___wmul@multiplier
  3098  001FDC  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  3099  001FE0  EC67  F016         	call	___wmul	;wreg free
  3100  001FE4  0E29               	movlw	low __npowers_
  3101  001FE6  240F               	addwf	?___wmul,w,c
  3102  001FE8  6EF6               	movwf	tblptrl,c
  3103  001FEA  0E10               	movlw	high __npowers_
  3104  001FEC  2010               	addwfc	?___wmul+1,w,c
  3105  001FEE  6EF7               	movwf	tblptrh,c
  3106  001FF0                     	if	0	;There are less than 3 active tblptr bytes
  3107  001FF0                     	endif
  3108  001FF0  0009               	tblrd		*+
  3109  001FF2  CFF5 F018          	movff	tablat,___ftmul@f2
  3110  001FF6  0009               	tblrd		*+
  3111  001FF8  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3112  001FFC  000A               	tblrd		*-
  3113  001FFE  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3114  002002  C02A  F015         	movff	_fround$1244,___ftmul@f1
  3115  002006  C02B  F016         	movff	_fround$1244+1,___ftmul@f1+1
  3116  00200A  C02C  F017         	movff	_fround$1244+2,___ftmul@f1+2
  3117  00200E  EC92  F012         	call	___ftmul	;wreg free
  3118  002012  C015  F027         	movff	?___ftmul,_fround$1245
  3119  002016  C016  F028         	movff	?___ftmul+1,_fround$1245+1
  3120  00201A  C017  F029         	movff	?___ftmul+2,_fround$1245+2
  3121                           
  3122                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3123  00201E  C027  F015         	movff	_fround$1245,___ftmul@f1
  3124  002022  C028  F016         	movff	_fround$1245+1,___ftmul@f1+1
  3125  002026  C029  F017         	movff	_fround$1245+2,___ftmul@f1+2
  3126  00202A  0E00               	movlw	0
  3127  00202C  6E18               	movwf	___ftmul@f2,c
  3128  00202E  0E00               	movlw	0
  3129  002030  6E19               	movwf	___ftmul@f2+1,c
  3130  002032  0E3F               	movlw	63
  3131  002034  6E1A               	movwf	___ftmul@f2+2,c
  3132  002036  EC92  F012         	call	___ftmul	;wreg free
  3133  00203A  D07D               	goto	L7
  3134  00203C  D083               	goto	l181
  3135  00203E  D062               	goto	l2222
  3136  002040                     l2214:
  3137                           
  3138                           ;doprnt.c: 415: else if(prec > 10)
  3139  002040  0E0A               	movlw	10
  3140  002042  642D               	cpfsgt	fround@prec,c
  3141  002044  D05F               	goto	l2222
  3142                           
  3143                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3144  002046  0E00               	movlw	0
  3145  002048  6E12               	movwf	___wmul@multiplicand+1,c
  3146  00204A  0E03               	movlw	3
  3147  00204C  6E11               	movwf	___wmul@multiplicand,c
  3148  00204E  0E00               	movlw	0
  3149  002050  6E04               	movwf	___awmod@divisor+1,c
  3150  002052  0E0A               	movlw	10
  3151  002054  6E03               	movwf	___awmod@divisor,c
  3152  002056  C02D  F001         	movff	fround@prec,___awmod@dividend
  3153  00205A  6A02               	clrf	___awmod@dividend+1,c
  3154  00205C  EC31  F015         	call	___awmod	;wreg free
  3155  002060  C001  F00F         	movff	?___awmod,___wmul@multiplier
  3156  002064  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  3157  002068  EC67  F016         	call	___wmul	;wreg free
  3158  00206C  0E29               	movlw	low __npowers_
  3159  00206E  240F               	addwf	?___wmul,w,c
  3160  002070  6EF6               	movwf	tblptrl,c
  3161  002072  0E10               	movlw	high __npowers_
  3162  002074  2010               	addwfc	?___wmul+1,w,c
  3163  002076  6EF7               	movwf	tblptrh,c
  3164  002078                     	if	0	;There are less than 3 active tblptr bytes
  3165  002078                     	endif
  3166  002078  0009               	tblrd		*+
  3167  00207A  CFF5 F018          	movff	tablat,___ftmul@f2
  3168  00207E  0009               	tblrd		*+
  3169  002080  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3170  002084  000A               	tblrd		*-
  3171  002086  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3172  00208A  0E00               	movlw	0
  3173  00208C  6E0A               	movwf	___awdiv@divisor+1,c
  3174  00208E  0E0A               	movlw	10
  3175  002090  6E09               	movwf	___awdiv@divisor,c
  3176  002092  C02D  F007         	movff	fround@prec,___awdiv@dividend
  3177  002096  6A08               	clrf	___awdiv@dividend+1,c
  3178  002098  EC55  F014         	call	___awdiv	;wreg free
  3179  00209C  0E09               	movlw	9
  3180  00209E  2407               	addwf	?___awdiv,w,c
  3181  0020A0  6E0F               	movwf	___wmul@multiplier,c
  3182  0020A2  0E00               	movlw	0
  3183  0020A4  2008               	addwfc	?___awdiv+1,w,c
  3184  0020A6  6E10               	movwf	___wmul@multiplier+1,c
  3185  0020A8  0E00               	movlw	0
  3186  0020AA  6E12               	movwf	___wmul@multiplicand+1,c
  3187  0020AC  0E03               	movlw	3
  3188  0020AE  6E11               	movwf	___wmul@multiplicand,c
  3189  0020B0  EC67  F016         	call	___wmul	;wreg free
  3190  0020B4  0E29               	movlw	low __npowers_
  3191  0020B6  240F               	addwf	?___wmul,w,c
  3192  0020B8  6EF6               	movwf	tblptrl,c
  3193  0020BA  0E10               	movlw	high __npowers_
  3194  0020BC  2010               	addwfc	?___wmul+1,w,c
  3195  0020BE  6EF7               	movwf	tblptrh,c
  3196  0020C0                     	if	0	;There are less than 3 active tblptr bytes
  3197  0020C0                     	endif
  3198  0020C0  0009               	tblrd		*+
  3199  0020C2  CFF5 F015          	movff	tablat,___ftmul@f1
  3200  0020C6  0009               	tblrd		*+
  3201  0020C8  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3202  0020CC  000A               	tblrd		*-
  3203  0020CE  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3204  0020D2  EC92  F012         	call	___ftmul	;wreg free
  3205  0020D6  C015  F02A         	movff	?___ftmul,_fround$1244
  3206  0020DA  C016  F02B         	movff	?___ftmul+1,_fround$1244+1
  3207  0020DE  C017  F02C         	movff	?___ftmul+2,_fround$1244+2
  3208                           
  3209                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3210  0020E2  C02A  F015         	movff	_fround$1244,___ftmul@f1
  3211  0020E6  C02B  F016         	movff	_fround$1244+1,___ftmul@f1+1
  3212  0020EA  C02C  F017         	movff	_fround$1244+2,___ftmul@f1+2
  3213  0020EE  0E00               	movlw	0
  3214  0020F0  6E18               	movwf	___ftmul@f2,c
  3215  0020F2  0E00               	movlw	0
  3216  0020F4  6E19               	movwf	___ftmul@f2+1,c
  3217  0020F6  0E3F               	movlw	63
  3218  0020F8  6E1A               	movwf	___ftmul@f2+2,c
  3219  0020FA  EC92  F012         	call	___ftmul	;wreg free
  3220  0020FE  D01B               	goto	L7
  3221  002100  D021               	goto	l181
  3222  002102  D000               	goto	l2222
  3223  002104                     l2222:
  3224                           
  3225                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3226  002104  502D               	movf	fround@prec,w,c
  3227  002106  0D03               	mullw	3
  3228  002108  0E29               	movlw	low __npowers_
  3229  00210A  24F3               	addwf	prodl,w,c
  3230  00210C  6EF6               	movwf	tblptrl,c
  3231  00210E  0E10               	movlw	high __npowers_
  3232  002110  20F4               	addwfc	prodh,w,c
  3233  002112  6EF7               	movwf	tblptrh,c
  3234  002114                     	if	0	;There are less than 3 active tblptr bytes
  3235  002114                     	endif
  3236  002114  0009               	tblrd		*+
  3237  002116  CFF5 F015          	movff	tablat,___ftmul@f1
  3238  00211A  0009               	tblrd		*+
  3239  00211C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3240  002120  000A               	tblrd		*-
  3241  002122  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3242  002126  0E00               	movlw	0
  3243  002128  6E18               	movwf	___ftmul@f2,c
  3244  00212A  0E00               	movlw	0
  3245  00212C  6E19               	movwf	___ftmul@f2+1,c
  3246  00212E  0E3F               	movlw	63
  3247  002130  6E1A               	movwf	___ftmul@f2+2,c
  3248  002132  EC92  F012         	call	___ftmul	;wreg free
  3249  002136                     L7:
  3250  002136  C015  F024         	movff	?___ftmul,?_fround
  3251  00213A  C016  F025         	movff	?___ftmul+1,?_fround+1
  3252  00213E  C017  F026         	movff	?___ftmul+2,?_fround+2
  3253  002142  D000               	goto	l181
  3254  002144                     l181:
  3255  002144  0012               	return		;funcret
  3256  002146                     __end_of_fround:
  3257                           	opt stack 0
  3258                           tblptru	equ	0xFF8
  3259                           tblptrh	equ	0xFF7
  3260                           tblptrl	equ	0xFF6
  3261                           tablat	equ	0xFF5
  3262                           prodh	equ	0xFF4
  3263                           prodl	equ	0xFF3
  3264                           postinc0	equ	0xFEE
  3265                           wreg	equ	0xFE8
  3266                           postdec1	equ	0xFE5
  3267                           plusw1	equ	0xFE3
  3268                           fsr1l	equ	0xFE1
  3269                           indf2	equ	0xFDF
  3270                           postinc2	equ	0xFDE
  3271                           postdec2	equ	0xFDD
  3272                           plusw2	equ	0xFDB
  3273                           fsr2h	equ	0xFDA
  3274                           fsr2l	equ	0xFD9
  3275                           status	equ	0xFD8
  3276                           
  3277 ;; *************** function ___wmul *****************
  3278 ;; Defined at:
  3279 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  multiplier      2   14[COMRAM] unsigned int 
  3282 ;;  multiplicand    2   16[COMRAM] unsigned int 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  product         2   18[COMRAM] unsigned int 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  2   14[COMRAM] unsigned int 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0, prodl, prodh
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:        6 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_fround
  3304 ;;		_scale
  3305 ;;		_printf
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text5
  3310  002CCE                     __ptext5:
  3311                           	opt stack 0
  3312  002CCE                     ___wmul:
  3313                           	opt stack 28
  3314                           
  3315                           ;incstack = 0
  3316  002CCE  500F               	movf	___wmul@multiplier,w,c
  3317  002CD0  0211               	mulwf	___wmul@multiplicand,c
  3318  002CD2  CFF3 F013          	movff	prodl,___wmul@product
  3319  002CD6  CFF4 F014          	movff	prodh,___wmul@product+1
  3320  002CDA  500F               	movf	___wmul@multiplier,w,c
  3321  002CDC  0212               	mulwf	___wmul@multiplicand+1,c
  3322  002CDE  50F3               	movf	prodl,w,c
  3323  002CE0  2614               	addwf	___wmul@product+1,f,c
  3324  002CE2  5010               	movf	___wmul@multiplier+1,w,c
  3325  002CE4  0211               	mulwf	___wmul@multiplicand,c
  3326  002CE6  50F3               	movf	prodl,w,c
  3327  002CE8  2614               	addwf	___wmul@product+1,f,c
  3328  002CEA  C013  F00F         	movff	___wmul@product,?___wmul
  3329  002CEE  C014  F010         	movff	___wmul@product+1,?___wmul+1
  3330  002CF2  D000               	goto	l289
  3331  002CF4                     l289:
  3332  002CF4  0012               	return		;funcret
  3333  002CF6                     __end_of___wmul:
  3334                           	opt stack 0
  3335                           tblptru	equ	0xFF8
  3336                           tblptrh	equ	0xFF7
  3337                           tblptrl	equ	0xFF6
  3338                           tablat	equ	0xFF5
  3339                           prodh	equ	0xFF4
  3340                           prodl	equ	0xFF3
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           postdec1	equ	0xFE5
  3344                           plusw1	equ	0xFE3
  3345                           fsr1l	equ	0xFE1
  3346                           indf2	equ	0xFDF
  3347                           postinc2	equ	0xFDE
  3348                           postdec2	equ	0xFDD
  3349                           plusw2	equ	0xFDB
  3350                           fsr2h	equ	0xFDA
  3351                           fsr2l	equ	0xFD9
  3352                           status	equ	0xFD8
  3353                           
  3354 ;; *************** function ___ftmul *****************
  3355 ;; Defined at:
  3356 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  f1              3   20[COMRAM] float 
  3359 ;;  f2              3   23[COMRAM] float 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  3362 ;;  sign            1   34[COMRAM] unsigned char 
  3363 ;;  cntr            1   33[COMRAM] unsigned char 
  3364 ;;  exp             1   29[COMRAM] unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  3   20[COMRAM] float 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3374 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;Total ram usage:       15 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    1
  3381 ;; This function calls:
  3382 ;;		___ftpack
  3383 ;; This function is called by:
  3384 ;;		_main
  3385 ;;		_fround
  3386 ;;		_scale
  3387 ;;		_printf
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text6
  3392  002524                     __ptext6:
  3393                           	opt stack 0
  3394  002524                     ___ftmul:
  3395                           	opt stack 27
  3396                           
  3397                           ;incstack = 0
  3398  002524  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  3399  002528  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3400  00252A  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3401  00252C  3416               	rlcf	___ftmul@f1+1,w,c
  3402  00252E  361B               	rlcf	??___ftmul& (0+255),f,c
  3403  002530  E301               	bnc	u1881
  3404  002532  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3405  002534                     u1881:
  3406  002534  501B               	movf	??___ftmul,w,c
  3407  002536  6E1E               	movwf	___ftmul@exp,c
  3408  002538  501E               	movf	___ftmul@exp,w,c
  3409  00253A  A4D8               	btfss	status,2,c
  3410  00253C  D002               	goto	l2028
  3411  00253E  D00E               	goto	l2030
  3412  002540  D06C               	goto	l718
  3413  002542                     l2028:
  3414  002542  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  3415  002546  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3416  002548  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3417  00254A  3419               	rlcf	___ftmul@f2+1,w,c
  3418  00254C  361B               	rlcf	??___ftmul& (0+255),f,c
  3419  00254E  E301               	bnc	u1901
  3420  002550  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3421  002552                     u1901:
  3422  002552  501B               	movf	??___ftmul,w,c
  3423  002554  6E23               	movwf	___ftmul@sign,c
  3424  002556  5023               	movf	___ftmul@sign,w,c
  3425  002558  A4D8               	btfss	status,2,c
  3426  00255A  D007               	goto	l2034
  3427  00255C                     l2030:
  3428  00255C  0E00               	movlw	0
  3429  00255E  6E15               	movwf	?___ftmul,c
  3430  002560  0E00               	movlw	0
  3431  002562  6E16               	movwf	?___ftmul+1,c
  3432  002564  0E00               	movlw	0
  3433  002566  6E17               	movwf	?___ftmul+2,c
  3434  002568  D058               	goto	l718
  3435  00256A                     l2034:
  3436  00256A  5023               	movf	___ftmul@sign,w,c
  3437  00256C  0F7B               	addlw	123
  3438  00256E  261E               	addwf	___ftmul@exp,f,c
  3439  002570  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  3440  002574  501A               	movf	___ftmul@f2+2,w,c
  3441  002576  1A23               	xorwf	___ftmul@sign,f,c
  3442  002578  0E80               	movlw	128
  3443  00257A  1623               	andwf	___ftmul@sign,f,c
  3444  00257C  8E16               	bsf	___ftmul@f1+1,7,c
  3445  00257E  8E19               	bsf	___ftmul@f2+1,7,c
  3446  002580  0EFF               	movlw	255
  3447  002582  1618               	andwf	___ftmul@f2,f,c
  3448  002584  0EFF               	movlw	255
  3449  002586  1619               	andwf	___ftmul@f2+1,f,c
  3450  002588  0E00               	movlw	0
  3451  00258A  161A               	andwf	___ftmul@f2+2,f,c
  3452  00258C  0E00               	movlw	0
  3453  00258E  6E1F               	movwf	___ftmul@f3_as_product,c
  3454  002590  0E00               	movlw	0
  3455  002592  6E20               	movwf	___ftmul@f3_as_product+1,c
  3456  002594  0E00               	movlw	0
  3457  002596  6E21               	movwf	___ftmul@f3_as_product+2,c
  3458  002598  0E07               	movlw	7
  3459  00259A  6E22               	movwf	___ftmul@cntr,c
  3460  00259C  D000               	goto	l2048
  3461  00259E                     l2048:
  3462  00259E  A015               	btfss	___ftmul@f1,0,c
  3463  0025A0  D007               	goto	l2052
  3464  0025A2  5018               	movf	___ftmul@f2,w,c
  3465  0025A4  261F               	addwf	___ftmul@f3_as_product,f,c
  3466  0025A6  5019               	movf	___ftmul@f2+1,w,c
  3467  0025A8  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3468  0025AA  501A               	movf	___ftmul@f2+2,w,c
  3469  0025AC  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3470  0025AE  D000               	goto	l2052
  3471  0025B0                     l2052:
  3472  0025B0  90D8               	bcf	status,0,c
  3473  0025B2  3217               	rrcf	___ftmul@f1+2,f,c
  3474  0025B4  3216               	rrcf	___ftmul@f1+1,f,c
  3475  0025B6  3215               	rrcf	___ftmul@f1,f,c
  3476  0025B8  90D8               	bcf	status,0,c
  3477  0025BA  3618               	rlcf	___ftmul@f2,f,c
  3478  0025BC  3619               	rlcf	___ftmul@f2+1,f,c
  3479  0025BE  361A               	rlcf	___ftmul@f2+2,f,c
  3480  0025C0  2E22               	decfsz	___ftmul@cntr,f,c
  3481  0025C2  D7ED               	goto	l2048
  3482  0025C4  D000               	goto	l2056
  3483  0025C6                     l2056:
  3484  0025C6  0E09               	movlw	9
  3485  0025C8  6E22               	movwf	___ftmul@cntr,c
  3486  0025CA  D000               	goto	l2058
  3487  0025CC                     l2058:
  3488  0025CC  A015               	btfss	___ftmul@f1,0,c
  3489  0025CE  D007               	goto	l2062
  3490  0025D0  5018               	movf	___ftmul@f2,w,c
  3491  0025D2  261F               	addwf	___ftmul@f3_as_product,f,c
  3492  0025D4  5019               	movf	___ftmul@f2+1,w,c
  3493  0025D6  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3494  0025D8  501A               	movf	___ftmul@f2+2,w,c
  3495  0025DA  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3496  0025DC  D000               	goto	l2062
  3497  0025DE                     l2062:
  3498  0025DE  90D8               	bcf	status,0,c
  3499  0025E0  3217               	rrcf	___ftmul@f1+2,f,c
  3500  0025E2  3216               	rrcf	___ftmul@f1+1,f,c
  3501  0025E4  3215               	rrcf	___ftmul@f1,f,c
  3502  0025E6  90D8               	bcf	status,0,c
  3503  0025E8  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  3504  0025EA  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  3505  0025EC  321F               	rrcf	___ftmul@f3_as_product,f,c
  3506  0025EE  2E22               	decfsz	___ftmul@cntr,f,c
  3507  0025F0  D7ED               	goto	l2058
  3508  0025F2  D000               	goto	l2066
  3509  0025F4                     l2066:
  3510  0025F4  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3511  0025F8  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3512  0025FC  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3513  002600  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  3514  002604  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  3515  002608  ECF2  F013         	call	___ftpack	;wreg free
  3516  00260C  C001  F015         	movff	?___ftpack,?___ftmul
  3517  002610  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  3518  002614  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  3519  002618  D000               	goto	l718
  3520  00261A                     l718:
  3521  00261A  0012               	return		;funcret
  3522  00261C                     __end_of___ftmul:
  3523                           	opt stack 0
  3524                           tblptru	equ	0xFF8
  3525                           tblptrh	equ	0xFF7
  3526                           tblptrl	equ	0xFF6
  3527                           tablat	equ	0xFF5
  3528                           prodh	equ	0xFF4
  3529                           prodl	equ	0xFF3
  3530                           postinc0	equ	0xFEE
  3531                           wreg	equ	0xFE8
  3532                           postdec1	equ	0xFE5
  3533                           plusw1	equ	0xFE3
  3534                           fsr1l	equ	0xFE1
  3535                           indf2	equ	0xFDF
  3536                           postinc2	equ	0xFDE
  3537                           postdec2	equ	0xFDD
  3538                           plusw2	equ	0xFDB
  3539                           fsr2h	equ	0xFDA
  3540                           fsr2l	equ	0xFD9
  3541                           status	equ	0xFD8
  3542                           
  3543 ;; *************** function ___awmod *****************
  3544 ;; Defined at:
  3545 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  dividend        2    0[COMRAM] int 
  3548 ;;  divisor         2    2[COMRAM] int 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  sign            1    5[COMRAM] unsigned char 
  3551 ;;  counter         1    4[COMRAM] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  2    0[COMRAM] int 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;Total ram usage:        6 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; This function calls:
  3568 ;;		Nothing
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;;		_fround
  3572 ;;		_scale
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text7
  3577  002A62                     __ptext7:
  3578                           	opt stack 0
  3579  002A62                     ___awmod:
  3580                           	opt stack 28
  3581                           
  3582                           ;incstack = 0
  3583  002A62  0E00               	movlw	0
  3584  002A64  6E06               	movwf	___awmod@sign,c
  3585  002A66  AE02               	btfss	___awmod@dividend+1,7,c
  3586  002A68  D007               	goto	l2122
  3587  002A6A  6C01               	negf	___awmod@dividend,c
  3588  002A6C  1E02               	comf	___awmod@dividend+1,f,c
  3589  002A6E  B0D8               	btfsc	status,0,c
  3590  002A70  2A02               	incf	___awmod@dividend+1,f,c
  3591  002A72  0E01               	movlw	1
  3592  002A74  6E06               	movwf	___awmod@sign,c
  3593  002A76  D000               	goto	l2122
  3594  002A78                     l2122:
  3595  002A78  AE04               	btfss	___awmod@divisor+1,7,c
  3596  002A7A  D005               	goto	l2126
  3597  002A7C  6C03               	negf	___awmod@divisor,c
  3598  002A7E  1E04               	comf	___awmod@divisor+1,f,c
  3599  002A80  B0D8               	btfsc	status,0,c
  3600  002A82  2A04               	incf	___awmod@divisor+1,f,c
  3601  002A84  D000               	goto	l2126
  3602  002A86                     l2126:
  3603  002A86  5003               	movf	___awmod@divisor,w,c
  3604  002A88  1004               	iorwf	___awmod@divisor+1,w,c
  3605  002A8A  B4D8               	btfsc	status,2,c
  3606  002A8C  D01D               	goto	l2142
  3607  002A8E  0E01               	movlw	1
  3608  002A90  6E05               	movwf	___awmod@counter,c
  3609  002A92  D005               	goto	l2132
  3610  002A94                     l2130:
  3611  002A94  90D8               	bcf	status,0,c
  3612  002A96  3603               	rlcf	___awmod@divisor,f,c
  3613  002A98  3604               	rlcf	___awmod@divisor+1,f,c
  3614  002A9A  2A05               	incf	___awmod@counter,f,c
  3615  002A9C  D000               	goto	l2132
  3616  002A9E                     l2132:
  3617  002A9E  BE04               	btfsc	___awmod@divisor+1,7,c
  3618  002AA0  D002               	goto	l2134
  3619  002AA2  D7F8               	goto	l2130
  3620  002AA4  D000               	goto	l2134
  3621  002AA6                     l2134:
  3622  002AA6  5003               	movf	___awmod@divisor,w,c
  3623  002AA8  5C01               	subwf	___awmod@dividend,w,c
  3624  002AAA  5004               	movf	___awmod@divisor+1,w,c
  3625  002AAC  5802               	subwfb	___awmod@dividend+1,w,c
  3626  002AAE  A0D8               	btfss	status,0,c
  3627  002AB0  D005               	goto	l2138
  3628  002AB2  5003               	movf	___awmod@divisor,w,c
  3629  002AB4  5E01               	subwf	___awmod@dividend,f,c
  3630  002AB6  5004               	movf	___awmod@divisor+1,w,c
  3631  002AB8  5A02               	subwfb	___awmod@dividend+1,f,c
  3632  002ABA  D000               	goto	l2138
  3633  002ABC                     l2138:
  3634  002ABC  90D8               	bcf	status,0,c
  3635  002ABE  3204               	rrcf	___awmod@divisor+1,f,c
  3636  002AC0  3203               	rrcf	___awmod@divisor,f,c
  3637  002AC2  2E05               	decfsz	___awmod@counter,f,c
  3638  002AC4  D7F0               	goto	l2134
  3639  002AC6  D000               	goto	l2142
  3640  002AC8                     l2142:
  3641  002AC8  5006               	movf	___awmod@sign,w,c
  3642  002ACA  B4D8               	btfsc	status,2,c
  3643  002ACC  D005               	goto	l2146
  3644  002ACE  6C01               	negf	___awmod@dividend,c
  3645  002AD0  1E02               	comf	___awmod@dividend+1,f,c
  3646  002AD2  B0D8               	btfsc	status,0,c
  3647  002AD4  2A02               	incf	___awmod@dividend+1,f,c
  3648  002AD6  D000               	goto	l2146
  3649  002AD8                     l2146:
  3650  002AD8  C001  F001         	movff	___awmod@dividend,?___awmod
  3651  002ADC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3652  002AE0  D000               	goto	l495
  3653  002AE2                     l495:
  3654  002AE2  0012               	return		;funcret
  3655  002AE4                     __end_of___awmod:
  3656                           	opt stack 0
  3657                           tblptru	equ	0xFF8
  3658                           tblptrh	equ	0xFF7
  3659                           tblptrl	equ	0xFF6
  3660                           tablat	equ	0xFF5
  3661                           prodh	equ	0xFF4
  3662                           prodl	equ	0xFF3
  3663                           postinc0	equ	0xFEE
  3664                           wreg	equ	0xFE8
  3665                           postdec1	equ	0xFE5
  3666                           plusw1	equ	0xFE3
  3667                           fsr1l	equ	0xFE1
  3668                           indf2	equ	0xFDF
  3669                           postinc2	equ	0xFDE
  3670                           postdec2	equ	0xFDD
  3671                           plusw2	equ	0xFDB
  3672                           fsr2h	equ	0xFDA
  3673                           fsr2l	equ	0xFD9
  3674                           status	equ	0xFD8
  3675                           
  3676 ;; *************** function ___awdiv *****************
  3677 ;; Defined at:
  3678 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  dividend        2    6[COMRAM] int 
  3681 ;;  divisor         2    8[COMRAM] int 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  quotient        2   12[COMRAM] int 
  3684 ;;  sign            1   11[COMRAM] unsigned char 
  3685 ;;  counter         1   10[COMRAM] unsigned char 
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  2    6[COMRAM] int 
  3688 ;; Registers used:
  3689 ;;		wreg, status,2, status,0
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;Total ram usage:        8 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;;		_fround
  3706 ;;		_scale
  3707 ;;		_printf
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text8
  3712  0028AA                     __ptext8:
  3713                           	opt stack 0
  3714  0028AA                     ___awdiv:
  3715                           	opt stack 28
  3716                           
  3717                           ;incstack = 0
  3718  0028AA  0E00               	movlw	0
  3719  0028AC  6E0C               	movwf	___awdiv@sign,c
  3720  0028AE  AE0A               	btfss	___awdiv@divisor+1,7,c
  3721  0028B0  D007               	goto	l2078
  3722  0028B2  6C09               	negf	___awdiv@divisor,c
  3723  0028B4  1E0A               	comf	___awdiv@divisor+1,f,c
  3724  0028B6  B0D8               	btfsc	status,0,c
  3725  0028B8  2A0A               	incf	___awdiv@divisor+1,f,c
  3726  0028BA  0E01               	movlw	1
  3727  0028BC  6E0C               	movwf	___awdiv@sign,c
  3728  0028BE  D000               	goto	l2078
  3729  0028C0                     l2078:
  3730  0028C0  AE08               	btfss	___awdiv@dividend+1,7,c
  3731  0028C2  D007               	goto	l2084
  3732  0028C4  6C07               	negf	___awdiv@dividend,c
  3733  0028C6  1E08               	comf	___awdiv@dividend+1,f,c
  3734  0028C8  B0D8               	btfsc	status,0,c
  3735  0028CA  2A08               	incf	___awdiv@dividend+1,f,c
  3736  0028CC  0E01               	movlw	1
  3737  0028CE  1A0C               	xorwf	___awdiv@sign,f,c
  3738  0028D0  D000               	goto	l2084
  3739  0028D2                     l2084:
  3740  0028D2  0E00               	movlw	0
  3741  0028D4  6E0E               	movwf	___awdiv@quotient+1,c
  3742  0028D6  0E00               	movlw	0
  3743  0028D8  6E0D               	movwf	___awdiv@quotient,c
  3744  0028DA  5009               	movf	___awdiv@divisor,w,c
  3745  0028DC  100A               	iorwf	___awdiv@divisor+1,w,c
  3746  0028DE  B4D8               	btfsc	status,2,c
  3747  0028E0  D021               	goto	l2106
  3748  0028E2  0E01               	movlw	1
  3749  0028E4  6E0B               	movwf	___awdiv@counter,c
  3750  0028E6  D005               	goto	l2092
  3751  0028E8                     l2090:
  3752  0028E8  90D8               	bcf	status,0,c
  3753  0028EA  3609               	rlcf	___awdiv@divisor,f,c
  3754  0028EC  360A               	rlcf	___awdiv@divisor+1,f,c
  3755  0028EE  2A0B               	incf	___awdiv@counter,f,c
  3756  0028F0  D000               	goto	l2092
  3757  0028F2                     l2092:
  3758  0028F2  BE0A               	btfsc	___awdiv@divisor+1,7,c
  3759  0028F4  D002               	goto	l2094
  3760  0028F6  D7F8               	goto	l2090
  3761  0028F8  D000               	goto	l2094
  3762  0028FA                     l2094:
  3763  0028FA  90D8               	bcf	status,0,c
  3764  0028FC  360D               	rlcf	___awdiv@quotient,f,c
  3765  0028FE  360E               	rlcf	___awdiv@quotient+1,f,c
  3766  002900  5009               	movf	___awdiv@divisor,w,c
  3767  002902  5C07               	subwf	___awdiv@dividend,w,c
  3768  002904  500A               	movf	___awdiv@divisor+1,w,c
  3769  002906  5808               	subwfb	___awdiv@dividend+1,w,c
  3770  002908  A0D8               	btfss	status,0,c
  3771  00290A  D006               	goto	l2102
  3772  00290C  5009               	movf	___awdiv@divisor,w,c
  3773  00290E  5E07               	subwf	___awdiv@dividend,f,c
  3774  002910  500A               	movf	___awdiv@divisor+1,w,c
  3775  002912  5A08               	subwfb	___awdiv@dividend+1,f,c
  3776  002914  800D               	bsf	___awdiv@quotient,0,c
  3777  002916  D000               	goto	l2102
  3778  002918                     l2102:
  3779  002918  90D8               	bcf	status,0,c
  3780  00291A  320A               	rrcf	___awdiv@divisor+1,f,c
  3781  00291C  3209               	rrcf	___awdiv@divisor,f,c
  3782  00291E  2E0B               	decfsz	___awdiv@counter,f,c
  3783  002920  D7EC               	goto	l2094
  3784  002922  D000               	goto	l2106
  3785  002924                     l2106:
  3786  002924  500C               	movf	___awdiv@sign,w,c
  3787  002926  B4D8               	btfsc	status,2,c
  3788  002928  D005               	goto	l2110
  3789  00292A  6C0D               	negf	___awdiv@quotient,c
  3790  00292C  1E0E               	comf	___awdiv@quotient+1,f,c
  3791  00292E  B0D8               	btfsc	status,0,c
  3792  002930  2A0E               	incf	___awdiv@quotient+1,f,c
  3793  002932  D000               	goto	l2110
  3794  002934                     l2110:
  3795  002934  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3796  002938  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3797  00293C  D000               	goto	l482
  3798  00293E                     l482:
  3799  00293E  0012               	return		;funcret
  3800  002940                     __end_of___awdiv:
  3801                           	opt stack 0
  3802                           tblptru	equ	0xFF8
  3803                           tblptrh	equ	0xFF7
  3804                           tblptrl	equ	0xFF6
  3805                           tablat	equ	0xFF5
  3806                           prodh	equ	0xFF4
  3807                           prodl	equ	0xFF3
  3808                           postinc0	equ	0xFEE
  3809                           wreg	equ	0xFE8
  3810                           postdec1	equ	0xFE5
  3811                           plusw1	equ	0xFE3
  3812                           fsr1l	equ	0xFE1
  3813                           indf2	equ	0xFDF
  3814                           postinc2	equ	0xFDE
  3815                           postdec2	equ	0xFDD
  3816                           plusw2	equ	0xFDB
  3817                           fsr2h	equ	0xFDA
  3818                           fsr2l	equ	0xFD9
  3819                           status	equ	0xFD8
  3820                           
  3821 ;; *************** function __tdiv_to_l_ *****************
  3822 ;; Defined at:
  3823 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  f1              3    0[COMRAM] float 
  3826 ;;  f2              3    3[COMRAM] float 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  quot            4    9[COMRAM] unsigned long 
  3829 ;;  exp1            1   14[COMRAM] unsigned char 
  3830 ;;  cntr            1   13[COMRAM] unsigned char 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  4    0[COMRAM] unsigned long 
  3833 ;; Registers used:
  3834 ;;		wreg, status,2, status,0
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3840 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;Total ram usage:       15 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_printf
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text9
  3854  00230A                     __ptext9:
  3855                           	opt stack 0
  3856  00230A                     __tdiv_to_l_:
  3857                           	opt stack 29
  3858                           
  3859                           ;incstack = 0
  3860  00230A  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3861  00230E  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3862  002310  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3863  002312  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3864  002314  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3865  002316  E301               	bnc	u2241
  3866  002318  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3867  00231A                     u2241:
  3868  00231A  5007               	movf	??__tdiv_to_l_,w,c
  3869  00231C  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3870  00231E  500F               	movf	__tdiv_to_l_@exp1,w,c
  3871  002320  A4D8               	btfss	status,2,c
  3872  002322  D002               	goto	l2270
  3873  002324  D05D               	goto	l2312
  3874  002326  D078               	goto	l694
  3875  002328                     l2270:
  3876  002328  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3877  00232C  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3878  00232E  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3879  002330  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3880  002332  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3881  002334  E301               	bnc	u2261
  3882  002336  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3883  002338                     u2261:
  3884  002338  5007               	movf	??__tdiv_to_l_,w,c
  3885  00233A  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3886  00233C  500E               	movf	__tdiv_to_l_@cntr,w,c
  3887  00233E  A4D8               	btfss	status,2,c
  3888  002340  D002               	goto	l2276
  3889  002342  D04E               	goto	l2312
  3890  002344  D069               	goto	l694
  3891  002346                     l2276:
  3892  002346  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3893  002348  0EFF               	movlw	255
  3894  00234A  1601               	andwf	__tdiv_to_l_@f1,f,c
  3895  00234C  0EFF               	movlw	255
  3896  00234E  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3897  002350  0E00               	movlw	0
  3898  002352  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3899  002354  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3900  002356  0EFF               	movlw	255
  3901  002358  1604               	andwf	__tdiv_to_l_@f2,f,c
  3902  00235A  0EFF               	movlw	255
  3903  00235C  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3904  00235E  0E00               	movlw	0
  3905  002360  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3906  002362  0E00               	movlw	0
  3907  002364  6E0A               	movwf	__tdiv_to_l_@quot,c
  3908  002366  0E00               	movlw	0
  3909  002368  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3910  00236A  0E00               	movlw	0
  3911  00236C  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3912  00236E  0E00               	movlw	0
  3913  002370  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3914  002372  0E7F               	movlw	127
  3915  002374  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3916  002376  500E               	movf	__tdiv_to_l_@cntr,w,c
  3917  002378  0F98               	addlw	152
  3918  00237A  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3919  00237C  0E18               	movlw	24
  3920  00237E  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3921  002380                     l696:
  3922  002380  90D8               	bcf	status,0,c
  3923  002382  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3924  002384  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3925  002386  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3926  002388  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3927  00238A  5004               	movf	__tdiv_to_l_@f2,w,c
  3928  00238C  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3929  00238E  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3930  002390  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3931  002392  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3932  002394  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3933  002396  A0D8               	btfss	status,0,c
  3934  002398  D007               	goto	l697
  3935  00239A  5004               	movf	__tdiv_to_l_@f2,w,c
  3936  00239C  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3937  00239E  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3938  0023A0  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3939  0023A2  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3940  0023A4  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3941  0023A6  800A               	bsf	__tdiv_to_l_@quot,0,c
  3942  0023A8                     l697:
  3943  0023A8  90D8               	bcf	status,0,c
  3944  0023AA  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3945  0023AC  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3946  0023AE  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3947  0023B0  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3948  0023B2  D7E6               	goto	l696
  3949  0023B4  D000               	goto	l2298
  3950  0023B6                     l2298:
  3951  0023B6  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3952  0023B8  D010               	goto	l2310
  3953  0023BA  500F               	movf	__tdiv_to_l_@exp1,w,c
  3954  0023BC  0A80               	xorlw	128
  3955  0023BE  0F97               	addlw	151
  3956  0023C0  B0D8               	btfsc	status,0,c
  3957  0023C2  D003               	goto	l2306
  3958  0023C4  D00D               	goto	l2312
  3959  0023C6  D028               	goto	l694
  3960  0023C8  D000               	goto	l2306
  3961  0023CA                     l2306:
  3962  0023CA  90D8               	bcf	status,0,c
  3963  0023CC  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3964  0023CE  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3965  0023D0  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3966  0023D2  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3967  0023D4  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3968  0023D6  D7F9               	goto	l2306
  3969  0023D8  D017               	goto	l703
  3970  0023DA                     l2310:
  3971  0023DA  0E17               	movlw	23
  3972  0023DC  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3973  0023DE  D011               	goto	l2318
  3974  0023E0                     l2312:
  3975  0023E0  0E00               	movlw	0
  3976  0023E2  6E01               	movwf	?__tdiv_to_l_,c
  3977  0023E4  0E00               	movlw	0
  3978  0023E6  6E02               	movwf	?__tdiv_to_l_+1,c
  3979  0023E8  0E00               	movlw	0
  3980  0023EA  6E03               	movwf	?__tdiv_to_l_+2,c
  3981  0023EC  0E00               	movlw	0
  3982  0023EE  6E04               	movwf	?__tdiv_to_l_+3,c
  3983  0023F0  D013               	goto	l694
  3984  0023F2  D007               	goto	l2318
  3985  0023F4                     l2316:
  3986  0023F4  90D8               	bcf	status,0,c
  3987  0023F6  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3988  0023F8  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3989  0023FA  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3990  0023FC  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3991  0023FE  060F               	decf	__tdiv_to_l_@exp1,f,c
  3992  002400  D000               	goto	l2318
  3993  002402                     l2318:
  3994  002402  500F               	movf	__tdiv_to_l_@exp1,w,c
  3995  002404  A4D8               	btfss	status,2,c
  3996  002406  D7F6               	goto	l2316
  3997  002408                     l703:
  3998  002408  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3999  00240C  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4000  002410  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4001  002414  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4002  002418                     l694:
  4003  002418  0012               	return		;funcret
  4004  00241A                     __end_of__tdiv_to_l_:
  4005                           	opt stack 0
  4006                           tblptru	equ	0xFF8
  4007                           tblptrh	equ	0xFF7
  4008                           tblptrl	equ	0xFF6
  4009                           tablat	equ	0xFF5
  4010                           prodh	equ	0xFF4
  4011                           prodl	equ	0xFF3
  4012                           postinc0	equ	0xFEE
  4013                           wreg	equ	0xFE8
  4014                           postdec1	equ	0xFE5
  4015                           plusw1	equ	0xFE3
  4016                           fsr1l	equ	0xFE1
  4017                           indf2	equ	0xFDF
  4018                           postinc2	equ	0xFDE
  4019                           postdec2	equ	0xFDD
  4020                           plusw2	equ	0xFDB
  4021                           fsr2h	equ	0xFDA
  4022                           fsr2l	equ	0xFD9
  4023                           status	equ	0xFD8
  4024                           
  4025 ;; *************** function __div_to_l_ *****************
  4026 ;; Defined at:
  4027 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  f1              3    0[COMRAM] unsigned long 
  4030 ;;  f2              3    3[COMRAM] unsigned long 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  quot            4    6[COMRAM] unsigned long 
  4033 ;;  exp1            1   11[COMRAM] unsigned char 
  4034 ;;  cntr            1   10[COMRAM] unsigned char 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  4    0[COMRAM] unsigned long 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4044 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;Total ram usage:       12 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_printf
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text10
  4058  00241A                     __ptext10:
  4059                           	opt stack 0
  4060  00241A                     __div_to_l_:
  4061                           	opt stack 29
  4062                           
  4063                           ;incstack = 0
  4064  00241A  3403               	rlcf	__div_to_l_@f1+2,w,c
  4065  00241C  3404               	rlcf	__div_to_l_@f1+3,w,c
  4066  00241E  6E0C               	movwf	__div_to_l_@exp1,c
  4067  002420  500C               	movf	__div_to_l_@exp1,w,c
  4068  002422  A4D8               	btfss	status,2,c
  4069  002424  D002               	goto	l2326
  4070  002426  D061               	goto	l2372
  4071  002428  D07C               	goto	l573
  4072  00242A                     l2326:
  4073  00242A  3406               	rlcf	__div_to_l_@f2+2,w,c
  4074  00242C  3407               	rlcf	__div_to_l_@f2+3,w,c
  4075  00242E  6E0B               	movwf	__div_to_l_@cntr,c
  4076  002430  500B               	movf	__div_to_l_@cntr,w,c
  4077  002432  A4D8               	btfss	status,2,c
  4078  002434  D002               	goto	l2332
  4079  002436  D059               	goto	l2372
  4080  002438  D074               	goto	l573
  4081  00243A                     l2332:
  4082  00243A  8E03               	bsf	__div_to_l_@f1+2,7,c
  4083  00243C  0EFF               	movlw	255
  4084  00243E  1601               	andwf	__div_to_l_@f1,f,c
  4085  002440  0EFF               	movlw	255
  4086  002442  1602               	andwf	__div_to_l_@f1+1,f,c
  4087  002444  0EFF               	movlw	255
  4088  002446  1603               	andwf	__div_to_l_@f1+2,f,c
  4089  002448  0E00               	movlw	0
  4090  00244A  1604               	andwf	__div_to_l_@f1+3,f,c
  4091  00244C  8E06               	bsf	__div_to_l_@f2+2,7,c
  4092  00244E  0EFF               	movlw	255
  4093  002450  1604               	andwf	__div_to_l_@f2,f,c
  4094  002452  0EFF               	movlw	255
  4095  002454  1605               	andwf	__div_to_l_@f2+1,f,c
  4096  002456  0EFF               	movlw	255
  4097  002458  1606               	andwf	__div_to_l_@f2+2,f,c
  4098  00245A  0E00               	movlw	0
  4099  00245C  1607               	andwf	__div_to_l_@f2+3,f,c
  4100  00245E  0E00               	movlw	0
  4101  002460  6E07               	movwf	__div_to_l_@quot,c
  4102  002462  0E00               	movlw	0
  4103  002464  6E08               	movwf	__div_to_l_@quot+1,c
  4104  002466  0E00               	movlw	0
  4105  002468  6E09               	movwf	__div_to_l_@quot+2,c
  4106  00246A  0E00               	movlw	0
  4107  00246C  6E0A               	movwf	__div_to_l_@quot+3,c
  4108  00246E  0E7F               	movlw	127
  4109  002470  5E0C               	subwf	__div_to_l_@exp1,f,c
  4110  002472  500B               	movf	__div_to_l_@cntr,w,c
  4111  002474  0FA0               	addlw	160
  4112  002476  5E0C               	subwf	__div_to_l_@exp1,f,c
  4113  002478  0E20               	movlw	32
  4114  00247A  6E0B               	movwf	__div_to_l_@cntr,c
  4115  00247C  D000               	goto	l2346
  4116  00247E                     l2346:
  4117  00247E  90D8               	bcf	status,0,c
  4118  002480  3607               	rlcf	__div_to_l_@quot,f,c
  4119  002482  3608               	rlcf	__div_to_l_@quot+1,f,c
  4120  002484  3609               	rlcf	__div_to_l_@quot+2,f,c
  4121  002486  360A               	rlcf	__div_to_l_@quot+3,f,c
  4122  002488  5004               	movf	__div_to_l_@f2,w,c
  4123  00248A  5C01               	subwf	__div_to_l_@f1,w,c
  4124  00248C  5005               	movf	__div_to_l_@f2+1,w,c
  4125  00248E  5802               	subwfb	__div_to_l_@f1+1,w,c
  4126  002490  5006               	movf	__div_to_l_@f2+2,w,c
  4127  002492  5803               	subwfb	__div_to_l_@f1+2,w,c
  4128  002494  5007               	movf	__div_to_l_@f2+3,w,c
  4129  002496  5804               	subwfb	__div_to_l_@f1+3,w,c
  4130  002498  A0D8               	btfss	status,0,c
  4131  00249A  D00A               	goto	l2354
  4132  00249C  5004               	movf	__div_to_l_@f2,w,c
  4133  00249E  5E01               	subwf	__div_to_l_@f1,f,c
  4134  0024A0  5005               	movf	__div_to_l_@f2+1,w,c
  4135  0024A2  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4136  0024A4  5006               	movf	__div_to_l_@f2+2,w,c
  4137  0024A6  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4138  0024A8  5007               	movf	__div_to_l_@f2+3,w,c
  4139  0024AA  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4140  0024AC  8007               	bsf	__div_to_l_@quot,0,c
  4141  0024AE  D000               	goto	l2354
  4142  0024B0                     l2354:
  4143  0024B0  90D8               	bcf	status,0,c
  4144  0024B2  3601               	rlcf	__div_to_l_@f1,f,c
  4145  0024B4  3602               	rlcf	__div_to_l_@f1+1,f,c
  4146  0024B6  3603               	rlcf	__div_to_l_@f1+2,f,c
  4147  0024B8  3604               	rlcf	__div_to_l_@f1+3,f,c
  4148  0024BA  2E0B               	decfsz	__div_to_l_@cntr,f,c
  4149  0024BC  D7E0               	goto	l2346
  4150  0024BE  D000               	goto	l2358
  4151  0024C0                     l2358:
  4152  0024C0  AE0C               	btfss	__div_to_l_@exp1,7,c
  4153  0024C2  D010               	goto	l2370
  4154  0024C4  500C               	movf	__div_to_l_@exp1,w,c
  4155  0024C6  0A80               	xorlw	128
  4156  0024C8  0F9F               	addlw	159
  4157  0024CA  B0D8               	btfsc	status,0,c
  4158  0024CC  D003               	goto	l2366
  4159  0024CE  D00D               	goto	l2372
  4160  0024D0  D028               	goto	l573
  4161  0024D2  D000               	goto	l2366
  4162  0024D4                     l2366:
  4163  0024D4  90D8               	bcf	status,0,c
  4164  0024D6  320A               	rrcf	__div_to_l_@quot+3,f,c
  4165  0024D8  3209               	rrcf	__div_to_l_@quot+2,f,c
  4166  0024DA  3208               	rrcf	__div_to_l_@quot+1,f,c
  4167  0024DC  3207               	rrcf	__div_to_l_@quot,f,c
  4168  0024DE  3E0C               	incfsz	__div_to_l_@exp1,f,c
  4169  0024E0  D7F9               	goto	l2366
  4170  0024E2  D017               	goto	l582
  4171  0024E4                     l2370:
  4172  0024E4  0E1F               	movlw	31
  4173  0024E6  640C               	cpfsgt	__div_to_l_@exp1,c
  4174  0024E8  D011               	goto	l2378
  4175  0024EA                     l2372:
  4176  0024EA  0E00               	movlw	0
  4177  0024EC  6E01               	movwf	?__div_to_l_,c
  4178  0024EE  0E00               	movlw	0
  4179  0024F0  6E02               	movwf	?__div_to_l_+1,c
  4180  0024F2  0E00               	movlw	0
  4181  0024F4  6E03               	movwf	?__div_to_l_+2,c
  4182  0024F6  0E00               	movlw	0
  4183  0024F8  6E04               	movwf	?__div_to_l_+3,c
  4184  0024FA  D013               	goto	l573
  4185  0024FC  D007               	goto	l2378
  4186  0024FE                     l2376:
  4187  0024FE  90D8               	bcf	status,0,c
  4188  002500  3607               	rlcf	__div_to_l_@quot,f,c
  4189  002502  3608               	rlcf	__div_to_l_@quot+1,f,c
  4190  002504  3609               	rlcf	__div_to_l_@quot+2,f,c
  4191  002506  360A               	rlcf	__div_to_l_@quot+3,f,c
  4192  002508  060C               	decf	__div_to_l_@exp1,f,c
  4193  00250A  D000               	goto	l2378
  4194  00250C                     l2378:
  4195  00250C  500C               	movf	__div_to_l_@exp1,w,c
  4196  00250E  A4D8               	btfss	status,2,c
  4197  002510  D7F6               	goto	l2376
  4198  002512                     l582:
  4199  002512  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4200  002516  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4201  00251A  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4202  00251E  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4203  002522                     l573:
  4204  002522  0012               	return		;funcret
  4205  002524                     __end_of__div_to_l_:
  4206                           	opt stack 0
  4207                           tblptru	equ	0xFF8
  4208                           tblptrh	equ	0xFF7
  4209                           tblptrl	equ	0xFF6
  4210                           tablat	equ	0xFF5
  4211                           prodh	equ	0xFF4
  4212                           prodl	equ	0xFF3
  4213                           postinc0	equ	0xFEE
  4214                           wreg	equ	0xFE8
  4215                           postdec1	equ	0xFE5
  4216                           plusw1	equ	0xFE3
  4217                           fsr1l	equ	0xFE1
  4218                           indf2	equ	0xFDF
  4219                           postinc2	equ	0xFDE
  4220                           postdec2	equ	0xFDD
  4221                           plusw2	equ	0xFDB
  4222                           fsr2h	equ	0xFDA
  4223                           fsr2l	equ	0xFD9
  4224                           status	equ	0xFD8
  4225                           
  4226 ;; *************** function ___lltoft *****************
  4227 ;; Defined at:
  4228 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  c               4    8[COMRAM] unsigned long 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  exp             1   16[COMRAM] unsigned char 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  3    8[COMRAM] float 
  4235 ;; Registers used:
  4236 ;;		wreg, status,2, status,0, cstack
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;Total ram usage:        9 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    1
  4249 ;; This function calls:
  4250 ;;		___ftpack
  4251 ;; This function is called by:
  4252 ;;		_printf
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text11
  4257  002BC4                     __ptext11:
  4258                           	opt stack 0
  4259  002BC4                     ___lltoft:
  4260                           	opt stack 28
  4261                           
  4262                           ;incstack = 0
  4263  002BC4  0E8E               	movlw	142
  4264  002BC6  6E11               	movwf	___lltoft@exp,c
  4265  002BC8  D007               	goto	l2498
  4266  002BCA                     l2496:
  4267  002BCA  90D8               	bcf	status,0,c
  4268  002BCC  320C               	rrcf	___lltoft@c+3,f,c
  4269  002BCE  320B               	rrcf	___lltoft@c+2,f,c
  4270  002BD0  320A               	rrcf	___lltoft@c+1,f,c
  4271  002BD2  3209               	rrcf	___lltoft@c,f,c
  4272  002BD4  2A11               	incf	___lltoft@exp,f,c
  4273  002BD6  D000               	goto	l2498
  4274  002BD8                     l2498:
  4275  002BD8  0E00               	movlw	0
  4276  002BDA  1409               	andwf	___lltoft@c,w,c
  4277  002BDC  6E0D               	movwf	??___lltoft& (0+255),c
  4278  002BDE  0E00               	movlw	0
  4279  002BE0  140A               	andwf	___lltoft@c+1,w,c
  4280  002BE2  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4281  002BE4  0E00               	movlw	0
  4282  002BE6  140B               	andwf	___lltoft@c+2,w,c
  4283  002BE8  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4284  002BEA  0EFF               	movlw	255
  4285  002BEC  140C               	andwf	___lltoft@c+3,w,c
  4286  002BEE  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4287  002BF0  500D               	movf	??___lltoft,w,c
  4288  002BF2  100E               	iorwf	??___lltoft+1,w,c
  4289  002BF4  100F               	iorwf	??___lltoft+2,w,c
  4290  002BF6  1010               	iorwf	??___lltoft+3,w,c
  4291  002BF8  A4D8               	btfss	status,2,c
  4292  002BFA  D7E7               	goto	l2496
  4293  002BFC  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4294  002C00  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4295  002C04  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4296  002C08  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4297  002C0C  0E00               	movlw	0
  4298  002C0E  6E05               	movwf	___ftpack@sign,c
  4299  002C10  ECF2  F013         	call	___ftpack	;wreg free
  4300  002C14  C001  F009         	movff	?___ftpack,?___lltoft
  4301  002C18  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4302  002C1C  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4303  002C20  D000               	goto	l808
  4304  002C22                     l808:
  4305  002C22  0012               	return		;funcret
  4306  002C24                     __end_of___lltoft:
  4307                           	opt stack 0
  4308                           tblptru	equ	0xFF8
  4309                           tblptrh	equ	0xFF7
  4310                           tblptrl	equ	0xFF6
  4311                           tablat	equ	0xFF5
  4312                           prodh	equ	0xFF4
  4313                           prodl	equ	0xFF3
  4314                           postinc0	equ	0xFEE
  4315                           wreg	equ	0xFE8
  4316                           postdec1	equ	0xFE5
  4317                           plusw1	equ	0xFE3
  4318                           fsr1l	equ	0xFE1
  4319                           indf2	equ	0xFDF
  4320                           postinc2	equ	0xFDE
  4321                           postdec2	equ	0xFDD
  4322                           plusw2	equ	0xFDB
  4323                           fsr2h	equ	0xFDA
  4324                           fsr2l	equ	0xFD9
  4325                           status	equ	0xFD8
  4326                           
  4327 ;; *************** function ___llmod *****************
  4328 ;; Defined at:
  4329 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  dividend        4   13[COMRAM] unsigned long 
  4332 ;;  divisor         4   17[COMRAM] unsigned long 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  counter         1   21[COMRAM] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  4   13[COMRAM] unsigned long 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4344 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;Total ram usage:        9 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; This function calls:
  4351 ;;		Nothing
  4352 ;; This function is called by:
  4353 ;;		_printf
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text12
  4358  002AE4                     __ptext12:
  4359                           	opt stack 0
  4360  002AE4                     ___llmod:
  4361                           	opt stack 29
  4362                           
  4363                           ;incstack = 0
  4364  002AE4  5012               	movf	___llmod@divisor,w,c
  4365  002AE6  1013               	iorwf	___llmod@divisor+1,w,c
  4366  002AE8  1014               	iorwf	___llmod@divisor+2,w,c
  4367  002AEA  1015               	iorwf	___llmod@divisor+3,w,c
  4368  002AEC  B4D8               	btfsc	status,2,c
  4369  002AEE  D029               	goto	l788
  4370  002AF0  0E01               	movlw	1
  4371  002AF2  6E16               	movwf	___llmod@counter,c
  4372  002AF4  D007               	goto	l2484
  4373  002AF6                     l2482:
  4374  002AF6  90D8               	bcf	status,0,c
  4375  002AF8  3612               	rlcf	___llmod@divisor,f,c
  4376  002AFA  3613               	rlcf	___llmod@divisor+1,f,c
  4377  002AFC  3614               	rlcf	___llmod@divisor+2,f,c
  4378  002AFE  3615               	rlcf	___llmod@divisor+3,f,c
  4379  002B00  2A16               	incf	___llmod@counter,f,c
  4380  002B02  D000               	goto	l2484
  4381  002B04                     l2484:
  4382  002B04  BE15               	btfsc	___llmod@divisor+3,7,c
  4383  002B06  D002               	goto	l2486
  4384  002B08  D7F6               	goto	l2482
  4385  002B0A  D000               	goto	l2486
  4386  002B0C                     l2486:
  4387  002B0C  5012               	movf	___llmod@divisor,w,c
  4388  002B0E  5C0E               	subwf	___llmod@dividend,w,c
  4389  002B10  5013               	movf	___llmod@divisor+1,w,c
  4390  002B12  580F               	subwfb	___llmod@dividend+1,w,c
  4391  002B14  5014               	movf	___llmod@divisor+2,w,c
  4392  002B16  5810               	subwfb	___llmod@dividend+2,w,c
  4393  002B18  5015               	movf	___llmod@divisor+3,w,c
  4394  002B1A  5811               	subwfb	___llmod@dividend+3,w,c
  4395  002B1C  A0D8               	btfss	status,0,c
  4396  002B1E  D009               	goto	l2490
  4397  002B20  5012               	movf	___llmod@divisor,w,c
  4398  002B22  5E0E               	subwf	___llmod@dividend,f,c
  4399  002B24  5013               	movf	___llmod@divisor+1,w,c
  4400  002B26  5A0F               	subwfb	___llmod@dividend+1,f,c
  4401  002B28  5014               	movf	___llmod@divisor+2,w,c
  4402  002B2A  5A10               	subwfb	___llmod@dividend+2,f,c
  4403  002B2C  5015               	movf	___llmod@divisor+3,w,c
  4404  002B2E  5A11               	subwfb	___llmod@dividend+3,f,c
  4405  002B30  D000               	goto	l2490
  4406  002B32                     l2490:
  4407  002B32  90D8               	bcf	status,0,c
  4408  002B34  3215               	rrcf	___llmod@divisor+3,f,c
  4409  002B36  3214               	rrcf	___llmod@divisor+2,f,c
  4410  002B38  3213               	rrcf	___llmod@divisor+1,f,c
  4411  002B3A  3212               	rrcf	___llmod@divisor,f,c
  4412  002B3C  2E16               	decfsz	___llmod@counter,f,c
  4413  002B3E  D7E6               	goto	l2486
  4414  002B40  D000               	goto	l788
  4415  002B42                     l788:
  4416  002B42  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4417  002B46  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4418  002B4A  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4419  002B4E  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4420  002B52  0012               	return		;funcret
  4421  002B54                     __end_of___llmod:
  4422                           	opt stack 0
  4423                           tblptru	equ	0xFF8
  4424                           tblptrh	equ	0xFF7
  4425                           tblptrl	equ	0xFF6
  4426                           tablat	equ	0xFF5
  4427                           prodh	equ	0xFF4
  4428                           prodl	equ	0xFF3
  4429                           postinc0	equ	0xFEE
  4430                           wreg	equ	0xFE8
  4431                           postdec1	equ	0xFE5
  4432                           plusw1	equ	0xFE3
  4433                           fsr1l	equ	0xFE1
  4434                           indf2	equ	0xFDF
  4435                           postinc2	equ	0xFDE
  4436                           postdec2	equ	0xFDD
  4437                           plusw2	equ	0xFDB
  4438                           fsr2h	equ	0xFDA
  4439                           fsr2l	equ	0xFD9
  4440                           status	equ	0xFD8
  4441                           
  4442 ;; *************** function ___lldiv *****************
  4443 ;; Defined at:
  4444 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  dividend        4    0[COMRAM] unsigned long 
  4447 ;;  divisor         4    4[COMRAM] unsigned long 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  quotient        4    8[COMRAM] unsigned long 
  4450 ;;  counter         1   12[COMRAM] unsigned char 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  4    0[COMRAM] unsigned long 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4460 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;Total ram usage:       13 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_printf
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text13
  4474  0029D6                     __ptext13:
  4475                           	opt stack 0
  4476  0029D6                     ___lldiv:
  4477                           	opt stack 29
  4478                           
  4479                           ;incstack = 0
  4480  0029D6  0E00               	movlw	0
  4481  0029D8  6E09               	movwf	___lldiv@quotient,c
  4482  0029DA  0E00               	movlw	0
  4483  0029DC  6E0A               	movwf	___lldiv@quotient+1,c
  4484  0029DE  0E00               	movlw	0
  4485  0029E0  6E0B               	movwf	___lldiv@quotient+2,c
  4486  0029E2  0E00               	movlw	0
  4487  0029E4  6E0C               	movwf	___lldiv@quotient+3,c
  4488  0029E6  5005               	movf	___lldiv@divisor,w,c
  4489  0029E8  1006               	iorwf	___lldiv@divisor+1,w,c
  4490  0029EA  1007               	iorwf	___lldiv@divisor+2,w,c
  4491  0029EC  1008               	iorwf	___lldiv@divisor+3,w,c
  4492  0029EE  B4D8               	btfsc	status,2,c
  4493  0029F0  D02F               	goto	l778
  4494  0029F2  0E01               	movlw	1
  4495  0029F4  6E0D               	movwf	___lldiv@counter,c
  4496  0029F6  D007               	goto	l2464
  4497  0029F8                     l2462:
  4498  0029F8  90D8               	bcf	status,0,c
  4499  0029FA  3605               	rlcf	___lldiv@divisor,f,c
  4500  0029FC  3606               	rlcf	___lldiv@divisor+1,f,c
  4501  0029FE  3607               	rlcf	___lldiv@divisor+2,f,c
  4502  002A00  3608               	rlcf	___lldiv@divisor+3,f,c
  4503  002A02  2A0D               	incf	___lldiv@counter,f,c
  4504  002A04  D000               	goto	l2464
  4505  002A06                     l2464:
  4506  002A06  BE08               	btfsc	___lldiv@divisor+3,7,c
  4507  002A08  D002               	goto	l2466
  4508  002A0A  D7F6               	goto	l2462
  4509  002A0C  D000               	goto	l2466
  4510  002A0E                     l2466:
  4511  002A0E  90D8               	bcf	status,0,c
  4512  002A10  3609               	rlcf	___lldiv@quotient,f,c
  4513  002A12  360A               	rlcf	___lldiv@quotient+1,f,c
  4514  002A14  360B               	rlcf	___lldiv@quotient+2,f,c
  4515  002A16  360C               	rlcf	___lldiv@quotient+3,f,c
  4516  002A18  5005               	movf	___lldiv@divisor,w,c
  4517  002A1A  5C01               	subwf	___lldiv@dividend,w,c
  4518  002A1C  5006               	movf	___lldiv@divisor+1,w,c
  4519  002A1E  5802               	subwfb	___lldiv@dividend+1,w,c
  4520  002A20  5007               	movf	___lldiv@divisor+2,w,c
  4521  002A22  5803               	subwfb	___lldiv@dividend+2,w,c
  4522  002A24  5008               	movf	___lldiv@divisor+3,w,c
  4523  002A26  5804               	subwfb	___lldiv@dividend+3,w,c
  4524  002A28  A0D8               	btfss	status,0,c
  4525  002A2A  D00A               	goto	l2474
  4526  002A2C  5005               	movf	___lldiv@divisor,w,c
  4527  002A2E  5E01               	subwf	___lldiv@dividend,f,c
  4528  002A30  5006               	movf	___lldiv@divisor+1,w,c
  4529  002A32  5A02               	subwfb	___lldiv@dividend+1,f,c
  4530  002A34  5007               	movf	___lldiv@divisor+2,w,c
  4531  002A36  5A03               	subwfb	___lldiv@dividend+2,f,c
  4532  002A38  5008               	movf	___lldiv@divisor+3,w,c
  4533  002A3A  5A04               	subwfb	___lldiv@dividend+3,f,c
  4534  002A3C  8009               	bsf	___lldiv@quotient,0,c
  4535  002A3E  D000               	goto	l2474
  4536  002A40                     l2474:
  4537  002A40  90D8               	bcf	status,0,c
  4538  002A42  3208               	rrcf	___lldiv@divisor+3,f,c
  4539  002A44  3207               	rrcf	___lldiv@divisor+2,f,c
  4540  002A46  3206               	rrcf	___lldiv@divisor+1,f,c
  4541  002A48  3205               	rrcf	___lldiv@divisor,f,c
  4542  002A4A  2E0D               	decfsz	___lldiv@counter,f,c
  4543  002A4C  D7E0               	goto	l2466
  4544  002A4E  D000               	goto	l778
  4545  002A50                     l778:
  4546  002A50  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4547  002A54  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4548  002A58  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4549  002A5C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4550  002A60  0012               	return		;funcret
  4551  002A62                     __end_of___lldiv:
  4552                           	opt stack 0
  4553                           tblptru	equ	0xFF8
  4554                           tblptrh	equ	0xFF7
  4555                           tblptrl	equ	0xFF6
  4556                           tablat	equ	0xFF5
  4557                           prodh	equ	0xFF4
  4558                           prodl	equ	0xFF3
  4559                           postinc0	equ	0xFEE
  4560                           wreg	equ	0xFE8
  4561                           postdec1	equ	0xFE5
  4562                           plusw1	equ	0xFE3
  4563                           fsr1l	equ	0xFE1
  4564                           indf2	equ	0xFDF
  4565                           postinc2	equ	0xFDE
  4566                           postdec2	equ	0xFDD
  4567                           plusw2	equ	0xFDB
  4568                           fsr2h	equ	0xFDA
  4569                           fsr2l	equ	0xFD9
  4570                           status	equ	0xFD8
  4571                           
  4572 ;; *************** function ___fttol *****************
  4573 ;; Defined at:
  4574 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  f1              3   42[COMRAM] float 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  lval            4   52[COMRAM] unsigned long 
  4579 ;;  exp1            1   56[COMRAM] unsigned char 
  4580 ;;  sign1           1   51[COMRAM] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  4   42[COMRAM] long 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;Total ram usage:       15 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_main
  4600 ;;		_printf
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text14
  4605  00261C                     __ptext14:
  4606                           	opt stack 0
  4607  00261C                     ___fttol:
  4608                           	opt stack 29
  4609                           
  4610                           ;incstack = 0
  4611  00261C  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4612  002620  6A30               	clrf	(??___fttol+1)& (0+255),c
  4613  002622  6A31               	clrf	(??___fttol+2)& (0+255),c
  4614  002624  342C               	rlcf	___fttol@f1+1,w,c
  4615  002626  362F               	rlcf	??___fttol& (0+255),f,c
  4616  002628  E301               	bnc	u2451
  4617  00262A  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4618  00262C                     u2451:
  4619  00262C  502F               	movf	??___fttol,w,c
  4620  00262E  6E39               	movwf	___fttol@exp1,c
  4621  002630  5039               	movf	___fttol@exp1,w,c
  4622  002632  A4D8               	btfss	status,2,c
  4623  002634  D002               	goto	l2416
  4624  002636  D039               	goto	l2440
  4625  002638  D063               	goto	l739
  4626  00263A                     l2416:
  4627  00263A  0E17               	movlw	23
  4628  00263C  6E2F               	movwf	??___fttol& (0+255),c
  4629  00263E  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4630  002642  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4631  002646  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4632  00264A  282F               	incf	??___fttol,w,c
  4633  00264C  6E33               	movwf	(??___fttol+4)& (0+255),c
  4634  00264E  D004               	goto	u2470
  4635  002650                     u2475:
  4636  002650  90D8               	bcf	status,0,c
  4637  002652  3232               	rrcf	??___fttol+3,f,c
  4638  002654  3231               	rrcf	??___fttol+2,f,c
  4639  002656  3230               	rrcf	??___fttol+1,f,c
  4640  002658                     u2470:
  4641  002658  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4642  00265A  D7FA               	goto	u2475
  4643  00265C  5030               	movf	??___fttol+1,w,c
  4644  00265E  6E34               	movwf	___fttol@sign1,c
  4645  002660  8E2C               	bsf	___fttol@f1+1,7,c
  4646  002662  0EFF               	movlw	255
  4647  002664  162B               	andwf	___fttol@f1,f,c
  4648  002666  0EFF               	movlw	255
  4649  002668  162C               	andwf	___fttol@f1+1,f,c
  4650  00266A  0E00               	movlw	0
  4651  00266C  162D               	andwf	___fttol@f1+2,f,c
  4652  00266E  502B               	movf	___fttol@f1,w,c
  4653  002670  6E35               	movwf	___fttol@lval,c
  4654  002672  502C               	movf	___fttol@f1+1,w,c
  4655  002674  6E36               	movwf	___fttol@lval+1,c
  4656  002676  502D               	movf	___fttol@f1+2,w,c
  4657  002678  6E37               	movwf	___fttol@lval+2,c
  4658  00267A  6A38               	clrf	___fttol@lval+3,c
  4659  00267C  0E8E               	movlw	142
  4660  00267E  5E39               	subwf	___fttol@exp1,f,c
  4661  002680  AE39               	btfss	___fttol@exp1,7,c
  4662  002682  D010               	goto	l2438
  4663  002684  5039               	movf	___fttol@exp1,w,c
  4664  002686  0A80               	xorlw	128
  4665  002688  0F8F               	addlw	143
  4666  00268A  B0D8               	btfsc	status,0,c
  4667  00268C  D003               	goto	l2434
  4668  00268E  D00D               	goto	l2440
  4669  002690  D037               	goto	l739
  4670  002692  D000               	goto	l2434
  4671  002694                     l2434:
  4672  002694  90D8               	bcf	status,0,c
  4673  002696  3238               	rrcf	___fttol@lval+3,f,c
  4674  002698  3237               	rrcf	___fttol@lval+2,f,c
  4675  00269A  3236               	rrcf	___fttol@lval+1,f,c
  4676  00269C  3235               	rrcf	___fttol@lval,f,c
  4677  00269E  3E39               	incfsz	___fttol@exp1,f,c
  4678  0026A0  D7F9               	goto	l2434
  4679  0026A2  D019               	goto	l2448
  4680  0026A4                     l2438:
  4681  0026A4  0E17               	movlw	23
  4682  0026A6  6439               	cpfsgt	___fttol@exp1,c
  4683  0026A8  D011               	goto	l2446
  4684  0026AA                     l2440:
  4685  0026AA  0E00               	movlw	0
  4686  0026AC  6E2B               	movwf	?___fttol,c
  4687  0026AE  0E00               	movlw	0
  4688  0026B0  6E2C               	movwf	?___fttol+1,c
  4689  0026B2  0E00               	movlw	0
  4690  0026B4  6E2D               	movwf	?___fttol+2,c
  4691  0026B6  0E00               	movlw	0
  4692  0026B8  6E2E               	movwf	?___fttol+3,c
  4693  0026BA  D022               	goto	l739
  4694  0026BC  D007               	goto	l2446
  4695  0026BE                     l2444:
  4696  0026BE  90D8               	bcf	status,0,c
  4697  0026C0  3635               	rlcf	___fttol@lval,f,c
  4698  0026C2  3636               	rlcf	___fttol@lval+1,f,c
  4699  0026C4  3637               	rlcf	___fttol@lval+2,f,c
  4700  0026C6  3638               	rlcf	___fttol@lval+3,f,c
  4701  0026C8  0639               	decf	___fttol@exp1,f,c
  4702  0026CA  D000               	goto	l2446
  4703  0026CC                     l2446:
  4704  0026CC  5039               	movf	___fttol@exp1,w,c
  4705  0026CE  B4D8               	btfsc	status,2,c
  4706  0026D0  D002               	goto	l2448
  4707  0026D2  D7F5               	goto	l2444
  4708  0026D4  D000               	goto	l2448
  4709  0026D6                     l2448:
  4710  0026D6  5034               	movf	___fttol@sign1,w,c
  4711  0026D8  B4D8               	btfsc	status,2,c
  4712  0026DA  D009               	goto	l2452
  4713  0026DC  1E38               	comf	___fttol@lval+3,f,c
  4714  0026DE  1E37               	comf	___fttol@lval+2,f,c
  4715  0026E0  1E36               	comf	___fttol@lval+1,f,c
  4716  0026E2  6C35               	negf	___fttol@lval,c
  4717  0026E4  0E00               	movlw	0
  4718  0026E6  2236               	addwfc	___fttol@lval+1,f,c
  4719  0026E8  2237               	addwfc	___fttol@lval+2,f,c
  4720  0026EA  2238               	addwfc	___fttol@lval+3,f,c
  4721  0026EC  D000               	goto	l2452
  4722  0026EE                     l2452:
  4723  0026EE  C035  F02B         	movff	___fttol@lval,?___fttol
  4724  0026F2  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4725  0026F6  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4726  0026FA  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4727  0026FE  D000               	goto	l739
  4728  002700                     l739:
  4729  002700  0012               	return		;funcret
  4730  002702                     __end_of___fttol:
  4731                           	opt stack 0
  4732                           tblptru	equ	0xFF8
  4733                           tblptrh	equ	0xFF7
  4734                           tblptrl	equ	0xFF6
  4735                           tablat	equ	0xFF5
  4736                           prodh	equ	0xFF4
  4737                           prodl	equ	0xFF3
  4738                           postinc0	equ	0xFEE
  4739                           wreg	equ	0xFE8
  4740                           postdec1	equ	0xFE5
  4741                           plusw1	equ	0xFE3
  4742                           fsr1l	equ	0xFE1
  4743                           indf2	equ	0xFDF
  4744                           postinc2	equ	0xFDE
  4745                           postdec2	equ	0xFDD
  4746                           plusw2	equ	0xFDB
  4747                           fsr2h	equ	0xFDA
  4748                           fsr2l	equ	0xFD9
  4749                           status	equ	0xFD8
  4750                           
  4751 ;; *************** function ___ftsub *****************
  4752 ;; Defined at:
  4753 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  f1              3   57[COMRAM] float 
  4756 ;;  f2              3   60[COMRAM] float 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;		None
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  3   57[COMRAM] float 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2, status,0, cstack
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4768 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;Total ram usage:        6 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:    2
  4775 ;; This function calls:
  4776 ;;		___ftadd
  4777 ;; This function is called by:
  4778 ;;		_printf
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text15
  4783  002C24                     __ptext15:
  4784                           	opt stack 0
  4785  002C24                     ___ftsub:
  4786                           	opt stack 27
  4787                           
  4788                           ;incstack = 0
  4789  002C24  503D               	movf	___ftsub@f2,w,c
  4790  002C26  103E               	iorwf	___ftsub@f2+1,w,c
  4791  002C28  103F               	iorwf	___ftsub@f2+2,w,c
  4792  002C2A  B4D8               	btfsc	status,2,c
  4793  002C2C  D007               	goto	l2384
  4794  002C2E  0E00               	movlw	0
  4795  002C30  1A3D               	xorwf	___ftsub@f2,f,c
  4796  002C32  0E00               	movlw	0
  4797  002C34  1A3E               	xorwf	___ftsub@f2+1,f,c
  4798  002C36  0E80               	movlw	128
  4799  002C38  1A3F               	xorwf	___ftsub@f2+2,f,c
  4800  002C3A  D000               	goto	l2384
  4801  002C3C                     l2384:
  4802  002C3C  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  4803  002C40  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  4804  002C44  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  4805  002C48  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  4806  002C4C  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  4807  002C50  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  4808  002C54  ECA3  F010         	call	___ftadd	;wreg free
  4809  002C58  C02E  F03A         	movff	?___ftadd,?___ftsub
  4810  002C5C  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  4811  002C60  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  4812  002C64  D000               	goto	l735
  4813  002C66                     l735:
  4814  002C66  0012               	return		;funcret
  4815  002C68                     __end_of___ftsub:
  4816                           	opt stack 0
  4817                           tblptru	equ	0xFF8
  4818                           tblptrh	equ	0xFF7
  4819                           tblptrl	equ	0xFF6
  4820                           tablat	equ	0xFF5
  4821                           prodh	equ	0xFF4
  4822                           prodl	equ	0xFF3
  4823                           postinc0	equ	0xFEE
  4824                           wreg	equ	0xFE8
  4825                           postdec1	equ	0xFE5
  4826                           plusw1	equ	0xFE3
  4827                           fsr1l	equ	0xFE1
  4828                           indf2	equ	0xFDF
  4829                           postinc2	equ	0xFDE
  4830                           postdec2	equ	0xFDD
  4831                           plusw2	equ	0xFDB
  4832                           fsr2h	equ	0xFDA
  4833                           fsr2l	equ	0xFD9
  4834                           status	equ	0xFD8
  4835                           
  4836 ;; *************** function ___ftadd *****************
  4837 ;; Defined at:
  4838 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  f1              3   45[COMRAM] float 
  4841 ;;  f2              3   48[COMRAM] float 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  exp1            1   56[COMRAM] unsigned char 
  4844 ;;  exp2            1   55[COMRAM] unsigned char 
  4845 ;;  sign            1   54[COMRAM] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  3   45[COMRAM] float 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4855 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;Total ram usage:       12 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    1
  4862 ;; This function calls:
  4863 ;;		___ftpack
  4864 ;; This function is called by:
  4865 ;;		_main
  4866 ;;		_printf
  4867 ;;		___ftsub
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text16
  4872  002146                     __ptext16:
  4873                           	opt stack 0
  4874  002146                     ___ftadd:
  4875                           	opt stack 27
  4876                           
  4877                           ;incstack = 0
  4878  002146  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  4879  00214A  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4880  00214C  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4881  00214E  342F               	rlcf	___ftadd@f1+1,w,c
  4882  002150  3634               	rlcf	??___ftadd& (0+255),f,c
  4883  002152  E301               	bnc	u1671
  4884  002154  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4885  002156                     u1671:
  4886  002156  5034               	movf	??___ftadd,w,c
  4887  002158  6E39               	movwf	___ftadd@exp1,c
  4888  00215A  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  4889  00215E  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4890  002160  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4891  002162  3432               	rlcf	___ftadd@f2+1,w,c
  4892  002164  3634               	rlcf	??___ftadd& (0+255),f,c
  4893  002166  E301               	bnc	u1681
  4894  002168  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4895  00216A                     u1681:
  4896  00216A  5034               	movf	??___ftadd,w,c
  4897  00216C  6E38               	movwf	___ftadd@exp2,c
  4898  00216E  5039               	movf	___ftadd@exp1,w,c
  4899  002170  B4D8               	btfsc	status,2,c
  4900  002172  D00B               	goto	l654
  4901  002174  5038               	movf	___ftadd@exp2,w,c
  4902  002176  5C39               	subwf	___ftadd@exp1,w,c
  4903  002178  B0D8               	btfsc	status,0,c
  4904  00217A  D00E               	goto	l1960
  4905  00217C  5039               	movf	___ftadd@exp1,w,c
  4906  00217E  0800               	sublw	0
  4907  002180  2438               	addwf	___ftadd@exp2,w,c
  4908  002182  6E34               	movwf	??___ftadd& (0+255),c
  4909  002184  0E18               	movlw	24
  4910  002186  6434               	cpfsgt	??___ftadd,c
  4911  002188  D007               	goto	l1960
  4912  00218A                     l654:
  4913  00218A  C031  F02E         	movff	___ftadd@f2,?___ftadd
  4914  00218E  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  4915  002192  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  4916  002196  D0B8               	goto	l655
  4917  002198                     l1960:
  4918  002198  5038               	movf	___ftadd@exp2,w,c
  4919  00219A  B4D8               	btfsc	status,2,c
  4920  00219C  D00B               	goto	l658
  4921  00219E  5039               	movf	___ftadd@exp1,w,c
  4922  0021A0  5C38               	subwf	___ftadd@exp2,w,c
  4923  0021A2  B0D8               	btfsc	status,0,c
  4924  0021A4  D00E               	goto	l1966
  4925  0021A6  5038               	movf	___ftadd@exp2,w,c
  4926  0021A8  0800               	sublw	0
  4927  0021AA  2439               	addwf	___ftadd@exp1,w,c
  4928  0021AC  6E34               	movwf	??___ftadd& (0+255),c
  4929  0021AE  0E18               	movlw	24
  4930  0021B0  6434               	cpfsgt	??___ftadd,c
  4931  0021B2  D007               	goto	l1966
  4932  0021B4                     l658:
  4933  0021B4  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  4934  0021B8  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  4935  0021BC  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  4936  0021C0  D0A3               	goto	l655
  4937  0021C2                     l1966:
  4938  0021C2  0E06               	movlw	6
  4939  0021C4  6E37               	movwf	___ftadd@sign,c
  4940  0021C6  AE30               	btfss	___ftadd@f1+2,7,c
  4941  0021C8  D002               	goto	l1972
  4942  0021CA  8E37               	bsf	___ftadd@sign,7,c
  4943  0021CC  D000               	goto	l1972
  4944  0021CE                     l1972:
  4945  0021CE  BE33               	btfsc	___ftadd@f2+2,7,c
  4946  0021D0  8C37               	bsf	___ftadd@sign,6,c
  4947  0021D2  8E2F               	bsf	___ftadd@f1+1,7,c
  4948  0021D4  0EFF               	movlw	255
  4949  0021D6  162E               	andwf	___ftadd@f1,f,c
  4950  0021D8  0EFF               	movlw	255
  4951  0021DA  162F               	andwf	___ftadd@f1+1,f,c
  4952  0021DC  0E00               	movlw	0
  4953  0021DE  1630               	andwf	___ftadd@f1+2,f,c
  4954  0021E0  8E32               	bsf	___ftadd@f2+1,7,c
  4955  0021E2  0EFF               	movlw	255
  4956  0021E4  1631               	andwf	___ftadd@f2,f,c
  4957  0021E6  0EFF               	movlw	255
  4958  0021E8  1632               	andwf	___ftadd@f2+1,f,c
  4959  0021EA  0E00               	movlw	0
  4960  0021EC  1633               	andwf	___ftadd@f2+2,f,c
  4961  0021EE  5038               	movf	___ftadd@exp2,w,c
  4962  0021F0  5C39               	subwf	___ftadd@exp1,w,c
  4963  0021F2  B0D8               	btfsc	status,0,c
  4964  0021F4  D01E               	goto	l1992
  4965  0021F6                     l1982:
  4966  0021F6  90D8               	bcf	status,0,c
  4967  0021F8  3631               	rlcf	___ftadd@f2,f,c
  4968  0021FA  3632               	rlcf	___ftadd@f2+1,f,c
  4969  0021FC  3633               	rlcf	___ftadd@f2+2,f,c
  4970  0021FE  0638               	decf	___ftadd@exp2,f,c
  4971  002200  5039               	movf	___ftadd@exp1,w,c
  4972  002202  1838               	xorwf	___ftadd@exp2,w,c
  4973  002204  B4D8               	btfsc	status,2,c
  4974  002206  D00F               	goto	l1990
  4975  002208  0637               	decf	___ftadd@sign,f,c
  4976  00220A  C037  F034         	movff	___ftadd@sign,??___ftadd
  4977  00220E  0E07               	movlw	7
  4978  002210  1634               	andwf	??___ftadd,f,c
  4979  002212  B4D8               	btfsc	status,2,c
  4980  002214  D008               	goto	l1990
  4981  002216  D7EF               	goto	l1982
  4982  002218  D006               	goto	l1990
  4983  00221A                     l1988:
  4984  00221A  90D8               	bcf	status,0,c
  4985  00221C  3230               	rrcf	___ftadd@f1+2,f,c
  4986  00221E  322F               	rrcf	___ftadd@f1+1,f,c
  4987  002220  322E               	rrcf	___ftadd@f1,f,c
  4988  002222  2A39               	incf	___ftadd@exp1,f,c
  4989  002224  D000               	goto	l1990
  4990  002226                     l1990:
  4991  002226  5038               	movf	___ftadd@exp2,w,c
  4992  002228  1839               	xorwf	___ftadd@exp1,w,c
  4993  00222A  B4D8               	btfsc	status,2,c
  4994  00222C  D024               	goto	l669
  4995  00222E  D7F5               	goto	l1988
  4996  002230  D022               	goto	l669
  4997  002232                     l1992:
  4998  002232  5039               	movf	___ftadd@exp1,w,c
  4999  002234  5C38               	subwf	___ftadd@exp2,w,c
  5000  002236  B0D8               	btfsc	status,0,c
  5001  002238  D01E               	goto	l669
  5002  00223A                     l1994:
  5003  00223A  90D8               	bcf	status,0,c
  5004  00223C  362E               	rlcf	___ftadd@f1,f,c
  5005  00223E  362F               	rlcf	___ftadd@f1+1,f,c
  5006  002240  3630               	rlcf	___ftadd@f1+2,f,c
  5007  002242  0639               	decf	___ftadd@exp1,f,c
  5008  002244  5039               	movf	___ftadd@exp1,w,c
  5009  002246  1838               	xorwf	___ftadd@exp2,w,c
  5010  002248  B4D8               	btfsc	status,2,c
  5011  00224A  D00F               	goto	l2002
  5012  00224C  0637               	decf	___ftadd@sign,f,c
  5013  00224E  C037  F034         	movff	___ftadd@sign,??___ftadd
  5014  002252  0E07               	movlw	7
  5015  002254  1634               	andwf	??___ftadd,f,c
  5016  002256  B4D8               	btfsc	status,2,c
  5017  002258  D008               	goto	l2002
  5018  00225A  D7EF               	goto	l1994
  5019  00225C  D006               	goto	l2002
  5020  00225E                     l2000:
  5021  00225E  90D8               	bcf	status,0,c
  5022  002260  3233               	rrcf	___ftadd@f2+2,f,c
  5023  002262  3232               	rrcf	___ftadd@f2+1,f,c
  5024  002264  3231               	rrcf	___ftadd@f2,f,c
  5025  002266  2A38               	incf	___ftadd@exp2,f,c
  5026  002268  D000               	goto	l2002
  5027  00226A                     l2002:
  5028  00226A  5038               	movf	___ftadd@exp2,w,c
  5029  00226C  1839               	xorwf	___ftadd@exp1,w,c
  5030  00226E  B4D8               	btfsc	status,2,c
  5031  002270  D002               	goto	l669
  5032  002272  D7F5               	goto	l2000
  5033  002274  D000               	goto	l669
  5034  002276                     l669:
  5035  002276  AE37               	btfss	___ftadd@sign,7,c
  5036  002278  D00C               	goto	l678
  5037  00227A  0EFF               	movlw	255
  5038  00227C  1A2E               	xorwf	___ftadd@f1,f,c
  5039  00227E  0EFF               	movlw	255
  5040  002280  1A2F               	xorwf	___ftadd@f1+1,f,c
  5041  002282  0EFF               	movlw	255
  5042  002284  1A30               	xorwf	___ftadd@f1+2,f,c
  5043  002286  0E01               	movlw	1
  5044  002288  262E               	addwf	___ftadd@f1,f,c
  5045  00228A  0E00               	movlw	0
  5046  00228C  222F               	addwfc	___ftadd@f1+1,f,c
  5047  00228E  0E00               	movlw	0
  5048  002290  2230               	addwfc	___ftadd@f1+2,f,c
  5049  002292                     l678:
  5050  002292  AC37               	btfss	___ftadd@sign,6,c
  5051  002294  D00D               	goto	l2008
  5052  002296  0EFF               	movlw	255
  5053  002298  1A31               	xorwf	___ftadd@f2,f,c
  5054  00229A  0EFF               	movlw	255
  5055  00229C  1A32               	xorwf	___ftadd@f2+1,f,c
  5056  00229E  0EFF               	movlw	255
  5057  0022A0  1A33               	xorwf	___ftadd@f2+2,f,c
  5058  0022A2  0E01               	movlw	1
  5059  0022A4  2631               	addwf	___ftadd@f2,f,c
  5060  0022A6  0E00               	movlw	0
  5061  0022A8  2232               	addwfc	___ftadd@f2+1,f,c
  5062  0022AA  0E00               	movlw	0
  5063  0022AC  2233               	addwfc	___ftadd@f2+2,f,c
  5064  0022AE  D000               	goto	l2008
  5065  0022B0                     l2008:
  5066  0022B0  0E00               	movlw	0
  5067  0022B2  6E37               	movwf	___ftadd@sign,c
  5068  0022B4  502E               	movf	___ftadd@f1,w,c
  5069  0022B6  2631               	addwf	___ftadd@f2,f,c
  5070  0022B8  502F               	movf	___ftadd@f1+1,w,c
  5071  0022BA  2232               	addwfc	___ftadd@f2+1,f,c
  5072  0022BC  5030               	movf	___ftadd@f1+2,w,c
  5073  0022BE  2233               	addwfc	___ftadd@f2+2,f,c
  5074  0022C0  AE33               	btfss	___ftadd@f2+2,7,c
  5075  0022C2  D00F               	goto	l2018
  5076  0022C4  0EFF               	movlw	255
  5077  0022C6  1A31               	xorwf	___ftadd@f2,f,c
  5078  0022C8  0EFF               	movlw	255
  5079  0022CA  1A32               	xorwf	___ftadd@f2+1,f,c
  5080  0022CC  0EFF               	movlw	255
  5081  0022CE  1A33               	xorwf	___ftadd@f2+2,f,c
  5082  0022D0  0E01               	movlw	1
  5083  0022D2  2631               	addwf	___ftadd@f2,f,c
  5084  0022D4  0E00               	movlw	0
  5085  0022D6  2232               	addwfc	___ftadd@f2+1,f,c
  5086  0022D8  0E00               	movlw	0
  5087  0022DA  2233               	addwfc	___ftadd@f2+2,f,c
  5088  0022DC  0E01               	movlw	1
  5089  0022DE  6E37               	movwf	___ftadd@sign,c
  5090  0022E0  D000               	goto	l2018
  5091  0022E2                     l2018:
  5092  0022E2  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  5093  0022E6  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5094  0022EA  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5095  0022EE  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  5096  0022F2  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  5097  0022F6  ECF2  F013         	call	___ftpack	;wreg free
  5098  0022FA  C001  F02E         	movff	?___ftpack,?___ftadd
  5099  0022FE  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  5100  002302  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  5101  002306  D000               	goto	l655
  5102  002308                     l655:
  5103  002308  0012               	return		;funcret
  5104  00230A                     __end_of___ftadd:
  5105                           	opt stack 0
  5106                           tblptru	equ	0xFF8
  5107                           tblptrh	equ	0xFF7
  5108                           tblptrl	equ	0xFF6
  5109                           tablat	equ	0xFF5
  5110                           prodh	equ	0xFF4
  5111                           prodl	equ	0xFF3
  5112                           postinc0	equ	0xFEE
  5113                           wreg	equ	0xFE8
  5114                           postdec1	equ	0xFE5
  5115                           plusw1	equ	0xFE3
  5116                           fsr1l	equ	0xFE1
  5117                           indf2	equ	0xFDF
  5118                           postinc2	equ	0xFDE
  5119                           postdec2	equ	0xFDD
  5120                           plusw2	equ	0xFDB
  5121                           fsr2h	equ	0xFDA
  5122                           fsr2l	equ	0xFD9
  5123                           status	equ	0xFD8
  5124                           
  5125 ;; *************** function ___ftneg *****************
  5126 ;; Defined at:
  5127 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  f1              3    0[COMRAM] float 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  3    0[COMRAM] float 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5141 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;Total ram usage:        3 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_printf
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text17
  5155  002D1C                     __ptext17:
  5156                           	opt stack 0
  5157  002D1C                     ___ftneg:
  5158                           	opt stack 29
  5159                           
  5160                           ;incstack = 0
  5161  002D1C  5001               	movf	___ftneg@f1,w,c
  5162  002D1E  1002               	iorwf	___ftneg@f1+1,w,c
  5163  002D20  1003               	iorwf	___ftneg@f1+2,w,c
  5164  002D22  B4D8               	btfsc	status,2,c
  5165  002D24  D006               	goto	l728
  5166  002D26  0E00               	movlw	0
  5167  002D28  1A01               	xorwf	___ftneg@f1,f,c
  5168  002D2A  0E00               	movlw	0
  5169  002D2C  1A02               	xorwf	___ftneg@f1+1,f,c
  5170  002D2E  0E80               	movlw	128
  5171  002D30  1A03               	xorwf	___ftneg@f1+2,f,c
  5172  002D32                     l728:
  5173  002D32  C001  F001         	movff	___ftneg@f1,?___ftneg
  5174  002D36  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  5175  002D3A  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  5176  002D3E  0012               	return		;funcret
  5177  002D40                     __end_of___ftneg:
  5178                           	opt stack 0
  5179                           tblptru	equ	0xFF8
  5180                           tblptrh	equ	0xFF7
  5181                           tblptrl	equ	0xFF6
  5182                           tablat	equ	0xFF5
  5183                           prodh	equ	0xFF4
  5184                           prodl	equ	0xFF3
  5185                           postinc0	equ	0xFEE
  5186                           wreg	equ	0xFE8
  5187                           postdec1	equ	0xFE5
  5188                           plusw1	equ	0xFE3
  5189                           fsr1l	equ	0xFE1
  5190                           indf2	equ	0xFDF
  5191                           postinc2	equ	0xFDE
  5192                           postdec2	equ	0xFDD
  5193                           plusw2	equ	0xFDB
  5194                           fsr2h	equ	0xFDA
  5195                           fsr2l	equ	0xFD9
  5196                           status	equ	0xFD8
  5197                           
  5198 ;; *************** function ___ftge *****************
  5199 ;; Defined at:
  5200 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  ff1             3    0[COMRAM] float 
  5203 ;;  ff2             3    3[COMRAM] float 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;		None               void
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5215 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;Total ram usage:        9 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_main
  5225 ;;		_printf
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text18
  5230  002940                     __ptext18:
  5231                           	opt stack 0
  5232  002940                     ___ftge:
  5233                           	opt stack 29
  5234                           
  5235                           ;incstack = 0
  5236  002940  AE03               	btfss	___ftge@ff1+2,7,c
  5237  002942  D017               	goto	l2392
  5238  002944  C001  F007         	movff	___ftge@ff1,??___ftge
  5239  002948  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5240  00294C  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5241  002950  1E07               	comf	??___ftge,f,c
  5242  002952  1E08               	comf	??___ftge+1,f,c
  5243  002954  1E09               	comf	??___ftge+2,f,c
  5244  002956  2A07               	incf	??___ftge,f,c
  5245  002958  0E00               	movlw	0
  5246  00295A  2208               	addwfc	??___ftge+1,f,c
  5247  00295C  2209               	addwfc	??___ftge+2,f,c
  5248  00295E  0E00               	movlw	0
  5249  002960  2407               	addwf	??___ftge,w,c
  5250  002962  6E01               	movwf	___ftge@ff1,c
  5251  002964  0E00               	movlw	0
  5252  002966  2008               	addwfc	??___ftge+1,w,c
  5253  002968  6E02               	movwf	___ftge@ff1+1,c
  5254  00296A  0E80               	movlw	128
  5255  00296C  2009               	addwfc	??___ftge+2,w,c
  5256  00296E  6E03               	movwf	___ftge@ff1+2,c
  5257  002970  D000               	goto	l2392
  5258  002972                     l2392:
  5259  002972  AE06               	btfss	___ftge@ff2+2,7,c
  5260  002974  D017               	goto	l2396
  5261  002976  C004  F007         	movff	___ftge@ff2,??___ftge
  5262  00297A  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5263  00297E  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5264  002982  1E07               	comf	??___ftge,f,c
  5265  002984  1E08               	comf	??___ftge+1,f,c
  5266  002986  1E09               	comf	??___ftge+2,f,c
  5267  002988  2A07               	incf	??___ftge,f,c
  5268  00298A  0E00               	movlw	0
  5269  00298C  2208               	addwfc	??___ftge+1,f,c
  5270  00298E  2209               	addwfc	??___ftge+2,f,c
  5271  002990  0E00               	movlw	0
  5272  002992  2407               	addwf	??___ftge,w,c
  5273  002994  6E04               	movwf	___ftge@ff2,c
  5274  002996  0E00               	movlw	0
  5275  002998  2008               	addwfc	??___ftge+1,w,c
  5276  00299A  6E05               	movwf	___ftge@ff2+1,c
  5277  00299C  0E80               	movlw	128
  5278  00299E  2009               	addwfc	??___ftge+2,w,c
  5279  0029A0  6E06               	movwf	___ftge@ff2+2,c
  5280  0029A2  D000               	goto	l2396
  5281  0029A4                     l2396:
  5282  0029A4  0E00               	movlw	0
  5283  0029A6  1A01               	xorwf	___ftge@ff1,f,c
  5284  0029A8  0E00               	movlw	0
  5285  0029AA  1A02               	xorwf	___ftge@ff1+1,f,c
  5286  0029AC  0E80               	movlw	128
  5287  0029AE  1A03               	xorwf	___ftge@ff1+2,f,c
  5288  0029B0  0E00               	movlw	0
  5289  0029B2  1A04               	xorwf	___ftge@ff2,f,c
  5290  0029B4  0E00               	movlw	0
  5291  0029B6  1A05               	xorwf	___ftge@ff2+1,f,c
  5292  0029B8  0E80               	movlw	128
  5293  0029BA  1A06               	xorwf	___ftge@ff2+2,f,c
  5294  0029BC  5004               	movf	___ftge@ff2,w,c
  5295  0029BE  5C01               	subwf	___ftge@ff1,w,c
  5296  0029C0  5005               	movf	___ftge@ff2+1,w,c
  5297  0029C2  5802               	subwfb	___ftge@ff1+1,w,c
  5298  0029C4  5006               	movf	___ftge@ff2+2,w,c
  5299  0029C6  5803               	subwfb	___ftge@ff1+2,w,c
  5300  0029C8  B0D8               	btfsc	status,0,c
  5301  0029CA  D002               	goto	l2402
  5302  0029CC  90D8               	bcf	status,0,c
  5303  0029CE  D002               	goto	l712
  5304  0029D0                     l2402:
  5305  0029D0  80D8               	bsf	status,0,c
  5306  0029D2  D000               	goto	l712
  5307  0029D4                     l712:
  5308  0029D4  0012               	return		;funcret
  5309  0029D6                     __end_of___ftge:
  5310                           	opt stack 0
  5311                           tblptru	equ	0xFF8
  5312                           tblptrh	equ	0xFF7
  5313                           tblptrl	equ	0xFF6
  5314                           tablat	equ	0xFF5
  5315                           prodh	equ	0xFF4
  5316                           prodl	equ	0xFF3
  5317                           postinc0	equ	0xFEE
  5318                           wreg	equ	0xFE8
  5319                           postdec1	equ	0xFE5
  5320                           plusw1	equ	0xFE3
  5321                           fsr1l	equ	0xFE1
  5322                           indf2	equ	0xFDF
  5323                           postinc2	equ	0xFDE
  5324                           postdec2	equ	0xFDD
  5325                           plusw2	equ	0xFDB
  5326                           fsr2h	equ	0xFDA
  5327                           fsr2l	equ	0xFD9
  5328                           status	equ	0xFD8
  5329                           
  5330 ;; *************** function _get_full_ADC *****************
  5331 ;; Defined at:
  5332 ;;		line 155 in file "Lab5.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;		None
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;  result          2    4[COMRAM] int 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  2    0[COMRAM] unsigned int 
  5339 ;; Registers used:
  5340 ;;		wreg, status,2, status,0
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;Total ram usage:        6 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; This function calls:
  5353 ;;		Nothing
  5354 ;; This function is called by:
  5355 ;;		_main
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           	psect	text19
  5360  002CF6                     __ptext19:
  5361                           	opt stack 0
  5362  002CF6                     _get_full_ADC:
  5363                           	opt stack 30
  5364                           
  5365                           ;Lab5.c: 157: int result;
  5366                           ;Lab5.c: 158: ADCON0bits.GO=1;
  5367                           
  5368                           ;incstack = 0
  5369  002CF6  82C2               	bsf	4034,1,c	;volatile
  5370                           
  5371                           ;Lab5.c: 159: while(ADCON0bits.DONE==1);
  5372  002CF8  D000               	goto	l128
  5373  002CFA                     l128:
  5374  002CFA  B2C2               	btfsc	4034,1,c	;volatile
  5375  002CFC  D7FE               	goto	l128
  5376                           
  5377                           ;Lab5.c: 160: result = (ADRESH * 0x100) + ADRESL;
  5378  002CFE  50C4               	movf	4036,w,c	;volatile
  5379  002D00  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5380  002D02  6A03               	clrf	??_get_full_ADC& (0+255),c
  5381  002D04  50C3               	movf	4035,w,c	;volatile
  5382  002D06  2403               	addwf	??_get_full_ADC,w,c
  5383  002D08  6E05               	movwf	get_full_ADC@result,c
  5384  002D0A  0E00               	movlw	0
  5385  002D0C  2004               	addwfc	??_get_full_ADC+1,w,c
  5386  002D0E  6E06               	movwf	get_full_ADC@result+1,c
  5387                           
  5388                           ;Lab5.c: 162: return result;
  5389  002D10  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5390  002D14  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5391  002D18  D000               	goto	l131
  5392  002D1A                     l131:
  5393  002D1A  0012               	return		;funcret
  5394  002D1C                     __end_of_get_full_ADC:
  5395                           	opt stack 0
  5396                           tblptru	equ	0xFF8
  5397                           tblptrh	equ	0xFF7
  5398                           tblptrl	equ	0xFF6
  5399                           tablat	equ	0xFF5
  5400                           prodh	equ	0xFF4
  5401                           prodl	equ	0xFF3
  5402                           postinc0	equ	0xFEE
  5403                           wreg	equ	0xFE8
  5404                           postdec1	equ	0xFE5
  5405                           plusw1	equ	0xFE3
  5406                           fsr1l	equ	0xFE1
  5407                           indf2	equ	0xFDF
  5408                           postinc2	equ	0xFDE
  5409                           postdec2	equ	0xFDD
  5410                           plusw2	equ	0xFDB
  5411                           fsr2h	equ	0xFDA
  5412                           fsr2l	equ	0xFD9
  5413                           status	equ	0xFD8
  5414                           
  5415 ;; *************** function ___ftdiv *****************
  5416 ;; Defined at:
  5417 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  f1              3   12[COMRAM] float 
  5420 ;;  f2              3   15[COMRAM] float 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  f3              3   22[COMRAM] float 
  5423 ;;  sign            1   26[COMRAM] unsigned char 
  5424 ;;  exp             1   25[COMRAM] unsigned char 
  5425 ;;  cntr            1   21[COMRAM] unsigned char 
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  3   12[COMRAM] float 
  5428 ;; Registers used:
  5429 ;;		wreg, status,2, status,0, cstack
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5435 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;Total ram usage:       15 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:    1
  5442 ;; This function calls:
  5443 ;;		___ftpack
  5444 ;; This function is called by:
  5445 ;;		_main
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text20
  5450  002702                     __ptext20:
  5451                           	opt stack 0
  5452  002702                     ___ftdiv:
  5453                           	opt stack 29
  5454                           
  5455                           ;incstack = 0
  5456  002702  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  5457  002706  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  5458  002708  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  5459  00270A  340E               	rlcf	___ftdiv@f1+1,w,c
  5460  00270C  3613               	rlcf	??___ftdiv& (0+255),f,c
  5461  00270E  E301               	bnc	u2941
  5462  002710  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  5463  002712                     u2941:
  5464  002712  5013               	movf	??___ftdiv,w,c
  5465  002714  6E1A               	movwf	___ftdiv@exp,c
  5466  002716  501A               	movf	___ftdiv@exp,w,c
  5467  002718  A4D8               	btfss	status,2,c
  5468  00271A  D002               	goto	l2742
  5469  00271C  D00E               	goto	l2744
  5470  00271E  D061               	goto	l686
  5471  002720                     l2742:
  5472  002720  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  5473  002724  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  5474  002726  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  5475  002728  3411               	rlcf	___ftdiv@f2+1,w,c
  5476  00272A  3613               	rlcf	??___ftdiv& (0+255),f,c
  5477  00272C  E301               	bnc	u2961
  5478  00272E  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  5479  002730                     u2961:
  5480  002730  5013               	movf	??___ftdiv,w,c
  5481  002732  6E1B               	movwf	___ftdiv@sign,c
  5482  002734  501B               	movf	___ftdiv@sign,w,c
  5483  002736  A4D8               	btfss	status,2,c
  5484  002738  D007               	goto	l2748
  5485  00273A                     l2744:
  5486  00273A  0E00               	movlw	0
  5487  00273C  6E0D               	movwf	?___ftdiv,c
  5488  00273E  0E00               	movlw	0
  5489  002740  6E0E               	movwf	?___ftdiv+1,c
  5490  002742  0E00               	movlw	0
  5491  002744  6E0F               	movwf	?___ftdiv+2,c
  5492  002746  D04D               	goto	l686
  5493  002748                     l2748:
  5494  002748  0E00               	movlw	0
  5495  00274A  6E17               	movwf	___ftdiv@f3,c
  5496  00274C  0E00               	movlw	0
  5497  00274E  6E18               	movwf	___ftdiv@f3+1,c
  5498  002750  0E00               	movlw	0
  5499  002752  6E19               	movwf	___ftdiv@f3+2,c
  5500  002754  501B               	movf	___ftdiv@sign,w,c
  5501  002756  0F89               	addlw	137
  5502  002758  5E1A               	subwf	___ftdiv@exp,f,c
  5503  00275A  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  5504  00275E  5012               	movf	___ftdiv@f2+2,w,c
  5505  002760  1A1B               	xorwf	___ftdiv@sign,f,c
  5506  002762  0E80               	movlw	128
  5507  002764  161B               	andwf	___ftdiv@sign,f,c
  5508  002766  8E0E               	bsf	___ftdiv@f1+1,7,c
  5509  002768  0EFF               	movlw	255
  5510  00276A  160D               	andwf	___ftdiv@f1,f,c
  5511  00276C  0EFF               	movlw	255
  5512  00276E  160E               	andwf	___ftdiv@f1+1,f,c
  5513  002770  0E00               	movlw	0
  5514  002772  160F               	andwf	___ftdiv@f1+2,f,c
  5515  002774  8E11               	bsf	___ftdiv@f2+1,7,c
  5516  002776  0EFF               	movlw	255
  5517  002778  1610               	andwf	___ftdiv@f2,f,c
  5518  00277A  0EFF               	movlw	255
  5519  00277C  1611               	andwf	___ftdiv@f2+1,f,c
  5520  00277E  0E00               	movlw	0
  5521  002780  1612               	andwf	___ftdiv@f2+2,f,c
  5522  002782  0E18               	movlw	24
  5523  002784  6E16               	movwf	___ftdiv@cntr,c
  5524  002786  D000               	goto	l2768
  5525  002788                     l2768:
  5526  002788  90D8               	bcf	status,0,c
  5527  00278A  3617               	rlcf	___ftdiv@f3,f,c
  5528  00278C  3618               	rlcf	___ftdiv@f3+1,f,c
  5529  00278E  3619               	rlcf	___ftdiv@f3+2,f,c
  5530  002790  5010               	movf	___ftdiv@f2,w,c
  5531  002792  5C0D               	subwf	___ftdiv@f1,w,c
  5532  002794  5011               	movf	___ftdiv@f2+1,w,c
  5533  002796  580E               	subwfb	___ftdiv@f1+1,w,c
  5534  002798  5012               	movf	___ftdiv@f2+2,w,c
  5535  00279A  580F               	subwfb	___ftdiv@f1+2,w,c
  5536  00279C  A0D8               	btfss	status,0,c
  5537  00279E  D007               	goto	l689
  5538  0027A0  5010               	movf	___ftdiv@f2,w,c
  5539  0027A2  5E0D               	subwf	___ftdiv@f1,f,c
  5540  0027A4  5011               	movf	___ftdiv@f2+1,w,c
  5541  0027A6  5A0E               	subwfb	___ftdiv@f1+1,f,c
  5542  0027A8  5012               	movf	___ftdiv@f2+2,w,c
  5543  0027AA  5A0F               	subwfb	___ftdiv@f1+2,f,c
  5544  0027AC  8017               	bsf	___ftdiv@f3,0,c
  5545  0027AE                     l689:
  5546  0027AE  90D8               	bcf	status,0,c
  5547  0027B0  360D               	rlcf	___ftdiv@f1,f,c
  5548  0027B2  360E               	rlcf	___ftdiv@f1+1,f,c
  5549  0027B4  360F               	rlcf	___ftdiv@f1+2,f,c
  5550  0027B6  2E16               	decfsz	___ftdiv@cntr,f,c
  5551  0027B8  D7E7               	goto	l2768
  5552  0027BA  D000               	goto	l2778
  5553  0027BC                     l2778:
  5554  0027BC  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  5555  0027C0  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5556  0027C4  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5557  0027C8  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  5558  0027CC  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  5559  0027D0  ECF2  F013         	call	___ftpack	;wreg free
  5560  0027D4  C001  F00D         	movff	?___ftpack,?___ftdiv
  5561  0027D8  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  5562  0027DC  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  5563  0027E0  D000               	goto	l686
  5564  0027E2                     l686:
  5565  0027E2  0012               	return		;funcret
  5566  0027E4                     __end_of___ftdiv:
  5567                           	opt stack 0
  5568                           tblptru	equ	0xFF8
  5569                           tblptrh	equ	0xFF7
  5570                           tblptrl	equ	0xFF6
  5571                           tablat	equ	0xFF5
  5572                           prodh	equ	0xFF4
  5573                           prodl	equ	0xFF3
  5574                           postinc0	equ	0xFEE
  5575                           wreg	equ	0xFE8
  5576                           postdec1	equ	0xFE5
  5577                           plusw1	equ	0xFE3
  5578                           fsr1l	equ	0xFE1
  5579                           indf2	equ	0xFDF
  5580                           postinc2	equ	0xFDE
  5581                           postdec2	equ	0xFDD
  5582                           plusw2	equ	0xFDB
  5583                           fsr2h	equ	0xFDA
  5584                           fsr2l	equ	0xFD9
  5585                           status	equ	0xFD8
  5586                           
  5587 ;; *************** function ___awtoft *****************
  5588 ;; Defined at:
  5589 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  c               2    8[COMRAM] int 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  sign            1   11[COMRAM] unsigned char 
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  3    8[COMRAM] float 
  5596 ;; Registers used:
  5597 ;;		wreg, status,2, status,0, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5603 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;Total ram usage:        4 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    1
  5610 ;; This function calls:
  5611 ;;		___ftpack
  5612 ;; This function is called by:
  5613 ;;		_main
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           	psect	text21
  5618  002C68                     __ptext21:
  5619                           	opt stack 0
  5620  002C68                     ___awtoft:
  5621                           	opt stack 29
  5622                           
  5623                           ;incstack = 0
  5624  002C68  0E00               	movlw	0
  5625  002C6A  6E0C               	movwf	___awtoft@sign,c
  5626  002C6C  AE0A               	btfss	___awtoft@c+1,7,c
  5627  002C6E  D007               	goto	l2790
  5628  002C70  6C09               	negf	___awtoft@c,c
  5629  002C72  1E0A               	comf	___awtoft@c+1,f,c
  5630  002C74  B0D8               	btfsc	status,0,c
  5631  002C76  2A0A               	incf	___awtoft@c+1,f,c
  5632  002C78  0E01               	movlw	1
  5633  002C7A  6E0C               	movwf	___awtoft@sign,c
  5634  002C7C  D000               	goto	l2790
  5635  002C7E                     l2790:
  5636  002C7E  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5637  002C82  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5638  002C86  6A03               	clrf	___ftpack@arg+2,c
  5639  002C88  0E8E               	movlw	142
  5640  002C8A  6E04               	movwf	___ftpack@exp,c
  5641  002C8C  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5642  002C90  ECF2  F013         	call	___ftpack	;wreg free
  5643  002C94  C001  F009         	movff	?___ftpack,?___awtoft
  5644  002C98  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5645  002C9C  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5646  002CA0  D000               	goto	l507
  5647  002CA2                     l507:
  5648  002CA2  0012               	return		;funcret
  5649  002CA4                     __end_of___awtoft:
  5650                           	opt stack 0
  5651                           tblptru	equ	0xFF8
  5652                           tblptrh	equ	0xFF7
  5653                           tblptrl	equ	0xFF6
  5654                           tablat	equ	0xFF5
  5655                           prodh	equ	0xFF4
  5656                           prodl	equ	0xFF3
  5657                           postinc0	equ	0xFEE
  5658                           wreg	equ	0xFE8
  5659                           postdec1	equ	0xFE5
  5660                           plusw1	equ	0xFE3
  5661                           fsr1l	equ	0xFE1
  5662                           indf2	equ	0xFDF
  5663                           postinc2	equ	0xFDE
  5664                           postdec2	equ	0xFDD
  5665                           plusw2	equ	0xFDB
  5666                           fsr2h	equ	0xFDA
  5667                           fsr2l	equ	0xFD9
  5668                           status	equ	0xFD8
  5669                           
  5670 ;; *************** function ___ftpack *****************
  5671 ;; Defined at:
  5672 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  arg             3    0[COMRAM] unsigned um
  5675 ;;  exp             1    3[COMRAM] unsigned char 
  5676 ;;  sign            1    4[COMRAM] unsigned char 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;		None
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  3    0[COMRAM] float 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5688 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;Total ram usage:        8 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		___awtoft
  5698 ;;		___ftadd
  5699 ;;		___ftdiv
  5700 ;;		___ftmul
  5701 ;;		___lltoft
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           	psect	text22
  5706  0027E4                     __ptext22:
  5707                           	opt stack 0
  5708  0027E4                     ___ftpack:
  5709                           	opt stack 27
  5710                           
  5711                           ;incstack = 0
  5712  0027E4  5004               	movf	___ftpack@exp,w,c
  5713  0027E6  B4D8               	btfsc	status,2,c
  5714  0027E8  D005               	goto	l1914
  5715  0027EA  5001               	movf	___ftpack@arg,w,c
  5716  0027EC  1002               	iorwf	___ftpack@arg+1,w,c
  5717  0027EE  1003               	iorwf	___ftpack@arg+2,w,c
  5718  0027F0  A4D8               	btfss	status,2,c
  5719  0027F2  D00E               	goto	l1920
  5720  0027F4                     l1914:
  5721  0027F4  0E00               	movlw	0
  5722  0027F6  6E01               	movwf	?___ftpack,c
  5723  0027F8  0E00               	movlw	0
  5724  0027FA  6E02               	movwf	?___ftpack+1,c
  5725  0027FC  0E00               	movlw	0
  5726  0027FE  6E03               	movwf	?___ftpack+2,c
  5727  002800  D053               	goto	l614
  5728  002802  D006               	goto	l1920
  5729  002804                     l1918:
  5730  002804  2A04               	incf	___ftpack@exp,f,c
  5731  002806  90D8               	bcf	status,0,c
  5732  002808  3203               	rrcf	___ftpack@arg+2,f,c
  5733  00280A  3202               	rrcf	___ftpack@arg+1,f,c
  5734  00280C  3201               	rrcf	___ftpack@arg,f,c
  5735  00280E  D000               	goto	l1920
  5736  002810                     l1920:
  5737  002810  0E00               	movlw	0
  5738  002812  1401               	andwf	___ftpack@arg,w,c
  5739  002814  6E06               	movwf	??___ftpack& (0+255),c
  5740  002816  0E00               	movlw	0
  5741  002818  1402               	andwf	___ftpack@arg+1,w,c
  5742  00281A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5743  00281C  0EFE               	movlw	254
  5744  00281E  1403               	andwf	___ftpack@arg+2,w,c
  5745  002820  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5746  002822  5006               	movf	??___ftpack,w,c
  5747  002824  1007               	iorwf	??___ftpack+1,w,c
  5748  002826  1008               	iorwf	??___ftpack+2,w,c
  5749  002828  B4D8               	btfsc	status,2,c
  5750  00282A  D00E               	goto	l1926
  5751  00282C  D7EB               	goto	l1918
  5752  00282E  D00C               	goto	l1926
  5753  002830                     l1922:
  5754  002830  2A04               	incf	___ftpack@exp,f,c
  5755  002832  0E01               	movlw	1
  5756  002834  2601               	addwf	___ftpack@arg,f,c
  5757  002836  0E00               	movlw	0
  5758  002838  2202               	addwfc	___ftpack@arg+1,f,c
  5759  00283A  0E00               	movlw	0
  5760  00283C  2203               	addwfc	___ftpack@arg+2,f,c
  5761  00283E  90D8               	bcf	status,0,c
  5762  002840  3203               	rrcf	___ftpack@arg+2,f,c
  5763  002842  3202               	rrcf	___ftpack@arg+1,f,c
  5764  002844  3201               	rrcf	___ftpack@arg,f,c
  5765  002846  D000               	goto	l1926
  5766  002848                     l1926:
  5767  002848  0E00               	movlw	0
  5768  00284A  1401               	andwf	___ftpack@arg,w,c
  5769  00284C  6E06               	movwf	??___ftpack& (0+255),c
  5770  00284E  0E00               	movlw	0
  5771  002850  1402               	andwf	___ftpack@arg+1,w,c
  5772  002852  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5773  002854  0EFF               	movlw	255
  5774  002856  1403               	andwf	___ftpack@arg+2,w,c
  5775  002858  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5776  00285A  5006               	movf	??___ftpack,w,c
  5777  00285C  1007               	iorwf	??___ftpack+1,w,c
  5778  00285E  1008               	iorwf	??___ftpack+2,w,c
  5779  002860  B4D8               	btfsc	status,2,c
  5780  002862  D008               	goto	l1930
  5781  002864  D7E5               	goto	l1922
  5782  002866  D006               	goto	l1930
  5783  002868                     l1928:
  5784  002868  0604               	decf	___ftpack@exp,f,c
  5785  00286A  90D8               	bcf	status,0,c
  5786  00286C  3601               	rlcf	___ftpack@arg,f,c
  5787  00286E  3602               	rlcf	___ftpack@arg+1,f,c
  5788  002870  3603               	rlcf	___ftpack@arg+2,f,c
  5789  002872  D000               	goto	l1930
  5790  002874                     l1930:
  5791  002874  BE02               	btfsc	___ftpack@arg+1,7,c
  5792  002876  D004               	goto	l625
  5793  002878  0E02               	movlw	2
  5794  00287A  6004               	cpfslt	___ftpack@exp,c
  5795  00287C  D7F5               	goto	l1928
  5796  00287E  D000               	goto	l625
  5797  002880                     l625:
  5798  002880  B004               	btfsc	___ftpack@exp,0,c
  5799  002882  D002               	goto	l1936
  5800  002884  9E02               	bcf	___ftpack@arg+1,7,c
  5801  002886  D000               	goto	l1936
  5802  002888                     l1936:
  5803  002888  90D8               	bcf	status,0,c
  5804  00288A  3204               	rrcf	___ftpack@exp,f,c
  5805  00288C  5004               	movf	___ftpack@exp,w,c
  5806  00288E  1203               	iorwf	___ftpack@arg+2,f,c
  5807  002890  5005               	movf	___ftpack@sign,w,c
  5808  002892  B4D8               	btfsc	status,2,c
  5809  002894  D002               	goto	l1942
  5810  002896  8E03               	bsf	___ftpack@arg+2,7,c
  5811  002898  D000               	goto	l1942
  5812  00289A                     l1942:
  5813  00289A  C001  F001         	movff	___ftpack@arg,?___ftpack
  5814  00289E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5815  0028A2  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5816  0028A6  D000               	goto	l614
  5817  0028A8                     l614:
  5818  0028A8  0012               	return		;funcret
  5819  0028AA                     __end_of___ftpack:
  5820                           	opt stack 0
  5821                           tblptru	equ	0xFF8
  5822                           tblptrh	equ	0xFF7
  5823                           tblptrl	equ	0xFF6
  5824                           tablat	equ	0xFF5
  5825                           prodh	equ	0xFF4
  5826                           prodl	equ	0xFF3
  5827                           postinc0	equ	0xFEE
  5828                           wreg	equ	0xFE8
  5829                           postdec1	equ	0xFE5
  5830                           plusw1	equ	0xFE3
  5831                           fsr1l	equ	0xFE1
  5832                           indf2	equ	0xFDF
  5833                           postinc2	equ	0xFDE
  5834                           postdec2	equ	0xFDD
  5835                           plusw2	equ	0xFDB
  5836                           fsr2h	equ	0xFDA
  5837                           fsr2l	equ	0xFD9
  5838                           status	equ	0xFD8
  5839                           
  5840 ;; *************** function _Select_ADC_Channel *****************
  5841 ;; Defined at:
  5842 ;;		line 141 in file "Lab5.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  channel         1    wreg     unsigned char 
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  channel         1    0[COMRAM] unsigned char 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;		None               void
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0, prodl, prodh
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;Total ram usage:        1 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_main
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text23
  5870  002DAA                     __ptext23:
  5871                           	opt stack 0
  5872  002DAA                     _Select_ADC_Channel:
  5873                           	opt stack 30
  5874                           
  5875                           ;incstack = 0
  5876                           ;Select_ADC_Channel@channel stored from wreg
  5877  002DAA  6E01               	movwf	Select_ADC_Channel@channel,c
  5878                           
  5879                           ;Lab5.c: 143: ADCON0 = channel *4 + 1;
  5880  002DAC  5001               	movf	Select_ADC_Channel@channel,w,c
  5881  002DAE  0D04               	mullw	4
  5882  002DB0  28F3               	incf	prodl,w,c
  5883  002DB2  6EC2               	movwf	4034,c	;volatile
  5884  002DB4  0012               	return		;funcret
  5885  002DB6                     __end_of_Select_ADC_Channel:
  5886                           	opt stack 0
  5887                           tblptru	equ	0xFF8
  5888                           tblptrh	equ	0xFF7
  5889                           tblptrl	equ	0xFF6
  5890                           tablat	equ	0xFF5
  5891                           prodh	equ	0xFF4
  5892                           prodl	equ	0xFF3
  5893                           postinc0	equ	0xFEE
  5894                           wreg	equ	0xFE8
  5895                           postdec1	equ	0xFE5
  5896                           plusw1	equ	0xFE3
  5897                           fsr1l	equ	0xFE1
  5898                           indf2	equ	0xFDF
  5899                           postinc2	equ	0xFDE
  5900                           postdec2	equ	0xFDD
  5901                           plusw2	equ	0xFDB
  5902                           fsr2h	equ	0xFDA
  5903                           fsr2l	equ	0xFD9
  5904                           status	equ	0xFD8
  5905                           
  5906 ;; *************** function _SET_D3_RED *****************
  5907 ;; Defined at:
  5908 ;;		line 214 in file "Lab5.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;		None
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;		None               void
  5915 ;; Registers used:
  5916 ;;		None
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;Total ram usage:        0 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_main
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text24
  5936  002DF8                     __ptext24:
  5937                           	opt stack 0
  5938  002DF8                     _SET_D3_RED:
  5939                           	opt stack 30
  5940                           
  5941                           ;Lab5.c: 216: PORTAbits.RA4 = 1;
  5942                           
  5943                           ;incstack = 0
  5944  002DF8  8880               	bsf	3968,4,c	;volatile
  5945                           
  5946                           ;Lab5.c: 217: PORTAbits.RA5 = 0;
  5947  002DFA  9A80               	bcf	3968,5,c	;volatile
  5948  002DFC  0012               	return		;funcret
  5949  002DFE                     __end_of_SET_D3_RED:
  5950                           	opt stack 0
  5951                           tblptru	equ	0xFF8
  5952                           tblptrh	equ	0xFF7
  5953                           tblptrl	equ	0xFF6
  5954                           tablat	equ	0xFF5
  5955                           prodh	equ	0xFF4
  5956                           prodl	equ	0xFF3
  5957                           postinc0	equ	0xFEE
  5958                           wreg	equ	0xFE8
  5959                           postdec1	equ	0xFE5
  5960                           plusw1	equ	0xFE3
  5961                           fsr1l	equ	0xFE1
  5962                           indf2	equ	0xFDF
  5963                           postinc2	equ	0xFDE
  5964                           postdec2	equ	0xFDD
  5965                           plusw2	equ	0xFDB
  5966                           fsr2h	equ	0xFDA
  5967                           fsr2l	equ	0xFD9
  5968                           status	equ	0xFD8
  5969                           
  5970 ;; *************** function _SET_D3_PURPLE *****************
  5971 ;; Defined at:
  5972 ;;		line 226 in file "Lab5.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;		None               void
  5979 ;; Registers used:
  5980 ;;		None
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;Total ram usage:        0 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; This function calls:
  5993 ;;		Nothing
  5994 ;; This function is called by:
  5995 ;;		_main
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text25
  6000  002DFE                     __ptext25:
  6001                           	opt stack 0
  6002  002DFE                     _SET_D3_PURPLE:
  6003                           	opt stack 30
  6004                           
  6005                           ;Lab5.c: 228: PORTAbits.RA4 = 1;
  6006                           
  6007                           ;incstack = 0
  6008  002DFE  8880               	bsf	3968,4,c	;volatile
  6009                           
  6010                           ;Lab5.c: 229: PORTAbits.RA5 = 1;
  6011  002E00  8A80               	bsf	3968,5,c	;volatile
  6012  002E02  0012               	return		;funcret
  6013  002E04                     __end_of_SET_D3_PURPLE:
  6014                           	opt stack 0
  6015                           tblptru	equ	0xFF8
  6016                           tblptrh	equ	0xFF7
  6017                           tblptrl	equ	0xFF6
  6018                           tablat	equ	0xFF5
  6019                           prodh	equ	0xFF4
  6020                           prodl	equ	0xFF3
  6021                           postinc0	equ	0xFEE
  6022                           wreg	equ	0xFE8
  6023                           postdec1	equ	0xFE5
  6024                           plusw1	equ	0xFE3
  6025                           fsr1l	equ	0xFE1
  6026                           indf2	equ	0xFDF
  6027                           postinc2	equ	0xFDE
  6028                           postdec2	equ	0xFDD
  6029                           plusw2	equ	0xFDB
  6030                           fsr2h	equ	0xFDA
  6031                           fsr2l	equ	0xFD9
  6032                           status	equ	0xFD8
  6033                           
  6034 ;; *************** function _SET_D3_BLUE *****************
  6035 ;; Defined at:
  6036 ;;		line 220 in file "Lab5.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;		None
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;		None               void
  6043 ;; Registers used:
  6044 ;;		None
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;Total ram usage:        0 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_main
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text26
  6064  002E04                     __ptext26:
  6065                           	opt stack 0
  6066  002E04                     _SET_D3_BLUE:
  6067                           	opt stack 30
  6068                           
  6069                           ;Lab5.c: 222: PORTAbits.RA4 = 0;
  6070                           
  6071                           ;incstack = 0
  6072  002E04  9880               	bcf	3968,4,c	;volatile
  6073                           
  6074                           ;Lab5.c: 223: PORTAbits.RA5 = 1;
  6075  002E06  8A80               	bsf	3968,5,c	;volatile
  6076  002E08  0012               	return		;funcret
  6077  002E0A                     __end_of_SET_D3_BLUE:
  6078                           	opt stack 0
  6079                           tblptru	equ	0xFF8
  6080                           tblptrh	equ	0xFF7
  6081                           tblptrl	equ	0xFF6
  6082                           tablat	equ	0xFF5
  6083                           prodh	equ	0xFF4
  6084                           prodl	equ	0xFF3
  6085                           postinc0	equ	0xFEE
  6086                           wreg	equ	0xFE8
  6087                           postdec1	equ	0xFE5
  6088                           plusw1	equ	0xFE3
  6089                           fsr1l	equ	0xFE1
  6090                           indf2	equ	0xFDF
  6091                           postinc2	equ	0xFDE
  6092                           postdec2	equ	0xFDD
  6093                           plusw2	equ	0xFDB
  6094                           fsr2h	equ	0xFDA
  6095                           fsr2l	equ	0xFD9
  6096                           status	equ	0xFD8
  6097                           
  6098 ;; *************** function _SET_D2_WHITE *****************
  6099 ;; Defined at:
  6100 ;;		line 207 in file "Lab5.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;		None               void
  6107 ;; Registers used:
  6108 ;;		None
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;Total ram usage:        0 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; This function calls:
  6121 ;;		Nothing
  6122 ;; This function is called by:
  6123 ;;		_main
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           	psect	text27
  6128  002DC0                     __ptext27:
  6129                           	opt stack 0
  6130  002DC0                     _SET_D2_WHITE:
  6131                           	opt stack 30
  6132                           
  6133                           ;Lab5.c: 209: PORTBbits.RB0 = 1;
  6134                           
  6135                           ;incstack = 0
  6136  002DC0  8081               	bsf	3969,0,c	;volatile
  6137                           
  6138                           ;Lab5.c: 210: PORTBbits.RB1 = 1;
  6139  002DC2  8281               	bsf	3969,1,c	;volatile
  6140                           
  6141                           ;Lab5.c: 211: PORTBbits.RB2 = 1;
  6142  002DC4  8481               	bsf	3969,2,c	;volatile
  6143  002DC6  0012               	return		;funcret
  6144  002DC8                     __end_of_SET_D2_WHITE:
  6145                           	opt stack 0
  6146                           tblptru	equ	0xFF8
  6147                           tblptrh	equ	0xFF7
  6148                           tblptrl	equ	0xFF6
  6149                           tablat	equ	0xFF5
  6150                           prodh	equ	0xFF4
  6151                           prodl	equ	0xFF3
  6152                           postinc0	equ	0xFEE
  6153                           wreg	equ	0xFE8
  6154                           postdec1	equ	0xFE5
  6155                           plusw1	equ	0xFE3
  6156                           fsr1l	equ	0xFE1
  6157                           indf2	equ	0xFDF
  6158                           postinc2	equ	0xFDE
  6159                           postdec2	equ	0xFDD
  6160                           plusw2	equ	0xFDB
  6161                           fsr2h	equ	0xFDA
  6162                           fsr2l	equ	0xFD9
  6163                           status	equ	0xFD8
  6164                           
  6165 ;; *************** function _SET_D2_OFF *****************
  6166 ;; Defined at:
  6167 ;;		line 200 in file "Lab5.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;		None
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;		None
  6172 ;; Return value:  Size  Location     Type
  6173 ;;		None               void
  6174 ;; Registers used:
  6175 ;;		None
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;Total ram usage:        0 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_main
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text28
  6195  002DC8                     __ptext28:
  6196                           	opt stack 0
  6197  002DC8                     _SET_D2_OFF:
  6198                           	opt stack 30
  6199                           
  6200                           ;Lab5.c: 202: PORTBbits.RB0 = 0;
  6201                           
  6202                           ;incstack = 0
  6203  002DC8  9081               	bcf	3969,0,c	;volatile
  6204                           
  6205                           ;Lab5.c: 203: PORTBbits.RB1 = 0;
  6206  002DCA  9281               	bcf	3969,1,c	;volatile
  6207                           
  6208                           ;Lab5.c: 204: PORTBbits.RB2 = 0;
  6209  002DCC  9481               	bcf	3969,2,c	;volatile
  6210  002DCE  0012               	return		;funcret
  6211  002DD0                     __end_of_SET_D2_OFF:
  6212                           	opt stack 0
  6213                           tblptru	equ	0xFF8
  6214                           tblptrh	equ	0xFF7
  6215                           tblptrl	equ	0xFF6
  6216                           tablat	equ	0xFF5
  6217                           prodh	equ	0xFF4
  6218                           prodl	equ	0xFF3
  6219                           postinc0	equ	0xFEE
  6220                           wreg	equ	0xFE8
  6221                           postdec1	equ	0xFE5
  6222                           plusw1	equ	0xFE3
  6223                           fsr1l	equ	0xFE1
  6224                           indf2	equ	0xFDF
  6225                           postinc2	equ	0xFDE
  6226                           postdec2	equ	0xFDD
  6227                           plusw2	equ	0xFDB
  6228                           fsr2h	equ	0xFDA
  6229                           fsr2l	equ	0xFD9
  6230                           status	equ	0xFD8
  6231                           
  6232 ;; *************** function _SET_D1_WHITE *****************
  6233 ;; Defined at:
  6234 ;;		line 193 in file "Lab5.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;		None
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;		None
  6239 ;; Return value:  Size  Location     Type
  6240 ;;		None               void
  6241 ;; Registers used:
  6242 ;;		None
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6252 ;;Total ram usage:        0 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_main
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text29
  6262  002DD0                     __ptext29:
  6263                           	opt stack 0
  6264  002DD0                     _SET_D1_WHITE:
  6265                           	opt stack 30
  6266                           
  6267                           ;Lab5.c: 195: PORTBbits.RB3 = 1;
  6268                           
  6269                           ;incstack = 0
  6270  002DD0  8681               	bsf	3969,3,c	;volatile
  6271                           
  6272                           ;Lab5.c: 196: PORTBbits.RB4 = 1;
  6273  002DD2  8881               	bsf	3969,4,c	;volatile
  6274                           
  6275                           ;Lab5.c: 197: PORTBbits.RB5 = 1;
  6276  002DD4  8A81               	bsf	3969,5,c	;volatile
  6277  002DD6  0012               	return		;funcret
  6278  002DD8                     __end_of_SET_D1_WHITE:
  6279                           	opt stack 0
  6280                           tblptru	equ	0xFF8
  6281                           tblptrh	equ	0xFF7
  6282                           tblptrl	equ	0xFF6
  6283                           tablat	equ	0xFF5
  6284                           prodh	equ	0xFF4
  6285                           prodl	equ	0xFF3
  6286                           postinc0	equ	0xFEE
  6287                           wreg	equ	0xFE8
  6288                           postdec1	equ	0xFE5
  6289                           plusw1	equ	0xFE3
  6290                           fsr1l	equ	0xFE1
  6291                           indf2	equ	0xFDF
  6292                           postinc2	equ	0xFDE
  6293                           postdec2	equ	0xFDD
  6294                           plusw2	equ	0xFDB
  6295                           fsr2h	equ	0xFDA
  6296                           fsr2l	equ	0xFD9
  6297                           status	equ	0xFD8
  6298                           
  6299 ;; *************** function _SET_D1_RED *****************
  6300 ;; Defined at:
  6301 ;;		line 172 in file "Lab5.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;		None               void
  6308 ;; Registers used:
  6309 ;;		None
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;Total ram usage:        0 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_main
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text30
  6329  002DD8                     __ptext30:
  6330                           	opt stack 0
  6331  002DD8                     _SET_D1_RED:
  6332                           	opt stack 30
  6333                           
  6334                           ;Lab5.c: 174: PORTBbits.RB3 = 1;
  6335                           
  6336                           ;incstack = 0
  6337  002DD8  8681               	bsf	3969,3,c	;volatile
  6338                           
  6339                           ;Lab5.c: 175: PORTBbits.RB4 = 0;
  6340  002DDA  9881               	bcf	3969,4,c	;volatile
  6341                           
  6342                           ;Lab5.c: 176: PORTBbits.RB5 = 0;
  6343  002DDC  9A81               	bcf	3969,5,c	;volatile
  6344  002DDE  0012               	return		;funcret
  6345  002DE0                     __end_of_SET_D1_RED:
  6346                           	opt stack 0
  6347                           tblptru	equ	0xFF8
  6348                           tblptrh	equ	0xFF7
  6349                           tblptrl	equ	0xFF6
  6350                           tablat	equ	0xFF5
  6351                           prodh	equ	0xFF4
  6352                           prodl	equ	0xFF3
  6353                           postinc0	equ	0xFEE
  6354                           wreg	equ	0xFE8
  6355                           postdec1	equ	0xFE5
  6356                           plusw1	equ	0xFE3
  6357                           fsr1l	equ	0xFE1
  6358                           indf2	equ	0xFDF
  6359                           postinc2	equ	0xFDE
  6360                           postdec2	equ	0xFDD
  6361                           plusw2	equ	0xFDB
  6362                           fsr2h	equ	0xFDA
  6363                           fsr2l	equ	0xFD9
  6364                           status	equ	0xFD8
  6365                           
  6366 ;; *************** function _SET_D1_OFF *****************
  6367 ;; Defined at:
  6368 ;;		line 165 in file "Lab5.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;		None
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;		None
  6373 ;; Return value:  Size  Location     Type
  6374 ;;		None               void
  6375 ;; Registers used:
  6376 ;;		None
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;Total ram usage:        0 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_main
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text31
  6396  002DE0                     __ptext31:
  6397                           	opt stack 0
  6398  002DE0                     _SET_D1_OFF:
  6399                           	opt stack 30
  6400                           
  6401                           ;Lab5.c: 167: PORTBbits.RB3 = 0;
  6402                           
  6403                           ;incstack = 0
  6404  002DE0  9681               	bcf	3969,3,c	;volatile
  6405                           
  6406                           ;Lab5.c: 168: PORTBbits.RB4 = 0;
  6407  002DE2  9881               	bcf	3969,4,c	;volatile
  6408                           
  6409                           ;Lab5.c: 169: PORTBbits.RB5 = 0;
  6410  002DE4  9A81               	bcf	3969,5,c	;volatile
  6411  002DE6  0012               	return		;funcret
  6412  002DE8                     __end_of_SET_D1_OFF:
  6413                           	opt stack 0
  6414                           tblptru	equ	0xFF8
  6415                           tblptrh	equ	0xFF7
  6416                           tblptrl	equ	0xFF6
  6417                           tablat	equ	0xFF5
  6418                           prodh	equ	0xFF4
  6419                           prodl	equ	0xFF3
  6420                           postinc0	equ	0xFEE
  6421                           wreg	equ	0xFE8
  6422                           postdec1	equ	0xFE5
  6423                           plusw1	equ	0xFE3
  6424                           fsr1l	equ	0xFE1
  6425                           indf2	equ	0xFDF
  6426                           postinc2	equ	0xFDE
  6427                           postdec2	equ	0xFDD
  6428                           plusw2	equ	0xFDB
  6429                           fsr2h	equ	0xFDA
  6430                           fsr2l	equ	0xFD9
  6431                           status	equ	0xFD8
  6432                           
  6433 ;; *************** function _SET_D1_GREEN *****************
  6434 ;; Defined at:
  6435 ;;		line 179 in file "Lab5.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;		None               void
  6442 ;; Registers used:
  6443 ;;		None
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;Total ram usage:        0 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; This function calls:
  6456 ;;		Nothing
  6457 ;; This function is called by:
  6458 ;;		_main
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text32
  6463  002DE8                     __ptext32:
  6464                           	opt stack 0
  6465  002DE8                     _SET_D1_GREEN:
  6466                           	opt stack 30
  6467                           
  6468                           ;Lab5.c: 181: PORTBbits.RB3 = 0;
  6469                           
  6470                           ;incstack = 0
  6471  002DE8  9681               	bcf	3969,3,c	;volatile
  6472                           
  6473                           ;Lab5.c: 182: PORTBbits.RB4 = 1;
  6474  002DEA  8881               	bsf	3969,4,c	;volatile
  6475                           
  6476                           ;Lab5.c: 183: PORTBbits.RB5 = 0;
  6477  002DEC  9A81               	bcf	3969,5,c	;volatile
  6478  002DEE  0012               	return		;funcret
  6479  002DF0                     __end_of_SET_D1_GREEN:
  6480                           	opt stack 0
  6481                           tblptru	equ	0xFF8
  6482                           tblptrh	equ	0xFF7
  6483                           tblptrl	equ	0xFF6
  6484                           tablat	equ	0xFF5
  6485                           prodh	equ	0xFF4
  6486                           prodl	equ	0xFF3
  6487                           postinc0	equ	0xFEE
  6488                           wreg	equ	0xFE8
  6489                           postdec1	equ	0xFE5
  6490                           plusw1	equ	0xFE3
  6491                           fsr1l	equ	0xFE1
  6492                           indf2	equ	0xFDF
  6493                           postinc2	equ	0xFDE
  6494                           postdec2	equ	0xFDD
  6495                           plusw2	equ	0xFDB
  6496                           fsr2h	equ	0xFDA
  6497                           fsr2l	equ	0xFD9
  6498                           status	equ	0xFD8
  6499                           
  6500 ;; *************** function _SET_D1_BLUE *****************
  6501 ;; Defined at:
  6502 ;;		line 186 in file "Lab5.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;		None
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;		None
  6507 ;; Return value:  Size  Location     Type
  6508 ;;		None               void
  6509 ;; Registers used:
  6510 ;;		None
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;Total ram usage:        0 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_main
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text33
  6530  002DF0                     __ptext33:
  6531                           	opt stack 0
  6532  002DF0                     _SET_D1_BLUE:
  6533                           	opt stack 30
  6534                           
  6535                           ;Lab5.c: 188: PORTBbits.RB3 = 0;
  6536                           
  6537                           ;incstack = 0
  6538  002DF0  9681               	bcf	3969,3,c	;volatile
  6539                           
  6540                           ;Lab5.c: 189: PORTBbits.RB4 = 0;
  6541  002DF2  9881               	bcf	3969,4,c	;volatile
  6542                           
  6543                           ;Lab5.c: 190: PORTBbits.RB5 = 1;
  6544  002DF4  8A81               	bsf	3969,5,c	;volatile
  6545  002DF6  0012               	return		;funcret
  6546  002DF8                     __end_of_SET_D1_BLUE:
  6547                           	opt stack 0
  6548                           tblptru	equ	0xFF8
  6549                           tblptrh	equ	0xFF7
  6550                           tblptrl	equ	0xFF6
  6551                           tablat	equ	0xFF5
  6552                           prodh	equ	0xFF4
  6553                           prodl	equ	0xFF3
  6554                           postinc0	equ	0xFEE
  6555                           wreg	equ	0xFE8
  6556                           postdec1	equ	0xFE5
  6557                           plusw1	equ	0xFE3
  6558                           fsr1l	equ	0xFE1
  6559                           indf2	equ	0xFDF
  6560                           postinc2	equ	0xFDE
  6561                           postdec2	equ	0xFDD
  6562                           plusw2	equ	0xFDB
  6563                           fsr2h	equ	0xFDA
  6564                           fsr2l	equ	0xFD9
  6565                           status	equ	0xFD8
  6566                           
  6567 ;; *************** function _Init_UART *****************
  6568 ;; Defined at:
  6569 ;;		line 41 in file "Lab5.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;		None
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;		None
  6574 ;; Return value:  Size  Location     Type
  6575 ;;		None               void
  6576 ;; Registers used:
  6577 ;;		wreg, status,2, cstack
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;Total ram usage:        0 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:    1
  6590 ;; This function calls:
  6591 ;;		_OpenUSART
  6592 ;; This function is called by:
  6593 ;;		_main
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           	psect	text34
  6598  002D7A                     __ptext34:
  6599                           	opt stack 0
  6600  002D7A                     _Init_UART:
  6601                           	opt stack 29
  6602                           
  6603                           ;Lab5.c: 43: OpenUSART (0b01111111 & 0b10111111 &
  6604                           ;Lab5.c: 44: 0b11111110 & 0b11111101 & 0b11111111 &
  6605                           ;Lab5.c: 45: 0b11111111, 25);
  6606                           
  6607                           ;incstack = 0
  6608  002D7A  0E00               	movlw	0
  6609  002D7C  6E02               	movwf	OpenUSART@spbrg+1,c
  6610  002D7E  0E19               	movlw	25
  6611  002D80  6E01               	movwf	OpenUSART@spbrg,c
  6612  002D82  0E3C               	movlw	60
  6613  002D84  ECAA  F015         	call	_OpenUSART
  6614                           
  6615                           ;Lab5.c: 46: OSCCON = 0x60;
  6616  002D88  0E60               	movlw	96
  6617  002D8A  6ED3               	movwf	4051,c	;volatile
  6618  002D8C  0012               	return		;funcret
  6619  002D8E                     __end_of_Init_UART:
  6620                           	opt stack 0
  6621                           tblptru	equ	0xFF8
  6622                           tblptrh	equ	0xFF7
  6623                           tblptrl	equ	0xFF6
  6624                           tablat	equ	0xFF5
  6625                           prodh	equ	0xFF4
  6626                           prodl	equ	0xFF3
  6627                           postinc0	equ	0xFEE
  6628                           wreg	equ	0xFE8
  6629                           postdec1	equ	0xFE5
  6630                           plusw1	equ	0xFE3
  6631                           fsr1l	equ	0xFE1
  6632                           indf2	equ	0xFDF
  6633                           postinc2	equ	0xFDE
  6634                           postdec2	equ	0xFDD
  6635                           plusw2	equ	0xFDB
  6636                           fsr2h	equ	0xFDA
  6637                           fsr2l	equ	0xFD9
  6638                           status	equ	0xFD8
  6639                           
  6640 ;; *************** function _OpenUSART *****************
  6641 ;; Defined at:
  6642 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;  config          1    wreg     unsigned char 
  6645 ;;  spbrg           2    0[COMRAM] unsigned int 
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;  config          1    2[COMRAM] unsigned char 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;		None               void
  6650 ;; Registers used:
  6651 ;;		wreg, status,2
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;Total ram usage:        3 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; This function calls:
  6664 ;;		Nothing
  6665 ;; This function is called by:
  6666 ;;		_Init_UART
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text35
  6671  002B54                     __ptext35:
  6672                           	opt stack 0
  6673  002B54                     _OpenUSART:
  6674                           	opt stack 29
  6675                           
  6676                           ;incstack = 0
  6677                           ;OpenUSART@config stored from wreg
  6678  002B54  6E03               	movwf	OpenUSART@config,c
  6679  002B56  0E00               	movlw	0
  6680  002B58  6EAC               	movwf	4012,c	;volatile
  6681  002B5A  0E00               	movlw	0
  6682  002B5C  6EAB               	movwf	4011,c	;volatile
  6683  002B5E  A003               	btfss	OpenUSART@config,0,c
  6684  002B60  D002               	goto	l2156
  6685  002B62  88AC               	bsf	4012,4,c	;volatile
  6686  002B64  D000               	goto	l2156
  6687  002B66                     l2156:
  6688  002B66  A203               	btfss	OpenUSART@config,1,c
  6689  002B68  D003               	goto	l2160
  6690  002B6A  8CAC               	bsf	4012,6,c	;volatile
  6691  002B6C  8CAB               	bsf	4011,6,c	;volatile
  6692  002B6E  D000               	goto	l2160
  6693  002B70                     l2160:
  6694  002B70  A403               	btfss	OpenUSART@config,2,c
  6695  002B72  D002               	goto	l2164
  6696  002B74  8EAC               	bsf	4012,7,c	;volatile
  6697  002B76  D000               	goto	l2164
  6698  002B78                     l2164:
  6699  002B78  A603               	btfss	OpenUSART@config,3,c
  6700  002B7A  D002               	goto	l277
  6701  002B7C  88AB               	bsf	4011,4,c	;volatile
  6702  002B7E  D002               	goto	l2168
  6703  002B80                     l277:
  6704  002B80  8AAB               	bsf	4011,5,c	;volatile
  6705  002B82  D000               	goto	l2168
  6706  002B84                     l2168:
  6707  002B84  B803               	btfsc	OpenUSART@config,4,c
  6708  002B86  84AC               	bsf	4012,2,c	;volatile
  6709  002B88  989E               	bcf	3998,4,c	;volatile
  6710  002B8A  AA03               	btfss	OpenUSART@config,5,c
  6711  002B8C  D002               	goto	l2176
  6712  002B8E  86AB               	bsf	4011,3,c	;volatile
  6713  002B90  D000               	goto	l2176
  6714  002B92                     l2176:
  6715  002B92  AC03               	btfss	OpenUSART@config,6,c
  6716  002B94  D002               	goto	l281
  6717  002B96  8A9D               	bsf	3997,5,c	;volatile
  6718  002B98  D001               	goto	l282
  6719  002B9A                     l281:
  6720  002B9A  9A9D               	bcf	3997,5,c	;volatile
  6721  002B9C                     l282:
  6722  002B9C  9A9E               	bcf	3998,5,c	;volatile
  6723  002B9E  AE03               	btfss	OpenUSART@config,7,c
  6724  002BA0  D002               	goto	l283
  6725  002BA2  889D               	bsf	3997,4,c	;volatile
  6726  002BA4  D001               	goto	l284
  6727  002BA6                     l283:
  6728  002BA6  989D               	bcf	3997,4,c	;volatile
  6729  002BA8                     l284:
  6730  002BA8  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  6731  002BAC  5002               	movf	OpenUSART@spbrg+1,w,c
  6732  002BAE  6EB0               	movwf	4016,c	;volatile
  6733  002BB0  8AAC               	bsf	4012,5,c	;volatile
  6734  002BB2  8EAB               	bsf	4011,7,c	;volatile
  6735  002BB4  9C94               	bcf	3988,6,c	;volatile
  6736  002BB6  8E94               	bsf	3988,7,c	;volatile
  6737  002BB8  B8AC               	btfsc	4012,4,c	;volatile
  6738  002BBA  BEAC               	btfsc	4012,7,c	;volatile
  6739  002BBC  D002               	goto	l286
  6740  002BBE  8C94               	bsf	3988,6,c	;volatile
  6741  002BC0  D000               	goto	l286
  6742  002BC2                     l286:
  6743  002BC2  0012               	return		;funcret
  6744  002BC4                     __end_of_OpenUSART:
  6745                           	opt stack 0
  6746                           tblptru	equ	0xFF8
  6747                           tblptrh	equ	0xFF7
  6748                           tblptrl	equ	0xFF6
  6749                           tablat	equ	0xFF5
  6750                           prodh	equ	0xFF4
  6751                           prodl	equ	0xFF3
  6752                           postinc0	equ	0xFEE
  6753                           wreg	equ	0xFE8
  6754                           postdec1	equ	0xFE5
  6755                           plusw1	equ	0xFE3
  6756                           fsr1l	equ	0xFE1
  6757                           indf2	equ	0xFDF
  6758                           postinc2	equ	0xFDE
  6759                           postdec2	equ	0xFDD
  6760                           plusw2	equ	0xFDB
  6761                           fsr2h	equ	0xFDA
  6762                           fsr2l	equ	0xFD9
  6763                           status	equ	0xFD8
  6764                           
  6765 ;; *************** function _Init_TRIS *****************
  6766 ;; Defined at:
  6767 ;;		line 132 in file "Lab5.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;		None               void
  6774 ;; Registers used:
  6775 ;;		wreg, status,2
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;Total ram usage:        0 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; This function calls:
  6788 ;;		Nothing
  6789 ;; This function is called by:
  6790 ;;		_main
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text36
  6795  002D64                     __ptext36:
  6796                           	opt stack 0
  6797  002D64                     _Init_TRIS:
  6798                           	opt stack 30
  6799                           
  6800                           ;Lab5.c: 134: TRISA = 0x0F;
  6801                           
  6802                           ;incstack = 0
  6803  002D64  0E0F               	movlw	15
  6804  002D66  6E92               	movwf	3986,c	;volatile
  6805                           
  6806                           ;Lab5.c: 135: TRISB = 0x00;
  6807  002D68  0E00               	movlw	0
  6808  002D6A  6E93               	movwf	3987,c	;volatile
  6809                           
  6810                           ;Lab5.c: 136: TRISC = 0x00;
  6811  002D6C  0E00               	movlw	0
  6812  002D6E  6E94               	movwf	3988,c	;volatile
  6813                           
  6814                           ;Lab5.c: 137: TRISD = 0x00;
  6815  002D70  0E00               	movlw	0
  6816  002D72  6E95               	movwf	3989,c	;volatile
  6817                           
  6818                           ;Lab5.c: 138: TRISE = 0x00;
  6819  002D74  0E00               	movlw	0
  6820  002D76  6E96               	movwf	3990,c	;volatile
  6821  002D78  0012               	return		;funcret
  6822  002D7A                     __end_of_Init_TRIS:
  6823                           	opt stack 0
  6824                           tblptru	equ	0xFF8
  6825                           tblptrh	equ	0xFF7
  6826                           tblptrl	equ	0xFF6
  6827                           tablat	equ	0xFF5
  6828                           prodh	equ	0xFF4
  6829                           prodl	equ	0xFF3
  6830                           postinc0	equ	0xFEE
  6831                           wreg	equ	0xFE8
  6832                           postdec1	equ	0xFE5
  6833                           plusw1	equ	0xFE3
  6834                           fsr1l	equ	0xFE1
  6835                           indf2	equ	0xFDF
  6836                           postinc2	equ	0xFDE
  6837                           postdec2	equ	0xFDD
  6838                           plusw2	equ	0xFDB
  6839                           fsr2h	equ	0xFDA
  6840                           fsr2l	equ	0xFD9
  6841                           status	equ	0xFD8
  6842                           
  6843 ;; *************** function _Init_ADC *****************
  6844 ;; Defined at:
  6845 ;;		line 146 in file "Lab5.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;		None
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;		None
  6850 ;; Return value:  Size  Location     Type
  6851 ;;		None               void
  6852 ;; Registers used:
  6853 ;;		wreg, status,2
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;Total ram usage:        0 bytes
  6864 ;; Hardware stack levels used:    1
  6865 ;; This function calls:
  6866 ;;		Nothing
  6867 ;; This function is called by:
  6868 ;;		_main
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           	psect	text37
  6873  002D9C                     __ptext37:
  6874                           	opt stack 0
  6875  002D9C                     _Init_ADC:
  6876                           	opt stack 30
  6877                           
  6878                           ;Lab5.c: 148: ADCON0=0x01;
  6879                           
  6880                           ;incstack = 0
  6881  002D9C  0E01               	movlw	1
  6882  002D9E  6EC2               	movwf	4034,c	;volatile
  6883                           
  6884                           ;Lab5.c: 149: ADCON1=0x1B ;
  6885  002DA0  0E1B               	movlw	27
  6886  002DA2  6EC1               	movwf	4033,c	;volatile
  6887                           
  6888                           ;Lab5.c: 151: ADCON2=0xA9;
  6889  002DA4  0EA9               	movlw	169
  6890  002DA6  6EC0               	movwf	4032,c	;volatile
  6891  002DA8  0012               	return		;funcret
  6892  002DAA                     __end_of_Init_ADC:
  6893                           	opt stack 0
  6894                           tblptru	equ	0xFF8
  6895                           tblptrh	equ	0xFF7
  6896                           tblptrl	equ	0xFF6
  6897                           tablat	equ	0xFF5
  6898                           prodh	equ	0xFF4
  6899                           prodl	equ	0xFF3
  6900                           postinc0	equ	0xFEE
  6901                           wreg	equ	0xFE8
  6902                           postdec1	equ	0xFE5
  6903                           plusw1	equ	0xFE3
  6904                           fsr1l	equ	0xFE1
  6905                           indf2	equ	0xFDF
  6906                           postinc2	equ	0xFDE
  6907                           postdec2	equ	0xFDD
  6908                           plusw2	equ	0xFDB
  6909                           fsr2h	equ	0xFDA
  6910                           fsr2l	equ	0xFD9
  6911                           status	equ	0xFD8
  6912                           
  6913 ;; *************** function _Delay_One_Sec *****************
  6914 ;; Defined at:
  6915 ;;		line 127 in file "Lab5.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;		None
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  I               2    0[COMRAM] int 
  6920 ;; Return value:  Size  Location     Type
  6921 ;;		None               void
  6922 ;; Registers used:
  6923 ;;		wreg, status,2, status,0
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6933 ;;Total ram usage:        2 bytes
  6934 ;; Hardware stack levels used:    1
  6935 ;; This function calls:
  6936 ;;		Nothing
  6937 ;; This function is called by:
  6938 ;;		_main
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text38
  6943  002D40                     __ptext38:
  6944                           	opt stack 0
  6945  002D40                     _Delay_One_Sec:
  6946                           	opt stack 30
  6947                           
  6948                           ;Lab5.c: 129: for(int I=0; I <17000; I++);
  6949                           
  6950                           ;incstack = 0
  6951  002D40  0E00               	movlw	0
  6952  002D42  6E02               	movwf	Delay_One_Sec@I+1,c
  6953  002D44  0E00               	movlw	0
  6954  002D46  6E01               	movwf	Delay_One_Sec@I,c
  6955  002D48                     l2728:
  6956  002D48  BE02               	btfsc	Delay_One_Sec@I+1,7,c
  6957  002D4A  D008               	goto	l2732
  6958  002D4C  0E68               	movlw	104
  6959  002D4E  5C01               	subwf	Delay_One_Sec@I,w,c
  6960  002D50  0E42               	movlw	66
  6961  002D52  5802               	subwfb	Delay_One_Sec@I+1,w,c
  6962  002D54  B0D8               	btfsc	status,0,c
  6963  002D56  D005               	goto	l116
  6964  002D58  D001               	goto	l2732
  6965  002D5A  D003               	goto	l116
  6966  002D5C                     l2732:
  6967  002D5C  4A01               	infsnz	Delay_One_Sec@I,f,c
  6968  002D5E  2A02               	incf	Delay_One_Sec@I+1,f,c
  6969  002D60  D7F3               	goto	l2728
  6970  002D62                     l116:
  6971  002D62  0012               	return		;funcret
  6972  002D64                     __end_of_Delay_One_Sec:
  6973                           	opt stack 0
  6974                           tblptru	equ	0xFF8
  6975                           tblptrh	equ	0xFF7
  6976                           tblptrl	equ	0xFF6
  6977                           tablat	equ	0xFF5
  6978                           prodh	equ	0xFF4
  6979                           prodl	equ	0xFF3
  6980                           postinc0	equ	0xFEE
  6981                           wreg	equ	0xFE8
  6982                           postdec1	equ	0xFE5
  6983                           plusw1	equ	0xFE3
  6984                           fsr1l	equ	0xFE1
  6985                           indf2	equ	0xFDF
  6986                           postinc2	equ	0xFDE
  6987                           postdec2	equ	0xFDD
  6988                           plusw2	equ	0xFDB
  6989                           fsr2h	equ	0xFDA
  6990                           fsr2l	equ	0xFD9
  6991                           status	equ	0xFD8
  6992                           tblptru	equ	0xFF8
  6993                           tblptrh	equ	0xFF7
  6994                           tblptrl	equ	0xFF6
  6995                           tablat	equ	0xFF5
  6996                           prodh	equ	0xFF4
  6997                           prodl	equ	0xFF3
  6998                           postinc0	equ	0xFEE
  6999                           wreg	equ	0xFE8
  7000                           postdec1	equ	0xFE5
  7001                           plusw1	equ	0xFE3
  7002                           fsr1l	equ	0xFE1
  7003                           indf2	equ	0xFDF
  7004                           postinc2	equ	0xFDE
  7005                           postdec2	equ	0xFDD
  7006                           plusw2	equ	0xFDB
  7007                           fsr2h	equ	0xFDA
  7008                           fsr2l	equ	0xFD9
  7009                           status	equ	0xFD8
  7010                           
  7011                           	psect	rparam
  7012  0000                     tblptru	equ	0xFF8
  7013                           tblptrh	equ	0xFF7
  7014                           tblptrl	equ	0xFF6
  7015                           tablat	equ	0xFF5
  7016                           prodh	equ	0xFF4
  7017                           prodl	equ	0xFF3
  7018                           postinc0	equ	0xFEE
  7019                           wreg	equ	0xFE8
  7020                           postdec1	equ	0xFE5
  7021                           plusw1	equ	0xFE3
  7022                           fsr1l	equ	0xFE1
  7023                           indf2	equ	0xFDF
  7024                           postinc2	equ	0xFDE
  7025                           postdec2	equ	0xFDD
  7026                           plusw2	equ	0xFDB
  7027                           fsr2h	equ	0xFDA
  7028                           fsr2l	equ	0xFD9
  7029                           status	equ	0xFD8


Data Sizes:
    Strings     32
    Constant    118
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128      0      10
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[14]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _Init_UART->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   54549
                                             97 COMRAM    30    30      0
                      _Delay_One_Sec
                           _Init_ADC
                          _Init_TRIS
                          _Init_UART
                        _SET_D1_BLUE
                       _SET_D1_GREEN
                         _SET_D1_OFF
                         _SET_D1_RED
                       _SET_D1_WHITE
                         _SET_D2_OFF
                       _SET_D2_WHITE
                        _SET_D3_BLUE
                      _SET_D3_PURPLE
                         _SET_D3_RED
                 _Select_ADC_Channel
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                       _get_full_ADC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   38233
                                             63 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8908
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8710
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3742
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1466
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     583
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     480
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     464
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3237
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2984
                                             45 COMRAM    12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1090
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2212
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1943
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SET_D3_RED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D3_PURPLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D3_BLUE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D2_WHITE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D2_OFF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D1_WHITE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D1_RED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D1_OFF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D1_GREEN                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D1_BLUE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay_One_Sec                                        2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_One_Sec
   _Init_ADC
   _Init_TRIS
   _Init_UART
     _OpenUSART
   _SET_D1_BLUE
   _SET_D1_GREEN
   _SET_D1_OFF
   _SET_D1_RED
   _SET_D1_WHITE
   _SET_D2_OFF
   _SET_D2_WHITE
   _SET_D3_BLUE
   _SET_D3_PURPLE
   _SET_D3_RED
   _Select_ADC_Channel
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _get_full_ADC
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       A       5        7.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      89      34        0.0%
DATA                 0      0      89       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Oct 02 21:51:20 2022

                         l80 2D92                 ___awdiv@sign 000C          ___wmul@multiplicand 0011  
               ___ftadd@exp1 0039                 ___ftadd@exp2 0038                 ___ftadd@sign 0037  
                        l131 2D1A                          l116 2D62                          l128 2CFA  
                        l235 1522                          l181 2144                          l253 17E4  
                        l281 2B9A                          l282 2B9C                          l283 2BA6  
                        l507 2CA2                          l284 2BA8                          l188 1BC4  
                        l277 2B80                          l286 2BC2                          l614 28A8  
                        l703 2408                          l712 29D4                          l625 2880  
                        l289 2CF4                          l482 293E                          l573 2522  
                        l654 218A                          l582 2512                          l718 261A  
                        l655 2308                          l735 2C66                          l495 2AE2  
                        l728 2D32                          l808 2C22                          l658 21B4  
                        l739 2700                          l669 2276                          l686 27E2  
                        l678 2292                          l694 2418                          l696 2380  
                        l689 27AE                          l697 23A8                          l778 2A50  
                        l788 2B42                 ___awmod@sign 0006                          prod 000FF3  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0016  
               ___ftdiv@sign 001B                 __CFG_WDT$OFF 000000                         l2000 225E  
                       l2002 226A                         l2110 2934                         l2102 2918  
                       l2030 255C                         l2008 22B0                         l2018 22E2  
                       l2106 2924                         l2130 2A94                         l2122 2A78  
                       l2034 256A                         l2132 2A9E                         l2052 25B0  
                       l2028 2542                         l2310 23DA                         l2134 2AA6  
                       l2142 2AC8                         l2126 2A86                         l2062 25DE  
                       l2222 2104                         l2214 2040                         l2160 2B70  
                       l2312 23E0                         l2056 25C6                         l2048 259E  
                       l2402 29D0                         l2306 23CA                         l2090 28E8  
                       l2146 2AD8                         l2138 2ABC                         l2066 25F4  
                       l2058 25CC                         l2242 19BA                         l2164 2B78  
                       l2156 2B66                         l2332 243A                         l2316 23F4  
                       l2092 28F2                         l2084 28D2                         l2260 1BA0  
                       l2236 1912                         l2326 242A                         l2318 2402  
                       l2270 2328                         l2094 28FA                         l2078 28C0  
                       l2254 1AEE                         l2246 19CA                         l2176 2B92  
                       l2168 2B84                         l2440 26AA                         l2416 263A  
                       l2600 1358                         l2434 2694                         l2370 24E4  
                       l2354 24B0                         l2346 247E                         l2610 13FE  
                       l2602 1386                         l2530 10BE                         l2452 26EE  
                       l2444 26BE                         l2372 24EA                         l2276 2346  
                       l2604 1394                         l2524 10A2                         l2446 26CC  
                       l2438 26A4                         l2462 29F8                         l2366 24D4  
                       l2358 24C0                         l2702 17B4                         l2622 143E  
                       l2614 140A                         l2550 1144                         l2534 10C6  
                       l1920 2810                         l2392 2972                         l2384 2C3C  
                       l2448 26D6                         l2464 2A06                         l2376 24FE  
                       l2640 150C                         l2632 14E4                         l2608 13FA  
                       l2536 10F2                         l2528 10B2                         l2704 17C8  
                       l1930 2874                         l1922 2830                         l1914 27F4  
                       l2474 2A40                         l2466 2A0E                         l2490 2B32  
                       l2482 2AF6                         l2378 250C                         l2298 23B6  
                       l2650 1542                         l2634 14F0                         l2626 145A  
                       l2618 143A                         l2732 2D5C                         l2396 29A4  
                       l2484 2B04                         l2660 1668                         l2644 1528  
                       l2580 1270                         l1942 289A                         l1926 2848  
                       l1918 2804                         l2742 2720                         l2486 2B0C  
                       l2662 1674                         l2654 1592                         l2638 14FE  
                       l2590 12E8                         l2582 12A0                         l2574 123A  
                       l2566 11D6                         l2728 2D48                         l1936 2888  
                       l1928 2868                         l2744 273A                         l1960 2198  
                       l2496 2BCA                         l2680 16CE                         l2584 12B0  
                       l2832 1D44                         l2498 2BD8                         l2666 1682  
                       l2594 130C                         l2578 1260                         l2850 1D8E  
                       l2842 1D62                         l2826 1D24                         l2748 2748  
                       l1972 21CE                         l2692 170E                         l2684 16DA  
                       l2596 1316                         l2668 168E                         l2852 1D9E  
                       l2844 1D72                         l2790 2C7E                         l1990 2226  
                       l1982 21F6                         l1966 21C2                         l2678 16CA  
                       l2862 1DFA                         l2846 1D78                         l2838 1D56  
                       l2768 2788                         l1992 2232                         l2696 172A  
                       l2688 170A                         l2856 1DC4                         l2848 1D88  
                       l2778 27BC                         l1994 223A                         l2698 1736  
                       l2858 1DD4                         l2866 1E10                         l1988 221A  
                       l2884 1ED2                         l2878 1E8C                         l2798 1BE6  
                       l2888 1EF8                         STR_1 1077                         STR_2 1089  
                       u3001 1BDC                         u3120 1E0A                         u2241 231A  
                       u2261 2338                         u2451 262C                         u1901 2552  
                       u2470 2658                         u1671 2156                         u1681 216A  
                       u2810 151C                         u2650 117C                         u2475 2650  
               printf@tmpval 005A                         u2655 1172                         u1881 2534  
                       u2941 2712                         u2961 2730                         _TRMT 007D61  
                       _main 1BC6                 ___ftpack@arg 0001                 ___ftpack@exp 0004  
             ??_get_full_ADC 0003                         fsr2h 000FDA                         fsr1l 000FE1  
                       indf2 000FDF                         fsr2l 000FD9                         prodh 000FF4  
                       prodl 000FF3                         start 0000                 ___ftmul@cntr 0022  
               ___param_bank 000010                 ___ftmul@sign 0023                 ___fttol@exp1 0039  
               ___fttol@lval 0035                  ?_SET_D1_OFF 0001                  ?_SET_D1_RED 0001  
                ?_SET_D2_OFF 0001                        ?_main 0001                  ?_SET_D3_RED 0001  
            __end_of___awdiv 2940              __end_of___ftadd 230A              __end_of___awmod 2AE4  
            __end_of___ftdiv 27E4              __end_of___ftneg 2D40              __end_of___lldiv 2A62  
            __end_of___ftmul 261C              ___awdiv@divisor 0009              __end_of___llmod 2B54  
            __end_of___ftsub 2C68              __end_of___fttol 2702              ___awdiv@counter 000B  
                      _RCSTA 000FAB                        _SPBRG 000FAF                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _PORTE 000F84  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                        _TXREG 000FAD  
                      _TXSTA 000FAC                 ___lltoft@exp 0011                ___awtoft@sign 000C  
            __end_of_dpowers 1029                        _scale 17E6                ___ftpack@sign 0005  
                      _putch 2D8E                        main@l 0073                        main@t 0076  
                      main@u 007D                 main@num_step 0074               __CFG_BOREN$OFF 000000  
                      tablat 000FF5                        plusw1 000FE3                        plusw2 000FDB  
                      status 000FD8              __initialization 2CA4                 __end_of_main 1F02  
           __end_of_Init_ADC 2DAA                       ??_main 0062                ___fttol@sign1 0034  
              __activetblptr 000002        __end_of_SET_D3_PURPLE 2E04         __size_of__tdiv_to_l_ 0110  
               ?_SET_D1_BLUE 0001                 ?_SET_D3_BLUE 0001                       _ADCON0 000FC2  
                     _ADCON1 000FC1                       _ADCON2 000FC0             ___llmod@dividend 000E  
                     ?_scale 0024                       _ADRESH 000FC4                       _ADRESL 000FC3  
           ___awdiv@dividend 0007             __end_of___awtoft 2CA4                       ?_putch 0001  
           __end_of___ftpack 28AA             __end_of___lltoft 2C24                       _OSCCON 000FD3  
         __size_of_Init_UART 0014           __size_of_Init_TRIS 0016                       _SPBRGH 000FB0  
        __size_of_SET_D1_OFF 0008          __size_of_SET_D1_RED 0008          __size_of_SET_D2_OFF 0008  
        __size_of_SET_D3_RED 0006             __end_of__powers_ 1077           __size_of_OpenUSART 0070  
                     ___ftge 2940                       ___wmul 2CCE                    ??___awdiv 000B  
                  ??___ftadd 0034                    ??___awmod 0005                    ??___ftdiv 0013  
                  ??___ftneg 0004                    ??___lldiv 0009                    ??___ftmul 001B  
                  ??___llmod 0016                    ??___ftsub 0040                    ??___fttol 002F  
              main@tempF_int 007E                       _fround 1F02             ___awdiv@quotient 000D  
            ___awmod@divisor 0003              ___awmod@counter 0005                       _printf 1098  
      ___ftmul@f3_as_product 001F         __end_of_get_full_ADC 2D1C                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                     putch@c 0001                main@voltage_t 0071                   __accesstop 0080  
    __end_of__initialization 2CC4                   ___ftadd@f1 002E                   ___ftadd@f2 0031  
                 ___ftge@ff1 0001                   ___ftge@ff2 0004                ___rparam_used 000001  
                 ___ftdiv@f1 000D                   ___ftdiv@f2 0010                   ___ftdiv@f3 0017  
                 ___ftneg@f1 0001                   ___awtoft@c 0009                   ___ftmul@f1 0015  
                 ___ftmul@f2 0018                   ___ftsub@f1 003A                   ___ftsub@f2 003D  
                 ___fttol@f1 002B               __pcstackCOMRAM 0001                 __pidataBANK0 2DB6  
                 ___lltoft@c 0009                __end_of_scale 1BC6                __end_of_putch 2D9C  
          __end_of_Init_UART 2D8E            __end_of_Init_TRIS 2D7A                   __div_to_l_ 241A  
          __end_of_OpenUSART 2BC4              __div_to_l_@exp1 000C              __div_to_l_@cntr 000B  
                    ??_scale 0027              __div_to_l_@quot 0007                      ??_putch 0001  
                  ?_Init_ADC 0001               Delay_One_Sec@I 0001   __end_of_Select_ADC_Channel 2DB6  
              __div_to_l_@f1 0001                __div_to_l_@f2 0004                      ?___ftge 0001  
                    ?___wmul 000F                ?_SET_D1_GREEN 0001                ?_SET_D1_WHITE 0001  
              ?_SET_D2_WHITE 0001       __size_of_Delay_One_Sec 0024                      ?_fround 0024  
                  ?___awtoft 0009                    ?___ftpack 0001                 ??_SET_D1_OFF 0001  
               ??_SET_D1_RED 0001                      ?_printf 0040                 ??_SET_D2_OFF 0001  
  Select_ADC_Channel@channel 0001                 ??_SET_D3_RED 0001                    ?___lltoft 0009  
       __size_of_SET_D1_BLUE 0008         __size_of_SET_D3_BLUE 0006                   ??_Init_ADC 0001  
         __end_of_SET_D1_OFF 2DE8           __end_of_SET_D1_RED 2DE0           __end_of_SET_D2_OFF 2DD0  
         __end_of_SET_D3_RED 2DFE            __end_of__npowers_ 1050                      __Hparam 0000  
                 _scale$1246 0027                      __Lparam 0000               ??_SET_D1_GREEN 0001  
            __size_of___ftge 0096               ??_SET_D1_WHITE 0001                      ___awdiv 28AA  
                    ___ftadd 2146                      ___awmod 2A62                      ___ftdiv 2702  
             ??_SET_D2_WHITE 0001                      ___ftneg 2D1C                      ___lldiv 29D6  
            __size_of___wmul 0028                      ___ftmul 2524                      ___llmod 2AE4  
                    ___ftsub 2C24                      ___fttol 261C        __size_of_get_full_ADC 0026  
               __psmallconst 1000                      __pcinit 2CA4                   ??___awtoft 000C  
                 ??___ftpack 0006              __size_of_fround 0244                      __ramtop 1000  
                 ??___lltoft 000D                      __ptext0 1BC6                      __ptext1 1098  
                    __ptext2 17E6                      __ptext3 2D8E                      __ptext4 1F02  
                    __ptext5 2CCE                      __ptext6 2524                      __ptext7 2A62  
                    __ptext8 28AA                      __ptext9 230A              __size_of_printf 074E  
                ?__div_to_l_ 0001                      _dpowers 1001             ___awmod@dividend 0001  
       end_of_initialization 2CC4                _Delay_One_Sec 2D40                __Lmediumconst 0000  
               _get_full_ADC 2CF6              ___lldiv@divisor 0005              ___lldiv@counter 000D  
                  _RCSTAbits 000FAB                      printf@c 0061                      printf@f 0040  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE               __tdiv_to_l_@f1 0001               __tdiv_to_l_@f2 0004  
              ??__tdiv_to_l_ 0007                    _PORTAbits 000F80                    _PORTBbits 000F81  
                  _TRISCbits 000F94               ?_Delay_One_Sec 0001                  ___ftdiv@exp 001A  
                  _TXSTAbits 000FAC           get_full_ADC@result 0005          __size_of__div_to_l_ 010A  
     __size_of_SET_D3_PURPLE 0006                  ___ftmul@exp 001E               __end_of___ftge 29D6  
             __end_of___wmul 2CF6               __end_of_fround 2146               __end_of_printf 17E6  
        start_initialization 2CA4                    _Init_UART 2D7A                    _Init_TRIS 2D64  
        __end_of__tdiv_to_l_ 241A         __end_of_SET_D1_GREEN 2DF0         __end_of_SET_D1_WHITE 2DD8  
       __end_of_SET_D2_WHITE 2DC8                    _OpenUSART 2B54              ___llmod@divisor 0012  
           __CFG_OSC$INTIO67 000000            __size_of_Init_ADC 000E              ___llmod@counter 0016  
                   ??___ftge 0007                     ??___wmul 0013                  __pdataBANK0 0080  
         _Select_ADC_Channel 2DAA                     ??_fround 0027                     ??_printf 0045  
                 fround@prec 002D            __size_of___awtoft 003C            __size_of___ftpack 00C6  
        ?_Select_ADC_Channel 0001            __size_of___lltoft 0060                _SET_D3_PURPLE 2DFE  
                 ?_Init_UART 0001                   ?_Init_TRIS 0001              ??_Delay_One_Sec 0001  
                 ?_OpenUSART 0001         ??_Select_ADC_Channel 0001                     ?___awdiv 0007  
                   ?___ftadd 002E                     ?___awmod 0001                     ?___ftdiv 000D  
                   ?___ftneg 0001                     ?___lldiv 0001                     ?___ftmul 0015  
                   ?___llmod 000E                     ?___ftsub 003A                    __npowers_ 1029  
                   ?___fttol 002B                  __tdiv_to_l_ 230A                 ??__div_to_l_ 0007  
                __smallconst 1000               ?_SET_D3_PURPLE 0001                ??_SET_D1_BLUE 0001  
              ??_SET_D3_BLUE 0001               __size_of_scale 03E0               __size_of_putch 000E  
             ___wmul@product 0013                     _PIE1bits 000F9D                     _PIR1bits 000F9E  
         __end_of__div_to_l_ 2524                    main@F4301 0080                   _ADCON0bits 000FC2  
          ___wmul@multiplier 000F                   printf@flag 0050                   printf@fval 005E  
      __size_of_SET_D1_GREEN 0008                   printf@prec 0052        __size_of_SET_D1_WHITE 0008  
                  main@tempC 006E                    main@tempF 0077                  ??_Init_UART 0004  
      __size_of_SET_D2_WHITE 0008                  ??_Init_TRIS 0001                    copy_data0 2CB8  
                   _Init_ADC 2D9C                  ??_OpenUSART 0003          __end_of_SET_D1_BLUE 2DF8  
        __end_of_SET_D3_BLUE 2E0A              OpenUSART@config 0003                     __Hrparam 0000  
                   __Lrparam 0000                 _SET_D1_GREEN 2DE8             __size_of___awdiv 0096  
           __size_of___ftadd 01C4             __size_of___awmod 0082                 _SET_D1_WHITE 2DD0  
           __size_of___ftdiv 00E2             __size_of___ftneg 0024             __size_of___lldiv 008C  
           __size_of___ftmul 00F8                 _SET_D2_WHITE 2DC0             __size_of___llmod 0070  
           __size_of___ftsub 0044             __size_of___fttol 00E6                     ___awtoft 2C68  
                   ___ftpack 27E4                  _fround$1244 002A                  _fround$1245 0027  
            ??_SET_D3_PURPLE 0001                     ___lltoft 2BC4                     __ptext10 241A  
                   __ptext11 2BC4                     __ptext20 2702                     __ptext12 2AE4  
                   __ptext21 2C68                     __ptext13 29D6                     __ptext30 2DD8  
                   __ptext22 27E4                     __ptext14 261C                     __ptext31 2DE0  
                   __ptext23 2DAA                     __ptext15 2C24                     __ptext32 2DE8  
                   __ptext24 2DF8                     __ptext16 2146                     __ptext33 2DF0  
                   __ptext25 2DFE                     __ptext17 2D1C                     __ptext34 2D7A  
                   __ptext26 2E04                     __ptext18 2940                     __ptext35 2B54  
                   __ptext27 2DC0                     __ptext19 2CF6                     __ptext36 2D64  
                   __ptext28 2DC8                     __ptext37 2D9C                     __ptext29 2DD0  
                   __ptext38 2D40                     __powers_ 1050                __size_of_main 033C  
                  printf@exp 0058                    printf@val 0054               OpenUSART@spbrg 0001  
                _SET_D1_BLUE 2DF0                  _SET_D3_BLUE 2E04                     scale@scl 002A  
           __tdiv_to_l_@exp1 000F             __tdiv_to_l_@cntr 000E             __tdiv_to_l_@quot 000A  
           ___lldiv@dividend 0001                     printf@ap 004E                 ?__tdiv_to_l_ 0001  
                 _SET_D1_OFF 2DE0                   _SET_D1_RED 2DD8                   _SET_D2_OFF 2DC8  
                 _SET_D3_RED 2DF8                  _printf$1247 004B                 main@LED_7seg 0064  
           ___lldiv@quotient 0009        __end_of_Delay_One_Sec 2D64                ?_get_full_ADC 0001  
__size_of_Select_ADC_Channel 000C              main@voltage_mv2 007A  
