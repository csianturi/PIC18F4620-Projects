

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Nov 09 18:29:13 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           	psect	idataCOMRAM
    60  00147C                     __pidataCOMRAM:
    61                           	opt stack 0
    62                           
    63                           ;initializer for _array1
    64  00147C  A2                 	db	162
    65  00147D  62                 	db	98
    66  00147E  E2                 	db	226
    67  00147F  22                 	db	34
    68  001480  02                 	db	2
    69  001481  C2                 	db	194
    70  001482  E0                 	db	224
    71  001483  A8                 	db	168
    72  001484  90                 	db	144
    73  001485  68                 	db	104
    74  001486  98                 	db	152
    75  001487  B0                 	db	176
    76  001488  30                 	db	48
    77  001489  18                 	db	24
    78  00148A  7A                 	db	122
    79  00148B  10                 	db	16
    80  00148C  38                 	db	56
    81  00148D  5A                 	db	90
    82  00148E  42                 	db	66
    83  00148F  4A                 	db	74
    84  001490  52                 	db	82
    85                           
    86                           ;initializer for _wrap
    87  001491  01                 	db	1
    88                           
    89                           	psect	idataBANK0
    90  0012B4                     __pidataBANK0:
    91                           	opt stack 0
    92                           
    93                           ;initializer for _D1
    94  0012B4  01                 	db	1
    95  0012B5  01                 	db	1
    96  0012B6  01                 	db	1
    97  0012B7  06                 	db	6
    98  0012B8  06                 	db	6
    99  0012B9  02                 	db	2
   100  0012BA  04                 	db	4
   101  0012BB  00                 	db	0
   102  0012BC  00                 	db	0
   103  0012BD  00                 	db	0
   104  0012BE  00                 	db	0
   105  0012BF  00                 	db	0
   106  0012C0  00                 	db	0
   107  0012C1  00                 	db	0
   108  0012C2  00                 	db	0
   109  0012C3  00                 	db	0
   110  0012C4  00                 	db	0
   111  0012C5  00                 	db	0
   112  0012C6  00                 	db	0
   113  0012C7  00                 	db	0
   114  0012C8  00                 	db	0
   115                           
   116                           ;initializer for _D2
   117  0012C9  00                 	db	0
   118  0012CA  00                 	db	0
   119  0012CB  00                 	db	0
   120  0012CC  00                 	db	0
   121  0012CD  00                 	db	0
   122  0012CE  00                 	db	0
   123  0012CF  00                 	db	0
   124  0012D0  04                 	db	4
   125  0012D1  05                 	db	5
   126  0012D2  07                 	db	7
   127  0012D3  07                 	db	7
   128  0012D4  07                 	db	7
   129  0012D5  07                 	db	7
   130  0012D6  07                 	db	7
   131  0012D7  00                 	db	0
   132  0012D8  00                 	db	0
   133  0012D9  00                 	db	0
   134  0012DA  00                 	db	0
   135  0012DB  00                 	db	0
   136  0012DC  00                 	db	0
   137  0012DD  00                 	db	0
   138                           
   139                           ;initializer for _D3
   140  0012DE  00                 	db	0
   141  0012DF  00                 	db	0
   142  0012E0  00                 	db	0
   143  0012E1  00                 	db	0
   144  0012E2  00                 	db	0
   145  0012E3  00                 	db	0
   146  0012E4  00                 	db	0
   147  0012E5  00                 	db	0
   148  0012E6  00                 	db	0
   149  0012E7  00                 	db	0
   150  0012E8  00                 	db	0
   151  0012E9  00                 	db	0
   152  0012EA  00                 	db	0
   153  0012EB  00                 	db	0
   154  0012EC  38                 	db	56
   155  0012ED  38                 	db	56
   156  0012EE  38                 	db	56
   157  0012EF  38                 	db	56
   158  0012F0  38                 	db	56
   159  0012F1  38                 	db	56
   160  0012F2  38                 	db	56
   161                           
   162                           	psect	idataBANK1
   163  00100E                     __pidataBANK1:
   164                           	opt stack 0
   165                           
   166                           ;initializer for _color
   167  00100E  F800               	dw	63488
   168  001010  F800               	dw	63488
   169  001012  F800               	dw	63488
   170  001014  07FF               	dw	2047
   171  001016  07FF               	dw	2047
   172  001018  07E0               	dw	2016
   173  00101A  001F               	dw	31
   174  00101C  001F               	dw	31
   175  00101E  F81F               	dw	63519
   176  001020  FFFF               	dw	65535
   177  001022  FFFF               	dw	65535
   178  001024  FFFF               	dw	65535
   179  001026  FFFF               	dw	65535
   180  001028  FFFF               	dw	65535
   181  00102A  FFFF               	dw	65535
   182  00102C  FFFF               	dw	65535
   183  00102E  FFFF               	dw	65535
   184  001030  FFFF               	dw	65535
   185  001032  FFFF               	dw	65535
   186  001034  FFFF               	dw	65535
   187  001036  FFFF               	dw	65535
   188                           
   189                           ;initializer for _txt1
   190  001038  43                 	db	67
   191  001039  48                 	db	72
   192  00103A  2D                 	db	45
   193  00103B  00                 	db	0
   194  00103C  43                 	db	67
   195  00103D  48                 	db	72
   196  00103E  20                 	db	32
   197  00103F  00                 	db	0
   198  001040  43                 	db	67
   199  001041  48                 	db	72
   200  001042  2B                 	db	43
   201  001043  00                 	db	0
   202  001044  7C                 	db	124
   203  001045  3C                 	db	60
   204  001046  3C                 	db	60
   205  001047  00                 	db	0
   206  001048  3E                 	db	62
   207  001049  3E                 	db	62
   208  00104A  7C                 	db	124
   209  00104B  00                 	db	0
   210  00104C  3E                 	db	62
   211  00104D  7C                 	db	124
   212  00104E  7C                 	db	124
   213  00104F  00                 	db	0
   214  001050  20                 	db	32
   215  001051  2D                 	db	45
   216  001052  20                 	db	32
   217  001053  00                 	db	0
   218  001054  20                 	db	32
   219  001055  2B                 	db	43
   220  001056  20                 	db	32
   221  001057  00                 	db	0
   222  001058  45                 	db	69
   223  001059  51                 	db	81
   224  00105A  20                 	db	32
   225  00105B  00                 	db	0
   226  00105C  20                 	db	32
   227  00105D  30                 	db	48
   228  00105E  20                 	db	32
   229  00105F  00                 	db	0
   230  001060  31                 	db	49
   231  001061  30                 	db	48
   232  001062  30                 	db	48
   233  001063  00                 	db	0
   234  001064  32                 	db	50
   235  001065  30                 	db	48
   236  001066  30                 	db	48
   237  001067  00                 	db	0
   238  001068  20                 	db	32
   239  001069  31                 	db	49
   240  00106A  20                 	db	32
   241  00106B  00                 	db	0
   242  00106C  20                 	db	32
   243  00106D  32                 	db	50
   244  00106E  20                 	db	32
   245  00106F  00                 	db	0
   246  001070  20                 	db	32
   247  001071  33                 	db	51
   248  001072  20                 	db	32
   249  001073  00                 	db	0
   250  001074  20                 	db	32
   251  001075  34                 	db	52
   252  001076  20                 	db	32
   253  001077  00                 	db	0
   254  001078  20                 	db	32
   255  001079  35                 	db	53
   256  00107A  20                 	db	32
   257  00107B  00                 	db	0
   258  00107C  20                 	db	32
   259  00107D  36                 	db	54
   260  00107E  20                 	db	32
   261  00107F  00                 	db	0
   262  001080  20                 	db	32
   263  001081  37                 	db	55
   264  001082  20                 	db	32
   265  001083  00                 	db	0
   266  001084  20                 	db	32
   267  001085  38                 	db	56
   268  001086  20                 	db	32
   269  001087  00                 	db	0
   270  001088  20                 	db	32
   271  001089  39                 	db	57
   272  00108A  20                 	db	32
   273  00108B  00                 	db	0
   274                           
   275                           	psect	mediumconst
   276  00FDBE                     __pmediumconst:
   277                           	opt stack 0
   278  00FDBE  00                 	db	0
   279  00FDBF                     _font:
   280                           	opt stack 0
   281  00FDBF  00                 	db	0
   282  00FDC0  00                 	db	0
   283  00FDC1  00                 	db	0
   284  00FDC2  00                 	db	0
   285  00FDC3  00                 	db	0
   286  00FDC4  00                 	db	0
   287  00FDC5  00                 	db	0
   288  00FDC6  5F                 	db	95
   289  00FDC7  00                 	db	0
   290  00FDC8  00                 	db	0
   291  00FDC9  00                 	db	0
   292  00FDCA  07                 	db	7
   293  00FDCB  00                 	db	0
   294  00FDCC  07                 	db	7
   295  00FDCD  00                 	db	0
   296  00FDCE  14                 	db	20
   297  00FDCF  7F                 	db	127
   298  00FDD0  14                 	db	20
   299  00FDD1  7F                 	db	127
   300  00FDD2  14                 	db	20
   301  00FDD3  24                 	db	36
   302  00FDD4  2A                 	db	42
   303  00FDD5  7F                 	db	127
   304  00FDD6  2A                 	db	42
   305  00FDD7  12                 	db	18
   306  00FDD8  23                 	db	35
   307  00FDD9  13                 	db	19
   308  00FDDA  08                 	db	8
   309  00FDDB  64                 	db	100
   310  00FDDC  62                 	db	98
   311  00FDDD  36                 	db	54
   312  00FDDE  49                 	db	73
   313  00FDDF  56                 	db	86
   314  00FDE0  20                 	db	32
   315  00FDE1  50                 	db	80
   316  00FDE2  00                 	db	0
   317  00FDE3  08                 	db	8
   318  00FDE4  07                 	db	7
   319  00FDE5  03                 	db	3
   320  00FDE6  00                 	db	0
   321  00FDE7  00                 	db	0
   322  00FDE8  1C                 	db	28
   323  00FDE9  22                 	db	34
   324  00FDEA  41                 	db	65
   325  00FDEB  00                 	db	0
   326  00FDEC  00                 	db	0
   327  00FDED  41                 	db	65
   328  00FDEE  22                 	db	34
   329  00FDEF  1C                 	db	28
   330  00FDF0  00                 	db	0
   331  00FDF1  2A                 	db	42
   332  00FDF2  1C                 	db	28
   333  00FDF3  7F                 	db	127
   334  00FDF4  1C                 	db	28
   335  00FDF5  2A                 	db	42
   336  00FDF6  08                 	db	8
   337  00FDF7  08                 	db	8
   338  00FDF8  3E                 	db	62
   339  00FDF9  08                 	db	8
   340  00FDFA  08                 	db	8
   341  00FDFB  00                 	db	0
   342  00FDFC  80                 	db	128
   343  00FDFD  70                 	db	112
   344  00FDFE  30                 	db	48
   345  00FDFF  00                 	db	0
   346  00FE00  08                 	db	8
   347  00FE01  08                 	db	8
   348  00FE02  08                 	db	8
   349  00FE03  08                 	db	8
   350  00FE04  08                 	db	8
   351  00FE05  00                 	db	0
   352  00FE06  00                 	db	0
   353  00FE07  60                 	db	96
   354  00FE08  60                 	db	96
   355  00FE09  00                 	db	0
   356  00FE0A  20                 	db	32
   357  00FE0B  10                 	db	16
   358  00FE0C  08                 	db	8
   359  00FE0D  04                 	db	4
   360  00FE0E  02                 	db	2
   361  00FE0F  3E                 	db	62
   362  00FE10  51                 	db	81
   363  00FE11  49                 	db	73
   364  00FE12  45                 	db	69
   365  00FE13  3E                 	db	62
   366  00FE14  00                 	db	0
   367  00FE15  42                 	db	66
   368  00FE16  7F                 	db	127
   369  00FE17  40                 	db	64
   370  00FE18  00                 	db	0
   371  00FE19  72                 	db	114
   372  00FE1A  49                 	db	73
   373  00FE1B  49                 	db	73
   374  00FE1C  49                 	db	73
   375  00FE1D  46                 	db	70
   376  00FE1E  21                 	db	33
   377  00FE1F  41                 	db	65
   378  00FE20  49                 	db	73
   379  00FE21  4D                 	db	77
   380  00FE22  33                 	db	51
   381  00FE23  18                 	db	24
   382  00FE24  14                 	db	20
   383  00FE25  12                 	db	18
   384  00FE26  7F                 	db	127
   385  00FE27  10                 	db	16
   386  00FE28  27                 	db	39
   387  00FE29  45                 	db	69
   388  00FE2A  45                 	db	69
   389  00FE2B  45                 	db	69
   390  00FE2C  39                 	db	57
   391  00FE2D  3C                 	db	60
   392  00FE2E  4A                 	db	74
   393  00FE2F  49                 	db	73
   394  00FE30  49                 	db	73
   395  00FE31  31                 	db	49
   396  00FE32  41                 	db	65
   397  00FE33  21                 	db	33
   398  00FE34  11                 	db	17
   399  00FE35  09                 	db	9
   400  00FE36  07                 	db	7
   401  00FE37  36                 	db	54
   402  00FE38  49                 	db	73
   403  00FE39  49                 	db	73
   404  00FE3A  49                 	db	73
   405  00FE3B  36                 	db	54
   406  00FE3C  46                 	db	70
   407  00FE3D  49                 	db	73
   408  00FE3E  49                 	db	73
   409  00FE3F  29                 	db	41
   410  00FE40  1E                 	db	30
   411  00FE41  00                 	db	0
   412  00FE42  00                 	db	0
   413  00FE43  14                 	db	20
   414  00FE44  00                 	db	0
   415  00FE45  00                 	db	0
   416  00FE46  00                 	db	0
   417  00FE47  40                 	db	64
   418  00FE48  34                 	db	52
   419  00FE49  00                 	db	0
   420  00FE4A  00                 	db	0
   421  00FE4B  00                 	db	0
   422  00FE4C  08                 	db	8
   423  00FE4D  14                 	db	20
   424  00FE4E  22                 	db	34
   425  00FE4F  41                 	db	65
   426  00FE50  14                 	db	20
   427  00FE51  14                 	db	20
   428  00FE52  14                 	db	20
   429  00FE53  14                 	db	20
   430  00FE54  14                 	db	20
   431  00FE55  00                 	db	0
   432  00FE56  41                 	db	65
   433  00FE57  22                 	db	34
   434  00FE58  14                 	db	20
   435  00FE59  08                 	db	8
   436  00FE5A  02                 	db	2
   437  00FE5B  01                 	db	1
   438  00FE5C  59                 	db	89
   439  00FE5D  09                 	db	9
   440  00FE5E  06                 	db	6
   441  00FE5F  3E                 	db	62
   442  00FE60  41                 	db	65
   443  00FE61  5D                 	db	93
   444  00FE62  59                 	db	89
   445  00FE63  4E                 	db	78
   446  00FE64  7C                 	db	124
   447  00FE65  12                 	db	18
   448  00FE66  11                 	db	17
   449  00FE67  12                 	db	18
   450  00FE68  7C                 	db	124
   451  00FE69  7F                 	db	127
   452  00FE6A  49                 	db	73
   453  00FE6B  49                 	db	73
   454  00FE6C  49                 	db	73
   455  00FE6D  36                 	db	54
   456  00FE6E  3E                 	db	62
   457  00FE6F  41                 	db	65
   458  00FE70  41                 	db	65
   459  00FE71  41                 	db	65
   460  00FE72  22                 	db	34
   461  00FE73  7F                 	db	127
   462  00FE74  41                 	db	65
   463  00FE75  41                 	db	65
   464  00FE76  41                 	db	65
   465  00FE77  3E                 	db	62
   466  00FE78  7F                 	db	127
   467  00FE79  49                 	db	73
   468  00FE7A  49                 	db	73
   469  00FE7B  49                 	db	73
   470  00FE7C  41                 	db	65
   471  00FE7D  7F                 	db	127
   472  00FE7E  09                 	db	9
   473  00FE7F  09                 	db	9
   474  00FE80  09                 	db	9
   475  00FE81  01                 	db	1
   476  00FE82  3E                 	db	62
   477  00FE83  41                 	db	65
   478  00FE84  41                 	db	65
   479  00FE85  51                 	db	81
   480  00FE86  73                 	db	115
   481  00FE87  7F                 	db	127
   482  00FE88  08                 	db	8
   483  00FE89  08                 	db	8
   484  00FE8A  08                 	db	8
   485  00FE8B  7F                 	db	127
   486  00FE8C  00                 	db	0
   487  00FE8D  41                 	db	65
   488  00FE8E  7F                 	db	127
   489  00FE8F  41                 	db	65
   490  00FE90  00                 	db	0
   491  00FE91  20                 	db	32
   492  00FE92  40                 	db	64
   493  00FE93  41                 	db	65
   494  00FE94  3F                 	db	63
   495  00FE95  01                 	db	1
   496  00FE96  7F                 	db	127
   497  00FE97  08                 	db	8
   498  00FE98  14                 	db	20
   499  00FE99  22                 	db	34
   500  00FE9A  41                 	db	65
   501  00FE9B  7F                 	db	127
   502  00FE9C  40                 	db	64
   503  00FE9D  40                 	db	64
   504  00FE9E  40                 	db	64
   505  00FE9F  40                 	db	64
   506  00FEA0  7F                 	db	127
   507  00FEA1  02                 	db	2
   508  00FEA2  1C                 	db	28
   509  00FEA3  02                 	db	2
   510  00FEA4  7F                 	db	127
   511  00FEA5  7F                 	db	127
   512  00FEA6  04                 	db	4
   513  00FEA7  08                 	db	8
   514  00FEA8  10                 	db	16
   515  00FEA9  7F                 	db	127
   516  00FEAA  3E                 	db	62
   517  00FEAB  41                 	db	65
   518  00FEAC  41                 	db	65
   519  00FEAD  41                 	db	65
   520  00FEAE  3E                 	db	62
   521  00FEAF  7F                 	db	127
   522  00FEB0  09                 	db	9
   523  00FEB1  09                 	db	9
   524  00FEB2  09                 	db	9
   525  00FEB3  06                 	db	6
   526  00FEB4  3E                 	db	62
   527  00FEB5  41                 	db	65
   528  00FEB6  51                 	db	81
   529  00FEB7  21                 	db	33
   530  00FEB8  5E                 	db	94
   531  00FEB9  7F                 	db	127
   532  00FEBA  09                 	db	9
   533  00FEBB  19                 	db	25
   534  00FEBC  29                 	db	41
   535  00FEBD  46                 	db	70
   536  00FEBE                     __end_of_font:
   537                           	opt stack 0
   538  00FEBE                     _font2:
   539                           	opt stack 0
   540  00FEBE  26                 	db	38
   541  00FEBF  49                 	db	73
   542  00FEC0  49                 	db	73
   543  00FEC1  49                 	db	73
   544  00FEC2  32                 	db	50
   545  00FEC3  03                 	db	3
   546  00FEC4  01                 	db	1
   547  00FEC5  7F                 	db	127
   548  00FEC6  01                 	db	1
   549  00FEC7  03                 	db	3
   550  00FEC8  3F                 	db	63
   551  00FEC9  40                 	db	64
   552  00FECA  40                 	db	64
   553  00FECB  40                 	db	64
   554  00FECC  3F                 	db	63
   555  00FECD  1F                 	db	31
   556  00FECE  20                 	db	32
   557  00FECF  40                 	db	64
   558  00FED0  20                 	db	32
   559  00FED1  1F                 	db	31
   560  00FED2  3F                 	db	63
   561  00FED3  40                 	db	64
   562  00FED4  38                 	db	56
   563  00FED5  40                 	db	64
   564  00FED6  3F                 	db	63
   565  00FED7  63                 	db	99
   566  00FED8  14                 	db	20
   567  00FED9  08                 	db	8
   568  00FEDA  14                 	db	20
   569  00FEDB  63                 	db	99
   570  00FEDC  03                 	db	3
   571  00FEDD  04                 	db	4
   572  00FEDE  78                 	db	120
   573  00FEDF  04                 	db	4
   574  00FEE0  03                 	db	3
   575  00FEE1  61                 	db	97
   576  00FEE2  59                 	db	89
   577  00FEE3  49                 	db	73
   578  00FEE4  4D                 	db	77
   579  00FEE5  43                 	db	67
   580  00FEE6  00                 	db	0
   581  00FEE7  7F                 	db	127
   582  00FEE8  41                 	db	65
   583  00FEE9  41                 	db	65
   584  00FEEA  41                 	db	65
   585  00FEEB  02                 	db	2
   586  00FEEC  04                 	db	4
   587  00FEED  08                 	db	8
   588  00FEEE  10                 	db	16
   589  00FEEF  20                 	db	32
   590  00FEF0  00                 	db	0
   591  00FEF1  41                 	db	65
   592  00FEF2  41                 	db	65
   593  00FEF3  41                 	db	65
   594  00FEF4  7F                 	db	127
   595  00FEF5  04                 	db	4
   596  00FEF6  02                 	db	2
   597  00FEF7  01                 	db	1
   598  00FEF8  02                 	db	2
   599  00FEF9  04                 	db	4
   600  00FEFA  40                 	db	64
   601  00FEFB  40                 	db	64
   602  00FEFC  40                 	db	64
   603  00FEFD  40                 	db	64
   604  00FEFE  40                 	db	64
   605  00FEFF  00                 	db	0
   606  00FF00  03                 	db	3
   607  00FF01  07                 	db	7
   608  00FF02  08                 	db	8
   609  00FF03  00                 	db	0
   610  00FF04  20                 	db	32
   611  00FF05  54                 	db	84
   612  00FF06  54                 	db	84
   613  00FF07  78                 	db	120
   614  00FF08  40                 	db	64
   615  00FF09  7F                 	db	127
   616  00FF0A  28                 	db	40
   617  00FF0B  44                 	db	68
   618  00FF0C  44                 	db	68
   619  00FF0D  38                 	db	56
   620  00FF0E  38                 	db	56
   621  00FF0F  44                 	db	68
   622  00FF10  44                 	db	68
   623  00FF11  44                 	db	68
   624  00FF12  28                 	db	40
   625  00FF13  38                 	db	56
   626  00FF14  44                 	db	68
   627  00FF15  44                 	db	68
   628  00FF16  28                 	db	40
   629  00FF17  7F                 	db	127
   630  00FF18  38                 	db	56
   631  00FF19  54                 	db	84
   632  00FF1A  54                 	db	84
   633  00FF1B  54                 	db	84
   634  00FF1C  18                 	db	24
   635  00FF1D  00                 	db	0
   636  00FF1E  08                 	db	8
   637  00FF1F  7E                 	db	126
   638  00FF20  09                 	db	9
   639  00FF21  02                 	db	2
   640  00FF22  18                 	db	24
   641  00FF23  A4                 	db	164
   642  00FF24  A4                 	db	164
   643  00FF25  9C                 	db	156
   644  00FF26  78                 	db	120
   645  00FF27  7F                 	db	127
   646  00FF28  08                 	db	8
   647  00FF29  04                 	db	4
   648  00FF2A  04                 	db	4
   649  00FF2B  78                 	db	120
   650  00FF2C  00                 	db	0
   651  00FF2D  44                 	db	68
   652  00FF2E  7D                 	db	125
   653  00FF2F  40                 	db	64
   654  00FF30  00                 	db	0
   655  00FF31  20                 	db	32
   656  00FF32  40                 	db	64
   657  00FF33  40                 	db	64
   658  00FF34  3D                 	db	61
   659  00FF35  00                 	db	0
   660  00FF36  7F                 	db	127
   661  00FF37  10                 	db	16
   662  00FF38  28                 	db	40
   663  00FF39  44                 	db	68
   664  00FF3A  00                 	db	0
   665  00FF3B  00                 	db	0
   666  00FF3C  41                 	db	65
   667  00FF3D  7F                 	db	127
   668  00FF3E  40                 	db	64
   669  00FF3F  00                 	db	0
   670  00FF40  7C                 	db	124
   671  00FF41  04                 	db	4
   672  00FF42  78                 	db	120
   673  00FF43  04                 	db	4
   674  00FF44  78                 	db	120
   675  00FF45  7C                 	db	124
   676  00FF46  08                 	db	8
   677  00FF47  04                 	db	4
   678  00FF48  04                 	db	4
   679  00FF49  78                 	db	120
   680  00FF4A  38                 	db	56
   681  00FF4B  44                 	db	68
   682  00FF4C  44                 	db	68
   683  00FF4D  44                 	db	68
   684  00FF4E  38                 	db	56
   685  00FF4F  FC                 	db	252
   686  00FF50  18                 	db	24
   687  00FF51  24                 	db	36
   688  00FF52  24                 	db	36
   689  00FF53  18                 	db	24
   690  00FF54  18                 	db	24
   691  00FF55  24                 	db	36
   692  00FF56  24                 	db	36
   693  00FF57  18                 	db	24
   694  00FF58  FC                 	db	252
   695  00FF59  7C                 	db	124
   696  00FF5A  08                 	db	8
   697  00FF5B  04                 	db	4
   698  00FF5C  04                 	db	4
   699  00FF5D  08                 	db	8
   700  00FF5E  48                 	db	72
   701  00FF5F  54                 	db	84
   702  00FF60  54                 	db	84
   703  00FF61  54                 	db	84
   704  00FF62  24                 	db	36
   705  00FF63  04                 	db	4
   706  00FF64  04                 	db	4
   707  00FF65  3F                 	db	63
   708  00FF66  44                 	db	68
   709  00FF67  24                 	db	36
   710  00FF68  3C                 	db	60
   711  00FF69  40                 	db	64
   712  00FF6A  40                 	db	64
   713  00FF6B  20                 	db	32
   714  00FF6C  7C                 	db	124
   715  00FF6D  1C                 	db	28
   716  00FF6E  20                 	db	32
   717  00FF6F  40                 	db	64
   718  00FF70  20                 	db	32
   719  00FF71  1C                 	db	28
   720  00FF72  3C                 	db	60
   721  00FF73  40                 	db	64
   722  00FF74  30                 	db	48
   723  00FF75  40                 	db	64
   724  00FF76  3C                 	db	60
   725  00FF77  44                 	db	68
   726  00FF78  28                 	db	40
   727  00FF79  10                 	db	16
   728  00FF7A  28                 	db	40
   729  00FF7B  44                 	db	68
   730  00FF7C  4C                 	db	76
   731  00FF7D  90                 	db	144
   732  00FF7E  90                 	db	144
   733  00FF7F  90                 	db	144
   734  00FF80  7C                 	db	124
   735  00FF81  44                 	db	68
   736  00FF82  64                 	db	100
   737  00FF83  54                 	db	84
   738  00FF84  4C                 	db	76
   739  00FF85  44                 	db	68
   740  00FF86  00                 	db	0
   741  00FF87  08                 	db	8
   742  00FF88  36                 	db	54
   743  00FF89  41                 	db	65
   744  00FF8A  00                 	db	0
   745  00FF8B  00                 	db	0
   746  00FF8C  00                 	db	0
   747  00FF8D  77                 	db	119
   748  00FF8E  00                 	db	0
   749  00FF8F  00                 	db	0
   750  00FF90  00                 	db	0
   751  00FF91  41                 	db	65
   752  00FF92  36                 	db	54
   753  00FF93  08                 	db	8
   754  00FF94  00                 	db	0
   755  00FF95  02                 	db	2
   756  00FF96  01                 	db	1
   757  00FF97  02                 	db	2
   758  00FF98  04                 	db	4
   759  00FF99  02                 	db	2
   760  00FF9A                     __end_of_font2:
   761                           	opt stack 0
   762  00FF9A                     _hexpowers:
   763                           	opt stack 0
   764  00FF9A  0001               	dw	1
   765  00FF9C  0000               	dw	0
   766  00FF9E  0010               	dw	16
   767  00FFA0  0000               	dw	0
   768  00FFA2  0100               	dw	256
   769  00FFA4  0000               	dw	0
   770  00FFA6  1000               	dw	4096
   771  00FFA8  0000               	dw	0
   772  00FFAA  0000               	dw	0
   773  00FFAC  0001               	dw	1
   774  00FFAE  0000               	dw	0
   775  00FFB0  0010               	dw	16
   776  00FFB2  0000               	dw	0
   777  00FFB4  0100               	dw	256
   778  00FFB6  0000               	dw	0
   779  00FFB8  1000               	dw	4096
   780  00FFBA                     __end_of_hexpowers:
   781                           	opt stack 0
   782  0000                     _ADCON1	set	4033
   783  0000                     _CCP2CON	set	4026
   784  0000                     _CCPR2L	set	4027
   785  0000                     _INTCON2bits	set	4081
   786  0000                     _INTCONbits	set	4082
   787  0000                     _OSCCON	set	4051
   788  0000                     _PIE1bits	set	3997
   789  0000                     _PIR1bits	set	3998
   790  0000                     _PIR2bits	set	4001
   791  0000                     _PORTBbits	set	3969
   792  0000                     _PORTCbits	set	3970
   793  0000                     _PORTD	set	3971
   794  0000                     _PORTE	set	3972
   795  0000                     _PR2	set	4043
   796  0000                     _RCSTA	set	4011
   797  0000                     _RCSTAbits	set	4011
   798  0000                     _SPBRG	set	4015
   799  0000                     _SPBRGH	set	4016
   800  0000                     _SSPBUF	set	4041
   801  0000                     _SSPCON1	set	4038
   802  0000                     _SSPSTAT	set	4039
   803  0000                     _SSPSTATbits	set	4039
   804  0000                     _T0CON	set	4053
   805  0000                     _T0CONbits	set	4053
   806  0000                     _T1CON	set	4045
   807  0000                     _T1CONbits	set	4045
   808  0000                     _T2CON	set	4042
   809  0000                     _T3CON	set	4017
   810  0000                     _T3CONbits	set	4017
   811  0000                     _TMR0H	set	4055
   812  0000                     _TMR0L	set	4054
   813  0000                     _TMR1H	set	4047
   814  0000                     _TMR1L	set	4046
   815  0000                     _TMR3H	set	4019
   816  0000                     _TMR3L	set	4018
   817  0000                     _TRISA	set	3986
   818  0000                     _TRISB	set	3987
   819  0000                     _TRISC	set	3988
   820  0000                     _TRISCbits	set	3988
   821  0000                     _TRISD	set	3989
   822  0000                     _TRISE	set	3990
   823  0000                     _TXREG	set	4013
   824  0000                     _TXSTA	set	4012
   825  0000                     _TXSTAbits	set	4012
   826  0000                     _TRMT	set	32097
   827  0000                     _nRBPU	set	32655
   828  00FFBA                     STR_1:
   829  00FFBA  4E                 	db	78	;'N'
   830  00FFBB  45                 	db	69	;'E'
   831  00FFBC  43                 	db	67	;'C'
   832  00FFBD  5F                 	db	95	;'_'
   833  00FFBE  43                 	db	67	;'C'
   834  00FFBF  6F                 	db	111	;'o'
   835  00FFC0  64                 	db	100	;'d'
   836  00FFC1  65                 	db	101	;'e'
   837  00FFC2  20                 	db	32
   838  00FFC3  3D                 	db	61	;'='
   839  00FFC4  20                 	db	32
   840  00FFC5  25                 	db	37
   841  00FFC6  30                 	db	48	;'0'
   842  00FFC7  38                 	db	56	;'8'
   843  00FFC8  6C                 	db	108	;'l'
   844  00FFC9  78                 	db	120	;'x'
   845  00FFCA  20                 	db	32
   846  00FFCB  25                 	db	37
   847  00FFCC  78                 	db	120	;'x'
   848  00FFCD  0D                 	db	13
   849  00FFCE  0A                 	db	10
   850  00FFCF  00                 	db	0
   851  00FFD0                     STR_2:
   852  00FFD0  45                 	db	69	;'E'
   853  00FFD1  43                 	db	67	;'C'
   854  00FFD2  45                 	db	69	;'E'
   855  00FFD3  33                 	db	51	;'3'
   856  00FFD4  33                 	db	51	;'3'
   857  00FFD5  30                 	db	48	;'0'
   858  00FFD6  31                 	db	49	;'1'
   859  00FFD7  4C                 	db	76	;'L'
   860  00FFD8  20                 	db	32
   861  00FFD9  53                 	db	83	;'S'
   862  00FFDA  70                 	db	112	;'p'
   863  00FFDB  72                 	db	114	;'r'
   864  00FFDC  69                 	db	105	;'i'
   865  00FFDD  6E                 	db	110	;'n'
   866  00FFDE  67                 	db	103	;'g'
   867  00FFDF  20                 	db	32
   868  00FFE0  32                 	db	50	;'2'
   869  00FFE1  31                 	db	49	;'1'
   870  00FFE2  2D                 	db	45
   871  00FFE3  53                 	db	83	;'S'
   872  00FFE4  31                 	db	49	;'1'
   873  00FFE5  00                 	db	0
   874  00FFE6                     STR_4:
   875  00FFE6  30                 	db	48	;'0'
   876  00FFE7  31                 	db	49	;'1'
   877  00FFE8  32                 	db	50	;'2'
   878  00FFE9  33                 	db	51	;'3'
   879  00FFEA  34                 	db	52	;'4'
   880  00FFEB  35                 	db	53	;'5'
   881  00FFEC  36                 	db	54	;'6'
   882  00FFED  37                 	db	55	;'7'
   883  00FFEE  38                 	db	56	;'8'
   884  00FFEF  39                 	db	57	;'9'
   885  00FFF0  61                 	db	97	;'a'
   886  00FFF1  62                 	db	98	;'b'
   887  00FFF2  63                 	db	99	;'c'
   888  00FFF3  64                 	db	100	;'d'
   889  00FFF4  65                 	db	101	;'e'
   890  00FFF5  66                 	db	102	;'f'
   891  00FFF6  00                 	db	0
   892  00FFF7                     STR_3:
   893  00FFF7  4C                 	db	76	;'L'
   894  00FFF8  41                 	db	65	;'A'
   895  00FFF9  42                 	db	66	;'B'
   896  00FFFA  20                 	db	32
   897  00FFFB  31                 	db	49	;'1'
   898  00FFFC  30                 	db	48	;'0'
   899  00FFFD  20                 	db	32
   900  00FFFE  00                 	db	0
   901                           
   902                           ; #config settings
   903  00FFFF  00                 	db	0	; dummy byte at the end
   904  0000                     
   905                           	psect	cinit
   906  000F8C                     __pcinit:
   907                           	opt stack 0
   908  000F8C                     start_initialization:
   909                           	opt stack 0
   910  000F8C                     __initialization:
   911                           	opt stack 0
   912                           
   913                           ; Clear objects allocated to BANK0 (31 bytes)
   914  000F8C  EE00  F0BF         	lfsr	0,__pbssBANK0
   915  000F90  0E1F               	movlw	31
   916  000F92                     clear_0:
   917  000F92  6AEE               	clrf	postinc0,c
   918  000F94  06E8               	decf	wreg,f,c
   919  000F96  E1FD               	bnz	clear_0
   920                           
   921                           ; Clear objects allocated to COMRAM (19 bytes)
   922  000F98  EE00  F05D         	lfsr	0,__pbssCOMRAM
   923  000F9C  0E13               	movlw	19
   924  000F9E                     clear_1:
   925  000F9E  6AEE               	clrf	postinc0,c
   926  000FA0  06E8               	decf	wreg,f,c
   927  000FA2  E1FD               	bnz	clear_1
   928                           
   929                           ; Initialize objects allocated to BANK1 (126 bytes)
   930                           ; load TBLPTR registers with __pidataBANK1
   931  000FA4  0E0E               	movlw	low __pidataBANK1
   932  000FA6  6EF6               	movwf	tblptrl,c
   933  000FA8  0E10               	movlw	high __pidataBANK1
   934  000FAA  6EF7               	movwf	tblptrh,c
   935  000FAC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   936  000FAE  6EF8               	movwf	tblptru,c
   937  000FB0  EE01  F000         	lfsr	0,__pdataBANK1
   938  000FB4  EE10 F07E          	lfsr	1,126
   939  000FB8                     copy_data0:
   940  000FB8  0009               	tblrd		*+
   941  000FBA  CFF5 FFEE          	movff	tablat,postinc0
   942  000FBE  50E5               	movf	postdec1,w,c
   943  000FC0  50E1               	movf	fsr1l,w,c
   944  000FC2  E1FA               	bnz	copy_data0
   945                           
   946                           ; Initialize objects allocated to BANK0 (63 bytes)
   947                           ; load TBLPTR registers with __pidataBANK0
   948  000FC4  0EB4               	movlw	low __pidataBANK0
   949  000FC6  6EF6               	movwf	tblptrl,c
   950  000FC8  0E12               	movlw	high __pidataBANK0
   951  000FCA  6EF7               	movwf	tblptrh,c
   952  000FCC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   953  000FCE  6EF8               	movwf	tblptru,c
   954  000FD0  EE00  F080         	lfsr	0,__pdataBANK0
   955  000FD4  EE10 F03F          	lfsr	1,63
   956  000FD8                     copy_data1:
   957  000FD8  0009               	tblrd		*+
   958  000FDA  CFF5 FFEE          	movff	tablat,postinc0
   959  000FDE  50E5               	movf	postdec1,w,c
   960  000FE0  50E1               	movf	fsr1l,w,c
   961  000FE2  E1FA               	bnz	copy_data1
   962                           
   963                           ; Initialize objects allocated to COMRAM (22 bytes)
   964                           ; load TBLPTR registers with __pidataCOMRAM
   965  000FE4  0E7C               	movlw	low __pidataCOMRAM
   966  000FE6  6EF6               	movwf	tblptrl,c
   967  000FE8  0E14               	movlw	high __pidataCOMRAM
   968  000FEA  6EF7               	movwf	tblptrh,c
   969  000FEC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   970  000FEE  6EF8               	movwf	tblptru,c
   971  000FF0  EE00  F047         	lfsr	0,__pdataCOMRAM
   972  000FF4  EE10 F016          	lfsr	1,22
   973  000FF8                     copy_data2:
   974  000FF8  0009               	tblrd		*+
   975  000FFA  CFF5 FFEE          	movff	tablat,postinc0
   976  000FFE  50E5               	movf	postdec1,w,c
   977  001000  50E1               	movf	fsr1l,w,c
   978  001002  E1FA               	bnz	copy_data2
   979  001004                     end_of_initialization:
   980                           	opt stack 0
   981  001004                     __end_of__initialization:
   982                           	opt stack 0
   983  001004  0E00               	movlw	low (__Lmediumconst shr (0+16))
   984  001006  6EF8               	movwf	tblptru,c
   985  001008  0100               	movlb	0
   986  00100A  EF36  F002         	goto	_main	;jump to C main() function
   987                           tblptru	equ	0xFF8
   988                           tblptrh	equ	0xFF7
   989                           tblptrl	equ	0xFF6
   990                           tablat	equ	0xFF5
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postdec1	equ	0xFE5
   994                           fsr1l	equ	0xFE1
   995                           
   996                           	psect	bssCOMRAM
   997  00005D                     __pbssCOMRAM:
   998                           	opt stack 0
   999  00005D                     _Nec_code:
  1000                           	opt stack 0
  1001  00005D                     	ds	4
  1002  000061                     _Time_Elapsed:
  1003                           	opt stack 0
  1004  000061                     	ds	2
  1005  000063                     _nbr:
  1006                           	opt stack 0
  1007  000063                     	ds	2
  1008  000065                     _nec_ok:
  1009                           	opt stack 0
  1010  000065                     	ds	2
  1011  000067                     _txt:
  1012                           	opt stack 0
  1013  000067                     	ds	2
  1014  000069                     _Nec_code1:
  1015                           	opt stack 0
  1016  000069                     	ds	1
  1017  00006A                     _Nec_state:
  1018                           	opt stack 0
  1019  00006A                     	ds	1
  1020  00006B                     __tft_type:
  1021                           	opt stack 0
  1022  00006B                     	ds	1
  1023  00006C                     _bit_count:
  1024                           	opt stack 0
  1025  00006C                     	ds	1
  1026  00006D                     _colstart:
  1027                           	opt stack 0
  1028  00006D                     	ds	1
  1029  00006E                     _i:
  1030                           	opt stack 0
  1031  00006E                     	ds	1
  1032  00006F                     _rowstart:
  1033                           	opt stack 0
  1034  00006F                     	ds	1
  1035                           tblptru	equ	0xFF8
  1036                           tblptrh	equ	0xFF7
  1037                           tblptrl	equ	0xFF6
  1038                           tablat	equ	0xFF5
  1039                           postinc0	equ	0xFEE
  1040                           wreg	equ	0xFE8
  1041                           postdec1	equ	0xFE5
  1042                           fsr1l	equ	0xFE1
  1043                           
  1044                           	psect	dataCOMRAM
  1045  000047                     __pdataCOMRAM:
  1046                           	opt stack 0
  1047  000047                     _array1:
  1048                           	opt stack 0
  1049  000047                     	ds	21
  1050  00005C                     _wrap:
  1051                           	opt stack 0
  1052  00005C                     	ds	1
  1053                           tblptru	equ	0xFF8
  1054                           tblptrh	equ	0xFF7
  1055                           tblptrl	equ	0xFF6
  1056                           tablat	equ	0xFF5
  1057                           postinc0	equ	0xFEE
  1058                           wreg	equ	0xFE8
  1059                           postdec1	equ	0xFE5
  1060                           fsr1l	equ	0xFE1
  1061                           
  1062                           	psect	bssBANK0
  1063  0000BF                     __pbssBANK0:
  1064                           	opt stack 0
  1065  0000BF                     _buffer:
  1066                           	opt stack 0
  1067  0000BF                     	ds	31
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           tblptrl	equ	0xFF6
  1071                           tablat	equ	0xFF5
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           postdec1	equ	0xFE5
  1075                           fsr1l	equ	0xFE1
  1076                           
  1077                           	psect	dataBANK0
  1078  000080                     __pdataBANK0:
  1079                           	opt stack 0
  1080  000080                     _D1:
  1081                           	opt stack 0
  1082  000080                     	ds	21
  1083  000095                     _D2:
  1084                           	opt stack 0
  1085  000095                     	ds	21
  1086  0000AA                     _D3:
  1087                           	opt stack 0
  1088  0000AA                     	ds	21
  1089                           tblptru	equ	0xFF8
  1090                           tblptrh	equ	0xFF7
  1091                           tblptrl	equ	0xFF6
  1092                           tablat	equ	0xFF5
  1093                           postinc0	equ	0xFEE
  1094                           wreg	equ	0xFE8
  1095                           postdec1	equ	0xFE5
  1096                           fsr1l	equ	0xFE1
  1097                           
  1098                           	psect	dataBANK1
  1099  000100                     __pdataBANK1:
  1100                           	opt stack 0
  1101  000100                     _color:
  1102                           	opt stack 0
  1103  000100                     	ds	42
  1104  00012A                     _txt1:
  1105                           	opt stack 0
  1106  00012A                     	ds	84
  1107                           tblptru	equ	0xFF8
  1108                           tblptrh	equ	0xFF7
  1109                           tblptrl	equ	0xFF6
  1110                           tablat	equ	0xFF5
  1111                           postinc0	equ	0xFEE
  1112                           wreg	equ	0xFE8
  1113                           postdec1	equ	0xFE5
  1114                           fsr1l	equ	0xFE1
  1115                           
  1116                           	psect	cstackBANK0
  1117  0000DE                     __pcstackBANK0:
  1118                           	opt stack 0
  1119  0000DE                     drawtext@x:
  1120                           	opt stack 0
  1121                           
  1122                           ; 1 bytes @ 0x0
  1123  0000DE                     	ds	1
  1124  0000DF                     drawtext@textsize:
  1125                           	opt stack 0
  1126                           
  1127                           ; 2 bytes @ 0x1
  1128  0000DF                     	ds	2
  1129  0000E1                     drawtext@i:
  1130                           	opt stack 0
  1131                           
  1132                           ; 2 bytes @ 0x3
  1133  0000E1                     	ds	2
  1134  0000E3                     drawtext@cursor_y:
  1135                           	opt stack 0
  1136                           
  1137                           ; 1 bytes @ 0x5
  1138  0000E3                     	ds	1
  1139  0000E4                     drawtext@cursor_x:
  1140                           	opt stack 0
  1141                           
  1142                           ; 1 bytes @ 0x6
  1143  0000E4                     	ds	1
  1144                           tblptru	equ	0xFF8
  1145                           tblptrh	equ	0xFF7
  1146                           tblptrl	equ	0xFF6
  1147                           tablat	equ	0xFF5
  1148                           postinc0	equ	0xFEE
  1149                           wreg	equ	0xFE8
  1150                           postdec1	equ	0xFE5
  1151                           fsr1l	equ	0xFE1
  1152                           
  1153                           	psect	cstackCOMRAM
  1154  000001                     __pcstackCOMRAM:
  1155                           	opt stack 0
  1156  000001                     ??_INT0_isr:
  1157  000001                     
  1158                           ; 0 bytes @ 0x0
  1159  000001                     	ds	2
  1160  000003                     ??_chkisr:
  1161                           
  1162                           ; 0 bytes @ 0x2
  1163  000003                     	ds	14
  1164  000011                     ??_isdigit:
  1165  000011                     ?_strlen:
  1166                           	opt stack 0
  1167  000011                     ?___wmul:
  1168                           	opt stack 0
  1169  000011                     ?___lldiv:
  1170                           	opt stack 0
  1171  000011                     spiwrite@x:
  1172                           	opt stack 0
  1173  000011                     putch@c:
  1174                           	opt stack 0
  1175  000011                     OpenUSART@spbrg:
  1176                           	opt stack 0
  1177  000011                     ___wmul@multiplier:
  1178                           	opt stack 0
  1179  000011                     strcpy@to:
  1180                           	opt stack 0
  1181  000011                     strlen@s:
  1182                           	opt stack 0
  1183  000011                     ___lldiv@dividend:
  1184                           	opt stack 0
  1185                           
  1186                           ; 4 bytes @ 0x10
  1187  000011                     	ds	1
  1188  000012                     spiwrite@spidata:
  1189                           	opt stack 0
  1190  000012                     _isdigit$1637:
  1191                           	opt stack 0
  1192                           
  1193                           ; 1 bytes @ 0x11
  1194  000012                     	ds	1
  1195  000013                     ??_strlen:
  1196  000013                     write_command@cmd_:
  1197                           	opt stack 0
  1198  000013                     write_data@data_:
  1199                           	opt stack 0
  1200  000013                     OpenUSART@config:
  1201                           	opt stack 0
  1202  000013                     isdigit@c:
  1203                           	opt stack 0
  1204  000013                     ___wmul@multiplicand:
  1205                           	opt stack 0
  1206  000013                     strcpy@from:
  1207                           	opt stack 0
  1208                           
  1209                           ; 2 bytes @ 0x12
  1210  000013                     	ds	1
  1211  000014                     setAddrWindow@y0:
  1212                           	opt stack 0
  1213                           
  1214                           ; 1 bytes @ 0x13
  1215  000014                     	ds	1
  1216  000015                     setAddrWindow@x1:
  1217                           	opt stack 0
  1218  000015                     ___wmul@product:
  1219                           	opt stack 0
  1220  000015                     strcpy@cp:
  1221                           	opt stack 0
  1222  000015                     strlen@cp:
  1223                           	opt stack 0
  1224  000015                     ___lldiv@divisor:
  1225                           	opt stack 0
  1226                           
  1227                           ; 4 bytes @ 0x14
  1228  000015                     	ds	1
  1229  000016                     setAddrWindow@y1:
  1230                           	opt stack 0
  1231                           
  1232                           ; 1 bytes @ 0x15
  1233  000016                     	ds	1
  1234  000017                     setAddrWindow@x0:
  1235                           	opt stack 0
  1236  000017                     delay_ms@ms:
  1237                           	opt stack 0
  1238                           
  1239                           ; 2 bytes @ 0x16
  1240  000017                     	ds	1
  1241  000018                     drawPixel@y:
  1242                           	opt stack 0
  1243  000018                     drawFastVLine@y:
  1244                           	opt stack 0
  1245  000018                     fillRectangle@y:
  1246                           	opt stack 0
  1247                           
  1248                           ; 1 bytes @ 0x17
  1249  000018                     	ds	1
  1250  000019                     ??_delay_ms:
  1251  000019                     drawFastVLine@h:
  1252                           	opt stack 0
  1253  000019                     fillRectangle@w:
  1254                           	opt stack 0
  1255  000019                     drawPixel@color:
  1256                           	opt stack 0
  1257  000019                     ___lldiv@quotient:
  1258                           	opt stack 0
  1259                           
  1260                           ; 4 bytes @ 0x18
  1261  000019                     	ds	1
  1262  00001A                     fillRectangle@h:
  1263                           	opt stack 0
  1264  00001A                     drawFastVLine@color:
  1265                           	opt stack 0
  1266                           
  1267                           ; 2 bytes @ 0x19
  1268  00001A                     	ds	1
  1269  00001B                     drawPixel@x:
  1270                           	opt stack 0
  1271  00001B                     delay_ms@count:
  1272                           	opt stack 0
  1273  00001B                     fillRectangle@color:
  1274                           	opt stack 0
  1275                           
  1276                           ; 2 bytes @ 0x1A
  1277  00001B                     	ds	1
  1278  00001C                     ??_drawFastVLine:
  1279  00001C                     drawCircle@x0:
  1280                           	opt stack 0
  1281                           
  1282                           ; 2 bytes @ 0x1B
  1283  00001C                     	ds	1
  1284  00001D                     ??_fillRectangle:
  1285  00001D                     ___lldiv@counter:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x1C
  1289  00001D                     	ds	1
  1290  00001E                     ?_printf:
  1291                           	opt stack 0
  1292  00001E                     drawCircle@y0:
  1293                           	opt stack 0
  1294  00001E                     printf@f:
  1295                           	opt stack 0
  1296                           
  1297                           ; 2 bytes @ 0x1D
  1298  00001E                     	ds	2
  1299  000020                     drawFastVLine@hi:
  1300                           	opt stack 0
  1301  000020                     drawCircle@r:
  1302                           	opt stack 0
  1303                           
  1304                           ; 2 bytes @ 0x1F
  1305  000020                     	ds	1
  1306  000021                     drawFastVLine@lo:
  1307                           	opt stack 0
  1308  000021                     fillRectangle@hi:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x20
  1312  000021                     	ds	1
  1313  000022                     drawFastVLine@x:
  1314                           	opt stack 0
  1315  000022                     fillRectangle@lo:
  1316                           	opt stack 0
  1317  000022                     drawCircle@color:
  1318                           	opt stack 0
  1319                           
  1320                           ; 2 bytes @ 0x21
  1321  000022                     	ds	1
  1322  000023                     fillRect@y:
  1323                           	opt stack 0
  1324  000023                     fillRectangle@x:
  1325                           	opt stack 0
  1326  000023                     fillCircleHelper@x0:
  1327                           	opt stack 0
  1328                           
  1329                           ; 2 bytes @ 0x22
  1330  000023                     	ds	1
  1331  000024                     ??_drawCircle:
  1332  000024                     fillRect@w:
  1333                           	opt stack 0
  1334  000024                     fillScreen@color:
  1335                           	opt stack 0
  1336                           
  1337                           ; 2 bytes @ 0x23
  1338  000024                     	ds	1
  1339  000025                     fillRect@h:
  1340                           	opt stack 0
  1341  000025                     fillCircleHelper@y0:
  1342                           	opt stack 0
  1343                           
  1344                           ; 2 bytes @ 0x24
  1345  000025                     	ds	1
  1346  000026                     ??_printf:
  1347  000026                     fillRect@color:
  1348                           	opt stack 0
  1349  000026                     drawCircle@ddF_x:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0x25
  1353  000026                     	ds	1
  1354  000027                     fillCircleHelper@r:
  1355                           	opt stack 0
  1356                           
  1357                           ; 2 bytes @ 0x26
  1358  000027                     	ds	1
  1359  000028                     ??_fillRect:
  1360  000028                     drawCircle@ddF_y:
  1361                           	opt stack 0
  1362                           
  1363                           ; 2 bytes @ 0x27
  1364  000028                     	ds	1
  1365  000029                     fillCircleHelper@cornername:
  1366                           	opt stack 0
  1367                           
  1368                           ; 2 bytes @ 0x28
  1369  000029                     	ds	1
  1370  00002A                     printf@idx:
  1371                           	opt stack 0
  1372  00002A                     drawCircle@f:
  1373                           	opt stack 0
  1374                           
  1375                           ; 2 bytes @ 0x29
  1376  00002A                     	ds	1
  1377  00002B                     fillRect@x:
  1378                           	opt stack 0
  1379  00002B                     fillCircleHelper@delta:
  1380                           	opt stack 0
  1381  00002B                     printf@prec:
  1382                           	opt stack 0
  1383                           
  1384                           ; 2 bytes @ 0x2A
  1385  00002B                     	ds	1
  1386  00002C                     fillRect@i:
  1387                           	opt stack 0
  1388  00002C                     drawCircle@x:
  1389                           	opt stack 0
  1390                           
  1391                           ; 2 bytes @ 0x2B
  1392  00002C                     	ds	1
  1393  00002D                     fillCircleHelper@color:
  1394                           	opt stack 0
  1395  00002D                     printf@val:
  1396                           	opt stack 0
  1397                           
  1398                           ; 4 bytes @ 0x2C
  1399  00002D                     	ds	1
  1400  00002E                     drawChar@y:
  1401                           	opt stack 0
  1402  00002E                     drawCircle@y:
  1403                           	opt stack 0
  1404                           
  1405                           ; 2 bytes @ 0x2D
  1406  00002E                     	ds	1
  1407  00002F                     ??_fillCircleHelper:
  1408  00002F                     drawChar@c:
  1409                           	opt stack 0
  1410                           
  1411                           ; 1 bytes @ 0x2E
  1412  00002F                     	ds	1
  1413  000030                     drawChar@color:
  1414                           	opt stack 0
  1415                           
  1416                           ; 2 bytes @ 0x2F
  1417  000030                     	ds	1
  1418  000031                     fillCircleHelper@ddF_x:
  1419                           	opt stack 0
  1420  000031                     printf@ap:
  1421                           	opt stack 0
  1422                           
  1423                           ; 2 bytes @ 0x30
  1424  000031                     	ds	1
  1425  000032                     drawChar@bg:
  1426                           	opt stack 0
  1427                           
  1428                           ; 2 bytes @ 0x31
  1429  000032                     	ds	1
  1430  000033                     printf@flag:
  1431                           	opt stack 0
  1432  000033                     fillCircleHelper@ddF_y:
  1433                           	opt stack 0
  1434                           
  1435                           ; 2 bytes @ 0x32
  1436  000033                     	ds	1
  1437  000034                     drawChar@size:
  1438                           	opt stack 0
  1439  000034                     printf@width:
  1440                           	opt stack 0
  1441                           
  1442                           ; 2 bytes @ 0x33
  1443  000034                     	ds	1
  1444  000035                     drawChar@line:
  1445                           	opt stack 0
  1446  000035                     fillCircleHelper@f:
  1447                           	opt stack 0
  1448                           
  1449                           ; 2 bytes @ 0x34
  1450  000035                     	ds	1
  1451  000036                     drawChar@x:
  1452                           	opt stack 0
  1453  000036                     printf@c:
  1454                           	opt stack 0
  1455                           
  1456                           ; 1 bytes @ 0x35
  1457  000036                     	ds	1
  1458  000037                     drawChar@j:
  1459                           	opt stack 0
  1460  000037                     fillCircleHelper@x:
  1461                           	opt stack 0
  1462                           
  1463                           ; 2 bytes @ 0x36
  1464  000037                     	ds	1
  1465  000038                     drawChar@i:
  1466                           	opt stack 0
  1467                           
  1468                           ; 1 bytes @ 0x37
  1469  000038                     	ds	1
  1470  000039                     drawtext@y:
  1471                           	opt stack 0
  1472  000039                     fillCircleHelper@y:
  1473                           	opt stack 0
  1474                           
  1475                           ; 2 bytes @ 0x38
  1476  000039                     	ds	1
  1477  00003A                     drawtext@_text:
  1478                           	opt stack 0
  1479                           
  1480                           ; 2 bytes @ 0x39
  1481  00003A                     	ds	1
  1482  00003B                     fillCircle@x0:
  1483                           	opt stack 0
  1484                           
  1485                           ; 2 bytes @ 0x3A
  1486  00003B                     	ds	1
  1487  00003C                     drawtext@color:
  1488                           	opt stack 0
  1489                           
  1490                           ; 2 bytes @ 0x3B
  1491  00003C                     	ds	1
  1492  00003D                     fillCircle@y0:
  1493                           	opt stack 0
  1494                           
  1495                           ; 2 bytes @ 0x3C
  1496  00003D                     	ds	1
  1497  00003E                     drawtext@bg:
  1498                           	opt stack 0
  1499                           
  1500                           ; 2 bytes @ 0x3D
  1501  00003E                     	ds	1
  1502  00003F                     fillCircle@r:
  1503                           	opt stack 0
  1504                           
  1505                           ; 2 bytes @ 0x3E
  1506  00003F                     	ds	1
  1507  000040                     drawtext@size:
  1508                           	opt stack 0
  1509                           
  1510                           ; 1 bytes @ 0x3F
  1511  000040                     	ds	1
  1512  000041                     ??_drawtext:
  1513  000041                     fillCircle@color:
  1514                           	opt stack 0
  1515                           
  1516                           ; 2 bytes @ 0x40
  1517  000041                     	ds	2
  1518  000043                     ??_main:
  1519                           
  1520                           ; 0 bytes @ 0x42
  1521  000043                     	ds	1
  1522  000044                     main@i:
  1523                           	opt stack 0
  1524                           
  1525                           ; 2 bytes @ 0x43
  1526  000044                     	ds	2
  1527  000046                     main@found:
  1528                           	opt stack 0
  1529                           
  1530                           ; 1 bytes @ 0x45
  1531  000046                     	ds	1
  1532                           tblptru	equ	0xFF8
  1533                           tblptrh	equ	0xFF7
  1534                           tblptrl	equ	0xFF6
  1535                           tablat	equ	0xFF5
  1536                           postinc0	equ	0xFEE
  1537                           wreg	equ	0xFE8
  1538                           postdec1	equ	0xFE5
  1539                           fsr1l	equ	0xFE1
  1540                           
  1541 ;;
  1542 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1543 ;;
  1544 ;; *************** function _main *****************
  1545 ;; Defined at:
  1546 ;;		line 176 in file "Lab10p2.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  i               2   67[COMRAM] int 
  1551 ;;  found           1   69[COMRAM] unsigned char 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;		None               void
  1554 ;; Registers used:
  1555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;Total ram usage:        4 bytes
  1566 ;; Hardware stack levels required when called:   11
  1567 ;; This function calls:
  1568 ;;		_Activate_Buzzer
  1569 ;;		_Deactivate_Buzzer
  1570 ;;		_Initialize_Screen
  1571 ;;		_Wait_Half_Second
  1572 ;;		_drawCircle
  1573 ;;		_drawtext
  1574 ;;		_fillCircle
  1575 ;;		_init_UART
  1576 ;;		_printf
  1577 ;; This function is called by:
  1578 ;;		Startup code after reset
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text0
  1583  00046C                     __ptext0:
  1584                           	opt stack 0
  1585  00046C                     _main:
  1586                           	opt stack 20
  1587                           
  1588                           ;Lab10p2.c: 178: init_UART();
  1589                           
  1590                           ;incstack = 0
  1591  00046C  EC65  F00A         	call	_init_UART	;wreg free
  1592                           
  1593                           ;Lab10p2.c: 179: OSCCON = 0x70;
  1594  000470  0E70               	movlw	112
  1595  000472  6ED3               	movwf	4051,c	;volatile
  1596                           
  1597                           ;Lab10p2.c: 180: nRBPU = 0;
  1598  000474  9EF1               	bcf	intcon2,7,c	;volatile
  1599                           
  1600                           ;Lab10p2.c: 181: TRISA = 0x00;
  1601  000476  0E00               	movlw	0
  1602  000478  6E92               	movwf	3986,c	;volatile
  1603                           
  1604                           ;Lab10p2.c: 182: TRISB = 0x01;
  1605  00047A  0E01               	movlw	1
  1606  00047C  6E93               	movwf	3987,c	;volatile
  1607                           
  1608                           ;Lab10p2.c: 183: TRISC = 0x00;
  1609  00047E  0E00               	movlw	0
  1610  000480  6E94               	movwf	3988,c	;volatile
  1611                           
  1612                           ;Lab10p2.c: 184: TRISD = 0x00;
  1613  000482  0E00               	movlw	0
  1614  000484  6E95               	movwf	3989,c	;volatile
  1615                           
  1616                           ;Lab10p2.c: 185: TRISE = 0x00;
  1617  000486  0E00               	movlw	0
  1618  000488  6E96               	movwf	3990,c	;volatile
  1619                           
  1620                           ;Lab10p2.c: 186: ADCON1 = 0x0F;
  1621  00048A  0E0F               	movlw	15
  1622  00048C  6EC1               	movwf	4033,c	;volatile
  1623                           
  1624                           ;Lab10p2.c: 187: Initialize_Screen();
  1625  00048E  ECF5  F006         	call	_Initialize_Screen	;wreg free
  1626                           
  1627                           ;Lab10p2.c: 188: INTCONbits.INT0IF = 0;
  1628  000492  92F2               	bcf	intcon,1,c	;volatile
  1629                           
  1630                           ;Lab10p2.c: 189: INTCON2bits.INTEDG0 = 0;
  1631  000494  9CF1               	bcf	intcon2,6,c	;volatile
  1632                           
  1633                           ;Lab10p2.c: 190: INTCONbits.INT0IE = 1;
  1634  000496  88F2               	bsf	intcon,4,c	;volatile
  1635                           
  1636                           ;Lab10p2.c: 191: TMR1H = 0;
  1637  000498  0E00               	movlw	0
  1638  00049A  6ECF               	movwf	4047,c	;volatile
  1639                           
  1640                           ;Lab10p2.c: 192: TMR1L = 0;
  1641  00049C  0E00               	movlw	0
  1642  00049E  6ECE               	movwf	4046,c	;volatile
  1643                           
  1644                           ;Lab10p2.c: 193: PIR1bits.TMR1IF = 0;
  1645  0004A0  909E               	bcf	3998,0,c	;volatile
  1646                           
  1647                           ;Lab10p2.c: 194: PIE1bits.TMR1IE = 1;
  1648  0004A2  809D               	bsf	3997,0,c	;volatile
  1649                           
  1650                           ;Lab10p2.c: 195: INTCONbits.PEIE = 1;
  1651  0004A4  8CF2               	bsf	intcon,6,c	;volatile
  1652                           
  1653                           ;Lab10p2.c: 196: INTCONbits.GIE = 1;
  1654  0004A6  8EF2               	bsf	intcon,7,c	;volatile
  1655                           
  1656                           ;Lab10p2.c: 197: nec_ok = 0;
  1657  0004A8  0E00               	movlw	0
  1658  0004AA  6E66               	movwf	_nec_ok+1,c
  1659  0004AC  0E00               	movlw	0
  1660  0004AE  6E65               	movwf	_nec_ok,c
  1661                           
  1662                           ;Lab10p2.c: 198: Nec_code = 0x0;
  1663  0004B0  0E00               	movlw	0
  1664  0004B2  6E5D               	movwf	_Nec_code,c
  1665  0004B4  0E00               	movlw	0
  1666  0004B6  6E5E               	movwf	_Nec_code+1,c
  1667  0004B8  0E00               	movlw	0
  1668  0004BA  6E5F               	movwf	_Nec_code+2,c
  1669  0004BC  0E00               	movlw	0
  1670  0004BE  6E60               	movwf	_Nec_code+3,c
  1671  0004C0  D000               	goto	l4001
  1672  0004C2                     l4001:
  1673                           
  1674                           ;Lab10p2.c: 204: {
  1675                           ;Lab10p2.c: 205: if (nec_ok == 1)
  1676  0004C2  0465               	decf	_nec_ok,w,c
  1677  0004C4  1066               	iorwf	_nec_ok+1,w,c
  1678  0004C6  A4D8               	btfss	status,2,c
  1679  0004C8  D7FC               	goto	l4001
  1680                           
  1681                           ;Lab10p2.c: 206: {
  1682                           ;Lab10p2.c: 207: nec_ok = 0;
  1683  0004CA  0E00               	movlw	0
  1684  0004CC  6E66               	movwf	_nec_ok+1,c
  1685  0004CE  0E00               	movlw	0
  1686  0004D0  6E65               	movwf	_nec_ok,c
  1687                           
  1688                           ;Lab10p2.c: 209: Nec_code1 = (char) ((Nec_code >> 8));
  1689  0004D2  C05E  F069         	movff	_Nec_code+1,_Nec_code1
  1690                           
  1691                           ;Lab10p2.c: 210: printf ("NEC_Code = %08lx %x\r\n", Nec_code, Nec_code1);
  1692  0004D6  0EBA               	movlw	low STR_1
  1693  0004D8  6E1E               	movwf	printf@f,c
  1694  0004DA  0EFF               	movlw	high STR_1
  1695  0004DC  6E1F               	movwf	printf@f+1,c
  1696  0004DE  C05D  F020         	movff	_Nec_code,?_printf+2
  1697  0004E2  C05E  F021         	movff	_Nec_code+1,?_printf+3
  1698  0004E6  C05F  F022         	movff	_Nec_code+2,?_printf+4
  1699  0004EA  C060  F023         	movff	_Nec_code+3,?_printf+5
  1700  0004EE  C069  F024         	movff	_Nec_code1,?_printf+6
  1701  0004F2  6A25               	clrf	?_printf+7,c
  1702  0004F4  EC0E  F000         	call	_printf	;wreg free
  1703                           
  1704                           ;Lab10p2.c: 211: INTCONbits.INT0IE = 1;
  1705  0004F8  88F2               	bsf	intcon,4,c	;volatile
  1706                           
  1707                           ;Lab10p2.c: 212: INTCON2bits.INTEDG0 = 0;
  1708  0004FA  9CF1               	bcf	intcon2,6,c	;volatile
  1709                           
  1710                           ;Lab10p2.c: 214: char found = 0xff;
  1711  0004FC  6846               	setf	main@found,c
  1712                           
  1713                           ;Lab10p2.c: 216: for (int i = 0; i < 21; i++)
  1714  0004FE  0E00               	movlw	0
  1715  000500  6E45               	movwf	main@i+1,c
  1716  000502  0E00               	movlw	0
  1717  000504  6E44               	movwf	main@i,c
  1718  000506                     l4017:
  1719  000506  BE45               	btfsc	main@i+1,7,c
  1720  000508  D008               	goto	l4021
  1721  00050A  5045               	movf	main@i+1,w,c
  1722  00050C  E117               	bnz	l4029
  1723  00050E  0E15               	movlw	21
  1724  000510  5C44               	subwf	main@i,w,c
  1725  000512  B0D8               	btfsc	status,0,c
  1726  000514  D013               	goto	l4029
  1727  000516  D001               	goto	l4021
  1728  000518  D011               	goto	l4029
  1729  00051A                     l4021:
  1730                           
  1731                           ;Lab10p2.c: 217: {
  1732                           ;Lab10p2.c: 218: if (array1[i] == Nec_code1)
  1733  00051A  0E47               	movlw	low _array1
  1734  00051C  2444               	addwf	main@i,w,c
  1735  00051E  6ED9               	movwf	fsr2l,c
  1736  000520  0E00               	movlw	high _array1
  1737  000522  2045               	addwfc	main@i+1,w,c
  1738  000524  6EDA               	movwf	fsr2h,c
  1739  000526  5069               	movf	_Nec_code1,w,c
  1740  000528  18DE               	xorwf	postinc2,w,c
  1741  00052A  A4D8               	btfss	status,2,c
  1742  00052C  D003               	goto	l4025
  1743                           
  1744                           ;Lab10p2.c: 219: {
  1745                           ;Lab10p2.c: 220: found = i;
  1746  00052E  C044  F046         	movff	main@i,main@found
  1747                           
  1748                           ;Lab10p2.c: 221: break;
  1749  000532  D004               	goto	l4029
  1750  000534                     l4025:
  1751  000534  4A44               	infsnz	main@i,f,c
  1752  000536  2A45               	incf	main@i+1,f,c
  1753  000538  D7E6               	goto	l4017
  1754  00053A  D000               	goto	l4029
  1755  00053C                     l4029:
  1756                           
  1757                           ;Lab10p2.c: 222: }
  1758                           ;Lab10p2.c: 224: }
  1759                           ;Lab10p2.c: 226: if (found != 0xff)
  1760  00053C  2846               	incf	main@found,w,c
  1761  00053E  B4D8               	btfsc	status,2,c
  1762  000540  D7C0               	goto	l4001
  1763                           
  1764                           ;Lab10p2.c: 227: {
  1765                           ;Lab10p2.c: 229: PORTE = D2[found];
  1766  000542  5046               	movf	main@found,w,c
  1767  000544  0D01               	mullw	1
  1768  000546  0E95               	movlw	low _D2
  1769  000548  24F3               	addwf	prodl,w,c
  1770  00054A  6ED9               	movwf	fsr2l,c
  1771  00054C  0E00               	movlw	high _D2
  1772  00054E  20F4               	addwfc	prodh,w,c
  1773  000550  6EDA               	movwf	fsr2h,c
  1774  000552  50DF               	movf	indf2,w,c
  1775  000554  6E84               	movwf	3972,c	;volatile
  1776                           
  1777                           ;Lab10p2.c: 230: PORTD = D3[found] | D1[found];
  1778  000556  5046               	movf	main@found,w,c
  1779  000558  0D01               	mullw	1
  1780  00055A  0E80               	movlw	low _D1
  1781  00055C  24F3               	addwf	prodl,w,c
  1782  00055E  6ED9               	movwf	fsr2l,c
  1783  000560  0E00               	movlw	high _D1
  1784  000562  20F4               	addwfc	prodh,w,c
  1785  000564  6EDA               	movwf	fsr2h,c
  1786  000566  50DF               	movf	indf2,w,c
  1787  000568  6E43               	movwf	??_main& (0+255),c
  1788  00056A  5046               	movf	main@found,w,c
  1789  00056C  0D01               	mullw	1
  1790  00056E  0EAA               	movlw	low _D3
  1791  000570  24F3               	addwf	prodl,w,c
  1792  000572  6ED9               	movwf	fsr2l,c
  1793  000574  0E00               	movlw	high _D3
  1794  000576  20F4               	addwfc	prodh,w,c
  1795  000578  6EDA               	movwf	fsr2h,c
  1796  00057A  50DF               	movf	indf2,w,c
  1797  00057C  1043               	iorwf	??_main,w,c
  1798  00057E  6E83               	movwf	3971,c	;volatile
  1799                           
  1800                           ;Lab10p2.c: 235: fillCircle(60, 80, 20, color[found]);
  1801  000580  0E00               	movlw	0
  1802  000582  6E3C               	movwf	fillCircle@x0+1,c
  1803  000584  0E3C               	movlw	60
  1804  000586  6E3B               	movwf	fillCircle@x0,c
  1805  000588  0E00               	movlw	0
  1806  00058A  6E3E               	movwf	fillCircle@y0+1,c
  1807  00058C  0E50               	movlw	80
  1808  00058E  6E3D               	movwf	fillCircle@y0,c
  1809  000590  0E00               	movlw	0
  1810  000592  6E40               	movwf	fillCircle@r+1,c
  1811  000594  0E14               	movlw	20
  1812  000596  6E3F               	movwf	fillCircle@r,c
  1813  000598  5046               	movf	main@found,w,c
  1814  00059A  0D02               	mullw	2
  1815  00059C  0E00               	movlw	low _color
  1816  00059E  24F3               	addwf	prodl,w,c
  1817  0005A0  6ED9               	movwf	fsr2l,c
  1818  0005A2  0E01               	movlw	high _color
  1819  0005A4  20F4               	addwfc	prodh,w,c
  1820  0005A6  6EDA               	movwf	fsr2h,c
  1821  0005A8  CFDE F041          	movff	postinc2,fillCircle@color
  1822  0005AC  CFDD F042          	movff	postdec2,fillCircle@color+1
  1823  0005B0  ECBC  F008         	call	_fillCircle	;wreg free
  1824                           
  1825                           ;Lab10p2.c: 236: drawCircle(60, 80, 20, 0xFFFF);
  1826  0005B4  0E00               	movlw	0
  1827  0005B6  6E1D               	movwf	drawCircle@x0+1,c
  1828  0005B8  0E3C               	movlw	60
  1829  0005BA  6E1C               	movwf	drawCircle@x0,c
  1830  0005BC  0E00               	movlw	0
  1831  0005BE  6E1F               	movwf	drawCircle@y0+1,c
  1832  0005C0  0E50               	movlw	80
  1833  0005C2  6E1E               	movwf	drawCircle@y0,c
  1834  0005C4  0E00               	movlw	0
  1835  0005C6  6E21               	movwf	drawCircle@r+1,c
  1836  0005C8  0E14               	movlw	20
  1837  0005CA  6E20               	movwf	drawCircle@r,c
  1838  0005CC  0EFF               	movlw	255
  1839  0005CE  6E23               	movwf	drawCircle@color+1,c
  1840  0005D0  6822               	setf	drawCircle@color,c
  1841  0005D2  EC5F  F001         	call	_drawCircle	;wreg free
  1842                           
  1843                           ;Lab10p2.c: 237: drawtext(52, 77, txt1[found],
  1844                           ;Lab10p2.c: 238: 0xFFFF, 0x0000,1);
  1845  0005D6  0E4D               	movlw	77
  1846  0005D8  6E39               	movwf	drawtext@y,c
  1847  0005DA  5046               	movf	main@found,w,c
  1848  0005DC  0D04               	mullw	4
  1849  0005DE  0E2A               	movlw	low _txt1
  1850  0005E0  24F3               	addwf	prodl,w,c
  1851  0005E2  6E3A               	movwf	drawtext@_text,c
  1852  0005E4  0E01               	movlw	high _txt1
  1853  0005E6  20F4               	addwfc	prodh,w,c
  1854  0005E8  6E3B               	movwf	drawtext@_text+1,c
  1855  0005EA  0EFF               	movlw	255
  1856  0005EC  6E3D               	movwf	drawtext@color+1,c
  1857  0005EE  683C               	setf	drawtext@color,c
  1858  0005F0  0E00               	movlw	0
  1859  0005F2  6E3F               	movwf	drawtext@bg+1,c
  1860  0005F4  0E00               	movlw	0
  1861  0005F6  6E3E               	movwf	drawtext@bg,c
  1862  0005F8  0E01               	movlw	1
  1863  0005FA  6E40               	movwf	drawtext@size,c
  1864  0005FC  0E34               	movlw	52
  1865  0005FE  EC89  F005         	call	_drawtext
  1866                           
  1867                           ;Lab10p2.c: 240: Activate_Buzzer();
  1868  000602  EC5C  F00A         	call	_Activate_Buzzer	;wreg free
  1869                           
  1870                           ;Lab10p2.c: 241: Wait_Half_Second();
  1871  000606  EC31  F00A         	call	_Wait_Half_Second	;wreg free
  1872                           
  1873                           ;Lab10p2.c: 242: Deactivate_Buzzer();
  1874  00060A  EC8A  F00A         	call	_Deactivate_Buzzer	;wreg free
  1875  00060E  D759               	goto	l4001
  1876  000610  EF0C  F000         	goto	start
  1877  000614                     __end_of_main:
  1878                           	opt stack 0
  1879                           tblptru	equ	0xFF8
  1880                           tblptrh	equ	0xFF7
  1881                           tblptrl	equ	0xFF6
  1882                           tablat	equ	0xFF5
  1883                           prodh	equ	0xFF4
  1884                           prodl	equ	0xFF3
  1885                           intcon	equ	0xFF2
  1886                           intcon2	equ	0xFF1
  1887                           postinc0	equ	0xFEE
  1888                           wreg	equ	0xFE8
  1889                           postdec1	equ	0xFE5
  1890                           fsr1l	equ	0xFE1
  1891                           indf2	equ	0xFDF
  1892                           postinc2	equ	0xFDE
  1893                           postdec2	equ	0xFDD
  1894                           fsr2h	equ	0xFDA
  1895                           fsr2l	equ	0xFD9
  1896                           status	equ	0xFD8
  1897                           
  1898 ;; *************** function _printf *****************
  1899 ;; Defined at:
  1900 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  f               2   29[COMRAM] PTR const unsigned char 
  1903 ;;		 -> STR_1(22), 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  idx             1   41[COMRAM] unsigned char 
  1906 ;;  val             4   44[COMRAM] unsigned long 
  1907 ;;  tmpval          4    0        struct .
  1908 ;;  cp              3    0        PTR const unsigned char 
  1909 ;;  width           2   51[COMRAM] int 
  1910 ;;  ap              2   48[COMRAM] PTR void [1]
  1911 ;;		 -> ?_printf(2), 
  1912 ;;  prec            2   42[COMRAM] int 
  1913 ;;  len             2    0        unsigned int 
  1914 ;;  c               1   53[COMRAM] char 
  1915 ;;  flag            1   50[COMRAM] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  2   29[COMRAM] int 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1925 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;Total ram usage:       25 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    4
  1932 ;; This function calls:
  1933 ;;		___lldiv
  1934 ;;		___wmul
  1935 ;;		_isdigit
  1936 ;;		_putch
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text1
  1943  00001C                     __ptext1:
  1944                           	opt stack 0
  1945  00001C                     _printf:
  1946                           	opt stack 26
  1947                           
  1948                           ;doprnt.c: 466: va_list ap;
  1949                           ;doprnt.c: 499: signed char c;
  1950                           ;doprnt.c: 501: int width;
  1951                           ;doprnt.c: 504: int prec;
  1952                           ;doprnt.c: 508: unsigned char flag;
  1953                           ;doprnt.c: 523: union {
  1954                           ;doprnt.c: 524: unsigned long vd;
  1955                           ;doprnt.c: 525: double integ;
  1956                           ;doprnt.c: 526: } tmpval;
  1957                           ;doprnt.c: 528: unsigned long val;
  1958                           ;doprnt.c: 529: unsigned len;
  1959                           ;doprnt.c: 530: const char * cp;
  1960                           ;doprnt.c: 533: *ap = __va_start();
  1961                           
  1962                           ;incstack = 0
  1963  00001C  0E20               	movlw	low (?_printf+2)
  1964  00001E  6E31               	movwf	printf@ap,c
  1965  000020  0E00               	movlw	high (?_printf+2)
  1966  000022  6E32               	movwf	printf@ap+1,c
  1967                           
  1968                           ;doprnt.c: 536: while(c = *f++) {
  1969  000024  D13D               	goto	l3719
  1970  000026                     l3637:
  1971                           
  1972                           ;doprnt.c: 538: if(c != '%')
  1973  000026  0E25               	movlw	37
  1974  000028  1836               	xorwf	printf@c,w,c
  1975  00002A  B4D8               	btfsc	status,2,c
  1976  00002C  D004               	goto	l3641
  1977                           
  1978                           ;doprnt.c: 540: {
  1979                           ;doprnt.c: 541: (putch(c) );
  1980  00002E  5036               	movf	printf@c,w,c
  1981  000030  EC7D  F00A         	call	_putch
  1982                           
  1983                           ;doprnt.c: 542: continue;
  1984  000034  D135               	goto	l3719
  1985  000036                     l3641:
  1986                           
  1987                           ;doprnt.c: 543: }
  1988                           ;doprnt.c: 546: width = 0;
  1989  000036  0E00               	movlw	0
  1990  000038  6E35               	movwf	printf@width+1,c
  1991  00003A  0E00               	movlw	0
  1992  00003C  6E34               	movwf	printf@width,c
  1993                           
  1994                           ;doprnt.c: 548: flag = 0;
  1995  00003E  0E00               	movlw	0
  1996  000040  6E33               	movwf	printf@flag,c
  1997                           
  1998                           ;doprnt.c: 551: switch(*f) {
  1999                           
  2000                           ;doprnt.c: 550: for(;;) {
  2001  000042  D005               	goto	l3647
  2002  000044                     l3643:
  2003                           
  2004                           ;doprnt.c: 580: flag |= 0x04;
  2005  000044  8433               	bsf	printf@flag,2,c
  2006                           
  2007                           ;doprnt.c: 581: f++;
  2008  000046  4A1E               	infsnz	printf@f,f,c
  2009  000048  2A1F               	incf	printf@f+1,f,c
  2010                           
  2011                           ;doprnt.c: 582: continue;
  2012  00004A  D001               	goto	l3647
  2013                           
  2014                           ;doprnt.c: 584: }
  2015  00004C  D00B               	goto	l3649
  2016  00004E                     l3647:
  2017  00004E  C01E  FFF6         	movff	printf@f,tblptrl
  2018  000052  C01F  FFF7         	movff	printf@f+1,tblptrh
  2019  000056                     	if	0	;tblptru may be non-zero
  2020  000056                     	endif
  2021  000056                     	if	0	;tblptru may be non-zero
  2022  000056                     	endif
  2023  000056  0008               	tblrd		*
  2024  000058  50F5               	movf	tablat,w,c
  2025                           
  2026                           ; Switch size 1, requested type "space"
  2027                           ; Number of cases is 1, Range of values is 48 to 48
  2028                           ; switch strategies available:
  2029                           ; Name         Instructions Cycles
  2030                           ; simple_byte            4     3 (average)
  2031                           ;	Chosen strategy is simple_byte
  2032  00005A  0A30               	xorlw	48	; case 48
  2033  00005C  B4D8               	btfsc	status,2,c
  2034  00005E  D7F2               	goto	l3643
  2035                           
  2036                           ;doprnt.c: 585: break;
  2037  000060  D001               	goto	l3649
  2038                           
  2039                           ;doprnt.c: 586: }
  2040  000062  D7F5               	goto	l3647
  2041  000064                     l3649:
  2042                           
  2043                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2044  000064  C01E  FFF6         	movff	printf@f,tblptrl
  2045  000068  C01F  FFF7         	movff	printf@f+1,tblptrh
  2046  00006C                     	if	0	;tblptru may be non-zero
  2047  00006C                     	endif
  2048  00006C                     	if	0	;tblptru may be non-zero
  2049  00006C                     	endif
  2050  00006C  0008               	tblrd		*
  2051  00006E  50F5               	movf	tablat,w,c
  2052  000070  EC12  F00A         	call	_isdigit
  2053  000074  A0D8               	btfss	status,0,c
  2054  000076  D03B               	goto	l3665
  2055                           
  2056                           ;doprnt.c: 598: width = 0;
  2057  000078  0E00               	movlw	0
  2058  00007A  6E35               	movwf	printf@width+1,c
  2059  00007C  0E00               	movlw	0
  2060  00007E  6E34               	movwf	printf@width,c
  2061  000080  D000               	goto	l3653
  2062  000082                     l3653:
  2063                           
  2064                           ;doprnt.c: 600: width *= 10;
  2065  000082  C034  F011         	movff	printf@width,___wmul@multiplier
  2066  000086  C035  F012         	movff	printf@width+1,___wmul@multiplier+1
  2067  00008A  0E00               	movlw	0
  2068  00008C  6E14               	movwf	___wmul@multiplicand+1,c
  2069  00008E  0E0A               	movlw	10
  2070  000090  6E13               	movwf	___wmul@multiplicand,c
  2071  000092  ECFE  F009         	call	___wmul	;wreg free
  2072  000096  C011  F034         	movff	?___wmul,printf@width
  2073  00009A  C012  F035         	movff	?___wmul+1,printf@width+1
  2074                           
  2075                           ;doprnt.c: 601: width += *f++ - '0';
  2076  00009E  0ED0               	movlw	208
  2077  0000A0  6E26               	movwf	??_printf& (0+255),c
  2078  0000A2  0EFF               	movlw	255
  2079  0000A4  6E27               	movwf	(??_printf+1)& (0+255),c
  2080  0000A6  C01E  FFF6         	movff	printf@f,tblptrl
  2081  0000AA  C01F  FFF7         	movff	printf@f+1,tblptrh
  2082  0000AE                     	if	0	;tblptru may be non-zero
  2083  0000AE                     	endif
  2084  0000AE                     	if	0	;tblptru may be non-zero
  2085  0000AE                     	endif
  2086  0000AE  0008               	tblrd		*
  2087  0000B0  50F5               	movf	tablat,w,c
  2088  0000B2  6E28               	movwf	(??_printf+2)& (0+255),c
  2089  0000B4  6A29               	clrf	(??_printf+3)& (0+255),c
  2090  0000B6  5026               	movf	??_printf,w,c
  2091  0000B8  2628               	addwf	??_printf+2,f,c
  2092  0000BA  5027               	movf	??_printf+1,w,c
  2093  0000BC  2229               	addwfc	??_printf+3,f,c
  2094  0000BE  5028               	movf	??_printf+2,w,c
  2095  0000C0  2634               	addwf	printf@width,f,c
  2096  0000C2  5029               	movf	??_printf+3,w,c
  2097  0000C4  2235               	addwfc	printf@width+1,f,c
  2098  0000C6  4A1E               	infsnz	printf@f,f,c
  2099  0000C8  2A1F               	incf	printf@f+1,f,c
  2100                           
  2101                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2102  0000CA  C01E  FFF6         	movff	printf@f,tblptrl
  2103  0000CE  C01F  FFF7         	movff	printf@f+1,tblptrh
  2104  0000D2                     	if	0	;tblptru may be non-zero
  2105  0000D2                     	endif
  2106  0000D2                     	if	0	;tblptru may be non-zero
  2107  0000D2                     	endif
  2108  0000D2  0008               	tblrd		*
  2109  0000D4  50F5               	movf	tablat,w,c
  2110  0000D6  EC12  F00A         	call	_isdigit
  2111  0000DA  A0D8               	btfss	status,0,c
  2112  0000DC  D008               	goto	l3665
  2113  0000DE  D7D1               	goto	l3653
  2114                           
  2115                           ;doprnt.c: 635: switch(c = *f++) {
  2116                           
  2117                           ;doprnt.c: 608: }
  2118                           ;doprnt.c: 633: loop:
  2119  0000E0  D006               	goto	l3665
  2120                           
  2121                           ;doprnt.c: 638: goto alldone;
  2122                           
  2123                           ;doprnt.c: 637: case 0:
  2124  0000E2  D0EC               	goto	l453
  2125  0000E4                     l3661:
  2126                           
  2127                           ;doprnt.c: 643: flag |= 0x10;
  2128  0000E4  8833               	bsf	printf@flag,4,c
  2129                           
  2130                           ;doprnt.c: 644: goto loop;
  2131  0000E6  D003               	goto	l3665
  2132                           
  2133                           ;doprnt.c: 723: break;
  2134                           
  2135                           ;doprnt.c: 718: case 'x':
  2136  0000E8  D015               	goto	l432
  2137                           
  2138                           ;doprnt.c: 813: continue;
  2139                           
  2140                           ;doprnt.c: 802: default:
  2141  0000EA  D0DA               	goto	l3719
  2142                           
  2143                           ;doprnt.c: 822: }
  2144  0000EC  D013               	goto	l432
  2145  0000EE                     l3665:
  2146  0000EE  C01E  FFF6         	movff	printf@f,tblptrl
  2147  0000F2  C01F  FFF7         	movff	printf@f+1,tblptrh
  2148  0000F6  4A1E               	infsnz	printf@f,f,c
  2149  0000F8  2A1F               	incf	printf@f+1,f,c
  2150  0000FA                     	if	0	;tblptru may be non-zero
  2151  0000FA                     	endif
  2152  0000FA                     	if	0	;tblptru may be non-zero
  2153  0000FA                     	endif
  2154  0000FA  0008               	tblrd		*
  2155  0000FC  CFF5 F036          	movff	tablat,printf@c
  2156  000100  5036               	movf	printf@c,w,c
  2157                           
  2158                           ; Switch size 1, requested type "space"
  2159                           ; Number of cases is 3, Range of values is 0 to 120
  2160                           ; switch strategies available:
  2161                           ; Name         Instructions Cycles
  2162                           ; simple_byte           10     6 (average)
  2163                           ;	Chosen strategy is simple_byte
  2164  000102  0A00               	xorlw	0	; case 0
  2165  000104  B4D8               	btfsc	status,2,c
  2166  000106  D0DA               	goto	l453
  2167  000108  0A6C               	xorlw	108	; case 108
  2168  00010A  B4D8               	btfsc	status,2,c
  2169  00010C  D7EB               	goto	l3661
  2170  00010E  0A14               	xorlw	20	; case 120
  2171  000110  A4D8               	btfss	status,2,c
  2172  000112  D0C6               	goto	l3719
  2173  000114                     l432:
  2174                           
  2175                           ;doprnt.c: 1273: {
  2176                           ;doprnt.c: 1281: if(flag & 0x10)
  2177  000114  A833               	btfss	printf@flag,4,c
  2178  000116  D00E               	goto	l3671
  2179                           
  2180                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  2181  000118  C031  FFD9         	movff	printf@ap,fsr2l
  2182  00011C  C032  FFDA         	movff	printf@ap+1,fsr2h
  2183  000120  CFDE F02D          	movff	postinc2,printf@val
  2184  000124  CFDE F02E          	movff	postinc2,printf@val+1
  2185  000128  CFDE F02F          	movff	postinc2,printf@val+2
  2186  00012C  CFDE F030          	movff	postinc2,printf@val+3
  2187  000130  0E04               	movlw	4
  2188  000132  D00F               	goto	L1
  2189  000134                     l3671:
  2190                           
  2191                           ;doprnt.c: 1283: else
  2192                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2193  000134  C031  FFD9         	movff	printf@ap,fsr2l
  2194  000138  C032  FFDA         	movff	printf@ap+1,fsr2h
  2195  00013C  CFDE F026          	movff	postinc2,??_printf
  2196  000140  CFDD F027          	movff	postdec2,??_printf+1
  2197  000144  C026  F02D         	movff	??_printf,printf@val
  2198  000148  C027  F02E         	movff	??_printf+1,printf@val+1
  2199  00014C  6A2F               	clrf	printf@val+2,c
  2200  00014E  6A30               	clrf	printf@val+3,c
  2201  000150  0E02               	movlw	2
  2202  000152                     L1:
  2203  000152  2631               	addwf	printf@ap,f,c
  2204  000154  0E00               	movlw	0
  2205  000156  2232               	addwfc	printf@ap+1,f,c
  2206  000158  D000               	goto	l3675
  2207  00015A                     l3675:
  2208                           
  2209                           ;doprnt.c: 1287: }
  2210                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2211  00015A  0E01               	movlw	1
  2212  00015C  6E36               	movwf	printf@c,c
  2213  00015E                     l3677:
  2214  00015E  0E08               	movlw	8
  2215  000160  1836               	xorwf	printf@c,w,c
  2216  000162  B4D8               	btfsc	status,2,c
  2217  000164  D01C               	goto	l3689
  2218  000166  D001               	goto	l3681
  2219  000168  D01A               	goto	l3689
  2220  00016A                     l3681:
  2221                           
  2222                           ;doprnt.c: 1317: if(val < hexpowers[c])
  2223  00016A  5036               	movf	printf@c,w,c
  2224  00016C  0D04               	mullw	4
  2225  00016E  0E9A               	movlw	low _hexpowers
  2226  000170  24F3               	addwf	prodl,w,c
  2227  000172  6EF6               	movwf	tblptrl,c
  2228  000174  0EFF               	movlw	high _hexpowers
  2229  000176  20F4               	addwfc	prodh,w,c
  2230  000178  6EF7               	movwf	tblptrh,c
  2231  00017A                     	if	0	;There are less than 3 active tblptr bytes
  2232  00017A                     	endif
  2233  00017A  0009               	tblrd		*+
  2234  00017C  50F5               	movf	tablat,w,c
  2235  00017E  5C2D               	subwf	printf@val,w,c
  2236  000180  0009               	tblrd		*+
  2237  000182  50F5               	movf	tablat,w,c
  2238  000184  582E               	subwfb	printf@val+1,w,c
  2239  000186  0009               	tblrd		*+
  2240  000188  50F5               	movf	tablat,w,c
  2241  00018A  582F               	subwfb	printf@val+2,w,c
  2242  00018C  0009               	tblrd		*+
  2243  00018E  50F5               	movf	tablat,w,c
  2244  000190  5830               	subwfb	printf@val+3,w,c
  2245  000192  A0D8               	btfss	status,0,c
  2246  000194  D004               	goto	l3689
  2247  000196  D001               	goto	l3685
  2248                           
  2249                           ;doprnt.c: 1318: break;
  2250  000198  D002               	goto	l3689
  2251  00019A                     l3685:
  2252  00019A  2A36               	incf	printf@c,f,c
  2253  00019C  D7E0               	goto	l3677
  2254  00019E                     l3689:
  2255                           
  2256                           ;doprnt.c: 1381: if(width > c)
  2257  00019E  0E80               	movlw	128
  2258  0001A0  BE36               	btfsc	printf@c,7,c
  2259  0001A2  0E7F               	movlw	127
  2260  0001A4  6E26               	movwf	??_printf& (0+255),c
  2261  0001A6  5034               	movf	printf@width,w,c
  2262  0001A8  5C36               	subwf	printf@c,w,c
  2263  0001AA  5035               	movf	printf@width+1,w,c
  2264  0001AC  0A80               	xorlw	128
  2265  0001AE  5826               	subwfb	??_printf& (0+255),w,c
  2266  0001B0  B0D8               	btfsc	status,0,c
  2267  0001B2  D007               	goto	l3693
  2268                           
  2269                           ;doprnt.c: 1382: width -= c;
  2270  0001B4  5036               	movf	printf@c,w,c
  2271  0001B6  5E34               	subwf	printf@width,f,c
  2272  0001B8  0E00               	movlw	0
  2273  0001BA  BE36               	btfsc	printf@c,7,c
  2274  0001BC  0EFF               	movlw	255
  2275  0001BE  5A35               	subwfb	printf@width+1,f,c
  2276  0001C0  D005               	goto	l3695
  2277  0001C2                     l3693:
  2278                           
  2279                           ;doprnt.c: 1383: else
  2280                           ;doprnt.c: 1384: width = 0;
  2281  0001C2  0E00               	movlw	0
  2282  0001C4  6E35               	movwf	printf@width+1,c
  2283  0001C6  0E00               	movlw	0
  2284  0001C8  6E34               	movwf	printf@width,c
  2285  0001CA  D000               	goto	l3695
  2286  0001CC                     l3695:
  2287                           
  2288                           ;doprnt.c: 1387: if(flag & 0x04) {
  2289  0001CC  A433               	btfss	printf@flag,2,c
  2290  0001CE  D010               	goto	l3703
  2291                           
  2292                           ;doprnt.c: 1415: if(width)
  2293  0001D0  5034               	movf	printf@width,w,c
  2294  0001D2  1035               	iorwf	printf@width+1,w,c
  2295  0001D4  B4D8               	btfsc	status,2,c
  2296  0001D6  D01C               	goto	l3709
  2297  0001D8                     l3699:
  2298                           
  2299                           ;doprnt.c: 1417: (putch('0') );
  2300  0001D8  0E30               	movlw	48
  2301  0001DA  EC7D  F00A         	call	_putch
  2302                           
  2303                           ;doprnt.c: 1418: while(--width);
  2304  0001DE  0634               	decf	printf@width,f,c
  2305  0001E0  A0D8               	btfss	status,0,c
  2306  0001E2  0635               	decf	printf@width+1,f,c
  2307  0001E4  5034               	movf	printf@width,w,c
  2308  0001E6  1035               	iorwf	printf@width+1,w,c
  2309  0001E8  B4D8               	btfsc	status,2,c
  2310  0001EA  D012               	goto	l3709
  2311  0001EC  D7F5               	goto	l3699
  2312                           
  2313                           ;doprnt.c: 1420: } else
  2314  0001EE  D010               	goto	l3709
  2315  0001F0                     l3703:
  2316                           
  2317                           ;doprnt.c: 1422: {
  2318                           ;doprnt.c: 1424: if(width
  2319                           ;doprnt.c: 1428: )
  2320  0001F0  5034               	movf	printf@width,w,c
  2321  0001F2  1035               	iorwf	printf@width+1,w,c
  2322  0001F4  B4D8               	btfsc	status,2,c
  2323  0001F6  D00C               	goto	l3709
  2324  0001F8                     l3705:
  2325                           
  2326                           ;doprnt.c: 1430: (putch(' ') );
  2327  0001F8  0E20               	movlw	32
  2328  0001FA  EC7D  F00A         	call	_putch
  2329                           
  2330                           ;doprnt.c: 1431: while(--width);
  2331  0001FE  0634               	decf	printf@width,f,c
  2332  000200  A0D8               	btfss	status,0,c
  2333  000202  0635               	decf	printf@width+1,f,c
  2334  000204  5034               	movf	printf@width,w,c
  2335  000206  1035               	iorwf	printf@width+1,w,c
  2336  000208  B4D8               	btfsc	status,2,c
  2337  00020A  D002               	goto	l3709
  2338  00020C  D7F5               	goto	l3705
  2339  00020E  D000               	goto	l3709
  2340  000210                     l3709:
  2341                           
  2342                           ;doprnt.c: 1469: }
  2343                           ;doprnt.c: 1472: prec = c;
  2344  000210  5036               	movf	printf@c,w,c
  2345  000212  6E2B               	movwf	printf@prec,c
  2346  000214  6A2C               	clrf	printf@prec+1,c
  2347  000216  BE2B               	btfsc	printf@prec,7,c
  2348  000218  062C               	decf	printf@prec+1,f,c
  2349                           
  2350                           ;doprnt.c: 1474: while(prec--) {
  2351  00021A  D038               	goto	l3717
  2352  00021C                     l3711:
  2353                           
  2354                           ;doprnt.c: 1478: {
  2355                           ;doprnt.c: 1499: {
  2356                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2357  00021C  C02D  F011         	movff	printf@val,___lldiv@dividend
  2358  000220  C02E  F012         	movff	printf@val+1,___lldiv@dividend+1
  2359  000224  C02F  F013         	movff	printf@val+2,___lldiv@dividend+2
  2360  000228  C030  F014         	movff	printf@val+3,___lldiv@dividend+3
  2361  00022C  C02B  F026         	movff	printf@prec,??_printf
  2362  000230  C02C  F027         	movff	printf@prec+1,??_printf+1
  2363  000234  90D8               	bcf	status,0,c
  2364  000236  3626               	rlcf	??_printf,f,c
  2365  000238  3627               	rlcf	??_printf+1,f,c
  2366  00023A  90D8               	bcf	status,0,c
  2367  00023C  3626               	rlcf	??_printf,f,c
  2368  00023E  3627               	rlcf	??_printf+1,f,c
  2369  000240  0E9A               	movlw	low _hexpowers
  2370  000242  2426               	addwf	??_printf,w,c
  2371  000244  6EF6               	movwf	tblptrl,c
  2372  000246  0EFF               	movlw	high _hexpowers
  2373  000248  2027               	addwfc	??_printf+1,w,c
  2374  00024A  6EF7               	movwf	tblptrh,c
  2375  00024C                     	if	0	;There are less than 3 active tblptr bytes
  2376  00024C                     	endif
  2377  00024C  0009               	tblrd		*+
  2378  00024E  CFF5 F015          	movff	tablat,___lldiv@divisor
  2379  000252  0009               	tblrd		*+
  2380  000254  CFF5 F016          	movff	tablat,___lldiv@divisor+1
  2381  000258  0009               	tblrd		*+
  2382  00025A  CFF5 F017          	movff	tablat,___lldiv@divisor+2
  2383  00025E  000A               	tblrd		*-
  2384  000260  CFF5 F018          	movff	tablat,___lldiv@divisor+3
  2385  000264  EC3C  F007         	call	___lldiv	;wreg free
  2386  000268  5011               	movf	?___lldiv,w,c
  2387  00026A  0B0F               	andlw	15
  2388  00026C  6E2A               	movwf	printf@idx,c
  2389                           
  2390                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  2391  00026E  502A               	movf	printf@idx,w,c
  2392  000270  0D01               	mullw	1
  2393  000272  0EE6               	movlw	low STR_4
  2394  000274  24F3               	addwf	prodl,w,c
  2395  000276  6EF6               	movwf	tblptrl,c
  2396  000278  0EFF               	movlw	high STR_4
  2397  00027A  20F4               	addwfc	prodh,w,c
  2398  00027C  6EF7               	movwf	tblptrh,c
  2399  00027E                     	if	0	;There are less than 3 active tblptr bytes
  2400  00027E                     	endif
  2401  00027E  0008               	tblrd		*
  2402  000280  CFF5 F036          	movff	tablat,printf@c
  2403                           
  2404                           ;doprnt.c: 1508: }
  2405                           ;doprnt.c: 1523: }
  2406                           ;doprnt.c: 1524: (putch(c) );
  2407  000284  5036               	movf	printf@c,w,c
  2408  000286  EC7D  F00A         	call	_putch
  2409  00028A  D000               	goto	l3717
  2410  00028C                     l3717:
  2411  00028C  062B               	decf	printf@prec,f,c
  2412  00028E  A0D8               	btfss	status,0,c
  2413  000290  062C               	decf	printf@prec+1,f,c
  2414  000292  282B               	incf	printf@prec,w,c
  2415  000294  E1C3               	bnz	l3711
  2416  000296  282C               	incf	printf@prec+1,w,c
  2417  000298  B4D8               	btfsc	status,2,c
  2418  00029A  D002               	goto	l3719
  2419  00029C  D7BF               	goto	l3711
  2420  00029E  D000               	goto	l3719
  2421  0002A0                     l3719:
  2422  0002A0  C01E  FFF6         	movff	printf@f,tblptrl
  2423  0002A4  C01F  FFF7         	movff	printf@f+1,tblptrh
  2424  0002A8  4A1E               	infsnz	printf@f,f,c
  2425  0002AA  2A1F               	incf	printf@f+1,f,c
  2426  0002AC                     	if	0	;tblptru may be non-zero
  2427  0002AC                     	endif
  2428  0002AC                     	if	0	;tblptru may be non-zero
  2429  0002AC                     	endif
  2430  0002AC  0008               	tblrd		*
  2431  0002AE  CFF5 F036          	movff	tablat,printf@c
  2432  0002B2  5036               	movf	printf@c,w,c
  2433  0002B4  B4D8               	btfsc	status,2,c
  2434  0002B6  D002               	goto	l453
  2435  0002B8  D6B6               	goto	l3637
  2436  0002BA  D000               	goto	l453
  2437  0002BC                     l453:
  2438  0002BC  0012               	return		;funcret
  2439  0002BE                     __end_of_printf:
  2440                           	opt stack 0
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           prodh	equ	0xFF4
  2446                           prodl	equ	0xFF3
  2447                           intcon	equ	0xFF2
  2448                           intcon2	equ	0xFF1
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           postdec1	equ	0xFE5
  2452                           fsr1l	equ	0xFE1
  2453                           indf2	equ	0xFDF
  2454                           postinc2	equ	0xFDE
  2455                           postdec2	equ	0xFDD
  2456                           fsr2h	equ	0xFDA
  2457                           fsr2l	equ	0xFD9
  2458                           status	equ	0xFD8
  2459                           
  2460 ;; *************** function _putch *****************
  2461 ;; Defined at:
  2462 ;;		line 67 in file "Lab10p2.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  c               1    wreg     unsigned char 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  c               1   16[COMRAM] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;		None               void
  2469 ;; Registers used:
  2470 ;;		wreg
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;Total ram usage:        1 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    3
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_printf
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text2
  2491  0014FA                     __ptext2:
  2492                           	opt stack 0
  2493  0014FA                     _putch:
  2494                           	opt stack 26
  2495                           
  2496                           ;incstack = 0
  2497                           ;putch@c stored from wreg
  2498  0014FA  6E11               	movwf	putch@c,c
  2499                           
  2500                           ;Lab10p2.c: 69: while (!TRMT);
  2501  0014FC  D000               	goto	l332
  2502  0014FE                     l332:
  2503  0014FE  A2AC               	btfss	4012,1,c	;volatile
  2504  001500  D7FE               	goto	l332
  2505                           
  2506                           ;Lab10p2.c: 70: TXREG = c;
  2507  001502  C011  FFAD         	movff	putch@c,4013	;volatile
  2508  001506  0012               	return		;funcret
  2509  001508                     __end_of_putch:
  2510                           	opt stack 0
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           prodh	equ	0xFF4
  2516                           prodl	equ	0xFF3
  2517                           intcon	equ	0xFF2
  2518                           intcon2	equ	0xFF1
  2519                           postinc0	equ	0xFEE
  2520                           wreg	equ	0xFE8
  2521                           postdec1	equ	0xFE5
  2522                           fsr1l	equ	0xFE1
  2523                           indf2	equ	0xFDF
  2524                           postinc2	equ	0xFDE
  2525                           postdec2	equ	0xFDD
  2526                           fsr2h	equ	0xFDA
  2527                           fsr2l	equ	0xFD9
  2528                           status	equ	0xFD8
  2529                           
  2530 ;; *************** function _isdigit *****************
  2531 ;; Defined at:
  2532 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  c               1    wreg     unsigned char 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  c               1   18[COMRAM] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;		None               void
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2550 ;;Total ram usage:        3 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    3
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_printf
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text3
  2561  001424                     __ptext3:
  2562                           	opt stack 0
  2563  001424                     _isdigit:
  2564                           	opt stack 26
  2565                           
  2566                           ;incstack = 0
  2567                           ;isdigit@c stored from wreg
  2568  001424  6E13               	movwf	isdigit@c,c
  2569  001426  0E00               	movlw	0
  2570  001428  6E12               	movwf	_isdigit$1637,c
  2571  00142A  0E3A               	movlw	58
  2572  00142C  6013               	cpfslt	isdigit@c,c
  2573  00142E  D006               	goto	l2631
  2574  001430  0E2F               	movlw	47
  2575  001432  6413               	cpfsgt	isdigit@c,c
  2576  001434  D003               	goto	l2631
  2577  001436  0E01               	movlw	1
  2578  001438  6E12               	movwf	_isdigit$1637,c
  2579  00143A  D000               	goto	l2631
  2580  00143C                     l2631:
  2581  00143C  C012  F011         	movff	_isdigit$1637,??_isdigit
  2582  001440  3011               	rrcf	??_isdigit,w,c
  2583  001442  D000               	goto	l920
  2584  001444                     l920:
  2585  001444  0012               	return		;funcret
  2586  001446                     __end_of_isdigit:
  2587                           	opt stack 0
  2588                           tblptru	equ	0xFF8
  2589                           tblptrh	equ	0xFF7
  2590                           tblptrl	equ	0xFF6
  2591                           tablat	equ	0xFF5
  2592                           prodh	equ	0xFF4
  2593                           prodl	equ	0xFF3
  2594                           intcon	equ	0xFF2
  2595                           intcon2	equ	0xFF1
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           postdec1	equ	0xFE5
  2599                           fsr1l	equ	0xFE1
  2600                           indf2	equ	0xFDF
  2601                           postinc2	equ	0xFDE
  2602                           postdec2	equ	0xFDD
  2603                           fsr2h	equ	0xFDA
  2604                           fsr2l	equ	0xFD9
  2605                           status	equ	0xFD8
  2606                           
  2607 ;; *************** function ___lldiv *****************
  2608 ;; Defined at:
  2609 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  dividend        4   16[COMRAM] unsigned long 
  2612 ;;  divisor         4   20[COMRAM] unsigned long 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  quotient        4   24[COMRAM] unsigned long 
  2615 ;;  counter         1   28[COMRAM] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  4   16[COMRAM] unsigned long 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2625 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;Total ram usage:       13 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    3
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_printf
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text4
  2640  000E78                     __ptext4:
  2641                           	opt stack 0
  2642  000E78                     ___lldiv:
  2643                           	opt stack 26
  2644                           
  2645                           ;incstack = 0
  2646  000E78  0E00               	movlw	0
  2647  000E7A  6E19               	movwf	___lldiv@quotient,c
  2648  000E7C  0E00               	movlw	0
  2649  000E7E  6E1A               	movwf	___lldiv@quotient+1,c
  2650  000E80  0E00               	movlw	0
  2651  000E82  6E1B               	movwf	___lldiv@quotient+2,c
  2652  000E84  0E00               	movlw	0
  2653  000E86  6E1C               	movwf	___lldiv@quotient+3,c
  2654  000E88  5015               	movf	___lldiv@divisor,w,c
  2655  000E8A  1016               	iorwf	___lldiv@divisor+1,w,c
  2656  000E8C  1017               	iorwf	___lldiv@divisor+2,w,c
  2657  000E8E  1018               	iorwf	___lldiv@divisor+3,w,c
  2658  000E90  B4D8               	btfsc	status,2,c
  2659  000E92  D02F               	goto	l949
  2660  000E94  0E01               	movlw	1
  2661  000E96  6E1D               	movwf	___lldiv@counter,c
  2662  000E98  D007               	goto	l2643
  2663  000E9A                     l2641:
  2664  000E9A  90D8               	bcf	status,0,c
  2665  000E9C  3615               	rlcf	___lldiv@divisor,f,c
  2666  000E9E  3616               	rlcf	___lldiv@divisor+1,f,c
  2667  000EA0  3617               	rlcf	___lldiv@divisor+2,f,c
  2668  000EA2  3618               	rlcf	___lldiv@divisor+3,f,c
  2669  000EA4  2A1D               	incf	___lldiv@counter,f,c
  2670  000EA6  D000               	goto	l2643
  2671  000EA8                     l2643:
  2672  000EA8  BE18               	btfsc	___lldiv@divisor+3,7,c
  2673  000EAA  D002               	goto	l2645
  2674  000EAC  D7F6               	goto	l2641
  2675  000EAE  D000               	goto	l2645
  2676  000EB0                     l2645:
  2677  000EB0  90D8               	bcf	status,0,c
  2678  000EB2  3619               	rlcf	___lldiv@quotient,f,c
  2679  000EB4  361A               	rlcf	___lldiv@quotient+1,f,c
  2680  000EB6  361B               	rlcf	___lldiv@quotient+2,f,c
  2681  000EB8  361C               	rlcf	___lldiv@quotient+3,f,c
  2682  000EBA  5015               	movf	___lldiv@divisor,w,c
  2683  000EBC  5C11               	subwf	___lldiv@dividend,w,c
  2684  000EBE  5016               	movf	___lldiv@divisor+1,w,c
  2685  000EC0  5812               	subwfb	___lldiv@dividend+1,w,c
  2686  000EC2  5017               	movf	___lldiv@divisor+2,w,c
  2687  000EC4  5813               	subwfb	___lldiv@dividend+2,w,c
  2688  000EC6  5018               	movf	___lldiv@divisor+3,w,c
  2689  000EC8  5814               	subwfb	___lldiv@dividend+3,w,c
  2690  000ECA  A0D8               	btfss	status,0,c
  2691  000ECC  D00A               	goto	l2653
  2692  000ECE  5015               	movf	___lldiv@divisor,w,c
  2693  000ED0  5E11               	subwf	___lldiv@dividend,f,c
  2694  000ED2  5016               	movf	___lldiv@divisor+1,w,c
  2695  000ED4  5A12               	subwfb	___lldiv@dividend+1,f,c
  2696  000ED6  5017               	movf	___lldiv@divisor+2,w,c
  2697  000ED8  5A13               	subwfb	___lldiv@dividend+2,f,c
  2698  000EDA  5018               	movf	___lldiv@divisor+3,w,c
  2699  000EDC  5A14               	subwfb	___lldiv@dividend+3,f,c
  2700  000EDE  8019               	bsf	___lldiv@quotient,0,c
  2701  000EE0  D000               	goto	l2653
  2702  000EE2                     l2653:
  2703  000EE2  90D8               	bcf	status,0,c
  2704  000EE4  3218               	rrcf	___lldiv@divisor+3,f,c
  2705  000EE6  3217               	rrcf	___lldiv@divisor+2,f,c
  2706  000EE8  3216               	rrcf	___lldiv@divisor+1,f,c
  2707  000EEA  3215               	rrcf	___lldiv@divisor,f,c
  2708  000EEC  2E1D               	decfsz	___lldiv@counter,f,c
  2709  000EEE  D7E0               	goto	l2645
  2710  000EF0  D000               	goto	l949
  2711  000EF2                     l949:
  2712  000EF2  C019  F011         	movff	___lldiv@quotient,?___lldiv
  2713  000EF6  C01A  F012         	movff	___lldiv@quotient+1,?___lldiv+1
  2714  000EFA  C01B  F013         	movff	___lldiv@quotient+2,?___lldiv+2
  2715  000EFE  C01C  F014         	movff	___lldiv@quotient+3,?___lldiv+3
  2716  000F02  0012               	return		;funcret
  2717  000F04                     __end_of___lldiv:
  2718                           	opt stack 0
  2719                           tblptru	equ	0xFF8
  2720                           tblptrh	equ	0xFF7
  2721                           tblptrl	equ	0xFF6
  2722                           tablat	equ	0xFF5
  2723                           prodh	equ	0xFF4
  2724                           prodl	equ	0xFF3
  2725                           intcon	equ	0xFF2
  2726                           intcon2	equ	0xFF1
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           postdec1	equ	0xFE5
  2730                           fsr1l	equ	0xFE1
  2731                           indf2	equ	0xFDF
  2732                           postinc2	equ	0xFDE
  2733                           postdec2	equ	0xFDD
  2734                           fsr2h	equ	0xFDA
  2735                           fsr2l	equ	0xFD9
  2736                           status	equ	0xFD8
  2737                           
  2738 ;; *************** function _init_UART *****************
  2739 ;; Defined at:
  2740 ;;		line 72 in file "Lab10p2.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;		None
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;		None               void
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;Total ram usage:        0 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    4
  2761 ;; This function calls:
  2762 ;;		_OpenUSART
  2763 ;; This function is called by:
  2764 ;;		_main
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text5
  2769  0014CA                     __ptext5:
  2770                           	opt stack 0
  2771  0014CA                     _init_UART:
  2772                           	opt stack 26
  2773                           
  2774                           ;Lab10p2.c: 74: OpenUSART (0b01111111 & 0b10111111 &
  2775                           ;Lab10p2.c: 75: 0b11111110 & 0b11111101 & 0b11111111 &
  2776                           ;Lab10p2.c: 76: 0b11111111, 25);
  2777                           
  2778                           ;incstack = 0
  2779  0014CA  0E00               	movlw	0
  2780  0014CC  6E12               	movwf	OpenUSART@spbrg+1,c
  2781  0014CE  0E19               	movlw	25
  2782  0014D0  6E11               	movwf	OpenUSART@spbrg,c
  2783  0014D2  0E3C               	movlw	60
  2784  0014D4  EC84  F008         	call	_OpenUSART
  2785  0014D8  0012               	return		;funcret
  2786  0014DA                     __end_of_init_UART:
  2787                           	opt stack 0
  2788                           tblptru	equ	0xFF8
  2789                           tblptrh	equ	0xFF7
  2790                           tblptrl	equ	0xFF6
  2791                           tablat	equ	0xFF5
  2792                           prodh	equ	0xFF4
  2793                           prodl	equ	0xFF3
  2794                           intcon	equ	0xFF2
  2795                           intcon2	equ	0xFF1
  2796                           postinc0	equ	0xFEE
  2797                           wreg	equ	0xFE8
  2798                           postdec1	equ	0xFE5
  2799                           fsr1l	equ	0xFE1
  2800                           indf2	equ	0xFDF
  2801                           postinc2	equ	0xFDE
  2802                           postdec2	equ	0xFDD
  2803                           fsr2h	equ	0xFDA
  2804                           fsr2l	equ	0xFD9
  2805                           status	equ	0xFD8
  2806                           
  2807 ;; *************** function _OpenUSART *****************
  2808 ;; Defined at:
  2809 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  config          1    wreg     unsigned char 
  2812 ;;  spbrg           2   16[COMRAM] unsigned int 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  config          1   18[COMRAM] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;		None               void
  2817 ;; Registers used:
  2818 ;;		wreg, status,2
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:        3 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    3
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_init_UART
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text6
  2839  001108                     __ptext6:
  2840                           	opt stack 0
  2841  001108                     _OpenUSART:
  2842                           	opt stack 26
  2843                           
  2844                           ;incstack = 0
  2845                           ;OpenUSART@config stored from wreg
  2846  001108  6E13               	movwf	OpenUSART@config,c
  2847  00110A  0E00               	movlw	0
  2848  00110C  6EAC               	movwf	4012,c	;volatile
  2849  00110E  0E00               	movlw	0
  2850  001110  6EAB               	movwf	4011,c	;volatile
  2851  001112  A013               	btfss	OpenUSART@config,0,c
  2852  001114  D002               	goto	l2573
  2853  001116  88AC               	bsf	4012,4,c	;volatile
  2854  001118  D000               	goto	l2573
  2855  00111A                     l2573:
  2856  00111A  A213               	btfss	OpenUSART@config,1,c
  2857  00111C  D003               	goto	l2577
  2858  00111E  8CAC               	bsf	4012,6,c	;volatile
  2859  001120  8CAB               	bsf	4011,6,c	;volatile
  2860  001122  D000               	goto	l2577
  2861  001124                     l2577:
  2862  001124  A413               	btfss	OpenUSART@config,2,c
  2863  001126  D002               	goto	l2581
  2864  001128  8EAC               	bsf	4012,7,c	;volatile
  2865  00112A  D000               	goto	l2581
  2866  00112C                     l2581:
  2867  00112C  A613               	btfss	OpenUSART@config,3,c
  2868  00112E  D002               	goto	l477
  2869  001130  88AB               	bsf	4011,4,c	;volatile
  2870  001132  D002               	goto	l2585
  2871  001134                     l477:
  2872  001134  8AAB               	bsf	4011,5,c	;volatile
  2873  001136  D000               	goto	l2585
  2874  001138                     l2585:
  2875  001138  B813               	btfsc	OpenUSART@config,4,c
  2876  00113A  84AC               	bsf	4012,2,c	;volatile
  2877  00113C  989E               	bcf	3998,4,c	;volatile
  2878  00113E  AA13               	btfss	OpenUSART@config,5,c
  2879  001140  D002               	goto	l2593
  2880  001142  86AB               	bsf	4011,3,c	;volatile
  2881  001144  D000               	goto	l2593
  2882  001146                     l2593:
  2883  001146  AC13               	btfss	OpenUSART@config,6,c
  2884  001148  D002               	goto	l481
  2885  00114A  8A9D               	bsf	3997,5,c	;volatile
  2886  00114C  D001               	goto	l482
  2887  00114E                     l481:
  2888  00114E  9A9D               	bcf	3997,5,c	;volatile
  2889  001150                     l482:
  2890  001150  9A9E               	bcf	3998,5,c	;volatile
  2891  001152  AE13               	btfss	OpenUSART@config,7,c
  2892  001154  D002               	goto	l483
  2893  001156  889D               	bsf	3997,4,c	;volatile
  2894  001158  D001               	goto	l484
  2895  00115A                     l483:
  2896  00115A  989D               	bcf	3997,4,c	;volatile
  2897  00115C                     l484:
  2898  00115C  C011  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2899  001160  5012               	movf	OpenUSART@spbrg+1,w,c
  2900  001162  6EB0               	movwf	4016,c	;volatile
  2901  001164  8AAC               	bsf	4012,5,c	;volatile
  2902  001166  8EAB               	bsf	4011,7,c	;volatile
  2903  001168  9C94               	bcf	3988,6,c	;volatile
  2904  00116A  8E94               	bsf	3988,7,c	;volatile
  2905  00116C  B8AC               	btfsc	4012,4,c	;volatile
  2906  00116E  BEAC               	btfsc	4012,7,c	;volatile
  2907  001170  D002               	goto	l486
  2908  001172  8C94               	bsf	3988,6,c	;volatile
  2909  001174  D000               	goto	l486
  2910  001176                     l486:
  2911  001176  0012               	return		;funcret
  2912  001178                     __end_of_OpenUSART:
  2913                           	opt stack 0
  2914                           tblptru	equ	0xFF8
  2915                           tblptrh	equ	0xFF7
  2916                           tblptrl	equ	0xFF6
  2917                           tablat	equ	0xFF5
  2918                           prodh	equ	0xFF4
  2919                           prodl	equ	0xFF3
  2920                           intcon	equ	0xFF2
  2921                           intcon2	equ	0xFF1
  2922                           postinc0	equ	0xFEE
  2923                           wreg	equ	0xFE8
  2924                           postdec1	equ	0xFE5
  2925                           fsr1l	equ	0xFE1
  2926                           indf2	equ	0xFDF
  2927                           postinc2	equ	0xFDE
  2928                           postdec2	equ	0xFDD
  2929                           fsr2h	equ	0xFDA
  2930                           fsr2l	equ	0xFD9
  2931                           status	equ	0xFD8
  2932                           
  2933 ;; *************** function _fillCircle *****************
  2934 ;; Defined at:
  2935 ;;		line 614 in file "ST7735_TFT.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  x0              2   58[COMRAM] int 
  2938 ;;  y0              2   60[COMRAM] int 
  2939 ;;  r               2   62[COMRAM] int 
  2940 ;;  color           2   64[COMRAM] unsigned int 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;		None               void
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2952 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;Total ram usage:        8 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    8
  2959 ;; This function calls:
  2960 ;;		_drawFastVLine
  2961 ;;		_fillCircleHelper
  2962 ;; This function is called by:
  2963 ;;		_main
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text7
  2968  001178                     __ptext7:
  2969                           	opt stack 0
  2970  001178                     _fillCircle:
  2971                           	opt stack 22
  2972                           
  2973                           ;ST7735_TFT.c: 616: drawFastVLine(x0, y0 - r, 2 * r + 1, color);
  2974                           
  2975                           ;incstack = 0
  2976  001178  503F               	movf	fillCircle@r,w,c
  2977  00117A  0800               	sublw	0
  2978  00117C  243D               	addwf	fillCircle@y0,w,c
  2979  00117E  6E18               	movwf	drawFastVLine@y,c
  2980  001180  80D8               	bsf	status,0,c
  2981  001182  343F               	rlcf	fillCircle@r,w,c
  2982  001184  6E19               	movwf	drawFastVLine@h,c
  2983  001186  C041  F01A         	movff	fillCircle@color,drawFastVLine@color
  2984  00118A  C042  F01B         	movff	fillCircle@color+1,drawFastVLine@color+1
  2985  00118E  503B               	movf	fillCircle@x0,w,c
  2986  001190  EC82  F007         	call	_drawFastVLine
  2987                           
  2988                           ;ST7735_TFT.c: 617: fillCircleHelper(x0, y0, r, 3, 0, color);
  2989  001194  C03B  F023         	movff	fillCircle@x0,fillCircleHelper@x0
  2990  001198  C03C  F024         	movff	fillCircle@x0+1,fillCircleHelper@x0+1
  2991  00119C  C03D  F025         	movff	fillCircle@y0,fillCircleHelper@y0
  2992  0011A0  C03E  F026         	movff	fillCircle@y0+1,fillCircleHelper@y0+1
  2993  0011A4  C03F  F027         	movff	fillCircle@r,fillCircleHelper@r
  2994  0011A8  C040  F028         	movff	fillCircle@r+1,fillCircleHelper@r+1
  2995  0011AC  0E00               	movlw	0
  2996  0011AE  6E2A               	movwf	fillCircleHelper@cornername+1,c
  2997  0011B0  0E03               	movlw	3
  2998  0011B2  6E29               	movwf	fillCircleHelper@cornername,c
  2999  0011B4  0E00               	movlw	0
  3000  0011B6  6E2C               	movwf	fillCircleHelper@delta+1,c
  3001  0011B8  0E00               	movlw	0
  3002  0011BA  6E2B               	movwf	fillCircleHelper@delta,c
  3003  0011BC  C041  F02D         	movff	fillCircle@color,fillCircleHelper@color
  3004  0011C0  C042  F02E         	movff	fillCircle@color+1,fillCircleHelper@color+1
  3005  0011C4  EC65  F004         	call	_fillCircleHelper	;wreg free
  3006  0011C8  0012               	return		;funcret
  3007  0011CA                     __end_of_fillCircle:
  3008                           	opt stack 0
  3009                           tblptru	equ	0xFF8
  3010                           tblptrh	equ	0xFF7
  3011                           tblptrl	equ	0xFF6
  3012                           tablat	equ	0xFF5
  3013                           prodh	equ	0xFF4
  3014                           prodl	equ	0xFF3
  3015                           intcon	equ	0xFF2
  3016                           intcon2	equ	0xFF1
  3017                           postinc0	equ	0xFEE
  3018                           wreg	equ	0xFE8
  3019                           postdec1	equ	0xFE5
  3020                           fsr1l	equ	0xFE1
  3021                           indf2	equ	0xFDF
  3022                           postinc2	equ	0xFDE
  3023                           postdec2	equ	0xFDD
  3024                           fsr2h	equ	0xFDA
  3025                           fsr2l	equ	0xFD9
  3026                           status	equ	0xFD8
  3027                           
  3028 ;; *************** function _fillCircleHelper *****************
  3029 ;; Defined at:
  3030 ;;		line 589 in file "ST7735_TFT.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  x0              2   34[COMRAM] int 
  3033 ;;  y0              2   36[COMRAM] int 
  3034 ;;  r               2   38[COMRAM] int 
  3035 ;;  cornername      2   40[COMRAM] unsigned int 
  3036 ;;  delta           2   42[COMRAM] int 
  3037 ;;  color           2   44[COMRAM] unsigned int 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  y               2   56[COMRAM] int 
  3040 ;;  x               2   54[COMRAM] int 
  3041 ;;  f               2   52[COMRAM] int 
  3042 ;;  ddF_y           2   50[COMRAM] int 
  3043 ;;  ddF_x           2   48[COMRAM] int 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;		None               void
  3046 ;; Registers used:
  3047 ;;		wreg, status,2, status,0, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3053 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;Total ram usage:       24 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    7
  3060 ;; This function calls:
  3061 ;;		_drawFastVLine
  3062 ;; This function is called by:
  3063 ;;		_fillCircle
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text8
  3068  0008CA                     __ptext8:
  3069                           	opt stack 0
  3070  0008CA                     _fillCircleHelper:
  3071                           	opt stack 22
  3072                           
  3073                           ;ST7735_TFT.c: 591: signed int f, ddF_x, ddF_y, x, y;
  3074                           ;ST7735_TFT.c: 592: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
  3075                           
  3076                           ;incstack = 0
  3077  0008CA  C027  F02F         	movff	fillCircleHelper@r,??_fillCircleHelper
  3078  0008CE  C028  F030         	movff	fillCircleHelper@r+1,??_fillCircleHelper+1
  3079  0008D2  1E2F               	comf	??_fillCircleHelper,f,c
  3080  0008D4  1E30               	comf	??_fillCircleHelper+1,f,c
  3081  0008D6  4A2F               	infsnz	??_fillCircleHelper,f,c
  3082  0008D8  2A30               	incf	??_fillCircleHelper+1,f,c
  3083  0008DA  0E01               	movlw	1
  3084  0008DC  242F               	addwf	??_fillCircleHelper,w,c
  3085  0008DE  6E35               	movwf	fillCircleHelper@f,c
  3086  0008E0  0E00               	movlw	0
  3087  0008E2  2030               	addwfc	??_fillCircleHelper+1,w,c
  3088  0008E4  6E36               	movwf	fillCircleHelper@f+1,c
  3089  0008E6  0E00               	movlw	0
  3090  0008E8  6E32               	movwf	fillCircleHelper@ddF_x+1,c
  3091  0008EA  0E01               	movlw	1
  3092  0008EC  6E31               	movwf	fillCircleHelper@ddF_x,c
  3093  0008EE  C027  F02F         	movff	fillCircleHelper@r,??_fillCircleHelper
  3094  0008F2  C028  F030         	movff	fillCircleHelper@r+1,??_fillCircleHelper+1
  3095  0008F6  90D8               	bcf	status,0,c
  3096  0008F8  362F               	rlcf	??_fillCircleHelper,f,c
  3097  0008FA  3630               	rlcf	??_fillCircleHelper+1,f,c
  3098  0008FC  1E2F               	comf	??_fillCircleHelper,f,c
  3099  0008FE  1E30               	comf	??_fillCircleHelper+1,f,c
  3100  000900  4A2F               	infsnz	??_fillCircleHelper,f,c
  3101  000902  2A30               	incf	??_fillCircleHelper+1,f,c
  3102  000904  C02F  F033         	movff	??_fillCircleHelper,fillCircleHelper@ddF_y
  3103  000908  C030  F034         	movff	??_fillCircleHelper+1,fillCircleHelper@ddF_y+1
  3104  00090C  0E00               	movlw	0
  3105  00090E  6E38               	movwf	fillCircleHelper@x+1,c
  3106  000910  0E00               	movlw	0
  3107  000912  6E37               	movwf	fillCircleHelper@x,c
  3108  000914  C027  F039         	movff	fillCircleHelper@r,fillCircleHelper@y
  3109  000918  C028  F03A         	movff	fillCircleHelper@r+1,fillCircleHelper@y+1
  3110                           
  3111                           ;ST7735_TFT.c: 593: while (x<y) {
  3112  00091C  D067               	goto	l3527
  3113  00091E                     l3507:
  3114                           
  3115                           ;ST7735_TFT.c: 594: if (f >= 0) {
  3116  00091E  BE36               	btfsc	fillCircleHelper@f+1,7,c
  3117  000920  D00B               	goto	l177
  3118                           
  3119                           ;ST7735_TFT.c: 595: y--;
  3120  000922  0639               	decf	fillCircleHelper@y,f,c
  3121  000924  A0D8               	btfss	status,0,c
  3122  000926  063A               	decf	fillCircleHelper@y+1,f,c
  3123                           
  3124                           ;ST7735_TFT.c: 596: ddF_y += 2;
  3125  000928  0E02               	movlw	2
  3126  00092A  2633               	addwf	fillCircleHelper@ddF_y,f,c
  3127  00092C  0E00               	movlw	0
  3128  00092E  2234               	addwfc	fillCircleHelper@ddF_y+1,f,c
  3129                           
  3130                           ;ST7735_TFT.c: 597: f += ddF_y;
  3131  000930  5033               	movf	fillCircleHelper@ddF_y,w,c
  3132  000932  2635               	addwf	fillCircleHelper@f,f,c
  3133  000934  5034               	movf	fillCircleHelper@ddF_y+1,w,c
  3134  000936  2236               	addwfc	fillCircleHelper@f+1,f,c
  3135  000938                     l177:
  3136                           
  3137                           ;ST7735_TFT.c: 598: }
  3138                           ;ST7735_TFT.c: 599: x++;
  3139  000938  4A37               	infsnz	fillCircleHelper@x,f,c
  3140  00093A  2A38               	incf	fillCircleHelper@x+1,f,c
  3141                           
  3142                           ;ST7735_TFT.c: 600: ddF_x += 2;
  3143  00093C  0E02               	movlw	2
  3144  00093E  2631               	addwf	fillCircleHelper@ddF_x,f,c
  3145  000940  0E00               	movlw	0
  3146  000942  2232               	addwfc	fillCircleHelper@ddF_x+1,f,c
  3147                           
  3148                           ;ST7735_TFT.c: 601: f += ddF_x;
  3149  000944  5031               	movf	fillCircleHelper@ddF_x,w,c
  3150  000946  2635               	addwf	fillCircleHelper@f,f,c
  3151  000948  5032               	movf	fillCircleHelper@ddF_x+1,w,c
  3152  00094A  2236               	addwfc	fillCircleHelper@f+1,f,c
  3153                           
  3154                           ;ST7735_TFT.c: 603: if (cornername & 0x1) {
  3155  00094C  A029               	btfss	fillCircleHelper@cornername,0,c
  3156  00094E  D025               	goto	l3523
  3157                           
  3158                           ;ST7735_TFT.c: 604: drawFastVLine(x0+x, y0-y, 2*y+1+delta, color);
  3159  000950  5039               	movf	fillCircleHelper@y,w,c
  3160  000952  0800               	sublw	0
  3161  000954  2425               	addwf	fillCircleHelper@y0,w,c
  3162  000956  6E18               	movwf	drawFastVLine@y,c
  3163  000958  5039               	movf	fillCircleHelper@y,w,c
  3164  00095A  2439               	addwf	fillCircleHelper@y,w,c
  3165  00095C  242B               	addwf	fillCircleHelper@delta,w,c
  3166  00095E  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3167  000960  282F               	incf	??_fillCircleHelper,w,c
  3168  000962  6E19               	movwf	drawFastVLine@h,c
  3169  000964  C02D  F01A         	movff	fillCircleHelper@color,drawFastVLine@color
  3170  000968  C02E  F01B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3171  00096C  5023               	movf	fillCircleHelper@x0,w,c
  3172  00096E  2437               	addwf	fillCircleHelper@x,w,c
  3173  000970  EC82  F007         	call	_drawFastVLine
  3174                           
  3175                           ;ST7735_TFT.c: 605: drawFastVLine(x0+y, y0-x, 2*x+1+delta, color);
  3176  000974  5037               	movf	fillCircleHelper@x,w,c
  3177  000976  0800               	sublw	0
  3178  000978  2425               	addwf	fillCircleHelper@y0,w,c
  3179  00097A  6E18               	movwf	drawFastVLine@y,c
  3180  00097C  5037               	movf	fillCircleHelper@x,w,c
  3181  00097E  2437               	addwf	fillCircleHelper@x,w,c
  3182  000980  242B               	addwf	fillCircleHelper@delta,w,c
  3183  000982  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3184  000984  282F               	incf	??_fillCircleHelper,w,c
  3185  000986  6E19               	movwf	drawFastVLine@h,c
  3186  000988  C02D  F01A         	movff	fillCircleHelper@color,drawFastVLine@color
  3187  00098C  C02E  F01B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3188  000990  5023               	movf	fillCircleHelper@x0,w,c
  3189  000992  2439               	addwf	fillCircleHelper@y,w,c
  3190  000994  EC82  F007         	call	_drawFastVLine
  3191  000998  D000               	goto	l3523
  3192  00099A                     l3523:
  3193                           
  3194                           ;ST7735_TFT.c: 606: }
  3195                           ;ST7735_TFT.c: 607: if (cornername & 0x2) {
  3196  00099A  A229               	btfss	fillCircleHelper@cornername,1,c
  3197  00099C  D027               	goto	l3527
  3198                           
  3199                           ;ST7735_TFT.c: 608: drawFastVLine(x0-x, y0-y, 2*y+1+delta, color);
  3200  00099E  5039               	movf	fillCircleHelper@y,w,c
  3201  0009A0  0800               	sublw	0
  3202  0009A2  2425               	addwf	fillCircleHelper@y0,w,c
  3203  0009A4  6E18               	movwf	drawFastVLine@y,c
  3204  0009A6  5039               	movf	fillCircleHelper@y,w,c
  3205  0009A8  2439               	addwf	fillCircleHelper@y,w,c
  3206  0009AA  242B               	addwf	fillCircleHelper@delta,w,c
  3207  0009AC  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3208  0009AE  282F               	incf	??_fillCircleHelper,w,c
  3209  0009B0  6E19               	movwf	drawFastVLine@h,c
  3210  0009B2  C02D  F01A         	movff	fillCircleHelper@color,drawFastVLine@color
  3211  0009B6  C02E  F01B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3212  0009BA  5037               	movf	fillCircleHelper@x,w,c
  3213  0009BC  0800               	sublw	0
  3214  0009BE  2423               	addwf	fillCircleHelper@x0,w,c
  3215  0009C0  EC82  F007         	call	_drawFastVLine
  3216                           
  3217                           ;ST7735_TFT.c: 609: drawFastVLine(x0-y, y0-x, 2*x+1+delta, color);
  3218  0009C4  5037               	movf	fillCircleHelper@x,w,c
  3219  0009C6  0800               	sublw	0
  3220  0009C8  2425               	addwf	fillCircleHelper@y0,w,c
  3221  0009CA  6E18               	movwf	drawFastVLine@y,c
  3222  0009CC  5037               	movf	fillCircleHelper@x,w,c
  3223  0009CE  2437               	addwf	fillCircleHelper@x,w,c
  3224  0009D0  242B               	addwf	fillCircleHelper@delta,w,c
  3225  0009D2  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3226  0009D4  282F               	incf	??_fillCircleHelper,w,c
  3227  0009D6  6E19               	movwf	drawFastVLine@h,c
  3228  0009D8  C02D  F01A         	movff	fillCircleHelper@color,drawFastVLine@color
  3229  0009DC  C02E  F01B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3230  0009E0  5039               	movf	fillCircleHelper@y,w,c
  3231  0009E2  0800               	sublw	0
  3232  0009E4  2423               	addwf	fillCircleHelper@x0,w,c
  3233  0009E6  EC82  F007         	call	_drawFastVLine
  3234  0009EA  D000               	goto	l3527
  3235  0009EC                     l3527:
  3236  0009EC  5039               	movf	fillCircleHelper@y,w,c
  3237  0009EE  5C37               	subwf	fillCircleHelper@x,w,c
  3238  0009F0  5038               	movf	fillCircleHelper@x+1,w,c
  3239  0009F2  0A80               	xorlw	128
  3240  0009F4  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3241  0009F6  503A               	movf	fillCircleHelper@y+1,w,c
  3242  0009F8  0A80               	xorlw	128
  3243  0009FA  582F               	subwfb	??_fillCircleHelper& (0+255),w,c
  3244  0009FC  A0D8               	btfss	status,0,c
  3245  0009FE  D78F               	goto	l3507
  3246  000A00  0012               	return		;funcret
  3247  000A02                     __end_of_fillCircleHelper:
  3248                           	opt stack 0
  3249                           tblptru	equ	0xFF8
  3250                           tblptrh	equ	0xFF7
  3251                           tblptrl	equ	0xFF6
  3252                           tablat	equ	0xFF5
  3253                           prodh	equ	0xFF4
  3254                           prodl	equ	0xFF3
  3255                           intcon	equ	0xFF2
  3256                           intcon2	equ	0xFF1
  3257                           postinc0	equ	0xFEE
  3258                           wreg	equ	0xFE8
  3259                           postdec1	equ	0xFE5
  3260                           fsr1l	equ	0xFE1
  3261                           indf2	equ	0xFDF
  3262                           postinc2	equ	0xFDE
  3263                           postdec2	equ	0xFDD
  3264                           fsr2h	equ	0xFDA
  3265                           fsr2l	equ	0xFD9
  3266                           status	equ	0xFD8
  3267                           
  3268 ;; *************** function _drawCircle *****************
  3269 ;; Defined at:
  3270 ;;		line 528 in file "ST7735_TFT.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  x0              2   27[COMRAM] int 
  3273 ;;  y0              2   29[COMRAM] int 
  3274 ;;  r               2   31[COMRAM] int 
  3275 ;;  color           2   33[COMRAM] unsigned int 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  y               2   45[COMRAM] int 
  3278 ;;  x               2   43[COMRAM] int 
  3279 ;;  f               2   41[COMRAM] int 
  3280 ;;  ddF_y           2   39[COMRAM] int 
  3281 ;;  ddF_x           2   37[COMRAM] int 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;		None               void
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3291 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;Total ram usage:       20 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    7
  3298 ;; This function calls:
  3299 ;;		_drawPixel
  3300 ;; This function is called by:
  3301 ;;		_main
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text9
  3306  0002BE                     __ptext9:
  3307                           	opt stack 0
  3308  0002BE                     _drawCircle:
  3309                           	opt stack 23
  3310                           
  3311                           ;ST7735_TFT.c: 530: signed int f, ddF_x, ddF_y, x, y;
  3312                           ;ST7735_TFT.c: 531: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
  3313                           
  3314                           ;incstack = 0
  3315  0002BE  C020  F024         	movff	drawCircle@r,??_drawCircle
  3316  0002C2  C021  F025         	movff	drawCircle@r+1,??_drawCircle+1
  3317  0002C6  1E24               	comf	??_drawCircle,f,c
  3318  0002C8  1E25               	comf	??_drawCircle+1,f,c
  3319  0002CA  4A24               	infsnz	??_drawCircle,f,c
  3320  0002CC  2A25               	incf	??_drawCircle+1,f,c
  3321  0002CE  0E01               	movlw	1
  3322  0002D0  2424               	addwf	??_drawCircle,w,c
  3323  0002D2  6E2A               	movwf	drawCircle@f,c
  3324  0002D4  0E00               	movlw	0
  3325  0002D6  2025               	addwfc	??_drawCircle+1,w,c
  3326  0002D8  6E2B               	movwf	drawCircle@f+1,c
  3327  0002DA  0E00               	movlw	0
  3328  0002DC  6E27               	movwf	drawCircle@ddF_x+1,c
  3329  0002DE  0E01               	movlw	1
  3330  0002E0  6E26               	movwf	drawCircle@ddF_x,c
  3331  0002E2  C020  F024         	movff	drawCircle@r,??_drawCircle
  3332  0002E6  C021  F025         	movff	drawCircle@r+1,??_drawCircle+1
  3333  0002EA  90D8               	bcf	status,0,c
  3334  0002EC  3624               	rlcf	??_drawCircle,f,c
  3335  0002EE  3625               	rlcf	??_drawCircle+1,f,c
  3336  0002F0  1E24               	comf	??_drawCircle,f,c
  3337  0002F2  1E25               	comf	??_drawCircle+1,f,c
  3338  0002F4  4A24               	infsnz	??_drawCircle,f,c
  3339  0002F6  2A25               	incf	??_drawCircle+1,f,c
  3340  0002F8  C024  F028         	movff	??_drawCircle,drawCircle@ddF_y
  3341  0002FC  C025  F029         	movff	??_drawCircle+1,drawCircle@ddF_y+1
  3342  000300  0E00               	movlw	0
  3343  000302  6E2D               	movwf	drawCircle@x+1,c
  3344  000304  0E00               	movlw	0
  3345  000306  6E2C               	movwf	drawCircle@x,c
  3346  000308  C020  F02E         	movff	drawCircle@r,drawCircle@y
  3347  00030C  C021  F02F         	movff	drawCircle@r+1,drawCircle@y+1
  3348                           
  3349                           ;ST7735_TFT.c: 532: drawPixel(x0 , y0 + r, color);
  3350  000310  501E               	movf	drawCircle@y0,w,c
  3351  000312  2420               	addwf	drawCircle@r,w,c
  3352  000314  6E18               	movwf	drawPixel@y,c
  3353  000316  C022  F019         	movff	drawCircle@color,drawPixel@color
  3354  00031A  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3355  00031E  501C               	movf	drawCircle@x0,w,c
  3356  000320  ECD1  F009         	call	_drawPixel
  3357                           
  3358                           ;ST7735_TFT.c: 533: drawPixel(x0 , y0 - r, color);
  3359  000324  5020               	movf	drawCircle@r,w,c
  3360  000326  0800               	sublw	0
  3361  000328  241E               	addwf	drawCircle@y0,w,c
  3362  00032A  6E18               	movwf	drawPixel@y,c
  3363  00032C  C022  F019         	movff	drawCircle@color,drawPixel@color
  3364  000330  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3365  000334  501C               	movf	drawCircle@x0,w,c
  3366  000336  ECD1  F009         	call	_drawPixel
  3367                           
  3368                           ;ST7735_TFT.c: 534: drawPixel(x0+r, y0 , color);
  3369  00033A  C01E  F018         	movff	drawCircle@y0,drawPixel@y
  3370  00033E  C022  F019         	movff	drawCircle@color,drawPixel@color
  3371  000342  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3372  000346  501C               	movf	drawCircle@x0,w,c
  3373  000348  2420               	addwf	drawCircle@r,w,c
  3374  00034A  ECD1  F009         	call	_drawPixel
  3375                           
  3376                           ;ST7735_TFT.c: 535: drawPixel(x0-r, y0 , color);
  3377  00034E  C01E  F018         	movff	drawCircle@y0,drawPixel@y
  3378  000352  C022  F019         	movff	drawCircle@color,drawPixel@color
  3379  000356  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3380  00035A  5020               	movf	drawCircle@r,w,c
  3381  00035C  0800               	sublw	0
  3382  00035E  241C               	addwf	drawCircle@x0,w,c
  3383  000360  ECD1  F009         	call	_drawPixel
  3384                           
  3385                           ;ST7735_TFT.c: 536: while (x < y) {
  3386  000364  D078               	goto	l3595
  3387  000366                     l3567:
  3388                           
  3389                           ;ST7735_TFT.c: 537: if (f >= 0) {
  3390  000366  BE2B               	btfsc	drawCircle@f+1,7,c
  3391  000368  D00B               	goto	l159
  3392                           
  3393                           ;ST7735_TFT.c: 538: y--;
  3394  00036A  062E               	decf	drawCircle@y,f,c
  3395  00036C  A0D8               	btfss	status,0,c
  3396  00036E  062F               	decf	drawCircle@y+1,f,c
  3397                           
  3398                           ;ST7735_TFT.c: 539: ddF_y += 2;
  3399  000370  0E02               	movlw	2
  3400  000372  2628               	addwf	drawCircle@ddF_y,f,c
  3401  000374  0E00               	movlw	0
  3402  000376  2229               	addwfc	drawCircle@ddF_y+1,f,c
  3403                           
  3404                           ;ST7735_TFT.c: 540: f += ddF_y;
  3405  000378  5028               	movf	drawCircle@ddF_y,w,c
  3406  00037A  262A               	addwf	drawCircle@f,f,c
  3407  00037C  5029               	movf	drawCircle@ddF_y+1,w,c
  3408  00037E  222B               	addwfc	drawCircle@f+1,f,c
  3409  000380                     l159:
  3410                           
  3411                           ;ST7735_TFT.c: 541: }
  3412                           ;ST7735_TFT.c: 542: x++;
  3413  000380  4A2C               	infsnz	drawCircle@x,f,c
  3414  000382  2A2D               	incf	drawCircle@x+1,f,c
  3415                           
  3416                           ;ST7735_TFT.c: 543: ddF_x += 2;
  3417  000384  0E02               	movlw	2
  3418  000386  2626               	addwf	drawCircle@ddF_x,f,c
  3419  000388  0E00               	movlw	0
  3420  00038A  2227               	addwfc	drawCircle@ddF_x+1,f,c
  3421                           
  3422                           ;ST7735_TFT.c: 544: f += ddF_x;
  3423  00038C  5026               	movf	drawCircle@ddF_x,w,c
  3424  00038E  262A               	addwf	drawCircle@f,f,c
  3425  000390  5027               	movf	drawCircle@ddF_x+1,w,c
  3426  000392  222B               	addwfc	drawCircle@f+1,f,c
  3427                           
  3428                           ;ST7735_TFT.c: 545: drawPixel(x0 + x, y0 + y, color);
  3429  000394  501E               	movf	drawCircle@y0,w,c
  3430  000396  242E               	addwf	drawCircle@y,w,c
  3431  000398  6E18               	movwf	drawPixel@y,c
  3432  00039A  C022  F019         	movff	drawCircle@color,drawPixel@color
  3433  00039E  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3434  0003A2  501C               	movf	drawCircle@x0,w,c
  3435  0003A4  242C               	addwf	drawCircle@x,w,c
  3436  0003A6  ECD1  F009         	call	_drawPixel
  3437                           
  3438                           ;ST7735_TFT.c: 546: drawPixel(x0 - x, y0 + y, color);
  3439  0003AA  501E               	movf	drawCircle@y0,w,c
  3440  0003AC  242E               	addwf	drawCircle@y,w,c
  3441  0003AE  6E18               	movwf	drawPixel@y,c
  3442  0003B0  C022  F019         	movff	drawCircle@color,drawPixel@color
  3443  0003B4  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3444  0003B8  502C               	movf	drawCircle@x,w,c
  3445  0003BA  0800               	sublw	0
  3446  0003BC  241C               	addwf	drawCircle@x0,w,c
  3447  0003BE  ECD1  F009         	call	_drawPixel
  3448                           
  3449                           ;ST7735_TFT.c: 547: drawPixel(x0 + x, y0 - y, color);
  3450  0003C2  502E               	movf	drawCircle@y,w,c
  3451  0003C4  0800               	sublw	0
  3452  0003C6  241E               	addwf	drawCircle@y0,w,c
  3453  0003C8  6E18               	movwf	drawPixel@y,c
  3454  0003CA  C022  F019         	movff	drawCircle@color,drawPixel@color
  3455  0003CE  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3456  0003D2  501C               	movf	drawCircle@x0,w,c
  3457  0003D4  242C               	addwf	drawCircle@x,w,c
  3458  0003D6  ECD1  F009         	call	_drawPixel
  3459                           
  3460                           ;ST7735_TFT.c: 548: drawPixel(x0 - x, y0 - y, color);
  3461  0003DA  502E               	movf	drawCircle@y,w,c
  3462  0003DC  0800               	sublw	0
  3463  0003DE  241E               	addwf	drawCircle@y0,w,c
  3464  0003E0  6E18               	movwf	drawPixel@y,c
  3465  0003E2  C022  F019         	movff	drawCircle@color,drawPixel@color
  3466  0003E6  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3467  0003EA  502C               	movf	drawCircle@x,w,c
  3468  0003EC  0800               	sublw	0
  3469  0003EE  241C               	addwf	drawCircle@x0,w,c
  3470  0003F0  ECD1  F009         	call	_drawPixel
  3471                           
  3472                           ;ST7735_TFT.c: 549: drawPixel(x0 + y, y0 + x, color);
  3473  0003F4  501E               	movf	drawCircle@y0,w,c
  3474  0003F6  242C               	addwf	drawCircle@x,w,c
  3475  0003F8  6E18               	movwf	drawPixel@y,c
  3476  0003FA  C022  F019         	movff	drawCircle@color,drawPixel@color
  3477  0003FE  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3478  000402  501C               	movf	drawCircle@x0,w,c
  3479  000404  242E               	addwf	drawCircle@y,w,c
  3480  000406  ECD1  F009         	call	_drawPixel
  3481                           
  3482                           ;ST7735_TFT.c: 550: drawPixel(x0 - y, y0 + x, color);
  3483  00040A  501E               	movf	drawCircle@y0,w,c
  3484  00040C  242C               	addwf	drawCircle@x,w,c
  3485  00040E  6E18               	movwf	drawPixel@y,c
  3486  000410  C022  F019         	movff	drawCircle@color,drawPixel@color
  3487  000414  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3488  000418  502E               	movf	drawCircle@y,w,c
  3489  00041A  0800               	sublw	0
  3490  00041C  241C               	addwf	drawCircle@x0,w,c
  3491  00041E  ECD1  F009         	call	_drawPixel
  3492                           
  3493                           ;ST7735_TFT.c: 551: drawPixel(x0 + y, y0 - x, color);
  3494  000422  502C               	movf	drawCircle@x,w,c
  3495  000424  0800               	sublw	0
  3496  000426  241E               	addwf	drawCircle@y0,w,c
  3497  000428  6E18               	movwf	drawPixel@y,c
  3498  00042A  C022  F019         	movff	drawCircle@color,drawPixel@color
  3499  00042E  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3500  000432  501C               	movf	drawCircle@x0,w,c
  3501  000434  242E               	addwf	drawCircle@y,w,c
  3502  000436  ECD1  F009         	call	_drawPixel
  3503                           
  3504                           ;ST7735_TFT.c: 552: drawPixel(x0 - y, y0 - x, color);
  3505  00043A  502C               	movf	drawCircle@x,w,c
  3506  00043C  0800               	sublw	0
  3507  00043E  241E               	addwf	drawCircle@y0,w,c
  3508  000440  6E18               	movwf	drawPixel@y,c
  3509  000442  C022  F019         	movff	drawCircle@color,drawPixel@color
  3510  000446  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3511  00044A  502E               	movf	drawCircle@y,w,c
  3512  00044C  0800               	sublw	0
  3513  00044E  241C               	addwf	drawCircle@x0,w,c
  3514  000450  ECD1  F009         	call	_drawPixel
  3515  000454  D000               	goto	l3595
  3516  000456                     l3595:
  3517  000456  502E               	movf	drawCircle@y,w,c
  3518  000458  5C2C               	subwf	drawCircle@x,w,c
  3519  00045A  502D               	movf	drawCircle@x+1,w,c
  3520  00045C  0A80               	xorlw	128
  3521  00045E  6E24               	movwf	??_drawCircle& (0+255),c
  3522  000460  502F               	movf	drawCircle@y+1,w,c
  3523  000462  0A80               	xorlw	128
  3524  000464  5824               	subwfb	??_drawCircle& (0+255),w,c
  3525  000466  A0D8               	btfss	status,0,c
  3526  000468  D77E               	goto	l3567
  3527  00046A  0012               	return		;funcret
  3528  00046C                     __end_of_drawCircle:
  3529                           	opt stack 0
  3530                           tblptru	equ	0xFF8
  3531                           tblptrh	equ	0xFF7
  3532                           tblptrl	equ	0xFF6
  3533                           tablat	equ	0xFF5
  3534                           prodh	equ	0xFF4
  3535                           prodl	equ	0xFF3
  3536                           intcon	equ	0xFF2
  3537                           intcon2	equ	0xFF1
  3538                           postinc0	equ	0xFEE
  3539                           wreg	equ	0xFE8
  3540                           postdec1	equ	0xFE5
  3541                           fsr1l	equ	0xFE1
  3542                           indf2	equ	0xFDF
  3543                           postinc2	equ	0xFDE
  3544                           postdec2	equ	0xFDD
  3545                           fsr2h	equ	0xFDA
  3546                           fsr2l	equ	0xFD9
  3547                           status	equ	0xFD8
  3548                           
  3549 ;; *************** function _Wait_Half_Second *****************
  3550 ;; Defined at:
  3551 ;;		line 283 in file "Lab10p2.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;		None               void
  3558 ;; Registers used:
  3559 ;;		wreg, status,2
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;Total ram usage:        0 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    3
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_main
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text10
  3580  001462                     __ptext10:
  3581                           	opt stack 0
  3582  001462                     _Wait_Half_Second:
  3583                           	opt stack 27
  3584                           
  3585                           ;Lab10p2.c: 285: T0CON = 0x02;
  3586                           
  3587                           ;incstack = 0
  3588  001462  0E02               	movlw	2
  3589  001464  6ED5               	movwf	4053,c	;volatile
  3590                           
  3591                           ;Lab10p2.c: 286: TMR0H = 0x0B;
  3592  001466  0E0B               	movlw	11
  3593  001468  6ED7               	movwf	4055,c	;volatile
  3594                           
  3595                           ;Lab10p2.c: 287: TMR0L = 0xDB;
  3596  00146A  0EDB               	movlw	219
  3597  00146C  6ED6               	movwf	4054,c	;volatile
  3598                           
  3599                           ;Lab10p2.c: 288: INTCONbits.TMR0IF = 0;
  3600  00146E  94F2               	bcf	intcon,2,c	;volatile
  3601                           
  3602                           ;Lab10p2.c: 289: T0CONbits.TMR0ON = 1;
  3603  001470  8ED5               	bsf	4053,7,c	;volatile
  3604                           
  3605                           ;Lab10p2.c: 290: while (INTCONbits.TMR0IF == 0);
  3606  001472  D000               	goto	l398
  3607  001474                     l398:
  3608  001474  A4F2               	btfss	intcon,2,c	;volatile
  3609  001476  D7FE               	goto	l398
  3610                           
  3611                           ;Lab10p2.c: 291: T0CONbits.TMR0ON = 0;
  3612  001478  9ED5               	bcf	4053,7,c	;volatile
  3613  00147A  0012               	return		;funcret
  3614  00147C                     __end_of_Wait_Half_Second:
  3615                           	opt stack 0
  3616                           tblptru	equ	0xFF8
  3617                           tblptrh	equ	0xFF7
  3618                           tblptrl	equ	0xFF6
  3619                           tablat	equ	0xFF5
  3620                           prodh	equ	0xFF4
  3621                           prodl	equ	0xFF3
  3622                           intcon	equ	0xFF2
  3623                           intcon2	equ	0xFF1
  3624                           postinc0	equ	0xFEE
  3625                           wreg	equ	0xFE8
  3626                           postdec1	equ	0xFE5
  3627                           fsr1l	equ	0xFE1
  3628                           indf2	equ	0xFDF
  3629                           postinc2	equ	0xFDE
  3630                           postdec2	equ	0xFDD
  3631                           fsr2h	equ	0xFDA
  3632                           fsr2l	equ	0xFD9
  3633                           status	equ	0xFD8
  3634                           
  3635 ;; *************** function _Initialize_Screen *****************
  3636 ;; Defined at:
  3637 ;;		line 254 in file "Lab10p2.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;		None               void
  3644 ;; Registers used:
  3645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;Total ram usage:        0 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:   10
  3658 ;; This function calls:
  3659 ;;		_LCD_Reset
  3660 ;;		_TFT_GreenTab_Initialize
  3661 ;;		_drawtext
  3662 ;;		_fillScreen
  3663 ;;		_strcpy
  3664 ;; This function is called by:
  3665 ;;		_main
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text11
  3670  000DEA                     __ptext11:
  3671                           	opt stack 0
  3672  000DEA                     _Initialize_Screen:
  3673                           	opt stack 20
  3674                           
  3675                           ;Lab10p2.c: 256: LCD_Reset();
  3676                           
  3677                           ;incstack = 0
  3678  000DEA  EC53  F00A         	call	_LCD_Reset	;wreg free
  3679                           
  3680                           ;Lab10p2.c: 257: TFT_GreenTab_Initialize();
  3681  000DEE  ECE9  F009         	call	_TFT_GreenTab_Initialize	;wreg free
  3682                           
  3683                           ;Lab10p2.c: 258: fillScreen(0x0000);
  3684  000DF2  0E00               	movlw	0
  3685  000DF4  6E25               	movwf	fillScreen@color+1,c
  3686  000DF6  0E00               	movlw	0
  3687  000DF8  6E24               	movwf	fillScreen@color,c
  3688  000DFA  EC23  F00A         	call	_fillScreen	;wreg free
  3689                           
  3690                           ;Lab10p2.c: 261: txt = buffer;
  3691  000DFE  0EBF               	movlw	low _buffer
  3692  000E00  6E67               	movwf	_txt,c
  3693  000E02  0E00               	movlw	high _buffer
  3694  000E04  6E68               	movwf	_txt+1,c
  3695                           
  3696                           ;Lab10p2.c: 262: strcpy(txt, "ECE3301L Spring 21-S1");
  3697  000E06  C067  F011         	movff	_txt,strcpy@to
  3698  000E0A  C068  F012         	movff	_txt+1,strcpy@to+1
  3699  000E0E  0ED0               	movlw	low STR_2
  3700  000E10  6E13               	movwf	strcpy@from,c
  3701  000E12  0EFF               	movlw	high STR_2
  3702  000E14  6E14               	movwf	strcpy@from+1,c
  3703  000E16  ECB8  F009         	call	_strcpy	;wreg free
  3704                           
  3705                           ;Lab10p2.c: 263: drawtext(2, 2, txt, 0xFFFF, 0x0000, 1);
  3706  000E1A  0E02               	movlw	2
  3707  000E1C  6E39               	movwf	drawtext@y,c
  3708  000E1E  C067  F03A         	movff	_txt,drawtext@_text
  3709  000E22  C068  F03B         	movff	_txt+1,drawtext@_text+1
  3710  000E26  0EFF               	movlw	255
  3711  000E28  6E3D               	movwf	drawtext@color+1,c
  3712  000E2A  683C               	setf	drawtext@color,c
  3713  000E2C  0E00               	movlw	0
  3714  000E2E  6E3F               	movwf	drawtext@bg+1,c
  3715  000E30  0E00               	movlw	0
  3716  000E32  6E3E               	movwf	drawtext@bg,c
  3717  000E34  0E01               	movlw	1
  3718  000E36  6E40               	movwf	drawtext@size,c
  3719  000E38  0E02               	movlw	2
  3720  000E3A  EC89  F005         	call	_drawtext
  3721                           
  3722                           ;Lab10p2.c: 265: strcpy(txt, "LAB 10 ");
  3723  000E3E  C067  F011         	movff	_txt,strcpy@to
  3724  000E42  C068  F012         	movff	_txt+1,strcpy@to+1
  3725  000E46  0EF7               	movlw	low STR_3
  3726  000E48  6E13               	movwf	strcpy@from,c
  3727  000E4A  0EFF               	movlw	high STR_3
  3728  000E4C  6E14               	movwf	strcpy@from+1,c
  3729  000E4E  ECB8  F009         	call	_strcpy	;wreg free
  3730                           
  3731                           ;Lab10p2.c: 266: drawtext(50, 10, txt, 0xFFFF, 0x0000, 1);
  3732  000E52  0E0A               	movlw	10
  3733  000E54  6E39               	movwf	drawtext@y,c
  3734  000E56  C067  F03A         	movff	_txt,drawtext@_text
  3735  000E5A  C068  F03B         	movff	_txt+1,drawtext@_text+1
  3736  000E5E  0EFF               	movlw	255
  3737  000E60  6E3D               	movwf	drawtext@color+1,c
  3738  000E62  683C               	setf	drawtext@color,c
  3739  000E64  0E00               	movlw	0
  3740  000E66  6E3F               	movwf	drawtext@bg+1,c
  3741  000E68  0E00               	movlw	0
  3742  000E6A  6E3E               	movwf	drawtext@bg,c
  3743  000E6C  0E01               	movlw	1
  3744  000E6E  6E40               	movwf	drawtext@size,c
  3745  000E70  0E32               	movlw	50
  3746  000E72  EC89  F005         	call	_drawtext
  3747  000E76  0012               	return		;funcret
  3748  000E78                     __end_of_Initialize_Screen:
  3749                           	opt stack 0
  3750                           tblptru	equ	0xFF8
  3751                           tblptrh	equ	0xFF7
  3752                           tblptrl	equ	0xFF6
  3753                           tablat	equ	0xFF5
  3754                           prodh	equ	0xFF4
  3755                           prodl	equ	0xFF3
  3756                           intcon	equ	0xFF2
  3757                           intcon2	equ	0xFF1
  3758                           postinc0	equ	0xFEE
  3759                           wreg	equ	0xFE8
  3760                           postdec1	equ	0xFE5
  3761                           fsr1l	equ	0xFE1
  3762                           indf2	equ	0xFDF
  3763                           postinc2	equ	0xFDE
  3764                           postdec2	equ	0xFDD
  3765                           fsr2h	equ	0xFDA
  3766                           fsr2l	equ	0xFD9
  3767                           status	equ	0xFD8
  3768                           
  3769 ;; *************** function _strcpy *****************
  3770 ;; Defined at:
  3771 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  to              2   16[COMRAM] PTR unsigned char 
  3774 ;;		 -> NULL(0), buffer(31), 
  3775 ;;  from            2   18[COMRAM] PTR const unsigned char 
  3776 ;;		 -> STR_3(8), STR_2(22), 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  cp              2   20[COMRAM] PTR unsigned char 
  3779 ;;		 -> NULL(0), buffer(31), 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  2   16[COMRAM] PTR unsigned char 
  3782 ;; Registers used:
  3783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;Total ram usage:        6 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    3
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_Initialize_Screen
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text12
  3804  001370                     __ptext12:
  3805                           	opt stack 0
  3806  001370                     _strcpy:
  3807                           	opt stack 26
  3808                           
  3809                           ;incstack = 0
  3810  001370  C011  F015         	movff	strcpy@to,strcpy@cp
  3811  001374  C012  F016         	movff	strcpy@to+1,strcpy@cp+1
  3812  001378  D005               	goto	l2621
  3813  00137A                     l2619:
  3814  00137A  4A15               	infsnz	strcpy@cp,f,c
  3815  00137C  2A16               	incf	strcpy@cp+1,f,c
  3816  00137E  4A13               	infsnz	strcpy@from,f,c
  3817  001380  2A14               	incf	strcpy@from+1,f,c
  3818  001382  D000               	goto	l2621
  3819  001384                     l2621:
  3820  001384  C013  FFF6         	movff	strcpy@from,tblptrl
  3821  001388  C014  FFF7         	movff	strcpy@from+1,tblptrh
  3822  00138C                     	if	0	;tblptru may be non-zero
  3823  00138C                     	endif
  3824  00138C                     	if	0	;tblptru may be non-zero
  3825  00138C                     	endif
  3826  00138C  C015  FFD9         	movff	strcpy@cp,fsr2l
  3827  001390  C016  FFDA         	movff	strcpy@cp+1,fsr2h
  3828  001394  0008               	tblrd		*
  3829  001396  CFF5 FFDF          	movff	tablat,indf2
  3830  00139A  50DF               	movf	indf2,w,c
  3831  00139C  A4D8               	btfss	status,2,c
  3832  00139E  D7ED               	goto	l2619
  3833                           
  3834                           ;	Return value of _strcpy is never used
  3835  0013A0  0012               	return		;funcret
  3836  0013A2                     __end_of_strcpy:
  3837                           	opt stack 0
  3838                           tblptru	equ	0xFF8
  3839                           tblptrh	equ	0xFF7
  3840                           tblptrl	equ	0xFF6
  3841                           tablat	equ	0xFF5
  3842                           prodh	equ	0xFF4
  3843                           prodl	equ	0xFF3
  3844                           intcon	equ	0xFF2
  3845                           intcon2	equ	0xFF1
  3846                           postinc0	equ	0xFEE
  3847                           wreg	equ	0xFE8
  3848                           postdec1	equ	0xFE5
  3849                           fsr1l	equ	0xFE1
  3850                           indf2	equ	0xFDF
  3851                           postinc2	equ	0xFDE
  3852                           postdec2	equ	0xFDD
  3853                           fsr2h	equ	0xFDA
  3854                           fsr2l	equ	0xFD9
  3855                           status	equ	0xFD8
  3856                           
  3857 ;; *************** function _fillScreen *****************
  3858 ;; Defined at:
  3859 ;;		line 619 in file "ST7735_TFT.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  color           2   35[COMRAM] unsigned int 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;		None               void
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;Total ram usage:        2 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    7
  3880 ;; This function calls:
  3881 ;;		_fillRectangle
  3882 ;; This function is called by:
  3883 ;;		_Initialize_Screen
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text13
  3888  001446                     __ptext13:
  3889                           	opt stack 0
  3890  001446                     _fillScreen:
  3891                           	opt stack 22
  3892                           
  3893                           ;ST7735_TFT.c: 621: fillRectangle(0, 0, 128, 160, color);
  3894                           
  3895                           ;incstack = 0
  3896  001446  0E00               	movlw	0
  3897  001448  6E18               	movwf	fillRectangle@y,c
  3898  00144A  0E80               	movlw	128
  3899  00144C  6E19               	movwf	fillRectangle@w,c
  3900  00144E  0EA0               	movlw	160
  3901  001450  6E1A               	movwf	fillRectangle@h,c
  3902  001452  C024  F01B         	movff	fillScreen@color,fillRectangle@color
  3903  001456  C025  F01C         	movff	fillScreen@color+1,fillRectangle@color+1
  3904  00145A  0E00               	movlw	0
  3905  00145C  EC87  F006         	call	_fillRectangle
  3906  001460  0012               	return		;funcret
  3907  001462                     __end_of_fillScreen:
  3908                           	opt stack 0
  3909                           tblptru	equ	0xFF8
  3910                           tblptrh	equ	0xFF7
  3911                           tblptrl	equ	0xFF6
  3912                           tablat	equ	0xFF5
  3913                           prodh	equ	0xFF4
  3914                           prodl	equ	0xFF3
  3915                           intcon	equ	0xFF2
  3916                           intcon2	equ	0xFF1
  3917                           postinc0	equ	0xFEE
  3918                           wreg	equ	0xFE8
  3919                           postdec1	equ	0xFE5
  3920                           fsr1l	equ	0xFE1
  3921                           indf2	equ	0xFDF
  3922                           postinc2	equ	0xFDE
  3923                           postdec2	equ	0xFDD
  3924                           fsr2h	equ	0xFDA
  3925                           fsr2l	equ	0xFD9
  3926                           status	equ	0xFD8
  3927                           
  3928 ;; *************** function _fillRectangle *****************
  3929 ;; Defined at:
  3930 ;;		line 503 in file "ST7735_TFT.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  x               1    wreg     unsigned char 
  3933 ;;  y               1   23[COMRAM] unsigned char 
  3934 ;;  w               1   24[COMRAM] unsigned char 
  3935 ;;  h               1   25[COMRAM] unsigned char 
  3936 ;;  color           2   26[COMRAM] unsigned int 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  x               1   34[COMRAM] unsigned char 
  3939 ;;  lo              1   33[COMRAM] unsigned char 
  3940 ;;  hi              1   32[COMRAM] unsigned char 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;		None               void
  3943 ;; Registers used:
  3944 ;;		wreg, status,2, status,0, cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3950 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;Total ram usage:       12 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    6
  3957 ;; This function calls:
  3958 ;;		_setAddrWindow
  3959 ;;		_spiwrite
  3960 ;; This function is called by:
  3961 ;;		_fillScreen
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text14
  3966  000D0E                     __ptext14:
  3967                           	opt stack 0
  3968  000D0E                     _fillRectangle:
  3969                           	opt stack 22
  3970                           
  3971                           ;incstack = 0
  3972                           ;fillRectangle@x stored from wreg
  3973  000D0E  6E23               	movwf	fillRectangle@x,c
  3974                           
  3975                           ;ST7735_TFT.c: 505: unsigned char hi, lo;
  3976                           ;ST7735_TFT.c: 506: if((x >= 128) || (y >= 160))
  3977  000D10  0E80               	movlw	128
  3978  000D12  6023               	cpfslt	fillRectangle@x,c
  3979  000D14  D069               	goto	l148
  3980  000D16  0E9F               	movlw	159
  3981  000D18  6418               	cpfsgt	fillRectangle@y,c
  3982  000D1A  D001               	goto	l3419
  3983                           
  3984                           ;ST7735_TFT.c: 507: return;
  3985  000D1C  D065               	goto	l148
  3986  000D1E                     l3419:
  3987                           
  3988                           ;ST7735_TFT.c: 508: if((x + w - 1) >= 128)
  3989  000D1E  0EFF               	movlw	255
  3990  000D20  6E1D               	movwf	??_fillRectangle& (0+255),c
  3991  000D22  0EFF               	movlw	255
  3992  000D24  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  3993  000D26  5019               	movf	fillRectangle@w,w,c
  3994  000D28  C023  F01F         	movff	fillRectangle@x,??_fillRectangle+2
  3995  000D2C  6A20               	clrf	(??_fillRectangle+3)& (0+255),c
  3996  000D2E  261F               	addwf	??_fillRectangle+2,f,c
  3997  000D30  0E00               	movlw	0
  3998  000D32  2220               	addwfc	??_fillRectangle+3,f,c
  3999  000D34  501D               	movf	??_fillRectangle,w,c
  4000  000D36  261F               	addwf	??_fillRectangle+2,f,c
  4001  000D38  501E               	movf	??_fillRectangle+1,w,c
  4002  000D3A  2220               	addwfc	??_fillRectangle+3,f,c
  4003  000D3C  BE20               	btfsc	??_fillRectangle+3,7,c
  4004  000D3E  D00A               	goto	l149
  4005  000D40  5020               	movf	??_fillRectangle+3,w,c
  4006  000D42  E104               	bnz	u2400
  4007  000D44  0E80               	movlw	128
  4008  000D46  5C1F               	subwf	??_fillRectangle+2,w,c
  4009  000D48  A0D8               	btfss	status,0,c
  4010  000D4A  D004               	goto	l149
  4011  000D4C                     u2400:
  4012                           
  4013                           ;ST7735_TFT.c: 509: w = 128 - x;
  4014  000D4C  5023               	movf	fillRectangle@x,w,c
  4015  000D4E  0800               	sublw	0
  4016  000D50  0F80               	addlw	128
  4017  000D52  6E19               	movwf	fillRectangle@w,c
  4018  000D54                     l149:
  4019                           
  4020                           ;ST7735_TFT.c: 510: if((y + h - 1) >= 160)
  4021  000D54  0EFF               	movlw	255
  4022  000D56  6E1D               	movwf	??_fillRectangle& (0+255),c
  4023  000D58  0EFF               	movlw	255
  4024  000D5A  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  4025  000D5C  501A               	movf	fillRectangle@h,w,c
  4026  000D5E  C018  F01F         	movff	fillRectangle@y,??_fillRectangle+2
  4027  000D62  6A20               	clrf	(??_fillRectangle+3)& (0+255),c
  4028  000D64  261F               	addwf	??_fillRectangle+2,f,c
  4029  000D66  0E00               	movlw	0
  4030  000D68  2220               	addwfc	??_fillRectangle+3,f,c
  4031  000D6A  501D               	movf	??_fillRectangle,w,c
  4032  000D6C  261F               	addwf	??_fillRectangle+2,f,c
  4033  000D6E  501E               	movf	??_fillRectangle+1,w,c
  4034  000D70  2220               	addwfc	??_fillRectangle+3,f,c
  4035  000D72  BE20               	btfsc	??_fillRectangle+3,7,c
  4036  000D74  D00B               	goto	l3425
  4037  000D76  5020               	movf	??_fillRectangle+3,w,c
  4038  000D78  E104               	bnz	u2410
  4039  000D7A  0EA0               	movlw	160
  4040  000D7C  5C1F               	subwf	??_fillRectangle+2,w,c
  4041  000D7E  A0D8               	btfss	status,0,c
  4042  000D80  D005               	goto	l3425
  4043  000D82                     u2410:
  4044                           
  4045                           ;ST7735_TFT.c: 511: h = 160 - y;
  4046  000D82  5018               	movf	fillRectangle@y,w,c
  4047  000D84  0800               	sublw	0
  4048  000D86  0FA0               	addlw	160
  4049  000D88  6E1A               	movwf	fillRectangle@h,c
  4050  000D8A  D000               	goto	l3425
  4051  000D8C                     l3425:
  4052                           
  4053                           ;ST7735_TFT.c: 512: setAddrWindow(x, y, x+w-1, y+h-1);
  4054  000D8C  C018  F014         	movff	fillRectangle@y,setAddrWindow@y0
  4055  000D90  5023               	movf	fillRectangle@x,w,c
  4056  000D92  2419               	addwf	fillRectangle@w,w,c
  4057  000D94  6E1D               	movwf	??_fillRectangle& (0+255),c
  4058  000D96  041D               	decf	??_fillRectangle,w,c
  4059  000D98  6E15               	movwf	setAddrWindow@x1,c
  4060  000D9A  5018               	movf	fillRectangle@y,w,c
  4061  000D9C  241A               	addwf	fillRectangle@h,w,c
  4062  000D9E  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  4063  000DA0  041E               	decf	??_fillRectangle+1,w,c
  4064  000DA2  6E16               	movwf	setAddrWindow@y1,c
  4065  000DA4  5023               	movf	fillRectangle@x,w,c
  4066  000DA6  EC0E  F009         	call	_setAddrWindow
  4067                           
  4068                           ;ST7735_TFT.c: 513: hi = color >> 8; lo = color;
  4069  000DAA  501C               	movf	fillRectangle@color+1,w,c
  4070  000DAC  6E21               	movwf	fillRectangle@hi,c
  4071  000DAE  C01B  F022         	movff	fillRectangle@color,fillRectangle@lo
  4072                           
  4073                           ;ST7735_TFT.c: 514: PORTCbits.RC0 = 1;
  4074  000DB2  8082               	bsf	3970,0,c	;volatile
  4075                           
  4076                           ;ST7735_TFT.c: 515: PORTCbits.RC1 = 0;
  4077  000DB4  9282               	bcf	3970,1,c	;volatile
  4078                           
  4079                           ;ST7735_TFT.c: 517: for(y=h; y>0; y--) {
  4080  000DB6  C01A  F018         	movff	fillRectangle@h,fillRectangle@y
  4081  000DBA                     l3437:
  4082  000DBA  5018               	movf	fillRectangle@y,w,c
  4083  000DBC  B4D8               	btfsc	status,2,c
  4084  000DBE  D013               	goto	l152
  4085  000DC0  D001               	goto	l151
  4086  000DC2  D011               	goto	l152
  4087  000DC4                     l151:
  4088                           
  4089                           ;ST7735_TFT.c: 518: for(x = w; x > 0; x--) {
  4090  000DC4  C019  F023         	movff	fillRectangle@w,fillRectangle@x
  4091  000DC8                     l3441:
  4092  000DC8  5023               	movf	fillRectangle@x,w,c
  4093  000DCA  B4D8               	btfsc	status,2,c
  4094  000DCC  D00A               	goto	l3451
  4095  000DCE  D001               	goto	l3445
  4096  000DD0  D008               	goto	l3451
  4097  000DD2                     l3445:
  4098                           
  4099                           ;ST7735_TFT.c: 519: spiwrite(hi);
  4100  000DD2  5021               	movf	fillRectangle@hi,w,c
  4101  000DD4  EC49  F00A         	call	_spiwrite
  4102                           
  4103                           ;ST7735_TFT.c: 520: spiwrite(lo);
  4104  000DD8  5022               	movf	fillRectangle@lo,w,c
  4105  000DDA  EC49  F00A         	call	_spiwrite
  4106  000DDE  0623               	decf	fillRectangle@x,f,c
  4107  000DE0  D7F3               	goto	l3441
  4108  000DE2                     l3451:
  4109  000DE2  0618               	decf	fillRectangle@y,f,c
  4110  000DE4  D7EA               	goto	l3437
  4111  000DE6                     l152:
  4112                           
  4113                           ;ST7735_TFT.c: 521: }
  4114                           ;ST7735_TFT.c: 522: }
  4115                           ;ST7735_TFT.c: 523: PORTCbits.RC1 = 1;
  4116  000DE6  8282               	bsf	3970,1,c	;volatile
  4117  000DE8                     l148:
  4118  000DE8  0012               	return		;funcret
  4119  000DEA                     __end_of_fillRectangle:
  4120                           	opt stack 0
  4121                           tblptru	equ	0xFF8
  4122                           tblptrh	equ	0xFF7
  4123                           tblptrl	equ	0xFF6
  4124                           tablat	equ	0xFF5
  4125                           prodh	equ	0xFF4
  4126                           prodl	equ	0xFF3
  4127                           intcon	equ	0xFF2
  4128                           intcon2	equ	0xFF1
  4129                           postinc0	equ	0xFEE
  4130                           wreg	equ	0xFE8
  4131                           postdec1	equ	0xFE5
  4132                           fsr1l	equ	0xFE1
  4133                           indf2	equ	0xFDF
  4134                           postinc2	equ	0xFDE
  4135                           postdec2	equ	0xFDD
  4136                           fsr2h	equ	0xFDA
  4137                           fsr2l	equ	0xFD9
  4138                           status	equ	0xFD8
  4139                           
  4140 ;; *************** function _drawtext *****************
  4141 ;; Defined at:
  4142 ;;		line 474 in file "ST7735_TFT.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  x               1    wreg     unsigned char 
  4145 ;;  y               1   56[COMRAM] unsigned char 
  4146 ;;  _text           2   57[COMRAM] PTR unsigned char 
  4147 ;;		 -> NULL(0), buffer(31), txt1(84), 
  4148 ;;  color           2   59[COMRAM] unsigned int 
  4149 ;;  bg              2   61[COMRAM] unsigned int 
  4150 ;;  size            1   63[COMRAM] unsigned char 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  x               1    0[BANK0 ] unsigned char 
  4153 ;;  i               2    3[BANK0 ] unsigned int 
  4154 ;;  textsize        2    1[BANK0 ] unsigned int 
  4155 ;;  cursor_x        1    6[BANK0 ] unsigned char 
  4156 ;;  cursor_y        1    5[BANK0 ] unsigned char 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;		None               void
  4159 ;; Registers used:
  4160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4166 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Totals:        10       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;Total ram usage:       17 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    9
  4173 ;; This function calls:
  4174 ;;		_drawChar
  4175 ;;		_strlen
  4176 ;; This function is called by:
  4177 ;;		_main
  4178 ;;		_Initialize_Screen
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text15
  4183  000B12                     __ptext15:
  4184                           	opt stack 0
  4185  000B12                     _drawtext:
  4186                           	opt stack 21
  4187                           
  4188                           ;incstack = 0
  4189                           ;drawtext@x stored from wreg
  4190  000B12  0100               	movlb	0	; () banked
  4191  000B14  6FDE               	movwf	drawtext@x& (0+255),b
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;ST7735_TFT.c: 476: unsigned char cursor_x, cursor_y;
  4195                           ;ST7735_TFT.c: 477: unsigned int textsize, i;
  4196                           ;ST7735_TFT.c: 478: cursor_x = x, cursor_y = y;
  4197  000B16  C0DE  F0E4         	movff	drawtext@x,drawtext@cursor_x
  4198                           
  4199                           ; BSR set to: 0
  4200  000B1A  C039  F0E3         	movff	drawtext@y,drawtext@cursor_y
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;ST7735_TFT.c: 479: textsize = strlen(_text);
  4204  000B1E  C03A  F011         	movff	drawtext@_text,strlen@s
  4205  000B22  C03B  F012         	movff	drawtext@_text+1,strlen@s+1
  4206  000B26  EC7A  F009         	call	_strlen	;wreg free
  4207  000B2A  C011  F0DF         	movff	?_strlen,drawtext@textsize
  4208  000B2E  C012  F0E0         	movff	?_strlen+1,drawtext@textsize+1
  4209                           
  4210                           ;ST7735_TFT.c: 480: for(i = 0; i < textsize; i++){
  4211  000B32  0E00               	movlw	0
  4212  000B34  0100               	movlb	0	; () banked
  4213  000B36  6FE2               	movwf	(drawtext@i+1)& (0+255),b
  4214  000B38  0E00               	movlw	0
  4215  000B3A  6FE1               	movwf	drawtext@i& (0+255),b
  4216  000B3C  D064               	goto	l3495
  4217  000B3E                     l3469:
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;ST7735_TFT.c: 481: if(wrap && ((cursor_x + size * 5) > 128)){
  4221  000B3E  505C               	movf	_wrap,w,c
  4222  000B40  B4D8               	btfsc	status,2,c
  4223  000B42  D034               	goto	l3485
  4224                           
  4225                           ; BSR set to: 0
  4226  000B44  5040               	movf	drawtext@size,w,c
  4227  000B46  0D05               	mullw	5
  4228  000B48  0100               	movlb	0	; () banked
  4229  000B4A  51E4               	movf	drawtext@cursor_x& (0+255),w,b
  4230  000B4C  6E41               	movwf	??_drawtext& (0+255),c
  4231  000B4E  6A42               	clrf	(??_drawtext+1)& (0+255),c
  4232  000B50  50F3               	movf	prodl,w,c
  4233  000B52  2641               	addwf	??_drawtext,f,c
  4234  000B54  50F4               	movf	prodh,w,c
  4235  000B56  2242               	addwfc	??_drawtext+1,f,c
  4236  000B58  BE42               	btfsc	??_drawtext+1,7,c
  4237  000B5A  D028               	goto	l3485
  4238  000B5C  5042               	movf	??_drawtext+1,w,c
  4239  000B5E  E104               	bnz	u2470
  4240  000B60  0E81               	movlw	129
  4241  000B62  5C41               	subwf	??_drawtext,w,c
  4242  000B64  A0D8               	btfss	status,0,c
  4243  000B66  D022               	goto	l3485
  4244  000B68                     u2470:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;ST7735_TFT.c: 482: cursor_x = 0;
  4248  000B68  0E00               	movlw	0
  4249  000B6A  0100               	movlb	0	; () banked
  4250  000B6C  6FE4               	movwf	drawtext@cursor_x& (0+255),b
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;ST7735_TFT.c: 483: cursor_y = cursor_y + size * 7 + 3 ;
  4254  000B6E  5040               	movf	drawtext@size,w,c
  4255  000B70  0D07               	mullw	7
  4256  000B72  50F3               	movf	prodl,w,c
  4257  000B74  0100               	movlb	0	; () banked
  4258  000B76  25E3               	addwf	drawtext@cursor_y& (0+255),w,b
  4259  000B78  0F03               	addlw	3
  4260  000B7A  0100               	movlb	0	; () banked
  4261  000B7C  6FE3               	movwf	drawtext@cursor_y& (0+255),b
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;ST7735_TFT.c: 484: if(cursor_y > 160) cursor_y = 160;
  4265  000B7E  0EA0               	movlw	160
  4266  000B80  0100               	movlb	0	; () banked
  4267  000B82  65E3               	cpfsgt	drawtext@cursor_y& (0+255),b
  4268  000B84  D004               	goto	l3481
  4269                           
  4270                           ; BSR set to: 0
  4271  000B86  0EA0               	movlw	160
  4272  000B88  0100               	movlb	0	; () banked
  4273  000B8A  6FE3               	movwf	drawtext@cursor_y& (0+255),b
  4274  000B8C  D000               	goto	l3481
  4275  000B8E                     l3481:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;ST7735_TFT.c: 485: if(_text[i] == 0x20) goto _skip; }
  4279  000B8E  0100               	movlb	0	; () banked
  4280  000B90  51E1               	movf	drawtext@i& (0+255),w,b
  4281  000B92  243A               	addwf	drawtext@_text,w,c
  4282  000B94  6ED9               	movwf	fsr2l,c
  4283  000B96  0100               	movlb	0	; () banked
  4284  000B98  51E2               	movf	(drawtext@i+1)& (0+255),w,b
  4285  000B9A  203B               	addwfc	drawtext@_text+1,w,c
  4286  000B9C  6EDA               	movwf	fsr2h,c
  4287  000B9E  0E20               	movlw	32
  4288  000BA0  18DE               	xorwf	postinc2,w,c
  4289  000BA2  B4D8               	btfsc	status,2,c
  4290  000BA4  D02C               	goto	l3493
  4291  000BA6  D002               	goto	l3485
  4292                           
  4293                           ; BSR set to: 0
  4294  000BA8  D02A               	goto	l3493
  4295                           
  4296                           ; BSR set to: 0
  4297  000BAA  D000               	goto	l3485
  4298  000BAC                     l3485:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;ST7735_TFT.c: 486: drawChar(cursor_x, cursor_y, _text[i], color, bg, size);
  4302  000BAC  C0E3  F02E         	movff	drawtext@cursor_y,drawChar@y
  4303  000BB0  0100               	movlb	0	; () banked
  4304  000BB2  51E1               	movf	drawtext@i& (0+255),w,b
  4305  000BB4  243A               	addwf	drawtext@_text,w,c
  4306  000BB6  6ED9               	movwf	fsr2l,c
  4307  000BB8  0100               	movlb	0	; () banked
  4308  000BBA  51E2               	movf	(drawtext@i+1)& (0+255),w,b
  4309  000BBC  203B               	addwfc	drawtext@_text+1,w,c
  4310  000BBE  6EDA               	movwf	fsr2h,c
  4311  000BC0  50DF               	movf	indf2,w,c
  4312  000BC2  6E2F               	movwf	drawChar@c,c
  4313  000BC4  C03C  F030         	movff	drawtext@color,drawChar@color
  4314  000BC8  C03D  F031         	movff	drawtext@color+1,drawChar@color+1
  4315  000BCC  C03E  F032         	movff	drawtext@bg,drawChar@bg
  4316  000BD0  C03F  F033         	movff	drawtext@bg+1,drawChar@bg+1
  4317  000BD4  C040  F034         	movff	drawtext@size,drawChar@size
  4318  000BD8  0100               	movlb	0	; () banked
  4319  000BDA  51E4               	movf	drawtext@cursor_x& (0+255),w,b
  4320  000BDC  ECBA  F003         	call	_drawChar
  4321                           
  4322                           ;ST7735_TFT.c: 487: cursor_x = cursor_x + size * 6;
  4323  000BE0  5040               	movf	drawtext@size,w,c
  4324  000BE2  0D06               	mullw	6
  4325  000BE4  50F3               	movf	prodl,w,c
  4326  000BE6  0100               	movlb	0	; () banked
  4327  000BE8  25E4               	addwf	drawtext@cursor_x& (0+255),w,b
  4328  000BEA  0100               	movlb	0	; () banked
  4329  000BEC  6FE4               	movwf	drawtext@cursor_x& (0+255),b
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;ST7735_TFT.c: 488: if(cursor_x > 128) cursor_x = 128;
  4333  000BEE  0E80               	movlw	128
  4334  000BF0  0100               	movlb	0	; () banked
  4335  000BF2  65E4               	cpfsgt	drawtext@cursor_x& (0+255),b
  4336  000BF4  D004               	goto	l3493
  4337                           
  4338                           ; BSR set to: 0
  4339  000BF6  0E80               	movlw	128
  4340  000BF8  0100               	movlb	0	; () banked
  4341  000BFA  6FE4               	movwf	drawtext@cursor_x& (0+255),b
  4342                           
  4343                           ; BSR set to: 0
  4344  000BFC  D000               	goto	l3493
  4345  000BFE                     l3493:
  4346                           
  4347                           ; BSR set to: 0
  4348  000BFE  0100               	movlb	0	; () banked
  4349  000C00  4BE1               	infsnz	drawtext@i& (0+255),f,b
  4350  000C02  2BE2               	incf	(drawtext@i+1)& (0+255),f,b
  4351  000C04  D000               	goto	l3495
  4352  000C06                     l3495:
  4353                           
  4354                           ; BSR set to: 0
  4355  000C06  0100               	movlb	0	; () banked
  4356  000C08  51DF               	movf	drawtext@textsize& (0+255),w,b
  4357  000C0A  0100               	movlb	0	; () banked
  4358  000C0C  5DE1               	subwf	drawtext@i& (0+255),w,b
  4359  000C0E  0100               	movlb	0	; () banked
  4360  000C10  51E0               	movf	(drawtext@textsize+1)& (0+255),w,b
  4361  000C12  0100               	movlb	0	; () banked
  4362  000C14  59E2               	subwfb	(drawtext@i+1)& (0+255),w,b
  4363  000C16  A0D8               	btfss	status,0,c
  4364  000C18  D792               	goto	l3469
  4365                           
  4366                           ; BSR set to: 0
  4367                           
  4368                           ; BSR set to: 0
  4369  000C1A  0012               	return		;funcret
  4370  000C1C                     __end_of_drawtext:
  4371                           	opt stack 0
  4372                           tblptru	equ	0xFF8
  4373                           tblptrh	equ	0xFF7
  4374                           tblptrl	equ	0xFF6
  4375                           tablat	equ	0xFF5
  4376                           prodh	equ	0xFF4
  4377                           prodl	equ	0xFF3
  4378                           intcon	equ	0xFF2
  4379                           intcon2	equ	0xFF1
  4380                           postinc0	equ	0xFEE
  4381                           wreg	equ	0xFE8
  4382                           postdec1	equ	0xFE5
  4383                           fsr1l	equ	0xFE1
  4384                           indf2	equ	0xFDF
  4385                           postinc2	equ	0xFDE
  4386                           postdec2	equ	0xFDD
  4387                           fsr2h	equ	0xFDA
  4388                           fsr2l	equ	0xFD9
  4389                           status	equ	0xFD8
  4390                           
  4391 ;; *************** function _strlen *****************
  4392 ;; Defined at:
  4393 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strlen.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  s               2   16[COMRAM] PTR const unsigned char 
  4396 ;;		 -> NULL(0), buffer(31), txt1(84), 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  cp              2   20[COMRAM] PTR const unsigned char 
  4399 ;;		 -> NULL(0), buffer(31), txt1(84), 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  2   16[COMRAM] unsigned int 
  4402 ;; Registers used:
  4403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;Total ram usage:        6 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    3
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		_drawtext
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           	psect	text16
  4424  0012F4                     __ptext16:
  4425                           	opt stack 0
  4426  0012F4                     _strlen:
  4427                           	opt stack 26
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;incstack = 0
  4431  0012F4  C011  F015         	movff	strlen@s,strlen@cp
  4432  0012F8  C012  F016         	movff	strlen@s+1,strlen@cp+1
  4433  0012FC  D003               	goto	l3409
  4434  0012FE                     l3407:
  4435  0012FE  4A15               	infsnz	strlen@cp,f,c
  4436  001300  2A16               	incf	strlen@cp+1,f,c
  4437  001302  D000               	goto	l3409
  4438  001304                     l3409:
  4439  001304  C015  FFD9         	movff	strlen@cp,fsr2l
  4440  001308  C016  FFDA         	movff	strlen@cp+1,fsr2h
  4441  00130C  50DF               	movf	indf2,w,c
  4442  00130E  A4D8               	btfss	status,2,c
  4443  001310  D7F6               	goto	l3407
  4444  001312  C011  F013         	movff	strlen@s,??_strlen
  4445  001316  C012  F014         	movff	strlen@s+1,??_strlen+1
  4446  00131A  1E13               	comf	??_strlen,f,c
  4447  00131C  1E14               	comf	??_strlen+1,f,c
  4448  00131E  4A13               	infsnz	??_strlen,f,c
  4449  001320  2A14               	incf	??_strlen+1,f,c
  4450  001322  5015               	movf	strlen@cp,w,c
  4451  001324  2413               	addwf	??_strlen,w,c
  4452  001326  6E11               	movwf	?_strlen,c
  4453  001328  5016               	movf	strlen@cp+1,w,c
  4454  00132A  2014               	addwfc	??_strlen+1,w,c
  4455  00132C  6E12               	movwf	?_strlen+1,c
  4456  00132E  D000               	goto	l1051
  4457  001330                     l1051:
  4458  001330  0012               	return		;funcret
  4459  001332                     __end_of_strlen:
  4460                           	opt stack 0
  4461                           tblptru	equ	0xFF8
  4462                           tblptrh	equ	0xFF7
  4463                           tblptrl	equ	0xFF6
  4464                           tablat	equ	0xFF5
  4465                           prodh	equ	0xFF4
  4466                           prodl	equ	0xFF3
  4467                           intcon	equ	0xFF2
  4468                           intcon2	equ	0xFF1
  4469                           postinc0	equ	0xFEE
  4470                           wreg	equ	0xFE8
  4471                           postdec1	equ	0xFE5
  4472                           fsr1l	equ	0xFE1
  4473                           indf2	equ	0xFDF
  4474                           postinc2	equ	0xFDE
  4475                           postdec2	equ	0xFDD
  4476                           fsr2h	equ	0xFDA
  4477                           fsr2l	equ	0xFD9
  4478                           status	equ	0xFD8
  4479                           
  4480 ;; *************** function _drawChar *****************
  4481 ;; Defined at:
  4482 ;;		line 447 in file "ST7735_TFT.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  x               1    wreg     unsigned char 
  4485 ;;  y               1   45[COMRAM] unsigned char 
  4486 ;;  c               1   46[COMRAM] unsigned char 
  4487 ;;  color           2   47[COMRAM] unsigned int 
  4488 ;;  bg              2   49[COMRAM] unsigned int 
  4489 ;;  size            1   51[COMRAM] unsigned char 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  x               1   53[COMRAM] unsigned char 
  4492 ;;  line            1   52[COMRAM] unsigned char 
  4493 ;;  i               1   55[COMRAM] unsigned char 
  4494 ;;  j               1   54[COMRAM] unsigned char 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;		None               void
  4497 ;; Registers used:
  4498 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4504 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;Total ram usage:       11 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    8
  4511 ;; This function calls:
  4512 ;;		___wmul
  4513 ;;		_drawPixel
  4514 ;;		_fillRect
  4515 ;; This function is called by:
  4516 ;;		_drawtext
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text17
  4521  000774                     __ptext17:
  4522                           	opt stack 0
  4523  000774                     _drawChar:
  4524                           	opt stack 21
  4525                           
  4526                           ;incstack = 0
  4527                           ;drawChar@x stored from wreg
  4528  000774  6E36               	movwf	drawChar@x,c
  4529                           
  4530                           ;ST7735_TFT.c: 449: char i, j;
  4531                           ;ST7735_TFT.c: 450: if((x >= 128) || (y >= 160))
  4532  000776  0E80               	movlw	128
  4533  000778  6036               	cpfslt	drawChar@x,c
  4534  00077A  D0A6               	goto	l111
  4535  00077C  0E9F               	movlw	159
  4536  00077E  642E               	cpfsgt	drawChar@y,c
  4537  000780  D001               	goto	l3355
  4538                           
  4539                           ;ST7735_TFT.c: 451: return;
  4540  000782  D0A2               	goto	l111
  4541  000784                     l3355:
  4542                           
  4543                           ;ST7735_TFT.c: 452: if(size < 1) size = 1;
  4544  000784  5034               	movf	drawChar@size,w,c
  4545  000786  A4D8               	btfss	status,2,c
  4546  000788  D003               	goto	l3359
  4547  00078A  0E01               	movlw	1
  4548  00078C  6E34               	movwf	drawChar@size,c
  4549  00078E  D000               	goto	l3359
  4550  000790                     l3359:
  4551                           
  4552                           ;ST7735_TFT.c: 453: if((c < ' ') || (c > '~'))
  4553  000790  0E1F               	movlw	31
  4554  000792  642F               	cpfsgt	drawChar@c,c
  4555  000794  D004               	goto	l3363
  4556  000796  0E7E               	movlw	126
  4557  000798  642F               	cpfsgt	drawChar@c,c
  4558  00079A  D003               	goto	l113
  4559  00079C  D000               	goto	l3363
  4560  00079E                     l3363:
  4561                           
  4562                           ;ST7735_TFT.c: 454: c = '?';
  4563  00079E  0E3F               	movlw	63
  4564  0007A0  6E2F               	movwf	drawChar@c,c
  4565  0007A2                     l113:
  4566                           
  4567                           ;ST7735_TFT.c: 455: for(i=0; i<5; i++ ) {
  4568  0007A2  0E00               	movlw	0
  4569  0007A4  6E38               	movwf	drawChar@i,c
  4570  0007A6                     l3365:
  4571  0007A6  0E04               	movlw	4
  4572  0007A8  6438               	cpfsgt	drawChar@i,c
  4573  0007AA  D001               	goto	l3369
  4574  0007AC  D08D               	goto	l111
  4575  0007AE                     l3369:
  4576                           
  4577                           ;ST7735_TFT.c: 456: unsigned char line;
  4578                           ;ST7735_TFT.c: 457: if(c < 'S')
  4579  0007AE  0E53               	movlw	83
  4580  0007B0  602F               	cpfslt	drawChar@c,c
  4581  0007B2  D015               	goto	l3373
  4582                           
  4583                           ;ST7735_TFT.c: 458: line = font[(c - 32)*5 + i];
  4584  0007B4  0EE0               	movlw	224
  4585  0007B6  242F               	addwf	drawChar@c,w,c
  4586  0007B8  6E11               	movwf	___wmul@multiplier,c
  4587  0007BA  6A12               	clrf	___wmul@multiplier+1,c
  4588  0007BC  0EFF               	movlw	255
  4589  0007BE  2212               	addwfc	___wmul@multiplier+1,f,c
  4590  0007C0  0E00               	movlw	0
  4591  0007C2  6E14               	movwf	___wmul@multiplicand+1,c
  4592  0007C4  0E05               	movlw	5
  4593  0007C6  6E13               	movwf	___wmul@multiplicand,c
  4594  0007C8  ECFE  F009         	call	___wmul	;wreg free
  4595  0007CC  5038               	movf	drawChar@i,w,c
  4596  0007CE  2611               	addwf	?___wmul,f,c
  4597  0007D0  0E00               	movlw	0
  4598  0007D2  2212               	addwfc	?___wmul+1,f,c
  4599  0007D4  0EBF               	movlw	low _font
  4600  0007D6  2411               	addwf	?___wmul,w,c
  4601  0007D8  6EF6               	movwf	tblptrl,c
  4602  0007DA  0EFD               	movlw	high _font
  4603  0007DC  D014               	goto	L2
  4604  0007DE                     l3373:
  4605                           
  4606                           ;ST7735_TFT.c: 459: else
  4607                           ;ST7735_TFT.c: 460: line = font2[(c - 'S')*5 + i];
  4608  0007DE  0EAD               	movlw	173
  4609  0007E0  242F               	addwf	drawChar@c,w,c
  4610  0007E2  6E11               	movwf	___wmul@multiplier,c
  4611  0007E4  6A12               	clrf	___wmul@multiplier+1,c
  4612  0007E6  0EFF               	movlw	255
  4613  0007E8  2212               	addwfc	___wmul@multiplier+1,f,c
  4614  0007EA  0E00               	movlw	0
  4615  0007EC  6E14               	movwf	___wmul@multiplicand+1,c
  4616  0007EE  0E05               	movlw	5
  4617  0007F0  6E13               	movwf	___wmul@multiplicand,c
  4618  0007F2  ECFE  F009         	call	___wmul	;wreg free
  4619  0007F6  5038               	movf	drawChar@i,w,c
  4620  0007F8  2611               	addwf	?___wmul,f,c
  4621  0007FA  0E00               	movlw	0
  4622  0007FC  2212               	addwfc	?___wmul+1,f,c
  4623  0007FE  0EBE               	movlw	low _font2
  4624  000800  2411               	addwf	?___wmul,w,c
  4625  000802  6EF6               	movwf	tblptrl,c
  4626  000804  0EFE               	movlw	high _font2
  4627  000806                     L2:
  4628  000806  2012               	addwfc	?___wmul+1,w,c
  4629  000808  6EF7               	movwf	tblptrh,c
  4630  00080A                     	if	0	;There are less than 3 active tblptr bytes
  4631  00080A                     	endif
  4632  00080A  0008               	tblrd		*
  4633  00080C  CFF5 F035          	movff	tablat,drawChar@line
  4634  000810  D000               	goto	l3375
  4635  000812                     l3375:
  4636                           
  4637                           ;ST7735_TFT.c: 461: for(j=0; j<7; j++, line >>= 1) {
  4638  000812  0E00               	movlw	0
  4639  000814  6E37               	movwf	drawChar@j,c
  4640  000816                     l3377:
  4641  000816  0E06               	movlw	6
  4642  000818  6437               	cpfsgt	drawChar@j,c
  4643  00081A  D001               	goto	l120
  4644  00081C  D053               	goto	l3401
  4645  00081E                     l120:
  4646                           
  4647                           ;ST7735_TFT.c: 462: if(line & 0x01) {
  4648  00081E  A035               	btfss	drawChar@line,0,c
  4649  000820  D023               	goto	l3387
  4650                           
  4651                           ;ST7735_TFT.c: 463: if(size == 1) drawPixel(x+i, y+j, color);
  4652  000822  0434               	decf	drawChar@size,w,c
  4653  000824  A4D8               	btfss	status,2,c
  4654  000826  D00C               	goto	l3385
  4655  000828  502E               	movf	drawChar@y,w,c
  4656  00082A  2437               	addwf	drawChar@j,w,c
  4657  00082C  6E18               	movwf	drawPixel@y,c
  4658  00082E  C030  F019         	movff	drawChar@color,drawPixel@color
  4659  000832  C031  F01A         	movff	drawChar@color+1,drawPixel@color+1
  4660  000836  5036               	movf	drawChar@x,w,c
  4661  000838  2438               	addwf	drawChar@i,w,c
  4662  00083A  ECD1  F009         	call	_drawPixel
  4663  00083E  D03E               	goto	l3395
  4664  000840                     l3385:
  4665                           
  4666                           ;ST7735_TFT.c: 464: else fillRect(x+(i*size), y+(j*size), size, size, color);
  4667  000840  5037               	movf	drawChar@j,w,c
  4668  000842  0234               	mulwf	drawChar@size,c
  4669  000844  50F3               	movf	prodl,w,c
  4670  000846  242E               	addwf	drawChar@y,w,c
  4671  000848  6E23               	movwf	fillRect@y,c
  4672  00084A  C034  F024         	movff	drawChar@size,fillRect@w
  4673  00084E  C034  F025         	movff	drawChar@size,fillRect@h
  4674  000852  C030  F026         	movff	drawChar@color,fillRect@color
  4675  000856  C031  F027         	movff	drawChar@color+1,fillRect@color+1
  4676  00085A  5038               	movf	drawChar@i,w,c
  4677  00085C  0234               	mulwf	drawChar@size,c
  4678  00085E  50F3               	movf	prodl,w,c
  4679  000860  2436               	addwf	drawChar@x,w,c
  4680  000862  EC35  F009         	call	_fillRect
  4681                           
  4682                           ;ST7735_TFT.c: 465: }
  4683  000866  D02A               	goto	l3395
  4684  000868                     l3387:
  4685                           
  4686                           ;ST7735_TFT.c: 466: else if(bg != color) {
  4687  000868  5030               	movf	drawChar@color,w,c
  4688  00086A  1832               	xorwf	drawChar@bg,w,c
  4689  00086C  E104               	bnz	u2330
  4690  00086E  5031               	movf	drawChar@color+1,w,c
  4691  000870  1833               	xorwf	drawChar@bg+1,w,c
  4692  000872  B4D8               	btfsc	status,2,c
  4693  000874  D023               	goto	l3395
  4694  000876                     u2330:
  4695                           
  4696                           ;ST7735_TFT.c: 467: if(size == 1) drawPixel(x+i, y+j, bg);
  4697  000876  0434               	decf	drawChar@size,w,c
  4698  000878  A4D8               	btfss	status,2,c
  4699  00087A  D00C               	goto	l3393
  4700  00087C  502E               	movf	drawChar@y,w,c
  4701  00087E  2437               	addwf	drawChar@j,w,c
  4702  000880  6E18               	movwf	drawPixel@y,c
  4703  000882  C032  F019         	movff	drawChar@bg,drawPixel@color
  4704  000886  C033  F01A         	movff	drawChar@bg+1,drawPixel@color+1
  4705  00088A  5036               	movf	drawChar@x,w,c
  4706  00088C  2438               	addwf	drawChar@i,w,c
  4707  00088E  ECD1  F009         	call	_drawPixel
  4708  000892  D014               	goto	l3395
  4709  000894                     l3393:
  4710                           
  4711                           ;ST7735_TFT.c: 468: else fillRect(x+i*size, y+j*size, size, size, bg);
  4712  000894  5037               	movf	drawChar@j,w,c
  4713  000896  0234               	mulwf	drawChar@size,c
  4714  000898  50F3               	movf	prodl,w,c
  4715  00089A  242E               	addwf	drawChar@y,w,c
  4716  00089C  6E23               	movwf	fillRect@y,c
  4717  00089E  C034  F024         	movff	drawChar@size,fillRect@w
  4718  0008A2  C034  F025         	movff	drawChar@size,fillRect@h
  4719  0008A6  C032  F026         	movff	drawChar@bg,fillRect@color
  4720  0008AA  C033  F027         	movff	drawChar@bg+1,fillRect@color+1
  4721  0008AE  5038               	movf	drawChar@i,w,c
  4722  0008B0  0234               	mulwf	drawChar@size,c
  4723  0008B2  50F3               	movf	prodl,w,c
  4724  0008B4  2436               	addwf	drawChar@x,w,c
  4725  0008B6  EC35  F009         	call	_fillRect
  4726  0008BA  D000               	goto	l3395
  4727  0008BC                     l3395:
  4728  0008BC  2A37               	incf	drawChar@j,f,c
  4729  0008BE  90D8               	bcf	status,0,c
  4730  0008C0  3235               	rrcf	drawChar@line,f,c
  4731  0008C2  D7A9               	goto	l3377
  4732  0008C4                     l3401:
  4733  0008C4  2A38               	incf	drawChar@i,f,c
  4734  0008C6  D76F               	goto	l3365
  4735  0008C8                     l111:
  4736  0008C8  0012               	return		;funcret
  4737  0008CA                     __end_of_drawChar:
  4738                           	opt stack 0
  4739                           tblptru	equ	0xFF8
  4740                           tblptrh	equ	0xFF7
  4741                           tblptrl	equ	0xFF6
  4742                           tablat	equ	0xFF5
  4743                           prodh	equ	0xFF4
  4744                           prodl	equ	0xFF3
  4745                           intcon	equ	0xFF2
  4746                           intcon2	equ	0xFF1
  4747                           postinc0	equ	0xFEE
  4748                           wreg	equ	0xFE8
  4749                           postdec1	equ	0xFE5
  4750                           fsr1l	equ	0xFE1
  4751                           indf2	equ	0xFDF
  4752                           postinc2	equ	0xFDE
  4753                           postdec2	equ	0xFDD
  4754                           fsr2h	equ	0xFDA
  4755                           fsr2l	equ	0xFD9
  4756                           status	equ	0xFD8
  4757                           
  4758 ;; *************** function _fillRect *****************
  4759 ;; Defined at:
  4760 ;;		line 437 in file "ST7735_TFT.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  x               1    wreg     unsigned char 
  4763 ;;  y               1   34[COMRAM] unsigned char 
  4764 ;;  w               1   35[COMRAM] unsigned char 
  4765 ;;  h               1   36[COMRAM] unsigned char 
  4766 ;;  color           2   37[COMRAM] unsigned int 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  x               1   42[COMRAM] unsigned char 
  4769 ;;  i               2   43[COMRAM] int 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;		None               void
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4779 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;Total ram usage:       11 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    7
  4786 ;; This function calls:
  4787 ;;		_drawFastVLine
  4788 ;; This function is called by:
  4789 ;;		_drawChar
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text18
  4794  00126A                     __ptext18:
  4795                           	opt stack 0
  4796  00126A                     _fillRect:
  4797                           	opt stack 21
  4798                           
  4799                           ;incstack = 0
  4800                           ;fillRect@x stored from wreg
  4801  00126A  6E2B               	movwf	fillRect@x,c
  4802                           
  4803                           ;ST7735_TFT.c: 439: signed int i;
  4804                           ;ST7735_TFT.c: 441: for (i = x; i < x + w; i++)
  4805  00126C  C02B  F02C         	movff	fillRect@x,fillRect@i
  4806  001270  6A2D               	clrf	fillRect@i+1,c
  4807  001272  D00E               	goto	l3257
  4808  001274                     l3253:
  4809                           
  4810                           ;ST7735_TFT.c: 442: {
  4811                           ;ST7735_TFT.c: 443: drawFastVLine(i, y, h, color);
  4812  001274  C023  F018         	movff	fillRect@y,drawFastVLine@y
  4813  001278  C025  F019         	movff	fillRect@h,drawFastVLine@h
  4814  00127C  C026  F01A         	movff	fillRect@color,drawFastVLine@color
  4815  001280  C027  F01B         	movff	fillRect@color+1,drawFastVLine@color+1
  4816  001284  502C               	movf	fillRect@i,w,c
  4817  001286  EC82  F007         	call	_drawFastVLine
  4818  00128A  4A2C               	infsnz	fillRect@i,f,c
  4819  00128C  2A2D               	incf	fillRect@i+1,f,c
  4820  00128E  D000               	goto	l3257
  4821  001290                     l3257:
  4822  001290  5024               	movf	fillRect@w,w,c
  4823  001292  C02B  F028         	movff	fillRect@x,??_fillRect
  4824  001296  6A29               	clrf	(??_fillRect+1)& (0+255),c
  4825  001298  2628               	addwf	??_fillRect,f,c
  4826  00129A  0E00               	movlw	0
  4827  00129C  2229               	addwfc	??_fillRect+1,f,c
  4828  00129E  5028               	movf	??_fillRect,w,c
  4829  0012A0  5C2C               	subwf	fillRect@i,w,c
  4830  0012A2  502D               	movf	fillRect@i+1,w,c
  4831  0012A4  0A80               	xorlw	128
  4832  0012A6  6E2A               	movwf	(??_fillRect+2)& (0+255),c
  4833  0012A8  5029               	movf	??_fillRect+1,w,c
  4834  0012AA  0A80               	xorlw	128
  4835  0012AC  582A               	subwfb	(??_fillRect+2)& (0+255),w,c
  4836  0012AE  A0D8               	btfss	status,0,c
  4837  0012B0  D7E1               	goto	l3253
  4838  0012B2  0012               	return		;funcret
  4839  0012B4                     __end_of_fillRect:
  4840                           	opt stack 0
  4841                           tblptru	equ	0xFF8
  4842                           tblptrh	equ	0xFF7
  4843                           tblptrl	equ	0xFF6
  4844                           tablat	equ	0xFF5
  4845                           prodh	equ	0xFF4
  4846                           prodl	equ	0xFF3
  4847                           intcon	equ	0xFF2
  4848                           intcon2	equ	0xFF1
  4849                           postinc0	equ	0xFEE
  4850                           wreg	equ	0xFE8
  4851                           postdec1	equ	0xFE5
  4852                           fsr1l	equ	0xFE1
  4853                           indf2	equ	0xFDF
  4854                           postinc2	equ	0xFDE
  4855                           postdec2	equ	0xFDD
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860 ;; *************** function _drawFastVLine *****************
  4861 ;; Defined at:
  4862 ;;		line 416 in file "ST7735_TFT.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  x               1    wreg     unsigned char 
  4865 ;;  y               1   23[COMRAM] unsigned char 
  4866 ;;  h               1   24[COMRAM] unsigned char 
  4867 ;;  color           2   25[COMRAM] unsigned int 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  x               1   33[COMRAM] unsigned char 
  4870 ;;  lo              1   32[COMRAM] unsigned char 
  4871 ;;  hi              1   31[COMRAM] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;		None               void
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0, cstack
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4881 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;Total ram usage:       11 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    6
  4888 ;; This function calls:
  4889 ;;		_setAddrWindow
  4890 ;;		_spiwrite
  4891 ;; This function is called by:
  4892 ;;		_fillRect
  4893 ;;		_fillCircleHelper
  4894 ;;		_fillCircle
  4895 ;;		_drawRect
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text19
  4900  000F04                     __ptext19:
  4901                           	opt stack 0
  4902  000F04                     _drawFastVLine:
  4903                           	opt stack 22
  4904                           
  4905                           ;incstack = 0
  4906                           ;drawFastVLine@x stored from wreg
  4907  000F04  6E22               	movwf	drawFastVLine@x,c
  4908                           
  4909                           ;ST7735_TFT.c: 418: unsigned char hi, lo;
  4910                           ;ST7735_TFT.c: 419: if((x >= 128) || (y >= 160))
  4911  000F06  0E80               	movlw	128
  4912  000F08  6022               	cpfslt	drawFastVLine@x,c
  4913  000F0A  D03F               	goto	l95
  4914  000F0C  0E9F               	movlw	159
  4915  000F0E  6418               	cpfsgt	drawFastVLine@y,c
  4916  000F10  D001               	goto	l3203
  4917                           
  4918                           ;ST7735_TFT.c: 420: return;
  4919  000F12  D03B               	goto	l95
  4920  000F14                     l3203:
  4921                           
  4922                           ;ST7735_TFT.c: 421: if((y + h - 1) >= 160)
  4923  000F14  0EFF               	movlw	255
  4924  000F16  6E1C               	movwf	??_drawFastVLine& (0+255),c
  4925  000F18  0EFF               	movlw	255
  4926  000F1A  6E1D               	movwf	(??_drawFastVLine+1)& (0+255),c
  4927  000F1C  5019               	movf	drawFastVLine@h,w,c
  4928  000F1E  C018  F01E         	movff	drawFastVLine@y,??_drawFastVLine+2
  4929  000F22  6A1F               	clrf	(??_drawFastVLine+3)& (0+255),c
  4930  000F24  261E               	addwf	??_drawFastVLine+2,f,c
  4931  000F26  0E00               	movlw	0
  4932  000F28  221F               	addwfc	??_drawFastVLine+3,f,c
  4933  000F2A  501C               	movf	??_drawFastVLine,w,c
  4934  000F2C  261E               	addwf	??_drawFastVLine+2,f,c
  4935  000F2E  501D               	movf	??_drawFastVLine+1,w,c
  4936  000F30  221F               	addwfc	??_drawFastVLine+3,f,c
  4937  000F32  BE1F               	btfsc	??_drawFastVLine+3,7,c
  4938  000F34  D00B               	goto	l3207
  4939  000F36  501F               	movf	??_drawFastVLine+3,w,c
  4940  000F38  E104               	bnz	u2170
  4941  000F3A  0EA0               	movlw	160
  4942  000F3C  5C1E               	subwf	??_drawFastVLine+2,w,c
  4943  000F3E  A0D8               	btfss	status,0,c
  4944  000F40  D005               	goto	l3207
  4945  000F42                     u2170:
  4946                           
  4947                           ;ST7735_TFT.c: 422: h = 160 - y;
  4948  000F42  5018               	movf	drawFastVLine@y,w,c
  4949  000F44  0800               	sublw	0
  4950  000F46  0FA0               	addlw	160
  4951  000F48  6E19               	movwf	drawFastVLine@h,c
  4952  000F4A  D000               	goto	l3207
  4953  000F4C                     l3207:
  4954                           
  4955                           ;ST7735_TFT.c: 423: hi = color >> 8; lo = color;
  4956  000F4C  501B               	movf	drawFastVLine@color+1,w,c
  4957  000F4E  6E20               	movwf	drawFastVLine@hi,c
  4958  000F50  C01A  F021         	movff	drawFastVLine@color,drawFastVLine@lo
  4959                           
  4960                           ;ST7735_TFT.c: 424: setAddrWindow(x, y, x, y + h - 1);
  4961  000F54  C018  F014         	movff	drawFastVLine@y,setAddrWindow@y0
  4962  000F58  C022  F015         	movff	drawFastVLine@x,setAddrWindow@x1
  4963  000F5C  5018               	movf	drawFastVLine@y,w,c
  4964  000F5E  2419               	addwf	drawFastVLine@h,w,c
  4965  000F60  6E1C               	movwf	??_drawFastVLine& (0+255),c
  4966  000F62  041C               	decf	??_drawFastVLine,w,c
  4967  000F64  6E16               	movwf	setAddrWindow@y1,c
  4968  000F66  5022               	movf	drawFastVLine@x,w,c
  4969  000F68  EC0E  F009         	call	_setAddrWindow
  4970                           
  4971                           ;ST7735_TFT.c: 425: PORTCbits.RC0 = 1;
  4972  000F6C  8082               	bsf	3970,0,c	;volatile
  4973                           
  4974                           ;ST7735_TFT.c: 426: PORTCbits.RC1 = 0;
  4975  000F6E  9282               	bcf	3970,1,c	;volatile
  4976                           
  4977                           ;ST7735_TFT.c: 428: while (h--) {
  4978  000F70  D007               	goto	l3219
  4979  000F72                     l3217:
  4980                           
  4981                           ;ST7735_TFT.c: 429: spiwrite(hi);
  4982  000F72  5020               	movf	drawFastVLine@hi,w,c
  4983  000F74  EC49  F00A         	call	_spiwrite
  4984                           
  4985                           ;ST7735_TFT.c: 430: spiwrite(lo);
  4986  000F78  5021               	movf	drawFastVLine@lo,w,c
  4987  000F7A  EC49  F00A         	call	_spiwrite
  4988  000F7E  D000               	goto	l3219
  4989  000F80                     l3219:
  4990  000F80  0619               	decf	drawFastVLine@h,f,c
  4991  000F82  2819               	incf	drawFastVLine@h,w,c
  4992  000F84  A4D8               	btfss	status,2,c
  4993  000F86  D7F5               	goto	l3217
  4994                           
  4995                           ;ST7735_TFT.c: 431: }
  4996                           ;ST7735_TFT.c: 432: PORTCbits.RC1 = 1;
  4997  000F88  8282               	bsf	3970,1,c	;volatile
  4998  000F8A                     l95:
  4999  000F8A  0012               	return		;funcret
  5000  000F8C                     __end_of_drawFastVLine:
  5001                           	opt stack 0
  5002                           tblptru	equ	0xFF8
  5003                           tblptrh	equ	0xFF7
  5004                           tblptrl	equ	0xFF6
  5005                           tablat	equ	0xFF5
  5006                           prodh	equ	0xFF4
  5007                           prodl	equ	0xFF3
  5008                           intcon	equ	0xFF2
  5009                           intcon2	equ	0xFF1
  5010                           postinc0	equ	0xFEE
  5011                           wreg	equ	0xFE8
  5012                           postdec1	equ	0xFE5
  5013                           fsr1l	equ	0xFE1
  5014                           indf2	equ	0xFDF
  5015                           postinc2	equ	0xFDE
  5016                           postdec2	equ	0xFDD
  5017                           fsr2h	equ	0xFDA
  5018                           fsr2l	equ	0xFD9
  5019                           status	equ	0xFD8
  5020                           
  5021 ;; *************** function _drawPixel *****************
  5022 ;; Defined at:
  5023 ;;		line 407 in file "ST7735_TFT.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  x               1    wreg     unsigned char 
  5026 ;;  y               1   23[COMRAM] unsigned char 
  5027 ;;  color           2   24[COMRAM] unsigned int 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  x               1   26[COMRAM] unsigned char 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;		None               void
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5039 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;Total ram usage:        4 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    6
  5046 ;; This function calls:
  5047 ;;		_setAddrWindow
  5048 ;;		_write_data
  5049 ;; This function is called by:
  5050 ;;		_drawChar
  5051 ;;		_drawCircle
  5052 ;;		_drawCircleHelper
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text20
  5057  0013A2                     __ptext20:
  5058                           	opt stack 0
  5059  0013A2                     _drawPixel:
  5060                           	opt stack 22
  5061                           
  5062                           ;incstack = 0
  5063                           ;drawPixel@x stored from wreg
  5064  0013A2  6E1B               	movwf	drawPixel@x,c
  5065                           
  5066                           ;ST7735_TFT.c: 409: if((x >= 128) || (y >= 160))
  5067  0013A4  0E80               	movlw	128
  5068  0013A6  601B               	cpfslt	drawPixel@x,c
  5069  0013A8  D013               	goto	l89
  5070  0013AA  0E9F               	movlw	159
  5071  0013AC  6418               	cpfsgt	drawPixel@y,c
  5072  0013AE  D001               	goto	l3245
  5073                           
  5074                           ;ST7735_TFT.c: 410: return;
  5075  0013B0  D00F               	goto	l89
  5076  0013B2                     l3245:
  5077                           
  5078                           ;ST7735_TFT.c: 411: setAddrWindow(x,y,x+1,y+1);
  5079  0013B2  C018  F014         	movff	drawPixel@y,setAddrWindow@y0
  5080  0013B6  281B               	incf	drawPixel@x,w,c
  5081  0013B8  6E15               	movwf	setAddrWindow@x1,c
  5082  0013BA  2818               	incf	drawPixel@y,w,c
  5083  0013BC  6E16               	movwf	setAddrWindow@y1,c
  5084  0013BE  501B               	movf	drawPixel@x,w,c
  5085  0013C0  EC0E  F009         	call	_setAddrWindow
  5086                           
  5087                           ;ST7735_TFT.c: 412: write_data(color >> 8);
  5088  0013C4  501A               	movf	drawPixel@color+1,w,c
  5089  0013C6  EC6D  F00A         	call	_write_data
  5090                           
  5091                           ;ST7735_TFT.c: 413: write_data(color & 0xFF);
  5092  0013CA  5019               	movf	drawPixel@color,w,c
  5093  0013CC  EC6D  F00A         	call	_write_data
  5094  0013D0                     l89:
  5095  0013D0  0012               	return		;funcret
  5096  0013D2                     __end_of_drawPixel:
  5097                           	opt stack 0
  5098                           tblptru	equ	0xFF8
  5099                           tblptrh	equ	0xFF7
  5100                           tblptrl	equ	0xFF6
  5101                           tablat	equ	0xFF5
  5102                           prodh	equ	0xFF4
  5103                           prodl	equ	0xFF3
  5104                           intcon	equ	0xFF2
  5105                           intcon2	equ	0xFF1
  5106                           postinc0	equ	0xFEE
  5107                           wreg	equ	0xFE8
  5108                           postdec1	equ	0xFE5
  5109                           fsr1l	equ	0xFE1
  5110                           indf2	equ	0xFDF
  5111                           postinc2	equ	0xFDE
  5112                           postdec2	equ	0xFDD
  5113                           fsr2h	equ	0xFDA
  5114                           fsr2l	equ	0xFD9
  5115                           status	equ	0xFD8
  5116                           
  5117 ;; *************** function _setAddrWindow *****************
  5118 ;; Defined at:
  5119 ;;		line 392 in file "ST7735_TFT.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  x0              1    wreg     unsigned char 
  5122 ;;  y0              1   19[COMRAM] unsigned char 
  5123 ;;  x1              1   20[COMRAM] unsigned char 
  5124 ;;  y1              1   21[COMRAM] unsigned char 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  x0              1   22[COMRAM] unsigned char 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;		None               void
  5129 ;; Registers used:
  5130 ;;		wreg, status,2, status,0, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5136 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;Total ram usage:        4 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    5
  5143 ;; This function calls:
  5144 ;;		_write_command
  5145 ;;		_write_data
  5146 ;; This function is called by:
  5147 ;;		_drawPixel
  5148 ;;		_drawFastVLine
  5149 ;;		_fillRectangle
  5150 ;;		_drawFastHLine
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text21
  5155  00121C                     __ptext21:
  5156                           	opt stack 0
  5157  00121C                     _setAddrWindow:
  5158                           	opt stack 22
  5159                           
  5160                           ;incstack = 0
  5161                           ;setAddrWindow@x0 stored from wreg
  5162  00121C  6E17               	movwf	setAddrWindow@x0,c
  5163                           
  5164                           ;ST7735_TFT.c: 394: write_command(0x2A);
  5165  00121E  0E2A               	movlw	42
  5166  001220  EC75  F00A         	call	_write_command
  5167                           
  5168                           ;ST7735_TFT.c: 395: write_data(0);
  5169  001224  0E00               	movlw	0
  5170  001226  EC6D  F00A         	call	_write_data
  5171                           
  5172                           ;ST7735_TFT.c: 396: write_data(x0 + colstart);
  5173  00122A  5017               	movf	setAddrWindow@x0,w,c
  5174  00122C  246D               	addwf	_colstart,w,c
  5175  00122E  EC6D  F00A         	call	_write_data
  5176                           
  5177                           ;ST7735_TFT.c: 397: write_data(0);
  5178  001232  0E00               	movlw	0
  5179  001234  EC6D  F00A         	call	_write_data
  5180                           
  5181                           ;ST7735_TFT.c: 398: write_data(x1 + colstart);
  5182  001238  5015               	movf	setAddrWindow@x1,w,c
  5183  00123A  246D               	addwf	_colstart,w,c
  5184  00123C  EC6D  F00A         	call	_write_data
  5185                           
  5186                           ;ST7735_TFT.c: 399: write_command(0x2B);
  5187  001240  0E2B               	movlw	43
  5188  001242  EC75  F00A         	call	_write_command
  5189                           
  5190                           ;ST7735_TFT.c: 400: write_data(0);
  5191  001246  0E00               	movlw	0
  5192  001248  EC6D  F00A         	call	_write_data
  5193                           
  5194                           ;ST7735_TFT.c: 401: write_data(y0 + rowstart);
  5195  00124C  5014               	movf	setAddrWindow@y0,w,c
  5196  00124E  246F               	addwf	_rowstart,w,c
  5197  001250  EC6D  F00A         	call	_write_data
  5198                           
  5199                           ;ST7735_TFT.c: 402: write_data(0);
  5200  001254  0E00               	movlw	0
  5201  001256  EC6D  F00A         	call	_write_data
  5202                           
  5203                           ;ST7735_TFT.c: 403: write_data(y1 + rowstart);
  5204  00125A  5016               	movf	setAddrWindow@y1,w,c
  5205  00125C  246F               	addwf	_rowstart,w,c
  5206  00125E  EC6D  F00A         	call	_write_data
  5207                           
  5208                           ;ST7735_TFT.c: 404: write_command(0x2C);
  5209  001262  0E2C               	movlw	44
  5210  001264  EC75  F00A         	call	_write_command
  5211  001268  0012               	return		;funcret
  5212  00126A                     __end_of_setAddrWindow:
  5213                           	opt stack 0
  5214                           tblptru	equ	0xFF8
  5215                           tblptrh	equ	0xFF7
  5216                           tblptrl	equ	0xFF6
  5217                           tablat	equ	0xFF5
  5218                           prodh	equ	0xFF4
  5219                           prodl	equ	0xFF3
  5220                           intcon	equ	0xFF2
  5221                           intcon2	equ	0xFF1
  5222                           postinc0	equ	0xFEE
  5223                           wreg	equ	0xFE8
  5224                           postdec1	equ	0xFE5
  5225                           fsr1l	equ	0xFE1
  5226                           indf2	equ	0xFDF
  5227                           postinc2	equ	0xFDE
  5228                           postdec2	equ	0xFDD
  5229                           fsr2h	equ	0xFDA
  5230                           fsr2l	equ	0xFD9
  5231                           status	equ	0xFD8
  5232                           
  5233 ;; *************** function _TFT_GreenTab_Initialize *****************
  5234 ;; Defined at:
  5235 ;;		line 644 in file "ST7735_TFT.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;		None
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;		None
  5240 ;; Return value:  Size  Location     Type
  5241 ;;		None               void
  5242 ;; Registers used:
  5243 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;Total ram usage:        0 bytes
  5254 ;; Hardware stack levels used:    1
  5255 ;; Hardware stack levels required when called:    6
  5256 ;; This function calls:
  5257 ;;		_Rcmd1
  5258 ;;		_Rcmd2red
  5259 ;;		_Rcmd3
  5260 ;;		_write_command
  5261 ;;		_write_data
  5262 ;; This function is called by:
  5263 ;;		_Initialize_Screen
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text22
  5268  0013D2                     __ptext22:
  5269                           	opt stack 0
  5270  0013D2                     _TFT_GreenTab_Initialize:
  5271                           	opt stack 23
  5272                           
  5273                           ;ST7735_TFT.c: 646: PORTCbits.RC1 = 1;
  5274                           
  5275                           ;incstack = 0
  5276  0013D2  8282               	bsf	3970,1,c	;volatile
  5277                           
  5278                           ;ST7735_TFT.c: 647: PORTCbits.RC0 = 0;
  5279  0013D4  9082               	bcf	3970,0,c	;volatile
  5280                           
  5281                           ;ST7735_TFT.c: 649: SSPSTAT=0x80;
  5282  0013D6  0E80               	movlw	128
  5283  0013D8  6EC7               	movwf	4039,c	;volatile
  5284                           
  5285                           ;ST7735_TFT.c: 650: SSPCON1=0x30;
  5286  0013DA  0E30               	movlw	48
  5287  0013DC  6EC6               	movwf	4038,c	;volatile
  5288                           
  5289                           ;ST7735_TFT.c: 653: Rcmd1();
  5290  0013DE  EC01  F005         	call	_Rcmd1	;wreg free
  5291                           
  5292                           ;ST7735_TFT.c: 654: Rcmd2red();
  5293  0013E2  EC99  F009         	call	_Rcmd2red	;wreg free
  5294                           
  5295                           ;ST7735_TFT.c: 655: Rcmd3();
  5296  0013E6  EC0E  F006         	call	_Rcmd3	;wreg free
  5297                           
  5298                           ;ST7735_TFT.c: 656: write_command(0x36);
  5299  0013EA  0E36               	movlw	54
  5300  0013EC  EC75  F00A         	call	_write_command
  5301                           
  5302                           ;ST7735_TFT.c: 657: write_data(0xC0);
  5303  0013F0  0EC0               	movlw	192
  5304  0013F2  EC6D  F00A         	call	_write_data
  5305                           
  5306                           ;ST7735_TFT.c: 658: _tft_type = 1;
  5307  0013F6  0E01               	movlw	1
  5308  0013F8  6E6B               	movwf	__tft_type,c
  5309  0013FA  0012               	return		;funcret
  5310  0013FC                     __end_of_TFT_GreenTab_Initialize:
  5311                           	opt stack 0
  5312                           tblptru	equ	0xFF8
  5313                           tblptrh	equ	0xFF7
  5314                           tblptrl	equ	0xFF6
  5315                           tablat	equ	0xFF5
  5316                           prodh	equ	0xFF4
  5317                           prodl	equ	0xFF3
  5318                           intcon	equ	0xFF2
  5319                           intcon2	equ	0xFF1
  5320                           postinc0	equ	0xFEE
  5321                           wreg	equ	0xFE8
  5322                           postdec1	equ	0xFE5
  5323                           fsr1l	equ	0xFE1
  5324                           indf2	equ	0xFDF
  5325                           postinc2	equ	0xFDE
  5326                           postdec2	equ	0xFDD
  5327                           fsr2h	equ	0xFDA
  5328                           fsr2l	equ	0xFD9
  5329                           status	equ	0xFD8
  5330                           
  5331 ;; *************** function _Rcmd3 *****************
  5332 ;; Defined at:
  5333 ;;		line 338 in file "ST7735_TFT.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;		None
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;		None
  5338 ;; Return value:  Size  Location     Type
  5339 ;;		None               void
  5340 ;; Registers used:
  5341 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;Total ram usage:        0 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    5
  5354 ;; This function calls:
  5355 ;;		_delay_ms
  5356 ;;		_write_command
  5357 ;;		_write_data
  5358 ;; This function is called by:
  5359 ;;		_TFT_GreenTab_Initialize
  5360 ;;		_TFT_BlackTab_Initialize
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text23
  5365  000C1C                     __ptext23:
  5366                           	opt stack 0
  5367  000C1C                     _Rcmd3:
  5368                           	opt stack 23
  5369                           
  5370                           ;ST7735_TFT.c: 340: write_command(0xE0);
  5371                           
  5372                           ;incstack = 0
  5373  000C1C  0EE0               	movlw	224
  5374  000C1E  EC75  F00A         	call	_write_command
  5375                           
  5376                           ;ST7735_TFT.c: 341: write_data(0x02); write_data(0x1C); write_data(0x07); write_data(0x1
      +                          2);
  5377  000C22  0E02               	movlw	2
  5378  000C24  EC6D  F00A         	call	_write_data
  5379  000C28  0E1C               	movlw	28
  5380  000C2A  EC6D  F00A         	call	_write_data
  5381  000C2E  0E07               	movlw	7
  5382  000C30  EC6D  F00A         	call	_write_data
  5383  000C34  0E12               	movlw	18
  5384  000C36  EC6D  F00A         	call	_write_data
  5385                           
  5386                           ;ST7735_TFT.c: 342: write_data(0x37); write_data(0x32); write_data(0x29); write_data(0x2
      +                          D);
  5387  000C3A  0E37               	movlw	55
  5388  000C3C  EC6D  F00A         	call	_write_data
  5389  000C40  0E32               	movlw	50
  5390  000C42  EC6D  F00A         	call	_write_data
  5391  000C46  0E29               	movlw	41
  5392  000C48  EC6D  F00A         	call	_write_data
  5393  000C4C  0E2D               	movlw	45
  5394  000C4E  EC6D  F00A         	call	_write_data
  5395                           
  5396                           ;ST7735_TFT.c: 343: write_data(0x29); write_data(0x25); write_data(0x2B); write_data(0x3
      +                          9);
  5397  000C52  0E29               	movlw	41
  5398  000C54  EC6D  F00A         	call	_write_data
  5399  000C58  0E25               	movlw	37
  5400  000C5A  EC6D  F00A         	call	_write_data
  5401  000C5E  0E2B               	movlw	43
  5402  000C60  EC6D  F00A         	call	_write_data
  5403  000C64  0E39               	movlw	57
  5404  000C66  EC6D  F00A         	call	_write_data
  5405                           
  5406                           ;ST7735_TFT.c: 344: write_data(0x00); write_data(0x01); write_data(0x03); write_data(0x1
      +                          0);
  5407  000C6A  0E00               	movlw	0
  5408  000C6C  EC6D  F00A         	call	_write_data
  5409  000C70  0E01               	movlw	1
  5410  000C72  EC6D  F00A         	call	_write_data
  5411  000C76  0E03               	movlw	3
  5412  000C78  EC6D  F00A         	call	_write_data
  5413  000C7C  0E10               	movlw	16
  5414  000C7E  EC6D  F00A         	call	_write_data
  5415                           
  5416                           ;ST7735_TFT.c: 345: write_command(0xE1);
  5417  000C82  0EE1               	movlw	225
  5418  000C84  EC75  F00A         	call	_write_command
  5419                           
  5420                           ;ST7735_TFT.c: 346: write_data(0x03); write_data(0x1D); write_data(0x07); write_data(0x0
      +                          6);
  5421  000C88  0E03               	movlw	3
  5422  000C8A  EC6D  F00A         	call	_write_data
  5423  000C8E  0E1D               	movlw	29
  5424  000C90  EC6D  F00A         	call	_write_data
  5425  000C94  0E07               	movlw	7
  5426  000C96  EC6D  F00A         	call	_write_data
  5427  000C9A  0E06               	movlw	6
  5428  000C9C  EC6D  F00A         	call	_write_data
  5429                           
  5430                           ;ST7735_TFT.c: 347: write_data(0x2E); write_data(0x2C); write_data(0x29); write_data(0x2
      +                          D);
  5431  000CA0  0E2E               	movlw	46
  5432  000CA2  EC6D  F00A         	call	_write_data
  5433  000CA6  0E2C               	movlw	44
  5434  000CA8  EC6D  F00A         	call	_write_data
  5435  000CAC  0E29               	movlw	41
  5436  000CAE  EC6D  F00A         	call	_write_data
  5437  000CB2  0E2D               	movlw	45
  5438  000CB4  EC6D  F00A         	call	_write_data
  5439                           
  5440                           ;ST7735_TFT.c: 348: write_data(0x2E); write_data(0x2E); write_data(0x37); write_data(0x3
      +                          F);
  5441  000CB8  0E2E               	movlw	46
  5442  000CBA  EC6D  F00A         	call	_write_data
  5443  000CBE  0E2E               	movlw	46
  5444  000CC0  EC6D  F00A         	call	_write_data
  5445  000CC4  0E37               	movlw	55
  5446  000CC6  EC6D  F00A         	call	_write_data
  5447  000CCA  0E3F               	movlw	63
  5448  000CCC  EC6D  F00A         	call	_write_data
  5449                           
  5450                           ;ST7735_TFT.c: 349: write_data(0x00); write_data(0x00); write_data(0x02); write_data(0x1
      +                          0);
  5451  000CD0  0E00               	movlw	0
  5452  000CD2  EC6D  F00A         	call	_write_data
  5453  000CD6  0E00               	movlw	0
  5454  000CD8  EC6D  F00A         	call	_write_data
  5455  000CDC  0E02               	movlw	2
  5456  000CDE  EC6D  F00A         	call	_write_data
  5457  000CE2  0E10               	movlw	16
  5458  000CE4  EC6D  F00A         	call	_write_data
  5459                           
  5460                           ;ST7735_TFT.c: 350: write_command(0x13);
  5461  000CE8  0E13               	movlw	19
  5462  000CEA  EC75  F00A         	call	_write_command
  5463                           
  5464                           ;ST7735_TFT.c: 351: delay_ms(10);
  5465  000CEE  0E00               	movlw	0
  5466  000CF0  6E18               	movwf	delay_ms@ms+1,c
  5467  000CF2  0E0A               	movlw	10
  5468  000CF4  6E17               	movwf	delay_ms@ms,c
  5469  000CF6  ECE5  F008         	call	_delay_ms	;wreg free
  5470                           
  5471                           ;ST7735_TFT.c: 352: write_command(0x29);
  5472  000CFA  0E29               	movlw	41
  5473  000CFC  EC75  F00A         	call	_write_command
  5474                           
  5475                           ;ST7735_TFT.c: 353: delay_ms(100);
  5476  000D00  0E00               	movlw	0
  5477  000D02  6E18               	movwf	delay_ms@ms+1,c
  5478  000D04  0E64               	movlw	100
  5479  000D06  6E17               	movwf	delay_ms@ms,c
  5480  000D08  ECE5  F008         	call	_delay_ms	;wreg free
  5481  000D0C  0012               	return		;funcret
  5482  000D0E                     __end_of_Rcmd3:
  5483                           	opt stack 0
  5484                           tblptru	equ	0xFF8
  5485                           tblptrh	equ	0xFF7
  5486                           tblptrl	equ	0xFF6
  5487                           tablat	equ	0xFF5
  5488                           prodh	equ	0xFF4
  5489                           prodl	equ	0xFF3
  5490                           intcon	equ	0xFF2
  5491                           intcon2	equ	0xFF1
  5492                           postinc0	equ	0xFEE
  5493                           wreg	equ	0xFE8
  5494                           postdec1	equ	0xFE5
  5495                           fsr1l	equ	0xFE1
  5496                           indf2	equ	0xFDF
  5497                           postinc2	equ	0xFDE
  5498                           postdec2	equ	0xFDD
  5499                           fsr2h	equ	0xFDA
  5500                           fsr2l	equ	0xFD9
  5501                           status	equ	0xFD8
  5502                           
  5503 ;; *************** function _Rcmd2red *****************
  5504 ;; Defined at:
  5505 ;;		line 328 in file "ST7735_TFT.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;		None
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;		None
  5510 ;; Return value:  Size  Location     Type
  5511 ;;		None               void
  5512 ;; Registers used:
  5513 ;;		wreg, status,2, cstack
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;Total ram usage:        0 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; Hardware stack levels required when called:    5
  5526 ;; This function calls:
  5527 ;;		_write_command
  5528 ;;		_write_data
  5529 ;; This function is called by:
  5530 ;;		_TFT_GreenTab_Initialize
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text24
  5535  001332                     __ptext24:
  5536                           	opt stack 0
  5537  001332                     _Rcmd2red:
  5538                           	opt stack 23
  5539                           
  5540                           ;ST7735_TFT.c: 330: write_command(0x2A);
  5541                           
  5542                           ;incstack = 0
  5543  001332  0E2A               	movlw	42
  5544  001334  EC75  F00A         	call	_write_command
  5545                           
  5546                           ;ST7735_TFT.c: 331: write_data(0x00); write_data(0x00);
  5547  001338  0E00               	movlw	0
  5548  00133A  EC6D  F00A         	call	_write_data
  5549  00133E  0E00               	movlw	0
  5550  001340  EC6D  F00A         	call	_write_data
  5551                           
  5552                           ;ST7735_TFT.c: 332: write_data(0x00); write_data(0x7F);
  5553  001344  0E00               	movlw	0
  5554  001346  EC6D  F00A         	call	_write_data
  5555  00134A  0E7F               	movlw	127
  5556  00134C  EC6D  F00A         	call	_write_data
  5557                           
  5558                           ;ST7735_TFT.c: 333: write_command(0x2B);
  5559  001350  0E2B               	movlw	43
  5560  001352  EC75  F00A         	call	_write_command
  5561                           
  5562                           ;ST7735_TFT.c: 334: write_data(0x00); write_data(0x00);
  5563  001356  0E00               	movlw	0
  5564  001358  EC6D  F00A         	call	_write_data
  5565  00135C  0E00               	movlw	0
  5566  00135E  EC6D  F00A         	call	_write_data
  5567                           
  5568                           ;ST7735_TFT.c: 335: write_data(0x00); write_data(0x9F);
  5569  001362  0E00               	movlw	0
  5570  001364  EC6D  F00A         	call	_write_data
  5571  001368  0E9F               	movlw	159
  5572  00136A  EC6D  F00A         	call	_write_data
  5573  00136E  0012               	return		;funcret
  5574  001370                     __end_of_Rcmd2red:
  5575                           	opt stack 0
  5576                           tblptru	equ	0xFF8
  5577                           tblptrh	equ	0xFF7
  5578                           tblptrl	equ	0xFF6
  5579                           tablat	equ	0xFF5
  5580                           prodh	equ	0xFF4
  5581                           prodl	equ	0xFF3
  5582                           intcon	equ	0xFF2
  5583                           intcon2	equ	0xFF1
  5584                           postinc0	equ	0xFEE
  5585                           wreg	equ	0xFE8
  5586                           postdec1	equ	0xFE5
  5587                           fsr1l	equ	0xFE1
  5588                           indf2	equ	0xFDF
  5589                           postinc2	equ	0xFDE
  5590                           postdec2	equ	0xFDD
  5591                           fsr2h	equ	0xFDA
  5592                           fsr2l	equ	0xFD9
  5593                           status	equ	0xFD8
  5594                           
  5595 ;; *************** function _Rcmd1 *****************
  5596 ;; Defined at:
  5597 ;;		line 281 in file "ST7735_TFT.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;		None
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;		None
  5602 ;; Return value:  Size  Location     Type
  5603 ;;		None               void
  5604 ;; Registers used:
  5605 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5615 ;;Total ram usage:        0 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:    5
  5618 ;; This function calls:
  5619 ;;		_delay_ms
  5620 ;;		_write_command
  5621 ;;		_write_data
  5622 ;; This function is called by:
  5623 ;;		_TFT_GreenTab_Initialize
  5624 ;;		_TFT_BlackTab_Initialize
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text25
  5629  000A02                     __ptext25:
  5630                           	opt stack 0
  5631  000A02                     _Rcmd1:
  5632                           	opt stack 23
  5633                           
  5634                           ;ST7735_TFT.c: 283: write_command(0x01);
  5635                           
  5636                           ;incstack = 0
  5637  000A02  0E01               	movlw	1
  5638  000A04  EC75  F00A         	call	_write_command
  5639                           
  5640                           ;ST7735_TFT.c: 284: delay_ms(150);
  5641  000A08  0E00               	movlw	0
  5642  000A0A  6E18               	movwf	delay_ms@ms+1,c
  5643  000A0C  0E96               	movlw	150
  5644  000A0E  6E17               	movwf	delay_ms@ms,c
  5645  000A10  ECE5  F008         	call	_delay_ms	;wreg free
  5646                           
  5647                           ;ST7735_TFT.c: 285: write_command(0x11);
  5648  000A14  0E11               	movlw	17
  5649  000A16  EC75  F00A         	call	_write_command
  5650                           
  5651                           ;ST7735_TFT.c: 286: delay_ms(500);
  5652  000A1A  0E01               	movlw	1
  5653  000A1C  6E18               	movwf	delay_ms@ms+1,c
  5654  000A1E  0EF4               	movlw	244
  5655  000A20  6E17               	movwf	delay_ms@ms,c
  5656  000A22  ECE5  F008         	call	_delay_ms	;wreg free
  5657                           
  5658                           ;ST7735_TFT.c: 287: write_command(0xB1);
  5659  000A26  0EB1               	movlw	177
  5660  000A28  EC75  F00A         	call	_write_command
  5661                           
  5662                           ;ST7735_TFT.c: 288: write_data(0x01);
  5663  000A2C  0E01               	movlw	1
  5664  000A2E  EC6D  F00A         	call	_write_data
  5665                           
  5666                           ;ST7735_TFT.c: 289: write_data(0x2C);
  5667  000A32  0E2C               	movlw	44
  5668  000A34  EC6D  F00A         	call	_write_data
  5669                           
  5670                           ;ST7735_TFT.c: 290: write_data(0x2D);
  5671  000A38  0E2D               	movlw	45
  5672  000A3A  EC6D  F00A         	call	_write_data
  5673                           
  5674                           ;ST7735_TFT.c: 291: write_command(0xB2);
  5675  000A3E  0EB2               	movlw	178
  5676  000A40  EC75  F00A         	call	_write_command
  5677                           
  5678                           ;ST7735_TFT.c: 292: write_data(0x01);
  5679  000A44  0E01               	movlw	1
  5680  000A46  EC6D  F00A         	call	_write_data
  5681                           
  5682                           ;ST7735_TFT.c: 293: write_data(0x2C);
  5683  000A4A  0E2C               	movlw	44
  5684  000A4C  EC6D  F00A         	call	_write_data
  5685                           
  5686                           ;ST7735_TFT.c: 294: write_data(0x2D);
  5687  000A50  0E2D               	movlw	45
  5688  000A52  EC6D  F00A         	call	_write_data
  5689                           
  5690                           ;ST7735_TFT.c: 295: write_command(0xB3);
  5691  000A56  0EB3               	movlw	179
  5692  000A58  EC75  F00A         	call	_write_command
  5693                           
  5694                           ;ST7735_TFT.c: 296: write_data(0x01);
  5695  000A5C  0E01               	movlw	1
  5696  000A5E  EC6D  F00A         	call	_write_data
  5697                           
  5698                           ;ST7735_TFT.c: 297: write_data(0x2C);
  5699  000A62  0E2C               	movlw	44
  5700  000A64  EC6D  F00A         	call	_write_data
  5701                           
  5702                           ;ST7735_TFT.c: 298: write_data(0x2D);
  5703  000A68  0E2D               	movlw	45
  5704  000A6A  EC6D  F00A         	call	_write_data
  5705                           
  5706                           ;ST7735_TFT.c: 299: write_data(0x01);
  5707  000A6E  0E01               	movlw	1
  5708  000A70  EC6D  F00A         	call	_write_data
  5709                           
  5710                           ;ST7735_TFT.c: 300: write_data(0x2C);
  5711  000A74  0E2C               	movlw	44
  5712  000A76  EC6D  F00A         	call	_write_data
  5713                           
  5714                           ;ST7735_TFT.c: 301: write_data(0x2D);
  5715  000A7A  0E2D               	movlw	45
  5716  000A7C  EC6D  F00A         	call	_write_data
  5717                           
  5718                           ;ST7735_TFT.c: 302: write_command(0xB4);
  5719  000A80  0EB4               	movlw	180
  5720  000A82  EC75  F00A         	call	_write_command
  5721                           
  5722                           ;ST7735_TFT.c: 303: write_data(0x07);
  5723  000A86  0E07               	movlw	7
  5724  000A88  EC6D  F00A         	call	_write_data
  5725                           
  5726                           ;ST7735_TFT.c: 304: write_command(0xC0);
  5727  000A8C  0EC0               	movlw	192
  5728  000A8E  EC75  F00A         	call	_write_command
  5729                           
  5730                           ;ST7735_TFT.c: 305: write_data(0xA2);
  5731  000A92  0EA2               	movlw	162
  5732  000A94  EC6D  F00A         	call	_write_data
  5733                           
  5734                           ;ST7735_TFT.c: 306: write_data(0x02);
  5735  000A98  0E02               	movlw	2
  5736  000A9A  EC6D  F00A         	call	_write_data
  5737                           
  5738                           ;ST7735_TFT.c: 307: write_data(0x84);
  5739  000A9E  0E84               	movlw	132
  5740  000AA0  EC6D  F00A         	call	_write_data
  5741                           
  5742                           ;ST7735_TFT.c: 308: write_command(0xC1);
  5743  000AA4  0EC1               	movlw	193
  5744  000AA6  EC75  F00A         	call	_write_command
  5745                           
  5746                           ;ST7735_TFT.c: 309: write_data(0xC5);
  5747  000AAA  0EC5               	movlw	197
  5748  000AAC  EC6D  F00A         	call	_write_data
  5749                           
  5750                           ;ST7735_TFT.c: 310: write_command(0xC2);
  5751  000AB0  0EC2               	movlw	194
  5752  000AB2  EC75  F00A         	call	_write_command
  5753                           
  5754                           ;ST7735_TFT.c: 311: write_data(0x0A);
  5755  000AB6  0E0A               	movlw	10
  5756  000AB8  EC6D  F00A         	call	_write_data
  5757                           
  5758                           ;ST7735_TFT.c: 312: write_data(0x00);
  5759  000ABC  0E00               	movlw	0
  5760  000ABE  EC6D  F00A         	call	_write_data
  5761                           
  5762                           ;ST7735_TFT.c: 313: write_command(0xC3);
  5763  000AC2  0EC3               	movlw	195
  5764  000AC4  EC75  F00A         	call	_write_command
  5765                           
  5766                           ;ST7735_TFT.c: 314: write_data(0x8A);
  5767  000AC8  0E8A               	movlw	138
  5768  000ACA  EC6D  F00A         	call	_write_data
  5769                           
  5770                           ;ST7735_TFT.c: 315: write_data(0x2A);
  5771  000ACE  0E2A               	movlw	42
  5772  000AD0  EC6D  F00A         	call	_write_data
  5773                           
  5774                           ;ST7735_TFT.c: 316: write_command(0xC4);
  5775  000AD4  0EC4               	movlw	196
  5776  000AD6  EC75  F00A         	call	_write_command
  5777                           
  5778                           ;ST7735_TFT.c: 317: write_data(0x8A);
  5779  000ADA  0E8A               	movlw	138
  5780  000ADC  EC6D  F00A         	call	_write_data
  5781                           
  5782                           ;ST7735_TFT.c: 318: write_data(0xEE);
  5783  000AE0  0EEE               	movlw	238
  5784  000AE2  EC6D  F00A         	call	_write_data
  5785                           
  5786                           ;ST7735_TFT.c: 319: write_command(0xC5);
  5787  000AE6  0EC5               	movlw	197
  5788  000AE8  EC75  F00A         	call	_write_command
  5789                           
  5790                           ;ST7735_TFT.c: 320: write_data(0x0E);
  5791  000AEC  0E0E               	movlw	14
  5792  000AEE  EC6D  F00A         	call	_write_data
  5793                           
  5794                           ;ST7735_TFT.c: 321: write_command(0x20);
  5795  000AF2  0E20               	movlw	32
  5796  000AF4  EC75  F00A         	call	_write_command
  5797                           
  5798                           ;ST7735_TFT.c: 322: write_command(0x36);
  5799  000AF8  0E36               	movlw	54
  5800  000AFA  EC75  F00A         	call	_write_command
  5801                           
  5802                           ;ST7735_TFT.c: 323: write_data(0xC8);
  5803  000AFE  0EC8               	movlw	200
  5804  000B00  EC6D  F00A         	call	_write_data
  5805                           
  5806                           ;ST7735_TFT.c: 324: write_command(0x3A);
  5807  000B04  0E3A               	movlw	58
  5808  000B06  EC75  F00A         	call	_write_command
  5809                           
  5810                           ;ST7735_TFT.c: 325: write_data(0x05);
  5811  000B0A  0E05               	movlw	5
  5812  000B0C  EC6D  F00A         	call	_write_data
  5813  000B10  0012               	return		;funcret
  5814  000B12                     __end_of_Rcmd1:
  5815                           	opt stack 0
  5816                           tblptru	equ	0xFF8
  5817                           tblptrh	equ	0xFF7
  5818                           tblptrl	equ	0xFF6
  5819                           tablat	equ	0xFF5
  5820                           prodh	equ	0xFF4
  5821                           prodl	equ	0xFF3
  5822                           intcon	equ	0xFF2
  5823                           intcon2	equ	0xFF1
  5824                           postinc0	equ	0xFEE
  5825                           wreg	equ	0xFE8
  5826                           postdec1	equ	0xFE5
  5827                           fsr1l	equ	0xFE1
  5828                           indf2	equ	0xFDF
  5829                           postinc2	equ	0xFDE
  5830                           postdec2	equ	0xFDD
  5831                           fsr2h	equ	0xFDA
  5832                           fsr2l	equ	0xFD9
  5833                           status	equ	0xFD8
  5834                           
  5835 ;; *************** function _write_data *****************
  5836 ;; Defined at:
  5837 ;;		line 209 in file "ST7735_TFT.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  data_           1    wreg     unsigned char 
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;  data_           1   18[COMRAM] unsigned char 
  5842 ;; Return value:  Size  Location     Type
  5843 ;;		None               void
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;Total ram usage:        1 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    4
  5858 ;; This function calls:
  5859 ;;		_spiwrite
  5860 ;; This function is called by:
  5861 ;;		_Rcmd1
  5862 ;;		_Rcmd2red
  5863 ;;		_Rcmd3
  5864 ;;		_setAddrWindow
  5865 ;;		_drawPixel
  5866 ;;		_TFT_GreenTab_Initialize
  5867 ;;		_Bcmd
  5868 ;;		_setScrollDefinition
  5869 ;;		_Rcmd2green
  5870 ;;		_VerticalScroll
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text26
  5875  0014DA                     __ptext26:
  5876                           	opt stack 0
  5877  0014DA                     _write_data:
  5878                           	opt stack 22
  5879                           
  5880                           ;incstack = 0
  5881                           ;write_data@data_ stored from wreg
  5882  0014DA  6E13               	movwf	write_data@data_,c
  5883                           
  5884                           ;ST7735_TFT.c: 211: PORTCbits.RC1 = 0;
  5885  0014DC  9282               	bcf	3970,1,c	;volatile
  5886                           
  5887                           ;ST7735_TFT.c: 212: PORTCbits.RC0 = 1;
  5888  0014DE  8082               	bsf	3970,0,c	;volatile
  5889                           
  5890                           ;ST7735_TFT.c: 213: spiwrite(data_);
  5891  0014E0  5013               	movf	write_data@data_,w,c
  5892  0014E2  EC49  F00A         	call	_spiwrite
  5893                           
  5894                           ;ST7735_TFT.c: 214: PORTCbits.RC1 = 1;
  5895  0014E6  8282               	bsf	3970,1,c	;volatile
  5896  0014E8  0012               	return		;funcret
  5897  0014EA                     __end_of_write_data:
  5898                           	opt stack 0
  5899                           tblptru	equ	0xFF8
  5900                           tblptrh	equ	0xFF7
  5901                           tblptrl	equ	0xFF6
  5902                           tablat	equ	0xFF5
  5903                           prodh	equ	0xFF4
  5904                           prodl	equ	0xFF3
  5905                           intcon	equ	0xFF2
  5906                           intcon2	equ	0xFF1
  5907                           postinc0	equ	0xFEE
  5908                           wreg	equ	0xFE8
  5909                           postdec1	equ	0xFE5
  5910                           fsr1l	equ	0xFE1
  5911                           indf2	equ	0xFDF
  5912                           postinc2	equ	0xFDE
  5913                           postdec2	equ	0xFDD
  5914                           fsr2h	equ	0xFDA
  5915                           fsr2l	equ	0xFD9
  5916                           status	equ	0xFD8
  5917                           
  5918 ;; *************** function _write_command *****************
  5919 ;; Defined at:
  5920 ;;		line 198 in file "ST7735_TFT.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;  cmd_            1    wreg     unsigned char 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  cmd_            1   18[COMRAM] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;		None               void
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;Total ram usage:        1 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    4
  5941 ;; This function calls:
  5942 ;;		_spiwrite
  5943 ;; This function is called by:
  5944 ;;		_Rcmd1
  5945 ;;		_Rcmd2red
  5946 ;;		_Rcmd3
  5947 ;;		_setAddrWindow
  5948 ;;		_TFT_GreenTab_Initialize
  5949 ;;		_Bcmd
  5950 ;;		_setScrollDefinition
  5951 ;;		_Rcmd2green
  5952 ;;		_VerticalScroll
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text27
  5957  0014EA                     __ptext27:
  5958                           	opt stack 0
  5959  0014EA                     _write_command:
  5960                           	opt stack 22
  5961                           
  5962                           ;incstack = 0
  5963                           ;write_command@cmd_ stored from wreg
  5964  0014EA  6E13               	movwf	write_command@cmd_,c
  5965                           
  5966                           ;ST7735_TFT.c: 200: PORTCbits.RC1 = 0;
  5967  0014EC  9282               	bcf	3970,1,c	;volatile
  5968                           
  5969                           ;ST7735_TFT.c: 202: PORTCbits.RC0 = 0;
  5970  0014EE  9082               	bcf	3970,0,c	;volatile
  5971                           
  5972                           ;ST7735_TFT.c: 203: spiwrite(cmd_);
  5973  0014F0  5013               	movf	write_command@cmd_,w,c
  5974  0014F2  EC49  F00A         	call	_spiwrite
  5975                           
  5976                           ;ST7735_TFT.c: 205: PORTCbits.RC1 = 1;
  5977  0014F6  8282               	bsf	3970,1,c	;volatile
  5978  0014F8  0012               	return		;funcret
  5979  0014FA                     __end_of_write_command:
  5980                           	opt stack 0
  5981                           tblptru	equ	0xFF8
  5982                           tblptrh	equ	0xFF7
  5983                           tblptrl	equ	0xFF6
  5984                           tablat	equ	0xFF5
  5985                           prodh	equ	0xFF4
  5986                           prodl	equ	0xFF3
  5987                           intcon	equ	0xFF2
  5988                           intcon2	equ	0xFF1
  5989                           postinc0	equ	0xFEE
  5990                           wreg	equ	0xFE8
  5991                           postdec1	equ	0xFE5
  5992                           fsr1l	equ	0xFE1
  5993                           indf2	equ	0xFDF
  5994                           postinc2	equ	0xFDE
  5995                           postdec2	equ	0xFDD
  5996                           fsr2h	equ	0xFDA
  5997                           fsr2l	equ	0xFD9
  5998                           status	equ	0xFD8
  5999                           
  6000 ;; *************** function _spiwrite *****************
  6001 ;; Defined at:
  6002 ;;		line 189 in file "ST7735_TFT.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  spidata         1    wreg     unsigned char 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  spidata         1   17[COMRAM] unsigned char 
  6007 ;;  x               1   16[COMRAM] unsigned char 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;		None               void
  6010 ;; Registers used:
  6011 ;;		wreg
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;Total ram usage:        2 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; Hardware stack levels required when called:    3
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		_write_command
  6028 ;;		_write_data
  6029 ;;		_drawFastVLine
  6030 ;;		_fillRectangle
  6031 ;;		_drawFastHLine
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           	psect	text28
  6036  001492                     __ptext28:
  6037                           	opt stack 0
  6038  001492                     _spiwrite:
  6039                           	opt stack 24
  6040                           
  6041                           ;incstack = 0
  6042                           ;spiwrite@spidata stored from wreg
  6043  001492  6E12               	movwf	spiwrite@spidata,c
  6044                           
  6045                           ;ST7735_TFT.c: 191: char x;
  6046                           ;ST7735_TFT.c: 192: PIR1bits.SSPIF = 0;
  6047  001494  969E               	bcf	3998,3,c	;volatile
  6048                           
  6049                           ;ST7735_TFT.c: 193: x = SSPBUF;
  6050  001496  CFC9 F011          	movff	4041,spiwrite@x	;volatile
  6051                           
  6052                           ;ST7735_TFT.c: 194: SSPBUF = spidata;
  6053  00149A  C012  FFC9         	movff	spiwrite@spidata,4041	;volatile
  6054                           
  6055                           ;ST7735_TFT.c: 195: while (!SSPSTATbits.BF);
  6056  00149E  D000               	goto	l45
  6057  0014A0                     l45:
  6058  0014A0  A0C7               	btfss	4039,0,c	;volatile
  6059  0014A2  D7FE               	goto	l45
  6060  0014A4  0012               	return		;funcret
  6061  0014A6                     __end_of_spiwrite:
  6062                           	opt stack 0
  6063                           tblptru	equ	0xFF8
  6064                           tblptrh	equ	0xFF7
  6065                           tblptrl	equ	0xFF6
  6066                           tablat	equ	0xFF5
  6067                           prodh	equ	0xFF4
  6068                           prodl	equ	0xFF3
  6069                           intcon	equ	0xFF2
  6070                           intcon2	equ	0xFF1
  6071                           postinc0	equ	0xFEE
  6072                           wreg	equ	0xFE8
  6073                           postdec1	equ	0xFE5
  6074                           fsr1l	equ	0xFE1
  6075                           indf2	equ	0xFDF
  6076                           postinc2	equ	0xFDE
  6077                           postdec2	equ	0xFDD
  6078                           fsr2h	equ	0xFDA
  6079                           fsr2l	equ	0xFD9
  6080                           status	equ	0xFD8
  6081                           
  6082 ;; *************** function _LCD_Reset *****************
  6083 ;; Defined at:
  6084 ;;		line 217 in file "ST7735_TFT.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;		None
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;		None
  6089 ;; Return value:  Size  Location     Type
  6090 ;;		None               void
  6091 ;; Registers used:
  6092 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;Total ram usage:        0 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    5
  6105 ;; This function calls:
  6106 ;;		_delay_ms
  6107 ;; This function is called by:
  6108 ;;		_Initialize_Screen
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text29
  6113  0014A6                     __ptext29:
  6114                           	opt stack 0
  6115  0014A6                     _LCD_Reset:
  6116                           	opt stack 24
  6117                           
  6118                           ;ST7735_TFT.c: 219: PORTCbits.RC4 = 0;
  6119                           
  6120                           ;incstack = 0
  6121  0014A6  9882               	bcf	3970,4,c	;volatile
  6122                           
  6123                           ;ST7735_TFT.c: 220: delay_ms(100);
  6124  0014A8  0E00               	movlw	0
  6125  0014AA  6E18               	movwf	delay_ms@ms+1,c
  6126  0014AC  0E64               	movlw	100
  6127  0014AE  6E17               	movwf	delay_ms@ms,c
  6128  0014B0  ECE5  F008         	call	_delay_ms	;wreg free
  6129                           
  6130                           ;ST7735_TFT.c: 221: PORTCbits.RC4 = 1;
  6131  0014B4  8882               	bsf	3970,4,c	;volatile
  6132  0014B6  0012               	return		;funcret
  6133  0014B8                     __end_of_LCD_Reset:
  6134                           	opt stack 0
  6135                           tblptru	equ	0xFF8
  6136                           tblptrh	equ	0xFF7
  6137                           tblptrl	equ	0xFF6
  6138                           tablat	equ	0xFF5
  6139                           prodh	equ	0xFF4
  6140                           prodl	equ	0xFF3
  6141                           intcon	equ	0xFF2
  6142                           intcon2	equ	0xFF1
  6143                           postinc0	equ	0xFEE
  6144                           wreg	equ	0xFE8
  6145                           postdec1	equ	0xFE5
  6146                           fsr1l	equ	0xFE1
  6147                           indf2	equ	0xFDF
  6148                           postinc2	equ	0xFDE
  6149                           postdec2	equ	0xFDD
  6150                           fsr2h	equ	0xFDA
  6151                           fsr2l	equ	0xFD9
  6152                           status	equ	0xFD8
  6153                           
  6154 ;; *************** function _delay_ms *****************
  6155 ;; Defined at:
  6156 ;;		line 64 in file "ST7735_TFT.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;  ms              2   22[COMRAM] int 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  count           2   26[COMRAM] int 
  6161 ;; Return value:  Size  Location     Type
  6162 ;;		None               void
  6163 ;; Registers used:
  6164 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6174 ;;Total ram usage:        6 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    4
  6177 ;; This function calls:
  6178 ;;		___wmul
  6179 ;; This function is called by:
  6180 ;;		_LCD_Reset
  6181 ;;		_Rcmd1
  6182 ;;		_Rcmd3
  6183 ;;		_Bcmd
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           	psect	text30
  6188  0011CA                     __ptext30:
  6189                           	opt stack 0
  6190  0011CA                     _delay_ms:
  6191                           	opt stack 23
  6192                           
  6193                           ;ST7735_TFT.c: 70: int count;
  6194                           ;ST7735_TFT.c: 71: count = 8000000/4000/8 * ms;
  6195                           
  6196                           ;incstack = 0
  6197  0011CA  C017  F011         	movff	delay_ms@ms,___wmul@multiplier
  6198  0011CE  C018  F012         	movff	delay_ms@ms+1,___wmul@multiplier+1
  6199  0011D2  0E00               	movlw	0
  6200  0011D4  6E14               	movwf	___wmul@multiplicand+1,c
  6201  0011D6  0EFA               	movlw	250
  6202  0011D8  6E13               	movwf	___wmul@multiplicand,c
  6203  0011DA  ECFE  F009         	call	___wmul	;wreg free
  6204  0011DE  C011  F01B         	movff	?___wmul,delay_ms@count
  6205  0011E2  C012  F01C         	movff	?___wmul+1,delay_ms@count+1
  6206                           
  6207                           ;ST7735_TFT.c: 72: count = (0xffff - count);
  6208  0011E6  C01B  F019         	movff	delay_ms@count,??_delay_ms
  6209  0011EA  C01C  F01A         	movff	delay_ms@count+1,??_delay_ms+1
  6210  0011EE  1E19               	comf	??_delay_ms,f,c
  6211  0011F0  1E1A               	comf	??_delay_ms+1,f,c
  6212  0011F2  4A19               	infsnz	??_delay_ms,f,c
  6213  0011F4  2A1A               	incf	??_delay_ms+1,f,c
  6214  0011F6  0EFF               	movlw	255
  6215  0011F8  2419               	addwf	??_delay_ms,w,c
  6216  0011FA  6E1B               	movwf	delay_ms@count,c
  6217  0011FC  0EFF               	movlw	255
  6218  0011FE  201A               	addwfc	??_delay_ms+1,w,c
  6219  001200  6E1C               	movwf	delay_ms@count+1,c
  6220                           
  6221                           ;ST7735_TFT.c: 74: T3CON = 0xb8;
  6222  001202  0EB8               	movlw	184
  6223  001204  6EB1               	movwf	4017,c	;volatile
  6224                           
  6225                           ;ST7735_TFT.c: 76: TMR3L = count & 0x00ff;
  6226  001206  C01B  FFB2         	movff	delay_ms@count,4018	;volatile
  6227                           
  6228                           ;ST7735_TFT.c: 77: TMR3H = count >> 8;
  6229  00120A  501C               	movf	delay_ms@count+1,w,c
  6230  00120C  6EB3               	movwf	4019,c	;volatile
  6231                           
  6232                           ;ST7735_TFT.c: 79: PIR2bits.TMR3IF = 0;
  6233  00120E  92A1               	bcf	4001,1,c	;volatile
  6234                           
  6235                           ;ST7735_TFT.c: 80: T3CONbits.TMR3ON = 1;
  6236  001210  80B1               	bsf	4017,0,c	;volatile
  6237                           
  6238                           ;ST7735_TFT.c: 82: while (PIR2bits.TMR3IF == 0);
  6239  001212  D000               	goto	l35
  6240  001214                     l35:
  6241  001214  A2A1               	btfss	4001,1,c	;volatile
  6242  001216  D7FE               	goto	l35
  6243                           
  6244                           ;ST7735_TFT.c: 83: T3CONbits.TMR3ON = 0;
  6245  001218  90B1               	bcf	4017,0,c	;volatile
  6246  00121A  0012               	return		;funcret
  6247  00121C                     __end_of_delay_ms:
  6248                           	opt stack 0
  6249                           tblptru	equ	0xFF8
  6250                           tblptrh	equ	0xFF7
  6251                           tblptrl	equ	0xFF6
  6252                           tablat	equ	0xFF5
  6253                           prodh	equ	0xFF4
  6254                           prodl	equ	0xFF3
  6255                           intcon	equ	0xFF2
  6256                           intcon2	equ	0xFF1
  6257                           postinc0	equ	0xFEE
  6258                           wreg	equ	0xFE8
  6259                           postdec1	equ	0xFE5
  6260                           fsr1l	equ	0xFE1
  6261                           indf2	equ	0xFDF
  6262                           postinc2	equ	0xFDE
  6263                           postdec2	equ	0xFDD
  6264                           fsr2h	equ	0xFDA
  6265                           fsr2l	equ	0xFD9
  6266                           status	equ	0xFD8
  6267                           
  6268 ;; *************** function ___wmul *****************
  6269 ;; Defined at:
  6270 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  multiplier      2   16[COMRAM] unsigned int 
  6273 ;;  multiplicand    2   18[COMRAM] unsigned int 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  product         2   20[COMRAM] unsigned int 
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  2   16[COMRAM] unsigned int 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0, prodl, prodh
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;Total ram usage:        6 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    3
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_delay_ms
  6296 ;;		_drawChar
  6297 ;;		_printf
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text31
  6302  0013FC                     __ptext31:
  6303                           	opt stack 0
  6304  0013FC                     ___wmul:
  6305                           	opt stack 26
  6306                           
  6307                           ;incstack = 0
  6308  0013FC  5011               	movf	___wmul@multiplier,w,c
  6309  0013FE  0213               	mulwf	___wmul@multiplicand,c
  6310  001400  CFF3 F015          	movff	prodl,___wmul@product
  6311  001404  CFF4 F016          	movff	prodh,___wmul@product+1
  6312  001408  5011               	movf	___wmul@multiplier,w,c
  6313  00140A  0214               	mulwf	___wmul@multiplicand+1,c
  6314  00140C  50F3               	movf	prodl,w,c
  6315  00140E  2616               	addwf	___wmul@product+1,f,c
  6316  001410  5012               	movf	___wmul@multiplier+1,w,c
  6317  001412  0213               	mulwf	___wmul@multiplicand,c
  6318  001414  50F3               	movf	prodl,w,c
  6319  001416  2616               	addwf	___wmul@product+1,f,c
  6320  001418  C015  F011         	movff	___wmul@product,?___wmul
  6321  00141C  C016  F012         	movff	___wmul@product+1,?___wmul+1
  6322  001420  D000               	goto	l489
  6323  001422                     l489:
  6324  001422  0012               	return		;funcret
  6325  001424                     __end_of___wmul:
  6326                           	opt stack 0
  6327                           tblptru	equ	0xFF8
  6328                           tblptrh	equ	0xFF7
  6329                           tblptrl	equ	0xFF6
  6330                           tablat	equ	0xFF5
  6331                           prodh	equ	0xFF4
  6332                           prodl	equ	0xFF3
  6333                           intcon	equ	0xFF2
  6334                           intcon2	equ	0xFF1
  6335                           postinc0	equ	0xFEE
  6336                           wreg	equ	0xFE8
  6337                           postdec1	equ	0xFE5
  6338                           fsr1l	equ	0xFE1
  6339                           indf2	equ	0xFDF
  6340                           postinc2	equ	0xFDE
  6341                           postdec2	equ	0xFDD
  6342                           fsr2h	equ	0xFDA
  6343                           fsr2l	equ	0xFD9
  6344                           status	equ	0xFD8
  6345                           
  6346 ;; *************** function _Deactivate_Buzzer *****************
  6347 ;; Defined at:
  6348 ;;		line 277 in file "Lab10p2.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;		None
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;		None
  6353 ;; Return value:  Size  Location     Type
  6354 ;;		None               void
  6355 ;; Registers used:
  6356 ;;		wreg, status,2
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;Total ram usage:        0 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:    3
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_main
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text32
  6377  001514                     __ptext32:
  6378                           	opt stack 0
  6379  001514                     _Deactivate_Buzzer:
  6380                           	opt stack 27
  6381                           
  6382                           ;Lab10p2.c: 279: CCP2CON = 0x0;
  6383                           
  6384                           ;incstack = 0
  6385  001514  0E00               	movlw	0
  6386  001516  6EBA               	movwf	4026,c	;volatile
  6387                           
  6388                           ;Lab10p2.c: 280: PORTBbits.RB3 = 0;
  6389  001518  9681               	bcf	3969,3,c	;volatile
  6390  00151A  0012               	return		;funcret
  6391  00151C                     __end_of_Deactivate_Buzzer:
  6392                           	opt stack 0
  6393                           tblptru	equ	0xFF8
  6394                           tblptrh	equ	0xFF7
  6395                           tblptrl	equ	0xFF6
  6396                           tablat	equ	0xFF5
  6397                           prodh	equ	0xFF4
  6398                           prodl	equ	0xFF3
  6399                           intcon	equ	0xFF2
  6400                           intcon2	equ	0xFF1
  6401                           postinc0	equ	0xFEE
  6402                           wreg	equ	0xFE8
  6403                           postdec1	equ	0xFE5
  6404                           fsr1l	equ	0xFE1
  6405                           indf2	equ	0xFDF
  6406                           postinc2	equ	0xFDE
  6407                           postdec2	equ	0xFDD
  6408                           fsr2h	equ	0xFDA
  6409                           fsr2l	equ	0xFD9
  6410                           status	equ	0xFD8
  6411                           
  6412 ;; *************** function _Activate_Buzzer *****************
  6413 ;; Defined at:
  6414 ;;		line 269 in file "Lab10p2.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;		None
  6419 ;; Return value:  Size  Location     Type
  6420 ;;		None               void
  6421 ;; Registers used:
  6422 ;;		wreg, status,2
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;Total ram usage:        0 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    3
  6435 ;; This function calls:
  6436 ;;		Nothing
  6437 ;; This function is called by:
  6438 ;;		_main
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text33
  6443  0014B8                     __ptext33:
  6444                           	opt stack 0
  6445  0014B8                     _Activate_Buzzer:
  6446                           	opt stack 27
  6447                           
  6448                           ;Lab10p2.c: 271: PR2 = 0b11111001 ;
  6449                           
  6450                           ;incstack = 0
  6451  0014B8  0EF9               	movlw	249
  6452  0014BA  6ECB               	movwf	4043,c	;volatile
  6453                           
  6454                           ;Lab10p2.c: 272: T2CON = 0b00000101 ;
  6455  0014BC  0E05               	movlw	5
  6456  0014BE  6ECA               	movwf	4042,c	;volatile
  6457                           
  6458                           ;Lab10p2.c: 273: CCPR2L = 0b01001010 ;
  6459  0014C0  0E4A               	movlw	74
  6460  0014C2  6EBB               	movwf	4027,c	;volatile
  6461                           
  6462                           ;Lab10p2.c: 274: CCP2CON = 0b00111100 ;
  6463  0014C4  0E3C               	movlw	60
  6464  0014C6  6EBA               	movwf	4026,c	;volatile
  6465  0014C8  0012               	return		;funcret
  6466  0014CA                     __end_of_Activate_Buzzer:
  6467                           	opt stack 0
  6468                           tblptru	equ	0xFF8
  6469                           tblptrh	equ	0xFF7
  6470                           tblptrl	equ	0xFF6
  6471                           tablat	equ	0xFF5
  6472                           prodh	equ	0xFF4
  6473                           prodl	equ	0xFF3
  6474                           intcon	equ	0xFF2
  6475                           intcon2	equ	0xFF1
  6476                           postinc0	equ	0xFEE
  6477                           wreg	equ	0xFE8
  6478                           postdec1	equ	0xFE5
  6479                           fsr1l	equ	0xFE1
  6480                           indf2	equ	0xFDF
  6481                           postinc2	equ	0xFDE
  6482                           postdec2	equ	0xFDD
  6483                           fsr2h	equ	0xFDA
  6484                           fsr2l	equ	0xFD9
  6485                           status	equ	0xFD8
  6486                           
  6487 ;; *************** function _chkisr *****************
  6488 ;; Defined at:
  6489 ;;		line 80 in file "Lab10p2.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;		None
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;		None               void
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;Total ram usage:       14 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:    2
  6510 ;; This function calls:
  6511 ;;		_INT0_isr
  6512 ;;		_TIMER1_isr
  6513 ;; This function is called by:
  6514 ;;		Interrupt level 2
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           	psect	intcode
  6519  000008                     __pintcode:
  6520                           	opt stack 0
  6521  000008                     _chkisr:
  6522                           	opt stack 20
  6523                           
  6524                           ;incstack = 0
  6525  000008  CFFA F003          	movff	pclath,??_chkisr
  6526  00000C  CFFB F004          	movff	pclatu,??_chkisr+1
  6527  000010  CFE9 F005          	movff	fsr0l,??_chkisr+2
  6528  000014  ED46  F008         	call	int_func,f	;refresh shadow registers
  6529                           pclatu	equ	0xFFB
  6530                           pclath	equ	0xFFA
  6531                           tblptru	equ	0xFF8
  6532                           tblptrh	equ	0xFF7
  6533                           tblptrl	equ	0xFF6
  6534                           tablat	equ	0xFF5
  6535                           prodh	equ	0xFF4
  6536                           prodl	equ	0xFF3
  6537                           intcon	equ	0xFF2
  6538                           intcon2	equ	0xFF1
  6539                           postinc0	equ	0xFEE
  6540                           fsr0l	equ	0xFE9
  6541                           wreg	equ	0xFE8
  6542                           postdec1	equ	0xFE5
  6543                           fsr1l	equ	0xFE1
  6544                           indf2	equ	0xFDF
  6545                           postinc2	equ	0xFDE
  6546                           postdec2	equ	0xFDD
  6547                           fsr2h	equ	0xFDA
  6548                           fsr2l	equ	0xFD9
  6549                           status	equ	0xFD8
  6550                           
  6551                           	psect	intcode_body
  6552  00108C                     __pintcode_body:
  6553                           	opt stack 20
  6554  00108C                     int_func:
  6555                           	opt stack 20
  6556  00108C  0006               	pop		; remove dummy address from shadow register refresh
  6557  00108E  CFEA F006          	movff	fsr0h,??_chkisr+3
  6558  001092  CFE1 F007          	movff	fsr1l,??_chkisr+4
  6559  001096  CFE2 F008          	movff	fsr1h,??_chkisr+5
  6560  00109A  CFD9 F009          	movff	fsr2l,??_chkisr+6
  6561  00109E  CFDA F00A          	movff	fsr2h,??_chkisr+7
  6562  0010A2  CFF3 F00B          	movff	prodl,??_chkisr+8
  6563  0010A6  CFF4 F00C          	movff	prodh,??_chkisr+9
  6564  0010AA  CFF6 F00D          	movff	tblptrl,??_chkisr+10
  6565  0010AE  CFF7 F00E          	movff	tblptrh,??_chkisr+11
  6566  0010B2  CFF8 F00F          	movff	tblptru,??_chkisr+12
  6567  0010B6  CFF5 F010          	movff	tablat,??_chkisr+13
  6568                           
  6569                           ;Lab10p2.c: 82: if (PIR1bits.TMR1IF == 1) TIMER1_isr();
  6570  0010BA  A09E               	btfss	3998,0,c	;volatile
  6571  0010BC  D003               	goto	i2l2085
  6572  0010BE  EC84  F00A         	call	_TIMER1_isr	;wreg free
  6573  0010C2  D000               	goto	i2l2085
  6574  0010C4                     i2l2085:
  6575                           
  6576                           ;Lab10p2.c: 83: if (INTCONbits.INT0IF == 1) INT0_isr();
  6577  0010C4  A2F2               	btfss	intcon,1,c	;volatile
  6578  0010C6  D003               	goto	i2l343
  6579  0010C8  EC0A  F003         	call	_INT0_isr	;wreg free
  6580  0010CC  D000               	goto	i2l343
  6581  0010CE                     i2l343:
  6582  0010CE  C010  FFF5         	movff	??_chkisr+13,tablat
  6583  0010D2  C00F  FFF8         	movff	??_chkisr+12,tblptru
  6584  0010D6  C00E  FFF7         	movff	??_chkisr+11,tblptrh
  6585  0010DA  C00D  FFF6         	movff	??_chkisr+10,tblptrl
  6586  0010DE  C00C  FFF4         	movff	??_chkisr+9,prodh
  6587  0010E2  C00B  FFF3         	movff	??_chkisr+8,prodl
  6588  0010E6  C00A  FFDA         	movff	??_chkisr+7,fsr2h
  6589  0010EA  C009  FFD9         	movff	??_chkisr+6,fsr2l
  6590  0010EE  C008  FFE2         	movff	??_chkisr+5,fsr1h
  6591  0010F2  C007  FFE1         	movff	??_chkisr+4,fsr1l
  6592  0010F6  C006  FFEA         	movff	??_chkisr+3,fsr0h
  6593  0010FA  C005  FFE9         	movff	??_chkisr+2,fsr0l
  6594  0010FE  C004  FFFB         	movff	??_chkisr+1,pclatu
  6595  001102  C003  FFFA         	movff	??_chkisr,pclath
  6596  001106  0011               	retfie		f
  6597  001108                     __end_of_chkisr:
  6598                           	opt stack 0
  6599                           pclatu	equ	0xFFB
  6600                           pclath	equ	0xFFA
  6601                           tblptru	equ	0xFF8
  6602                           tblptrh	equ	0xFF7
  6603                           tblptrl	equ	0xFF6
  6604                           tablat	equ	0xFF5
  6605                           prodh	equ	0xFF4
  6606                           prodl	equ	0xFF3
  6607                           intcon	equ	0xFF2
  6608                           intcon2	equ	0xFF1
  6609                           postinc0	equ	0xFEE
  6610                           fsr0h	equ	0xFEA
  6611                           fsr0l	equ	0xFE9
  6612                           wreg	equ	0xFE8
  6613                           postdec1	equ	0xFE5
  6614                           fsr1h	equ	0xFE2
  6615                           fsr1l	equ	0xFE1
  6616                           indf2	equ	0xFDF
  6617                           postinc2	equ	0xFDE
  6618                           postdec2	equ	0xFDD
  6619                           fsr2h	equ	0xFDA
  6620                           fsr2l	equ	0xFD9
  6621                           status	equ	0xFD8
  6622                           
  6623 ;; *************** function _TIMER1_isr *****************
  6624 ;; Defined at:
  6625 ;;		line 86 in file "Lab10p2.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;		None               void
  6632 ;; Registers used:
  6633 ;;		wreg, status,2
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6643 ;;Total ram usage:        0 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		_chkisr
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text35
  6653  001508                     __ptext35:
  6654                           	opt stack 0
  6655  001508                     _TIMER1_isr:
  6656                           	opt stack 21
  6657                           
  6658                           ;Lab10p2.c: 88: Nec_state = 0;
  6659                           
  6660                           ;incstack = 0
  6661  001508  0E00               	movlw	0
  6662  00150A  6E6A               	movwf	_Nec_state,c
  6663                           
  6664                           ;Lab10p2.c: 89: INTCON2bits.INTEDG0 = 0;
  6665  00150C  9CF1               	bcf	intcon2,6,c	;volatile
  6666                           
  6667                           ;Lab10p2.c: 90: T1CONbits.TMR1ON = 0;
  6668  00150E  90CD               	bcf	4045,0,c	;volatile
  6669                           
  6670                           ;Lab10p2.c: 91: PIR1bits.TMR1IF = 0;
  6671  001510  909E               	bcf	3998,0,c	;volatile
  6672  001512  0012               	return		;funcret
  6673  001514                     __end_of_TIMER1_isr:
  6674                           	opt stack 0
  6675                           pclatu	equ	0xFFB
  6676                           pclath	equ	0xFFA
  6677                           tblptru	equ	0xFF8
  6678                           tblptrh	equ	0xFF7
  6679                           tblptrl	equ	0xFF6
  6680                           tablat	equ	0xFF5
  6681                           prodh	equ	0xFF4
  6682                           prodl	equ	0xFF3
  6683                           intcon	equ	0xFF2
  6684                           intcon2	equ	0xFF1
  6685                           postinc0	equ	0xFEE
  6686                           fsr0h	equ	0xFEA
  6687                           fsr0l	equ	0xFE9
  6688                           wreg	equ	0xFE8
  6689                           postdec1	equ	0xFE5
  6690                           fsr1h	equ	0xFE2
  6691                           fsr1l	equ	0xFE1
  6692                           indf2	equ	0xFDF
  6693                           postinc2	equ	0xFDE
  6694                           postdec2	equ	0xFDD
  6695                           fsr2h	equ	0xFDA
  6696                           fsr2l	equ	0xFD9
  6697                           status	equ	0xFD8
  6698                           
  6699 ;; *************** function _INT0_isr *****************
  6700 ;; Defined at:
  6701 ;;		line 100 in file "Lab10p2.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;		None
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;		None
  6706 ;; Return value:  Size  Location     Type
  6707 ;;		None               void
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6719 ;;Total ram usage:        2 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    1
  6722 ;; This function calls:
  6723 ;;		_force_nec_state0
  6724 ;; This function is called by:
  6725 ;;		_chkisr
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text36
  6730  000614                     __ptext36:
  6731                           	opt stack 0
  6732  000614                     _INT0_isr:
  6733                           	opt stack 20
  6734                           
  6735                           ;Lab10p2.c: 102: INTCONbits.INT0IF = 0;
  6736                           
  6737                           ;incstack = 0
  6738  000614  92F2               	bcf	intcon,1,c	;volatile
  6739                           
  6740                           ;Lab10p2.c: 103: if (Nec_state != 0)
  6741  000616  506A               	movf	_Nec_state,w,c
  6742  000618  B4D8               	btfsc	status,2,c
  6743  00061A  D09A               	goto	i2l1729
  6744                           
  6745                           ;Lab10p2.c: 104: {
  6746                           ;Lab10p2.c: 105: Time_Elapsed = (TMR1H << 8) | TMR1L;
  6747  00061C  50CE               	movf	4046,w,c	;volatile
  6748  00061E  CFCF F001          	movff	4047,??_INT0_isr	;volatile
  6749  000622  6A02               	clrf	(??_INT0_isr+1)& (0+255),c
  6750  000624  C001  F002         	movff	??_INT0_isr,??_INT0_isr+1
  6751  000628  6A01               	clrf	??_INT0_isr,c
  6752  00062A  1001               	iorwf	??_INT0_isr,w,c
  6753  00062C  6E61               	movwf	_Time_Elapsed,c
  6754  00062E  5002               	movf	??_INT0_isr+1,w,c
  6755  000630  6E62               	movwf	_Time_Elapsed+1,c
  6756                           
  6757                           ;Lab10p2.c: 106: TMR1H = 0;
  6758  000632  0E00               	movlw	0
  6759  000634  6ECF               	movwf	4047,c	;volatile
  6760                           
  6761                           ;Lab10p2.c: 107: TMR1L = 0;
  6762  000636  0E00               	movlw	0
  6763  000638  6ECE               	movwf	4046,c	;volatile
  6764                           
  6765                           ;Lab10p2.c: 108: }
  6766                           ;Lab10p2.c: 110: switch(Nec_state)
  6767  00063A  D08A               	goto	i2l1729
  6768  00063C                     i2l1663:
  6769                           
  6770                           ;Lab10p2.c: 113: {
  6771                           ;Lab10p2.c: 115: TMR1H = 0;
  6772  00063C  0E00               	movlw	0
  6773  00063E  6ECF               	movwf	4047,c	;volatile
  6774                           
  6775                           ;Lab10p2.c: 116: TMR1L = 0;
  6776  000640  0E00               	movlw	0
  6777  000642  6ECE               	movwf	4046,c	;volatile
  6778                           
  6779                           ;Lab10p2.c: 117: PIR1bits.TMR1IF = 0;
  6780  000644  909E               	bcf	3998,0,c	;volatile
  6781                           
  6782                           ;Lab10p2.c: 118: T1CON= 0x90;
  6783  000646  0E90               	movlw	144
  6784  000648  6ECD               	movwf	4045,c	;volatile
  6785                           
  6786                           ;Lab10p2.c: 119: T1CONbits.TMR1ON = 1;
  6787  00064A  80CD               	bsf	4045,0,c	;volatile
  6788                           
  6789                           ;Lab10p2.c: 120: bit_count = 0;
  6790  00064C  0E00               	movlw	0
  6791  00064E  6E6C               	movwf	_bit_count,c
  6792                           
  6793                           ;Lab10p2.c: 121: Nec_code = 0;
  6794  000650  0E00               	movlw	0
  6795  000652  6E5D               	movwf	_Nec_code,c
  6796  000654  0E00               	movlw	0
  6797  000656  6E5E               	movwf	_Nec_code+1,c
  6798  000658  0E00               	movlw	0
  6799  00065A  6E5F               	movwf	_Nec_code+2,c
  6800  00065C  0E00               	movlw	0
  6801  00065E  6E60               	movwf	_Nec_code+3,c
  6802                           
  6803                           ;Lab10p2.c: 122: Nec_state = 1;
  6804  000660  0E01               	movlw	1
  6805  000662  6E6A               	movwf	_Nec_state,c
  6806  000664  D073               	goto	i2l1723
  6807                           
  6808                           ;Lab10p2.c: 124: return;
  6809                           
  6810                           ;Lab10p2.c: 123: INTCON2bits.INTEDG0 = 1;
  6811  000666  D085               	goto	i2l355
  6812  000668                     i2l1673:
  6813                           
  6814                           ;Lab10p2.c: 128: {
  6815                           ;Lab10p2.c: 129: if(Time_Elapsed > 8500 && Time_Elapsed < 9500) Nec_state = 2;
  6816  000668  0E35               	movlw	53
  6817  00066A  5C61               	subwf	_Time_Elapsed,w,c
  6818  00066C  0E21               	movlw	33
  6819  00066E  5862               	subwfb	_Time_Elapsed+1,w,c
  6820  000670  A0D8               	btfss	status,0,c
  6821  000672  D009               	goto	i2l1679
  6822  000674  0E1C               	movlw	28
  6823  000676  5C61               	subwf	_Time_Elapsed,w,c
  6824  000678  0E25               	movlw	37
  6825  00067A  5862               	subwfb	_Time_Elapsed+1,w,c
  6826  00067C  B0D8               	btfsc	status,0,c
  6827  00067E  D003               	goto	i2l1679
  6828  000680  0E02               	movlw	2
  6829  000682  6E6A               	movwf	_Nec_state,c
  6830  000684  D02A               	goto	i2l1705
  6831  000686                     i2l1679:
  6832                           
  6833                           ;Lab10p2.c: 130: else force_nec_state0();
  6834  000686  EC8E  F00A         	call	_force_nec_state0	;wreg free
  6835  00068A  D027               	goto	i2l1705
  6836  00068C  D026               	goto	i2l1705
  6837                           
  6838                           ;Lab10p2.c: 132: return;
  6839                           
  6840                           ;Lab10p2.c: 131: INTCON2bits.INTEDG0 = 0;
  6841  00068E  D071               	goto	i2l355
  6842  000690                     i2l1685:
  6843                           
  6844                           ;Lab10p2.c: 136: {
  6845                           ;Lab10p2.c: 137: if(Time_Elapsed > 4000 && Time_Elapsed < 5000) Nec_state = 3;
  6846  000690  0EA1               	movlw	161
  6847  000692  5C61               	subwf	_Time_Elapsed,w,c
  6848  000694  0E0F               	movlw	15
  6849  000696  5862               	subwfb	_Time_Elapsed+1,w,c
  6850  000698  A0D8               	btfss	status,0,c
  6851  00069A  D009               	goto	i2l1691
  6852  00069C  0E88               	movlw	136
  6853  00069E  5C61               	subwf	_Time_Elapsed,w,c
  6854  0006A0  0E13               	movlw	19
  6855  0006A2  5862               	subwfb	_Time_Elapsed+1,w,c
  6856  0006A4  B0D8               	btfsc	status,0,c
  6857  0006A6  D003               	goto	i2l1691
  6858  0006A8  0E03               	movlw	3
  6859  0006AA  6E6A               	movwf	_Nec_state,c
  6860  0006AC  D04F               	goto	i2l1723
  6861  0006AE                     i2l1691:
  6862                           
  6863                           ;Lab10p2.c: 138: else force_nec_state0();
  6864  0006AE  EC8E  F00A         	call	_force_nec_state0	;wreg free
  6865  0006B2  D04C               	goto	i2l1723
  6866  0006B4  D04B               	goto	i2l1723
  6867                           
  6868                           ;Lab10p2.c: 140: return;
  6869                           
  6870                           ;Lab10p2.c: 139: INTCON2bits.INTEDG0 = 1;
  6871  0006B6  D05D               	goto	i2l355
  6872  0006B8                     i2l1697:
  6873                           
  6874                           ;Lab10p2.c: 144: {
  6875                           ;Lab10p2.c: 145: if(Time_Elapsed >= 400 && Time_Elapsed <= 700) Nec_state = 4;
  6876  0006B8  0E90               	movlw	144
  6877  0006BA  5C61               	subwf	_Time_Elapsed,w,c
  6878  0006BC  0E01               	movlw	1
  6879  0006BE  5862               	subwfb	_Time_Elapsed+1,w,c
  6880  0006C0  A0D8               	btfss	status,0,c
  6881  0006C2  D008               	goto	i2l1703
  6882  0006C4  0EBD               	movlw	189
  6883  0006C6  5C61               	subwf	_Time_Elapsed,w,c
  6884  0006C8  0E02               	movlw	2
  6885  0006CA  5862               	subwfb	_Time_Elapsed+1,w,c
  6886  0006CC  B0D8               	btfsc	status,0,c
  6887  0006CE  D002               	goto	i2l1703
  6888  0006D0  0E04               	movlw	4
  6889  0006D2  D7D7               	goto	L3
  6890  0006D4                     i2l1703:
  6891                           
  6892                           ;Lab10p2.c: 146: else force_nec_state0();
  6893  0006D4  EC8E  F00A         	call	_force_nec_state0	;wreg free
  6894  0006D8  D000               	goto	i2l1705
  6895  0006DA                     i2l1705:
  6896                           
  6897                           ;Lab10p2.c: 147: INTCON2bits.INTEDG0 = 0;
  6898  0006DA  9CF1               	bcf	intcon2,6,c	;volatile
  6899                           
  6900                           ;Lab10p2.c: 148: return;
  6901  0006DC  D04A               	goto	i2l355
  6902  0006DE                     i2l1709:
  6903                           
  6904                           ;Lab10p2.c: 152: {
  6905                           ;Lab10p2.c: 153: if(Time_Elapsed > 400 && Time_Elapsed < 1800)
  6906  0006DE  0E91               	movlw	145
  6907  0006E0  5C61               	subwf	_Time_Elapsed,w,c
  6908  0006E2  0E01               	movlw	1
  6909  0006E4  5862               	subwfb	_Time_Elapsed+1,w,c
  6910  0006E6  A0D8               	btfss	status,0,c
  6911  0006E8  D02E               	goto	i2l1721
  6912  0006EA  0E08               	movlw	8
  6913  0006EC  5C61               	subwf	_Time_Elapsed,w,c
  6914  0006EE  0E07               	movlw	7
  6915  0006F0  5862               	subwfb	_Time_Elapsed+1,w,c
  6916  0006F2  B0D8               	btfsc	status,0,c
  6917  0006F4  D028               	goto	i2l1721
  6918                           
  6919                           ;Lab10p2.c: 154: {
  6920                           ;Lab10p2.c: 155: Nec_code = Nec_code << 1;
  6921  0006F6  90D8               	bcf	status,0,c
  6922  0006F8  345D               	rlcf	_Nec_code,w,c
  6923  0006FA  6E5D               	movwf	_Nec_code,c
  6924  0006FC  345E               	rlcf	_Nec_code+1,w,c
  6925  0006FE  6E5E               	movwf	_Nec_code+1,c
  6926  000700  345F               	rlcf	_Nec_code+2,w,c
  6927  000702  6E5F               	movwf	_Nec_code+2,c
  6928  000704  3460               	rlcf	_Nec_code+3,w,c
  6929  000706  6E60               	movwf	_Nec_code+3,c
  6930                           
  6931                           ;Lab10p2.c: 156: if(Time_Elapsed > 1000)
  6932  000708  0EE9               	movlw	233
  6933  00070A  5C61               	subwf	_Time_Elapsed,w,c
  6934  00070C  0E03               	movlw	3
  6935  00070E  5862               	subwfb	_Time_Elapsed+1,w,c
  6936  000710  A0D8               	btfss	status,0,c
  6937  000712  D00C               	goto	i2l367
  6938                           
  6939                           ;Lab10p2.c: 157: {
  6940                           ;Lab10p2.c: 158: Nec_code = Nec_code +1;
  6941  000714  0E01               	movlw	1
  6942  000716  245D               	addwf	_Nec_code,w,c
  6943  000718  6E5D               	movwf	_Nec_code,c
  6944  00071A  0E00               	movlw	0
  6945  00071C  205E               	addwfc	_Nec_code+1,w,c
  6946  00071E  6E5E               	movwf	_Nec_code+1,c
  6947  000720  0E00               	movlw	0
  6948  000722  205F               	addwfc	_Nec_code+2,w,c
  6949  000724  6E5F               	movwf	_Nec_code+2,c
  6950  000726  0E00               	movlw	0
  6951  000728  2060               	addwfc	_Nec_code+3,w,c
  6952  00072A  6E60               	movwf	_Nec_code+3,c
  6953  00072C                     i2l367:
  6954                           
  6955                           ;Lab10p2.c: 159: }
  6956                           ;Lab10p2.c: 160: bit_count = bit_count + 1;
  6957  00072C  286C               	incf	_bit_count,w,c
  6958  00072E  6E6C               	movwf	_bit_count,c
  6959                           
  6960                           ;Lab10p2.c: 161: if (bit_count > 31)
  6961  000730  0E1F               	movlw	31
  6962  000732  646C               	cpfsgt	_bit_count,c
  6963  000734  D7B9               	goto	L4
  6964                           
  6965                           ;Lab10p2.c: 162: {
  6966                           ;Lab10p2.c: 163: nec_ok = 1;
  6967  000736  0E00               	movlw	0
  6968  000738  6E66               	movwf	_nec_ok+1,c
  6969  00073A  0E01               	movlw	1
  6970  00073C  6E65               	movwf	_nec_ok,c
  6971                           
  6972                           ;Lab10p2.c: 164: INTCONbits.INT0IE =0;
  6973  00073E  98F2               	bcf	intcon,4,c	;volatile
  6974                           
  6975                           ;Lab10p2.c: 165: Nec_state = 0;
  6976  000740  0E00               	movlw	0
  6977  000742  6E6A               	movwf	_Nec_state,c
  6978  000744  D7B1               	goto	L4
  6979  000746                     i2l1721:
  6980                           
  6981                           ;Lab10p2.c: 169: else force_nec_state0();
  6982  000746  EC8E  F00A         	call	_force_nec_state0	;wreg free
  6983  00074A  D000               	goto	i2l1723
  6984  00074C                     i2l1723:
  6985                           
  6986                           ;Lab10p2.c: 170: INTCON2bits.INTEDG0 = 1;
  6987  00074C  8CF1               	bsf	intcon2,6,c	;volatile
  6988                           
  6989                           ;Lab10p2.c: 172: }
  6990                           ;Lab10p2.c: 173: }
  6991                           
  6992                           ;Lab10p2.c: 171: return;
  6993  00074E  D011               	goto	i2l355
  6994  000750                     i2l1729:
  6995  000750  506A               	movf	_Nec_state,w,c
  6996                           
  6997                           ; Switch size 1, requested type "space"
  6998                           ; Number of cases is 5, Range of values is 0 to 4
  6999                           ; switch strategies available:
  7000                           ; Name         Instructions Cycles
  7001                           ; simple_byte           16     9 (average)
  7002                           ;	Chosen strategy is simple_byte
  7003  000752  0A00               	xorlw	0	; case 0
  7004  000754  B4D8               	btfsc	status,2,c
  7005  000756  D772               	goto	i2l1663
  7006  000758  0A01               	xorlw	1	; case 1
  7007  00075A  B4D8               	btfsc	status,2,c
  7008  00075C  D785               	goto	i2l1673
  7009  00075E  0A03               	xorlw	3	; case 2
  7010  000760  B4D8               	btfsc	status,2,c
  7011  000762  D796               	goto	i2l1685
  7012  000764  0A01               	xorlw	1	; case 3
  7013  000766  B4D8               	btfsc	status,2,c
  7014  000768  D7A7               	goto	i2l1697
  7015  00076A  0A07               	xorlw	7	; case 4
  7016  00076C  B4D8               	btfsc	status,2,c
  7017  00076E  D7B7               	goto	i2l1709
  7018  000770  D000               	goto	i2l355
  7019  000772                     i2l355:
  7020  000772  0012               	return		;funcret
  7021  000774                     __end_of_INT0_isr:
  7022                           	opt stack 0
  7023                           pclatu	equ	0xFFB
  7024                           pclath	equ	0xFFA
  7025                           tblptru	equ	0xFF8
  7026                           tblptrh	equ	0xFF7
  7027                           tblptrl	equ	0xFF6
  7028                           tablat	equ	0xFF5
  7029                           prodh	equ	0xFF4
  7030                           prodl	equ	0xFF3
  7031                           intcon	equ	0xFF2
  7032                           intcon2	equ	0xFF1
  7033                           postinc0	equ	0xFEE
  7034                           fsr0h	equ	0xFEA
  7035                           fsr0l	equ	0xFE9
  7036                           wreg	equ	0xFE8
  7037                           postdec1	equ	0xFE5
  7038                           fsr1h	equ	0xFE2
  7039                           fsr1l	equ	0xFE1
  7040                           indf2	equ	0xFDF
  7041                           postinc2	equ	0xFDE
  7042                           postdec2	equ	0xFDD
  7043                           fsr2h	equ	0xFDA
  7044                           fsr2l	equ	0xFD9
  7045                           status	equ	0xFD8
  7046                           
  7047 ;; *************** function _force_nec_state0 *****************
  7048 ;; Defined at:
  7049 ;;		line 94 in file "Lab10p2.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;		None
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;		None
  7054 ;; Return value:  Size  Location     Type
  7055 ;;		None               void
  7056 ;; Registers used:
  7057 ;;		wreg, status,2
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;Total ram usage:        0 bytes
  7068 ;; Hardware stack levels used:    1
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		_INT0_isr
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text37
  7077  00151C                     __ptext37:
  7078                           	opt stack 0
  7079  00151C                     _force_nec_state0:
  7080                           	opt stack 20
  7081                           
  7082                           ;Lab10p2.c: 96: Nec_state=0;
  7083                           
  7084                           ;incstack = 0
  7085  00151C  0E00               	movlw	0
  7086  00151E  6E6A               	movwf	_Nec_state,c
  7087                           
  7088                           ;Lab10p2.c: 97: T1CONbits.TMR1ON = 0;
  7089  001520  90CD               	bcf	4045,0,c	;volatile
  7090  001522  0012               	return		;funcret
  7091  001524                     __end_of_force_nec_state0:
  7092                           	opt stack 0
  7093                           pclatu	equ	0xFFB
  7094                           pclath	equ	0xFFA
  7095                           tblptru	equ	0xFF8
  7096                           tblptrh	equ	0xFF7
  7097                           tblptrl	equ	0xFF6
  7098                           tablat	equ	0xFF5
  7099                           prodh	equ	0xFF4
  7100                           prodl	equ	0xFF3
  7101                           intcon	equ	0xFF2
  7102                           intcon2	equ	0xFF1
  7103                           postinc0	equ	0xFEE
  7104                           fsr0h	equ	0xFEA
  7105                           fsr0l	equ	0xFE9
  7106                           wreg	equ	0xFE8
  7107                           postdec1	equ	0xFE5
  7108                           fsr1h	equ	0xFE2
  7109                           fsr1l	equ	0xFE1
  7110                           indf2	equ	0xFDF
  7111                           postinc2	equ	0xFDE
  7112                           postdec2	equ	0xFDD
  7113                           fsr2h	equ	0xFDA
  7114                           fsr2l	equ	0xFD9
  7115                           status	equ	0xFD8
  7116                           pclatu	equ	0xFFB
  7117                           pclath	equ	0xFFA
  7118                           tblptru	equ	0xFF8
  7119                           tblptrh	equ	0xFF7
  7120                           tblptrl	equ	0xFF6
  7121                           tablat	equ	0xFF5
  7122                           prodh	equ	0xFF4
  7123                           prodl	equ	0xFF3
  7124                           intcon	equ	0xFF2
  7125                           intcon2	equ	0xFF1
  7126                           postinc0	equ	0xFEE
  7127                           fsr0h	equ	0xFEA
  7128                           fsr0l	equ	0xFE9
  7129                           wreg	equ	0xFE8
  7130                           postdec1	equ	0xFE5
  7131                           fsr1h	equ	0xFE2
  7132                           fsr1l	equ	0xFE1
  7133                           indf2	equ	0xFDF
  7134                           postinc2	equ	0xFDE
  7135                           postdec2	equ	0xFDD
  7136                           fsr2h	equ	0xFDA
  7137                           fsr2l	equ	0xFD9
  7138                           status	equ	0xFD8
  7139                           
  7140                           	psect	rparam
  7141  0000                     pclatu	equ	0xFFB
  7142                           pclath	equ	0xFFA
  7143                           tblptru	equ	0xFF8
  7144                           tblptrh	equ	0xFF7
  7145                           tblptrl	equ	0xFF6
  7146                           tablat	equ	0xFF5
  7147                           prodh	equ	0xFF4
  7148                           prodl	equ	0xFF3
  7149                           intcon	equ	0xFF2
  7150                           intcon2	equ	0xFF1
  7151                           postinc0	equ	0xFEE
  7152                           fsr0h	equ	0xFEA
  7153                           fsr0l	equ	0xFE9
  7154                           wreg	equ	0xFE8
  7155                           postdec1	equ	0xFE5
  7156                           fsr1h	equ	0xFE2
  7157                           fsr1l	equ	0xFE1
  7158                           indf2	equ	0xFDF
  7159                           postinc2	equ	0xFDE
  7160                           postdec2	equ	0xFDD
  7161                           fsr2h	equ	0xFDA
  7162                           fsr2l	equ	0xFD9
  7163                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    507
    Data        211
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     70     111
    BANK0           128      7     101
    BANK1           256      0     126
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 84
		 -> NULL(NULL[0]), buffer(BANK0[31]), txt1(BANK1[84]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 84
		 -> NULL(NULL[0]), buffer(BANK0[31]), txt1(BANK1[84]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_3(CODE[8]), STR_2(CODE[22]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    txt	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    drawtext@_text	PTR unsigned char  size(2) Largest target is 84
		 -> NULL(NULL[0]), buffer(BANK0[31]), txt1(BANK1[84]), 


Critical Paths under _main in COMRAM

    _main->_drawtext
    _main->_fillCircle
    _printf->___lldiv
    _init_UART->_OpenUSART
    _fillCircle->_fillCircleHelper
    _fillCircleHelper->_drawFastVLine
    _drawCircle->_drawPixel
    _Initialize_Screen->_drawtext
    _fillScreen->_fillRectangle
    _fillRectangle->_setAddrWindow
    _drawtext->_drawChar
    _drawChar->_fillRect
    _fillRect->_drawFastVLine
    _drawFastVLine->_setAddrWindow
    _drawPixel->_setAddrWindow
    _setAddrWindow->_write_command
    _setAddrWindow->_write_data
    _Rcmd3->_delay_ms
    _Rcmd2red->_write_command
    _Rcmd2red->_write_data
    _Rcmd1->_delay_ms
    _write_data->_spiwrite
    _write_command->_spiwrite
    _LCD_Reset->_delay_ms
    _delay_ms->___wmul

Critical Paths under _chkisr in COMRAM

    _chkisr->_INT0_isr

Critical Paths under _main in BANK0

    _main->_drawtext
    _Initialize_Screen->_drawtext

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   51024
                                             66 COMRAM     4     4      0
                    _Activate_Buzzer
                  _Deactivate_Buzzer
                  _Initialize_Screen
                   _Wait_Half_Second
                         _drawCircle
                           _drawtext
                         _fillCircle
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              34    26      8    2174
                                             29 COMRAM    25    17      8
                            ___lldiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     268
                                             16 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _fillCircle                                           8     0      8    8344
                                             58 COMRAM     8     0      8
                      _drawFastVLine
                   _fillCircleHelper
 ---------------------------------------------------------------------------------
 (2) _fillCircleHelper                                    24    12     12    4703
                                             34 COMRAM    24    12     12
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (1) _drawCircle                                          20    12      8    6484
                                             27 COMRAM    20    12      8
                          _drawPixel
 ---------------------------------------------------------------------------------
 (1) _Wait_Half_Second                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Screen                                    0     0      0   20901
                          _LCD_Reset
            _TFT_GreenTab_Initialize
                           _drawtext
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     287
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _fillScreen                                           2     0      2    2192
                                             35 COMRAM     2     0      2
                      _fillRectangle
 ---------------------------------------------------------------------------------
 (3) _fillRectangle                                       12     7      5    2096
                                             23 COMRAM    12     7      5
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (1) _drawtext                                            17     9      8   12526
                                             56 COMRAM    10     2      8
                                              0 BANK0      7     7      0
                           _drawChar
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     195
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _drawChar                                            11     4      7   10644
                                             45 COMRAM    11     4      7
                             ___wmul
                          _drawPixel
                           _fillRect
 ---------------------------------------------------------------------------------
 (3) _fillRect                                            11     6      5    3876
                                             34 COMRAM    11     6      5
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (3) _drawFastVLine                                       11     7      4    3102
                                             23 COMRAM    11     7      4
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (3) _drawPixel                                            4     1      3    4207
                                             23 COMRAM     4     1      3
                      _setAddrWindow
                         _write_data
 ---------------------------------------------------------------------------------
 (4) _setAddrWindow                                        4     1      3    1034
                                             19 COMRAM     4     1      3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _TFT_GreenTab_Initialize                              0     0      0    4104
                              _Rcmd1
                           _Rcmd2red
                              _Rcmd3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd3                                                0     0      0    1922
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd2red                                             0     0      0     130
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd1                                                0     0      0    1922
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (5) _write_data                                           1     1      0      65
                                             18 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (5) _write_command                                        1     1      0      65
                                             18 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (4) _spiwrite                                             2     2      0      34
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Reset                                            0     0      0    1792
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2    1792
                                             22 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     752
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _chkisr                                              14    14      0       0
                                              2 COMRAM    14    14      0
                           _INT0_isr
                         _TIMER1_isr
 ---------------------------------------------------------------------------------
 (10) _TIMER1_isr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT0_isr                                            2     2      0       0
                                              0 COMRAM     2     2      0
                   _force_nec_state0
 ---------------------------------------------------------------------------------
 (11) _force_nec_state0                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Activate_Buzzer
   _Deactivate_Buzzer
   _Initialize_Screen
     _LCD_Reset
       _delay_ms
         ___wmul
     _TFT_GreenTab_Initialize
       _Rcmd1
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd2red
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd3
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_command
         _spiwrite
       _write_data
         _spiwrite
     _drawtext
       _drawChar
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
       _strlen
     _fillScreen
       _fillRectangle
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
     _strcpy
   _Wait_Half_Second
   _drawCircle
     _drawPixel
       _setAddrWindow
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_data
         _spiwrite
   _drawtext
     _drawChar
       ___wmul
       _drawPixel
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _write_data
           _spiwrite
       _fillRect
         _drawFastVLine
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite
     _strlen
   _fillCircle
     _drawFastVLine
       _setAddrWindow
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _spiwrite
     _fillCircleHelper
       _drawFastVLine
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
   _init_UART
     _OpenUSART
   _printf
     ___lldiv
     ___wmul
     _isdigit
     _putch

 _chkisr (ROOT)
   _INT0_isr
     _force_nec_state0
   _TIMER1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      7E       7       49.2%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      7      65       5       78.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     46      6F       1       87.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     152      34        0.0%
DATA                 0      0     152       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Nov 09 18:29:13 2022

                     drawCircle@f 002A                       drawCircle@r 0020  
                     drawCircle@x 002C                       drawCircle@y 002E  
                               _i 006E                       _SSPSTATbits 000FC7  
                    drawCircle@x0 001C                      drawCircle@y0 001E  
                              _D1 0080                                _D2 0095  
                              _D3 00AA                                l35 1214  
                              l45 14A0                                l95 0F8A  
                              l89 13D0               ___wmul@multiplicand 0013  
                             l111 08C8                               l120 081E  
                             l113 07A2                               l151 0DC4  
                             l152 0DE6                               l148 0DE8  
                             l332 14FE                               l149 0D54  
                             l159 0380                               l432 0114  
                             l177 0938                               l453 02BC  
                             l481 114E                               l482 1150  
                             l483 115A                               l484 115C  
                             l477 1134                               l398 1474  
                             l486 1176                               l920 1444  
                             l489 1422                               l949 0EF2  
               ?_Wait_Half_Second 0001                               _PR2 000FCB  
               _Deactivate_Buzzer 1514                               _nbr 0063  
                             _txt 0067                               prod 000FF3  
                             wreg 000FE8                ??_Wait_Half_Second 0011  
              ?_Deactivate_Buzzer 0001                   ??_fillRectangle 001D  
                    __CFG_LVP$OFF 000000           _TFT_GreenTab_Initialize 13D2  
                    __CFG_WDT$OFF 000000                              l1051 1330  
                  drawFastVLine@h 0019                              l4001 04C2  
                            l3203 0F14                    drawFastVLine@x 0022  
                            l4021 051A                    drawFastVLine@y 0018  
                            l3207 0F4C                              l3217 0F72  
                            l3401 08C4                              l4025 0534  
                            l4017 0506                              l3219 0F80  
                            l3245 13B2                              l3253 1274  
                            l2621 1384                              l4029 053C  
                            l3407 12FE                              l2631 143C  
                            l3257 1290                              l3409 1304  
                            l3441 0DC8                              l3425 0D8C  
                            l2641 0E9A                              l3363 079E  
                            l3355 0784                              l3451 0DE2  
                            l3419 0D1E                              l2619 137A  
                            l3523 099A                              l3507 091E  
                            l2643 0EA8                              l3373 07DE  
                            l3365 07A6                              l3445 0DD2  
                            l3437 0DBA                              l2581 112C  
                            l2573 111A                              l2653 0EE2  
                            l2645 0EB0                              l3375 0812  
                            l3359 0790                              l3527 09EC  
                            l3711 021C                              l3703 01F0  
                            l3393 0894                              l3385 0840  
                            l3377 0816                              l3369 07AE  
                            l3481 0B8E                              l2593 1146  
                            l2585 1138                              l2577 1124  
                            l3705 01F8                              l3641 0036  
                            l3395 08BC                              l3387 0868  
                            l3643 0044                              l3493 0BFE  
                            l3485 0BAC                              l3469 0B3E  
                            l3717 028C                              l3709 0210  
                            l3661 00E4                              l3653 0082  
                            l3637 0026                              l3495 0C06  
                            l3567 0366                              l3671 0134  
                            l3647 004E                              l3719 02A0  
                            l3681 016A                              l3665 00EE  
                            l3649 0064                              l3595 0456  
                            l3675 015A                              l3693 01C2  
                            l3685 019A                              l3677 015E  
                            l3695 01CC                              l3689 019E  
                            l3699 01D8                              STR_1 FFBA  
                            STR_2 FFD0                              STR_3 FFF7  
                            STR_4 FFE6                              u2400 0D4C  
                            u2170 0F42                              u2330 0876  
                            u2410 0D82                              u2470 0B68  
                            _TRMT 007D61               ??_Deactivate_Buzzer 0011  
                            _main 046C                              _font FDBF  
                            fsr0h 000FEA                              _txt1 012A  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            _wrap 005C                              pclat 000FFA  
              __size_of_LCD_Reset 0012                              prodh 000FF4  
                            prodl 000FF3                              start 0018  
                 ??_drawFastVLine 001C                      ___param_bank 000010  
                     ?_TIMER1_isr 0001                  __end_of_INT0_isr 0774  
       __end_of_Deactivate_Buzzer 151C                   drawFastVLine@hi 0020  
                 drawFastVLine@lo 0021                             ?_main 0001  
                 drawCircle@ddF_x 0026                   drawCircle@ddF_y 0028  
                 __end_of___lldiv 0F04                             _T0CON 000FD5  
                           _T1CON 000FCD                             _T2CON 000FCA  
                           _T3CON 000FB1                             i2l343 10CE  
                           i2l355 0772                             i2l367 072C  
                 drawCircle@color 0022                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR1H 000FCF  
                           _TMR0L 000FD6                             _TMR3H 000FB3  
                           _TMR1L 000FCE                             _TMR3L 000FB2  
                           _SPBRG 000FAF                             _PORTD 000F83  
                           _PORTE 000F84                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                           _Rcmd1 0A02                             _Rcmd3 0C1C  
                           _nRBPU 007F8F                             _color 0100  
                           _font2 FEBE             fillCircleHelper@ddF_x 0031  
           fillCircleHelper@ddF_y 0033                   __end_of_isdigit 1446  
           fillCircleHelper@delta 002B                             _putch 14FA  
           fillCircleHelper@color 002D                             main@i 0044  
                  __CFG_BOREN$OFF 000000                             tablat 000FF5  
                           status 000FD8                   write_data@data_ 0013  
                 __initialization 0F8C                      __end_of_main 0614  
                    __end_of_font FEBE                  __end_of_Rcmd2red 1370  
                          ??_main 0043                     __activetblptr 000002  
               __end_of_LCD_Reset 14B8         ??_TFT_GreenTab_Initialize 001D  
                          ?_Rcmd1 0001                            ?_Rcmd3 0001  
                          _ADCON1 000FC1                            _CCPR2L 000FBB  
                          ?_putch 0001                            i2l2085 10C4  
                          i2l1703 06D4                            i2l1721 0746  
                          i2l1705 06DA                            i2l1723 074C  
                          i2l1709 06DE                            i2l1663 063C  
                          i2l1673 0668                            i2l1729 0750  
                          i2l1691 06AE                            i2l1685 0690  
                          i2l1679 0686                            i2l1697 06B8  
                          _OSCCON 000FD3               __size_of_TIMER1_isr 000C  
                          _SPBRGH 000FB0                            _SSPBUF 000FC9  
                _force_nec_state0 151C                  __end_of_delay_ms 121C  
                __end_of_fillRect 12B4                  __end_of_drawChar 08CA  
              __size_of_OpenUSART 0070          __size_of_Activate_Buzzer 0012  
                          ___wmul 13FC         __size_of_fillCircleHelper 0138  
                __end_of_drawtext 0C1C                         ??___lldiv 0019  
                          _chkisr 0008                            _array1 0047  
                          _buffer 00BF                            _nec_ok 0065  
                          clear_0 0F92                            clear_1 0F9E  
      __size_of_Deactivate_Buzzer 0008                            _printf 001C  
                    drawtext@size 0040                            _strcpy 1370  
                          _strlen 12F4                      __pdataCOMRAM 0047  
                       ??_isdigit 0011                      __mediumconst FDBE  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                            putch@c 0011  
                __end_of_spiwrite 14A6                        __accesstop 0080  
         __end_of__initialization 1004                         ?_INT0_isr 0001  
                   ___rparam_used 000001                     __end_of_Rcmd1 0B12  
                   __end_of_Rcmd3 0D0E                    __pcstackCOMRAM 0001  
                    __pidataBANK0 12B4                      __pidataBANK1 100E  
                   __end_of_font2 FF9A                     __end_of_putch 1508  
                  drawPixel@color 0019            __size_of_write_command 0010  
      fillCircleHelper@cornername 0029                           ??_Rcmd1 001D  
                         ??_Rcmd3 001D                __size_of_drawPixel 0030  
               __end_of_OpenUSART 1178                           ??_putch 0011  
                      __pbssBANK0 00BF                         ?_Rcmd2red 0001  
              __size_of_init_UART 0010         __size_of_Wait_Half_Second 001A  
                 spiwrite@spidata 0012                        ??_INT0_isr 0001  
              __CFG_CCP2MX$PORTBE 000000                           ?___wmul 0011  
                         ?_chkisr 0001            __size_of_setAddrWindow 004E  
                         _CCP2CON 000FBA                      ??_TIMER1_isr 0001  
                      _fillCircle 1178                           ?_printf 001E  
                         ?_strcpy 0011                           ?_strlen 0011  
               ??_Activate_Buzzer 0011                        _fillScreen 1446  
                      _drawCircle 02BE                         ?_delay_ms 0017  
                       ?_fillRect 0023                         ?_drawChar 002E  
                         _SSPCON1 000FC6                           _SSPSTAT 000FC7  
           __end_of_fillRectangle 0DEA                         ?_drawtext 0039  
                      ??_Rcmd2red 0014                __end_of_TIMER1_isr 1514  
                   _write_command 14EA                           __Hparam 0000  
                         __Lparam 0000                 __end_of_drawPixel 13D2  
           __end_of_drawFastVLine 0F8C                  _fillCircleHelper 08CA  
                         ___lldiv 0E78                   __size_of___wmul 0028  
                 __size_of_chkisr 1100                         ?_spiwrite 0001  
                         __pcinit 0F8C                           __ramtop 1000  
                         __ptext0 046C                           __ptext1 001C  
                         __ptext2 14FA                           __ptext3 1424  
                         __ptext4 0E78                           __ptext5 14CA  
                         __ptext6 1108                           __ptext7 1178  
                         __ptext8 08CA                           __ptext9 02BE  
                 __size_of_printf 02A2                 __end_of_init_UART 14DA  
                       _T0CONbits 000FD5                   __size_of_strcpy 0032  
                 __size_of_strlen 003E                 __end_of_hexpowers FFBA  
        __end_of_force_nec_state0 1524                         _T1CONbits 000FCD  
                         _isdigit 1424                         _T3CONbits 000FB1  
                      ??_delay_ms 0019                     drawtext@_text 003A  
                   drawtext@color 003C                        ??_fillRect 0028  
                      ??_drawChar 0035                         _LCD_Reset 14A6  
                   _setAddrWindow 121C                    __pintcode_body 108C  
                      delay_ms@ms 0017              end_of_initialization 1004  
                      ??_drawtext 0041                    ?_write_command 0001  
                   __Lmediumconst FDBE                           int_func 108C  
                 ___lldiv@divisor 0015                   ___lldiv@counter 001D  
                       _RCSTAbits 000FAB                           printf@c 0036  
                         printf@f 001E                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                        ??_spiwrite 0011  
                         strlen@s 0011                   fillCircle@color 0041  
                     ?_fillCircle 003B                  drawtext@cursor_x 00E4  
                drawtext@cursor_y 00E3                         _PORTBbits 000F81  
                       _PORTCbits 000F82                       ?_fillScreen 0024  
                     ?_drawCircle 001C                        drawChar@bg 0032  
                       _TRISCbits 000F94                    ?_setAddrWindow 0014  
                      ?_LCD_Reset 0001                  drawtext@textsize 00DF  
                      drawPixel@x 001B                        drawPixel@y 0018  
                _Wait_Half_Second 1462                       printf@width 0034  
                       _TXSTAbits 000FAC                 __size_of_INT0_isr 0160  
                  __end_of___wmul 1424                     delay_ms@count 001B  
                      _write_data 14DA                     __pidataCOMRAM 147C  
                  __end_of_chkisr 1108          ?_TFT_GreenTab_Initialize 0001  
                      drawtext@bg 003E                         _Nec_code1 0069  
                  __end_of_printf 02BE                    __end_of_strcpy 13A2  
                  __end_of_strlen 1332                         _Nec_state 006A  
             start_initialization 0F8C                   ??_write_command 0013  
                       _OpenUSART 1108               __size_of_fillCircle 0052  
                __CFG_OSC$INTIO67 000000                 __size_of_Rcmd2red 003E  
             __size_of_fillScreen 001C               __size_of_drawCircle 01AE  
                 _Activate_Buzzer 14B8                          ??___wmul 0015  
                        ??_chkisr 0003                       __pdataBANK0 0080  
                     __pdataBANK1 0100                   setAddrWindow@x0 0017  
                 setAddrWindow@x1 0015                   setAddrWindow@y0 0014  
                 setAddrWindow@y1 0016                          ??_printf 0026  
                        ??_strcpy 0015                          ??_strlen 0013  
                     __pbssCOMRAM 005D                   ??_setAddrWindow 0017  
                   __pcstackBANK0 00DE                       ??_LCD_Reset 001D  
                    _isdigit$1637 0012          __end_of_fillCircleHelper 0A02  
               __size_of_delay_ms 0052                 __size_of_fillRect 004A  
               __size_of_drawChar 0156                        ?_OpenUSART 0011  
               __size_of_drawtext 010A                         _bit_count 006C  
                       __pintcode 0008   __end_of_TFT_GreenTab_Initialize 13FC  
                   __pmediumconst FDBE                          ?___lldiv 0011  
                       __tft_type 006B                drawFastVLine@color 001A  
                     ?_write_data 0001                         _drawPixel 13A2  
               __size_of_spiwrite 0014                 ?_force_nec_state0 0001  
                        ?_isdigit 0001                 _Initialize_Screen 0DEA  
                  __size_of_Rcmd1 0110                    __size_of_Rcmd3 00F2  
                       _init_UART 14CA                ??_force_nec_state0 0001  
                       _hexpowers FF9A                ?_Initialize_Screen 0001  
                  __size_of_putch 000E           __end_of_Activate_Buzzer 14CA  
                  ___wmul@product 0015               ??_Initialize_Screen 0043  
                        _INT0_isr 0614                          _PIE1bits 000F9D  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                       fillRect@h 0025                         fillRect@i 002C  
                       fillRect@w 0024                         fillRect@x 002B  
                       fillRect@y 0023                         drawChar@c 002F  
                       drawChar@i 0038                         drawChar@j 0037  
                    ??_fillCircle 0043                         drawChar@x 0036  
                       drawChar@y 002E                        ?_drawPixel 0018  
          __size_of_fillRectangle 00DC          __end_of_Wait_Half_Second 147C  
               ___wmul@multiplier 0011         __end_of_Initialize_Screen 0E78  
                    ??_fillScreen 0026                      ??_drawCircle 0024  
                      printf@flag 0033                        printf@prec 002B  
                       main@found 0046                        ?_init_UART 0001  
                     _INTCON2bits 000FF1                         copy_data0 0FB8  
                       copy_data1 0FD8                         copy_data2 0FF8  
                       drawtext@i 00E1            __size_of_drawFastVLine 0088  
                       drawtext@x 00DE                         drawtext@y 0039  
                        _Nec_code 005D                 write_command@cmd_ 0013  
                     ??_OpenUSART 0013                          _Rcmd2red 1332  
             __size_of_write_data 0010                   OpenUSART@config 0013  
                    _Time_Elapsed 0061                __end_of_fillCircle 11CA  
                        __Hrparam 0000                __end_of_fillScreen 1462  
                        __Lrparam 0000                __end_of_drawCircle 046C  
                __size_of___lldiv 008C                  __size_of_isdigit 0022  
                        _delay_ms 11CA                          __ptext10 1462  
                        __ptext11 0DEA                          __ptext20 13A2  
                        __ptext12 1370                          __ptext21 121C  
                        __ptext13 1446                          __ptext30 11CA  
                        __ptext22 13D2                          __ptext14 0D0E  
                        __ptext31 13FC                          __ptext23 0C1C  
                        __ptext15 0B12                          __ptext32 1514  
                        __ptext24 1332                          __ptext16 12F4  
                        __ptext33 14B8                          __ptext25 0A02  
                        __ptext17 0774                          __ptext26 14DA  
                        __ptext18 126A                          __ptext35 1508  
                        __ptext27 14EA                          __ptext19 0F04  
                        __ptext36 0614                          __ptext28 1492  
                        __ptext37 151C                          __ptext29 14A6  
                        _fillRect 126A                          _drawChar 0774  
__size_of_TFT_GreenTab_Initialize 002A                          _colstart 006D  
                        _drawtext 0B12                        strcpy@from 0013  
                   _fillRectangle 0D0E                  ?_Activate_Buzzer 0001  
                   __size_of_main 01A8                   fillRectangle@hi 0021  
                 fillRectangle@lo 0022                     _drawFastVLine 0F04  
                       printf@idx 002A                          _spiwrite 1492  
                       printf@val 002D                       ??_drawPixel 001B  
                        _rowstart 006F                fillCircleHelper@x0 0023  
              fillCircleHelper@y0 0025        __size_of_Initialize_Screen 008E  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 0011  
                     ??_init_UART 0014                          isdigit@c 0013  
               ?_fillCircleHelper 0023                         spiwrite@x 0011  
                        intlevel2 0000                    ?_fillRectangle 0018  
              ??_fillCircleHelper 002F             __end_of_write_command 14FA  
                ___lldiv@dividend 0011                   fillScreen@color 0024  
                    fillCircle@x0 003B                      fillCircle@y0 003D  
                  fillRectangle@h 001A                    fillRectangle@w 0019  
                  fillRectangle@x 0023                    fillRectangle@y 0018  
                  ?_drawFastVLine 0018                          printf@ap 0031  
               fillCircleHelper@f 0035                 fillCircleHelper@r 0027  
               fillCircleHelper@x 0037                 fillCircleHelper@y 0039  
                    ??_write_data 0013                        _TIMER1_isr 1508  
                   fillRect@color 0026                  ___lldiv@quotient 0019  
                        strcpy@cp 0015                          strlen@cp 0015  
                        strcpy@to 0011                       fillCircle@r 003F  
           __end_of_setAddrWindow 126A                fillRectangle@color 001B  
                   drawChar@color 0030                __end_of_write_data 14EA  
       __size_of_force_nec_state0 0008                      drawChar@line 0035  
                    drawChar@size 0034  
