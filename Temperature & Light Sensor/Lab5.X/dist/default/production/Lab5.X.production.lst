

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 06 18:58:51 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           	psect	idataBANK0
    53  002DB6                     __pidataBANK0:
    54                           	opt stack 0
    55                           
    56                           ;initializer for main@F4301
    57  002DB6  01                 	db	1
    58  002DB7  4F                 	db	79
    59  002DB8  12                 	db	18
    60  002DB9  06                 	db	6
    61  002DBA  4C                 	db	76
    62  002DBB  24                 	db	36
    63  002DBC  20                 	db	32
    64  002DBD  0F                 	db	15
    65  002DBE  00                 	db	0
    66  002DBF  04                 	db	4
    67                           
    68                           	psect	smallconst
    69  001000                     __psmallconst:
    70                           	opt stack 0
    71  001000  00                 	db	0
    72  001001                     _dpowers:
    73                           	opt stack 0
    74  001001  0001               	dw	1
    75  001003  0000               	dw	0
    76  001005  000A               	dw	10
    77  001007  0000               	dw	0
    78  001009  0064               	dw	100
    79  00100B  0000               	dw	0
    80  00100D  03E8               	dw	1000
    81  00100F  0000               	dw	0
    82  001011  2710               	dw	10000
    83  001013  0000               	dw	0
    84  001015  86A0               	dw	34464
    85  001017  0001               	dw	1
    86  001019  4240               	dw	16960
    87  00101B  000F               	dw	15
    88  00101D  9680               	dw	38528
    89  00101F  0098               	dw	152
    90  001021  E100               	dw	57600
    91  001023  05F5               	dw	1525
    92  001025  CA00               	dw	51712
    93  001027  3B9A               	dw	15258
    94  001029                     __end_of_dpowers:
    95                           	opt stack 0
    96  001029                     __npowers_:
    97                           	opt stack 0
    98  001029  00                 	db	0
    99  00102A  80                 	db	128
   100  00102B  3F                 	db	63
   101  00102C  CD                 	db	205
   102  00102D  CC                 	db	204
   103  00102E  3D                 	db	61
   104  00102F  D7                 	db	215
   105  001030  23                 	db	35
   106  001031  3C                 	db	60
   107  001032  12                 	db	18
   108  001033  83                 	db	131
   109  001034  3A                 	db	58
   110  001035  B7                 	db	183
   111  001036  D1                 	db	209
   112  001037  38                 	db	56
   113  001038  C6                 	db	198
   114  001039  27                 	db	39
   115  00103A  37                 	db	55
   116  00103B  38                 	db	56
   117  00103C  86                 	db	134
   118  00103D  35                 	db	53
   119  00103E  C0                 	db	192
   120  00103F  D6                 	db	214
   121  001040  33                 	db	51
   122  001041  CC                 	db	204
   123  001042  2B                 	db	43
   124  001043  32                 	db	50
   125  001044  70                 	db	112
   126  001045  89                 	db	137
   127  001046  30                 	db	48
   128  001047  E7                 	db	231
   129  001048  DB                 	db	219
   130  001049  2E                 	db	46
   131  00104A  E5                 	db	229
   132  00104B  3C                 	db	60
   133  00104C  1E                 	db	30
   134  00104D  42                 	db	66
   135  00104E  A2                 	db	162
   136  00104F  0D                 	db	13
   137  001050                     __end_of__npowers_:
   138                           	opt stack 0
   139  001050                     __powers_:
   140                           	opt stack 0
   141  001050  00                 	db	0
   142  001051  80                 	db	128
   143  001052  3F                 	db	63
   144  001053  00                 	db	0
   145  001054  20                 	db	32
   146  001055  41                 	db	65
   147  001056  00                 	db	0
   148  001057  C8                 	db	200
   149  001058  42                 	db	66
   150  001059  00                 	db	0
   151  00105A  7A                 	db	122
   152  00105B  44                 	db	68
   153  00105C  40                 	db	64
   154  00105D  1C                 	db	28
   155  00105E  46                 	db	70
   156  00105F  50                 	db	80
   157  001060  C3                 	db	195
   158  001061  47                 	db	71
   159  001062  24                 	db	36
   160  001063  74                 	db	116
   161  001064  49                 	db	73
   162  001065  97                 	db	151
   163  001066  18                 	db	24
   164  001067  4B                 	db	75
   165  001068  BC                 	db	188
   166  001069  BE                 	db	190
   167  00106A  4C                 	db	76
   168  00106B  6B                 	db	107
   169  00106C  6E                 	db	110
   170  00106D  4E                 	db	78
   171  00106E  03                 	db	3
   172  00106F  15                 	db	21
   173  001070  50                 	db	80
   174  001071  79                 	db	121
   175  001072  AD                 	db	173
   176  001073  60                 	db	96
   177  001074  F3                 	db	243
   178  001075  49                 	db	73
   179  001076  71                 	db	113
   180  001077                     __end_of__powers_:
   181                           	opt stack 0
   182  0000                     _ADCON0	set	4034
   183  0000                     _ADCON0bits	set	4034
   184  0000                     _ADCON1	set	4033
   185  0000                     _ADCON2	set	4032
   186  0000                     _ADRESH	set	4036
   187  0000                     _ADRESL	set	4035
   188  0000                     _OSCCON	set	4051
   189  0000                     _PIE1bits	set	3997
   190  0000                     _PIR1bits	set	3998
   191  0000                     _PORTAbits	set	3968
   192  0000                     _PORTB	set	3969
   193  0000                     _PORTBbits	set	3969
   194  0000                     _PORTC	set	3970
   195  0000                     _PORTD	set	3971
   196  0000                     _PORTE	set	3972
   197  0000                     _RCSTA	set	4011
   198  0000                     _RCSTAbits	set	4011
   199  0000                     _SPBRG	set	4015
   200  0000                     _SPBRGH	set	4016
   201  0000                     _TRISA	set	3986
   202  0000                     _TRISB	set	3987
   203  0000                     _TRISC	set	3988
   204  0000                     _TRISCbits	set	3988
   205  0000                     _TRISD	set	3989
   206  0000                     _TRISE	set	3990
   207  0000                     _TXREG	set	4013
   208  0000                     _TXSTA	set	4012
   209  0000                     _TXSTAbits	set	4012
   210  0000                     _TRMT	set	32097
   211  001077                     STR_1:
   212  001077  74                 	db	116	;'t'
   213  001078  65                 	db	101	;'e'
   214  001079  6D                 	db	109	;'m'
   215  00107A  70                 	db	112	;'p'
   216  00107B  65                 	db	101	;'e'
   217  00107C  72                 	db	114	;'r'
   218  00107D  61                 	db	97	;'a'
   219  00107E  74                 	db	116	;'t'
   220  00107F  75                 	db	117	;'u'
   221  001080  72                 	db	114	;'r'
   222  001081  65                 	db	101	;'e'
   223  001082  20                 	db	32
   224  001083  3D                 	db	61	;'='
   225  001084  25                 	db	37
   226  001085  64                 	db	100	;'d'
   227  001086  0D                 	db	13
   228  001087  0A                 	db	10
   229  001088  00                 	db	0
   230  001089                     STR_2:
   231  001089  76                 	db	118	;'v'
   232  00108A  6F                 	db	111	;'o'
   233  00108B  6C                 	db	108	;'l'
   234  00108C  74                 	db	116	;'t'
   235  00108D  61                 	db	97	;'a'
   236  00108E  67                 	db	103	;'g'
   237  00108F  65                 	db	101	;'e'
   238  001090  20                 	db	32
   239  001091  3D                 	db	61	;'='
   240  001092  25                 	db	37
   241  001093  66                 	db	102	;'f'
   242  001094  0D                 	db	13
   243  001095  0A                 	db	10
   244  001096  00                 	db	0
   245                           
   246                           ; #config settings
   247  001097  00                 	db	0	; dummy byte at the end
   248  0000                     
   249                           	psect	cinit
   250  002CA4                     __pcinit:
   251                           	opt stack 0
   252  002CA4                     start_initialization:
   253                           	opt stack 0
   254  002CA4                     __initialization:
   255                           	opt stack 0
   256                           
   257                           ; Initialize objects allocated to BANK0 (10 bytes)
   258                           ; load TBLPTR registers with __pidataBANK0
   259  002CA4  0EB6               	movlw	low __pidataBANK0
   260  002CA6  6EF6               	movwf	tblptrl,c
   261  002CA8  0E2D               	movlw	high __pidataBANK0
   262  002CAA  6EF7               	movwf	tblptrh,c
   263  002CAC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   264  002CAE  6EF8               	movwf	tblptru,c
   265  002CB0  EE00  F080         	lfsr	0,__pdataBANK0
   266  002CB4  EE10 F00A          	lfsr	1,10
   267  002CB8                     copy_data0:
   268  002CB8  0009               	tblrd		*+
   269  002CBA  CFF5 FFEE          	movff	tablat,postinc0
   270  002CBE  50E5               	movf	postdec1,w,c
   271  002CC0  50E1               	movf	fsr1l,w,c
   272  002CC2  E1FA               	bnz	copy_data0
   273  002CC4                     end_of_initialization:
   274                           	opt stack 0
   275  002CC4                     __end_of__initialization:
   276                           	opt stack 0
   277  002CC4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   278  002CC6  6EF8               	movwf	tblptru,c
   279  002CC8  0100               	movlb	0
   280  002CCA  EFE3  F00D         	goto	_main	;jump to C main() function
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           postdec1	equ	0xFE5
   287                           fsr1l	equ	0xFE1
   288                           
   289                           	psect	dataBANK0
   290  000080                     __pdataBANK0:
   291                           	opt stack 0
   292  000080                     main@F4301:
   293                           	opt stack 0
   294  000080                     	ds	10
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           postdec1	equ	0xFE5
   301                           fsr1l	equ	0xFE1
   302                           
   303                           	psect	cstackCOMRAM
   304  000001                     __pcstackCOMRAM:
   305                           	opt stack 0
   306  000001                     ?_get_full_ADC:
   307                           	opt stack 0
   308  000001                     ?___awmod:
   309                           	opt stack 0
   310  000001                     ?___ftpack:
   311                           	opt stack 0
   312  000001                     ?___ftneg:
   313                           	opt stack 0
   314  000001                     ?__tdiv_to_l_:
   315                           	opt stack 0
   316  000001                     ?__div_to_l_:
   317                           	opt stack 0
   318  000001                     ?___lldiv:
   319                           	opt stack 0
   320  000001                     putch@c:
   321                           	opt stack 0
   322  000001                     Select_ADC_Channel@channel:
   323                           	opt stack 0
   324  000001                     Delay_One_Sec@I:
   325                           	opt stack 0
   326  000001                     OpenUSART@spbrg:
   327                           	opt stack 0
   328  000001                     ___awmod@dividend:
   329                           	opt stack 0
   330  000001                     __div_to_l_@f1:
   331                           	opt stack 0
   332  000001                     ___ftpack@arg:
   333                           	opt stack 0
   334  000001                     __tdiv_to_l_@f1:
   335                           	opt stack 0
   336  000001                     ___ftge@ff1:
   337                           	opt stack 0
   338  000001                     ___ftneg@f1:
   339                           	opt stack 0
   340  000001                     ___lldiv@dividend:
   341                           	opt stack 0
   342                           
   343                           ; 4 bytes @ 0x0
   344  000001                     	ds	2
   345  000003                     ??_get_full_ADC:
   346  000003                     OpenUSART@config:
   347                           	opt stack 0
   348  000003                     ___awmod@divisor:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x2
   352  000003                     	ds	1
   353  000004                     ___ftpack@exp:
   354                           	opt stack 0
   355  000004                     __div_to_l_@f2:
   356                           	opt stack 0
   357  000004                     __tdiv_to_l_@f2:
   358                           	opt stack 0
   359  000004                     ___ftge@ff2:
   360                           	opt stack 0
   361                           
   362                           ; 3 bytes @ 0x3
   363  000004                     	ds	1
   364  000005                     ___awmod@counter:
   365                           	opt stack 0
   366  000005                     ___ftpack@sign:
   367                           	opt stack 0
   368  000005                     get_full_ADC@result:
   369                           	opt stack 0
   370  000005                     ___lldiv@divisor:
   371                           	opt stack 0
   372                           
   373                           ; 4 bytes @ 0x4
   374  000005                     	ds	1
   375  000006                     ??___ftpack:
   376  000006                     ___awmod@sign:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x5
   380  000006                     	ds	1
   381  000007                     ??__tdiv_to_l_:
   382  000007                     ??___ftge:
   383  000007                     ?___awdiv:
   384                           	opt stack 0
   385  000007                     ___awdiv@dividend:
   386                           	opt stack 0
   387  000007                     __div_to_l_@quot:
   388                           	opt stack 0
   389                           
   390                           ; 4 bytes @ 0x6
   391  000007                     	ds	2
   392  000009                     ?___awtoft:
   393                           	opt stack 0
   394  000009                     ?___lltoft:
   395                           	opt stack 0
   396  000009                     ___awdiv@divisor:
   397                           	opt stack 0
   398  000009                     ___awtoft@c:
   399                           	opt stack 0
   400  000009                     ___lldiv@quotient:
   401                           	opt stack 0
   402  000009                     ___lltoft@c:
   403                           	opt stack 0
   404                           
   405                           ; 4 bytes @ 0x8
   406  000009                     	ds	1
   407  00000A                     __tdiv_to_l_@quot:
   408                           	opt stack 0
   409                           
   410                           ; 4 bytes @ 0x9
   411  00000A                     	ds	1
   412  00000B                     ___awdiv@counter:
   413                           	opt stack 0
   414  00000B                     __div_to_l_@cntr:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0xA
   418  00000B                     	ds	1
   419  00000C                     ___awdiv@sign:
   420                           	opt stack 0
   421  00000C                     ___awtoft@sign:
   422                           	opt stack 0
   423  00000C                     __div_to_l_@exp1:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0xB
   427  00000C                     	ds	1
   428  00000D                     ??___lltoft:
   429  00000D                     ?___ftdiv:
   430                           	opt stack 0
   431  00000D                     ___lldiv@counter:
   432                           	opt stack 0
   433  00000D                     ___awdiv@quotient:
   434                           	opt stack 0
   435  00000D                     ___ftdiv@f1:
   436                           	opt stack 0
   437                           
   438                           ; 3 bytes @ 0xC
   439  00000D                     	ds	1
   440  00000E                     ?___llmod:
   441                           	opt stack 0
   442  00000E                     __tdiv_to_l_@cntr:
   443                           	opt stack 0
   444  00000E                     ___llmod@dividend:
   445                           	opt stack 0
   446                           
   447                           ; 4 bytes @ 0xD
   448  00000E                     	ds	1
   449  00000F                     ?___wmul:
   450                           	opt stack 0
   451  00000F                     __tdiv_to_l_@exp1:
   452                           	opt stack 0
   453  00000F                     ___wmul@multiplier:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0xE
   457  00000F                     	ds	1
   458  000010                     ___ftdiv@f2:
   459                           	opt stack 0
   460                           
   461                           ; 3 bytes @ 0xF
   462  000010                     	ds	1
   463  000011                     ___lltoft@exp:
   464                           	opt stack 0
   465  000011                     ___wmul@multiplicand:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x10
   469  000011                     	ds	1
   470  000012                     ___llmod@divisor:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x11
   474  000012                     	ds	1
   475  000013                     ??___ftdiv:
   476  000013                     ___wmul@product:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x12
   480  000013                     	ds	2
   481  000015                     ?___ftmul:
   482                           	opt stack 0
   483  000015                     ___ftmul@f1:
   484                           	opt stack 0
   485                           
   486                           ; 3 bytes @ 0x14
   487  000015                     	ds	1
   488  000016                     ___ftdiv@cntr:
   489                           	opt stack 0
   490  000016                     ___llmod@counter:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x15
   494  000016                     	ds	1
   495  000017                     ___ftdiv@f3:
   496                           	opt stack 0
   497                           
   498                           ; 3 bytes @ 0x16
   499  000017                     	ds	1
   500  000018                     ___ftmul@f2:
   501                           	opt stack 0
   502                           
   503                           ; 3 bytes @ 0x17
   504  000018                     	ds	2
   505  00001A                     ___ftdiv@exp:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x19
   509  00001A                     	ds	1
   510  00001B                     ??___ftmul:
   511  00001B                     ___ftdiv@sign:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x1A
   515  00001B                     	ds	3
   516  00001E                     ___ftmul@exp:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x1D
   520  00001E                     	ds	1
   521  00001F                     ___ftmul@f3_as_product:
   522                           	opt stack 0
   523                           
   524                           ; 3 bytes @ 0x1E
   525  00001F                     	ds	3
   526  000022                     ___ftmul@cntr:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x21
   530  000022                     	ds	1
   531  000023                     ___ftmul@sign:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x22
   535  000023                     	ds	1
   536  000024                     ?_fround:
   537                           	opt stack 0
   538  000024                     ?_scale:
   539                           	opt stack 0
   540                           
   541                           ; 3 bytes @ 0x23
   542  000024                     	ds	3
   543  000027                     _fround$1245:
   544                           	opt stack 0
   545  000027                     _scale$1246:
   546                           	opt stack 0
   547                           
   548                           ; 3 bytes @ 0x26
   549  000027                     	ds	3
   550  00002A                     scale@scl:
   551                           	opt stack 0
   552  00002A                     _fround$1244:
   553                           	opt stack 0
   554                           
   555                           ; 3 bytes @ 0x29
   556  00002A                     	ds	1
   557  00002B                     ?___fttol:
   558                           	opt stack 0
   559  00002B                     ___fttol@f1:
   560                           	opt stack 0
   561                           
   562                           ; 3 bytes @ 0x2A
   563  00002B                     	ds	2
   564  00002D                     fround@prec:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x2C
   568  00002D                     	ds	1
   569  00002E                     ?___ftadd:
   570                           	opt stack 0
   571  00002E                     ___ftadd@f1:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x2D
   575  00002E                     	ds	1
   576  00002F                     ??___fttol:
   577                           
   578                           ; 0 bytes @ 0x2E
   579  00002F                     	ds	2
   580  000031                     ___ftadd@f2:
   581                           	opt stack 0
   582                           
   583                           ; 3 bytes @ 0x30
   584  000031                     	ds	3
   585  000034                     ??___ftadd:
   586  000034                     ___fttol@sign1:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x33
   590  000034                     	ds	1
   591  000035                     ___fttol@lval:
   592                           	opt stack 0
   593                           
   594                           ; 4 bytes @ 0x34
   595  000035                     	ds	2
   596  000037                     ___ftadd@sign:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x36
   600  000037                     	ds	1
   601  000038                     ___ftadd@exp2:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x37
   605  000038                     	ds	1
   606  000039                     ___ftadd@exp1:
   607                           	opt stack 0
   608  000039                     ___fttol@exp1:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x38
   612  000039                     	ds	1
   613  00003A                     ?___ftsub:
   614                           	opt stack 0
   615  00003A                     ___ftsub@f1:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0x39
   619  00003A                     	ds	3
   620  00003D                     ___ftsub@f2:
   621                           	opt stack 0
   622                           
   623                           ; 3 bytes @ 0x3C
   624  00003D                     	ds	3
   625  000040                     ?_printf:
   626                           	opt stack 0
   627  000040                     printf@f:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x3F
   631  000040                     	ds	5
   632  000045                     ??_printf:
   633                           
   634                           ; 0 bytes @ 0x44
   635  000045                     	ds	6
   636  00004B                     _printf$1247:
   637                           	opt stack 0
   638                           
   639                           ; 3 bytes @ 0x4A
   640  00004B                     	ds	3
   641  00004E                     printf@ap:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x4D
   645  00004E                     	ds	2
   646  000050                     printf@flag:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x4F
   650  000050                     	ds	2
   651  000052                     printf@prec:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x51
   655  000052                     	ds	2
   656  000054                     printf@val:
   657                           	opt stack 0
   658                           
   659                           ; 4 bytes @ 0x53
   660  000054                     	ds	4
   661  000058                     printf@exp:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x57
   665  000058                     	ds	2
   666  00005A                     printf@tmpval:
   667                           	opt stack 0
   668                           
   669                           ; 4 bytes @ 0x59
   670  00005A                     	ds	4
   671  00005E                     printf@fval:
   672                           	opt stack 0
   673                           
   674                           ; 3 bytes @ 0x5D
   675  00005E                     	ds	3
   676  000061                     printf@c:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x60
   680  000061                     	ds	1
   681  000062                     ??_main:
   682                           
   683                           ; 0 bytes @ 0x61
   684  000062                     	ds	2
   685  000064                     main@LED_7seg:
   686                           	opt stack 0
   687                           
   688                           ; 10 bytes @ 0x63
   689  000064                     	ds	10
   690  00006E                     main@tempC:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x6D
   694  00006E                     	ds	3
   695  000071                     main@voltage_t:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x70
   699  000071                     	ds	2
   700  000073                     main@l:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x72
   704  000073                     	ds	1
   705  000074                     main@num_step:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x73
   709  000074                     	ds	2
   710  000076                     main@t:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x75
   714  000076                     	ds	1
   715  000077                     main@tempF:
   716                           	opt stack 0
   717                           
   718                           ; 3 bytes @ 0x76
   719  000077                     	ds	3
   720  00007A                     main@voltage_mv2:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x79
   724  00007A                     	ds	3
   725  00007D                     main@u:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x7C
   729  00007D                     	ds	1
   730  00007E                     main@tempF_int:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x7D
   734  00007E                     	ds	2
   735                           tblptru	equ	0xFF8
   736                           tblptrh	equ	0xFF7
   737                           tblptrl	equ	0xFF6
   738                           tablat	equ	0xFF5
   739                           postinc0	equ	0xFEE
   740                           postdec1	equ	0xFE5
   741                           fsr1l	equ	0xFE1
   742                           
   743 ;;
   744 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   745 ;;
   746 ;; *************** function _main *****************
   747 ;; Defined at:
   748 ;;		line 55 in file "Lab5.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  voltage_mv2     3  121[COMRAM] float 
   753 ;;  tempF           3  118[COMRAM] float 
   754 ;;  tempC           3  109[COMRAM] float 
   755 ;;  tempF_int       2  125[COMRAM] int 
   756 ;;  num_step        2  115[COMRAM] int 
   757 ;;  voltage_t       2  112[COMRAM] int 
   758 ;;  u               1  124[COMRAM] unsigned char 
   759 ;;  t               1  117[COMRAM] unsigned char 
   760 ;;  l               1  114[COMRAM] unsigned char 
   761 ;;  LED_7seg       10   99[COMRAM] unsigned char [10]
   762 ;; Return value:  Size  Location     Type
   763 ;;		None               void
   764 ;; Registers used:
   765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   772 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;Total ram usage:       30 bytes
   776 ;; Hardware stack levels required when called:    4
   777 ;; This function calls:
   778 ;;		_Delay_One_Sec
   779 ;;		_Init_ADC
   780 ;;		_Init_TRIS
   781 ;;		_Init_UART
   782 ;;		_SET_D1_BLUE
   783 ;;		_SET_D1_GREEN
   784 ;;		_SET_D1_OFF
   785 ;;		_SET_D1_RED
   786 ;;		_SET_D1_WHITE
   787 ;;		_SET_D2_OFF
   788 ;;		_SET_D2_WHITE
   789 ;;		_SET_D3_BLUE
   790 ;;		_SET_D3_PURPLE
   791 ;;		_SET_D3_RED
   792 ;;		_Select_ADC_Channel
   793 ;;		___awdiv
   794 ;;		___awmod
   795 ;;		___awtoft
   796 ;;		___ftadd
   797 ;;		___ftdiv
   798 ;;		___ftge
   799 ;;		___ftmul
   800 ;;		___fttol
   801 ;;		_get_full_ADC
   802 ;;		_printf
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text0
   809  001BC6                     __ptext0:
   810                           	opt stack 0
   811  001BC6                     _main:
   812                           	opt stack 27
   813                           
   814                           ;Lab5.c: 57: Init_UART();
   815                           
   816                           ;incstack = 0
   817  001BC6  ECBD  F016         	call	_Init_UART	;wreg free
   818                           
   819                           ;Lab5.c: 58: Init_ADC();
   820  001BCA  ECCE  F016         	call	_Init_ADC	;wreg free
   821                           
   822                           ;Lab5.c: 59: Init_TRIS();
   823  001BCE  ECB2  F016         	call	_Init_TRIS	;wreg free
   824                           
   825                           ;Lab5.c: 60: char LED_7seg[10] = {0x01,0x4F, 0x12, 0x06,
   826                           ;Lab5.c: 61: 0x4C, 0x24, 0x20, 0x0F, 0x00, 0x04};
   827  001BD2  EE20  F080         	lfsr	2,main@F4301
   828  001BD6  EE10  F064         	lfsr	1,main@LED_7seg
   829  001BDA  0E09               	movlw	9
   830  001BDC                     u3001:
   831  001BDC  CFDB FFE3          	movff	plusw2,plusw1
   832  001BE0  06E8               	decf	wreg,f,c
   833  001BE2  E2FC               	bc	u3001
   834  001BE4  D000               	goto	l2798
   835  001BE6                     l2798:
   836                           
   837                           ;Lab5.c: 64: {
   838                           ;Lab5.c: 65: Select_ADC_Channel(0);
   839  001BE6  0E00               	movlw	0
   840  001BE8  ECD5  F016         	call	_Select_ADC_Channel
   841                           
   842                           ;Lab5.c: 66: int num_step = get_full_ADC();
   843  001BEC  EC7B  F016         	call	_get_full_ADC	;wreg free
   844  001BF0  C001  F074         	movff	?_get_full_ADC,main@num_step
   845  001BF4  C002  F075         	movff	?_get_full_ADC+1,main@num_step+1
   846                           
   847                           ;Lab5.c: 67: int voltage_t = num_step*4;
   848  001BF8  C074  F062         	movff	main@num_step,??_main
   849  001BFC  C075  F063         	movff	main@num_step+1,??_main+1
   850  001C00  90D8               	bcf	status,0,c
   851  001C02  3662               	rlcf	??_main,f,c
   852  001C04  3663               	rlcf	??_main+1,f,c
   853  001C06  90D8               	bcf	status,0,c
   854  001C08  3662               	rlcf	??_main,f,c
   855  001C0A  3663               	rlcf	??_main+1,f,c
   856  001C0C  C062  F071         	movff	??_main,main@voltage_t
   857  001C10  C063  F072         	movff	??_main+1,main@voltage_t+1
   858                           
   859                           ;Lab5.c: 68: float tempC = (1035 - voltage_t) / 5.5;
   860  001C14  C071  F062         	movff	main@voltage_t,??_main
   861  001C18  C072  F063         	movff	main@voltage_t+1,??_main+1
   862  001C1C  1E62               	comf	??_main,f,c
   863  001C1E  1E63               	comf	??_main+1,f,c
   864  001C20  4A62               	infsnz	??_main,f,c
   865  001C22  2A63               	incf	??_main+1,f,c
   866  001C24  0E0B               	movlw	11
   867  001C26  2462               	addwf	??_main,w,c
   868  001C28  6E09               	movwf	___awtoft@c,c
   869  001C2A  0E04               	movlw	4
   870  001C2C  2063               	addwfc	??_main+1,w,c
   871  001C2E  6E0A               	movwf	___awtoft@c+1,c
   872  001C30  EC34  F016         	call	___awtoft	;wreg free
   873  001C34  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   874  001C38  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   875  001C3C  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   876  001C40  0E00               	movlw	0
   877  001C42  6E10               	movwf	___ftdiv@f2,c
   878  001C44  0EB0               	movlw	176
   879  001C46  6E11               	movwf	___ftdiv@f2+1,c
   880  001C48  0E40               	movlw	64
   881  001C4A  6E12               	movwf	___ftdiv@f2+2,c
   882  001C4C  EC81  F013         	call	___ftdiv	;wreg free
   883  001C50  C00D  F06E         	movff	?___ftdiv,main@tempC
   884  001C54  C00E  F06F         	movff	?___ftdiv+1,main@tempC+1
   885  001C58  C00F  F070         	movff	?___ftdiv+2,main@tempC+2
   886                           
   887                           ;Lab5.c: 69: float tempF = (1.5 * tempC) + 32;
   888  001C5C  0E00               	movlw	0
   889  001C5E  6E18               	movwf	___ftmul@f2,c
   890  001C60  0EC0               	movlw	192
   891  001C62  6E19               	movwf	___ftmul@f2+1,c
   892  001C64  0E3F               	movlw	63
   893  001C66  6E1A               	movwf	___ftmul@f2+2,c
   894  001C68  C06E  F015         	movff	main@tempC,___ftmul@f1
   895  001C6C  C06F  F016         	movff	main@tempC+1,___ftmul@f1+1
   896  001C70  C070  F017         	movff	main@tempC+2,___ftmul@f1+2
   897  001C74  EC92  F012         	call	___ftmul	;wreg free
   898  001C78  C015  F02E         	movff	?___ftmul,___ftadd@f1
   899  001C7C  C016  F02F         	movff	?___ftmul+1,___ftadd@f1+1
   900  001C80  C017  F030         	movff	?___ftmul+2,___ftadd@f1+2
   901  001C84  0E00               	movlw	0
   902  001C86  6E31               	movwf	___ftadd@f2,c
   903  001C88  0E00               	movlw	0
   904  001C8A  6E32               	movwf	___ftadd@f2+1,c
   905  001C8C  0E42               	movlw	66
   906  001C8E  6E33               	movwf	___ftadd@f2+2,c
   907  001C90  ECA3  F010         	call	___ftadd	;wreg free
   908  001C94  C02E  F077         	movff	?___ftadd,main@tempF
   909  001C98  C02F  F078         	movff	?___ftadd+1,main@tempF+1
   910  001C9C  C030  F079         	movff	?___ftadd+2,main@tempF+2
   911                           
   912                           ;Lab5.c: 70: int tempF_int = (int) tempF;
   913  001CA0  C077  F02B         	movff	main@tempF,___fttol@f1
   914  001CA4  C078  F02C         	movff	main@tempF+1,___fttol@f1+1
   915  001CA8  C079  F02D         	movff	main@tempF+2,___fttol@f1+2
   916  001CAC  EC0E  F013         	call	___fttol	;wreg free
   917  001CB0  C02B  F07E         	movff	?___fttol,main@tempF_int
   918  001CB4  C02C  F07F         	movff	?___fttol+1,main@tempF_int+1
   919                           
   920                           ;Lab5.c: 71: char u = tempF_int / 10;
   921  001CB8  C07E  F007         	movff	main@tempF_int,___awdiv@dividend
   922  001CBC  C07F  F008         	movff	main@tempF_int+1,___awdiv@dividend+1
   923  001CC0  0E00               	movlw	0
   924  001CC2  6E0A               	movwf	___awdiv@divisor+1,c
   925  001CC4  0E0A               	movlw	10
   926  001CC6  6E09               	movwf	___awdiv@divisor,c
   927  001CC8  EC55  F014         	call	___awdiv	;wreg free
   928  001CCC  5007               	movf	?___awdiv,w,c
   929  001CCE  6E7D               	movwf	main@u,c
   930                           
   931                           ;Lab5.c: 72: char l = tempF_int % 10;
   932  001CD0  C07E  F001         	movff	main@tempF_int,___awmod@dividend
   933  001CD4  C07F  F002         	movff	main@tempF_int+1,___awmod@dividend+1
   934  001CD8  0E00               	movlw	0
   935  001CDA  6E04               	movwf	___awmod@divisor+1,c
   936  001CDC  0E0A               	movlw	10
   937  001CDE  6E03               	movwf	___awmod@divisor,c
   938  001CE0  EC31  F015         	call	___awmod	;wreg free
   939  001CE4  5001               	movf	?___awmod,w,c
   940  001CE6  6E73               	movwf	main@l,c
   941                           
   942                           ;Lab5.c: 73: PORTD = LED_7seg[l];
   943  001CE8  5073               	movf	main@l,w,c
   944  001CEA  0D01               	mullw	1
   945  001CEC  0E64               	movlw	low main@LED_7seg
   946  001CEE  24F3               	addwf	prodl,w,c
   947  001CF0  6ED9               	movwf	fsr2l,c
   948  001CF2  0E00               	movlw	high main@LED_7seg
   949  001CF4  20F4               	addwfc	prodh,w,c
   950  001CF6  6EDA               	movwf	fsr2h,c
   951  001CF8  50DF               	movf	indf2,w,c
   952  001CFA  6E83               	movwf	3971,c	;volatile
   953                           
   954                           ;Lab5.c: 74: char t = LED_7seg[u];
   955  001CFC  507D               	movf	main@u,w,c
   956  001CFE  0D01               	mullw	1
   957  001D00  0E64               	movlw	low main@LED_7seg
   958  001D02  24F3               	addwf	prodl,w,c
   959  001D04  6ED9               	movwf	fsr2l,c
   960  001D06  0E00               	movlw	high main@LED_7seg
   961  001D08  20F4               	addwfc	prodh,w,c
   962  001D0A  6EDA               	movwf	fsr2h,c
   963  001D0C  50DF               	movf	indf2,w,c
   964  001D0E  6E76               	movwf	main@t,c
   965                           
   966                           ;Lab5.c: 75: PORTC = t & 0x3f;
   967  001D10  5076               	movf	main@t,w,c
   968  001D12  0B3F               	andlw	63
   969  001D14  6E82               	movwf	3970,c	;volatile
   970                           
   971                           ;Lab5.c: 76: PORTE = 0;
   972  001D16  0E00               	movlw	0
   973  001D18  6E84               	movwf	3972,c	;volatile
   974                           
   975                           ;Lab5.c: 77: if (t & 0x40) PORTE = 2;
   976  001D1A  AC76               	btfss	main@t,6,c
   977  001D1C  D003               	goto	l2826
   978  001D1E  0E02               	movlw	2
   979  001D20  6E84               	movwf	3972,c	;volatile
   980  001D22  D000               	goto	l2826
   981  001D24                     l2826:
   982                           
   983                           ;Lab5.c: 78: printf("temperature =%d\r\n", tempF_int);
   984  001D24  0E77               	movlw	low STR_1
   985  001D26  6E40               	movwf	printf@f,c
   986  001D28  0E10               	movlw	high STR_1
   987  001D2A  6E41               	movwf	printf@f+1,c
   988  001D2C  C07E  F042         	movff	main@tempF_int,?_printf+2
   989  001D30  C07F  F043         	movff	main@tempF_int+1,?_printf+3
   990  001D34  EC4C  F008         	call	_printf	;wreg free
   991                           
   992                           ;Lab5.c: 80: if (u ==0 ) SET_D2_OFF();
   993  001D38  507D               	movf	main@u,w,c
   994  001D3A  A4D8               	btfss	status,2,c
   995  001D3C  D003               	goto	l2832
   996  001D3E  ECE4  F016         	call	_SET_D2_OFF	;wreg free
   997  001D42  D00F               	goto	l2842
   998  001D44                     l2832:
   999                           
  1000                           ;Lab5.c: 81: else if((u >= 1) & (u < 7)) PORTB = u;
  1001  001D44  507D               	movf	main@u,w,c
  1002  001D46  B4D8               	btfsc	status,2,c
  1003  001D48  D006               	goto	l2838
  1004  001D4A  0E07               	movlw	7
  1005  001D4C  607D               	cpfslt	main@u,c
  1006  001D4E  D003               	goto	l2838
  1007  001D50  C07D  FF81         	movff	main@u,3969	;volatile
  1008  001D54  D006               	goto	l2842
  1009  001D56                     l2838:
  1010                           
  1011                           ;Lab5.c: 82: else if (u>=7) SET_D2_WHITE();
  1012  001D56  0E06               	movlw	6
  1013  001D58  647D               	cpfsgt	main@u,c
  1014  001D5A  D003               	goto	l2842
  1015  001D5C  ECE0  F016         	call	_SET_D2_WHITE	;wreg free
  1016  001D60  D000               	goto	l2842
  1017  001D62                     l2842:
  1018                           
  1019                           ;Lab5.c: 84: if(tempF_int < 45)
  1020  001D62  BE7F               	btfsc	main@tempF_int+1,7,c
  1021  001D64  D006               	goto	l2844
  1022  001D66  507F               	movf	main@tempF_int+1,w,c
  1023  001D68  E107               	bnz	l2846
  1024  001D6A  0E2D               	movlw	45
  1025  001D6C  5C7E               	subwf	main@tempF_int,w,c
  1026  001D6E  B0D8               	btfsc	status,0,c
  1027  001D70  D003               	goto	l2846
  1028  001D72                     l2844:
  1029                           
  1030                           ;Lab5.c: 85: {
  1031                           ;Lab5.c: 86: SET_D1_OFF();
  1032  001D72  ECF0  F016         	call	_SET_D1_OFF	;wreg free
  1033                           
  1034                           ;Lab5.c: 87: }
  1035  001D76  D04C               	goto	l2866
  1036  001D78                     l2846:
  1037                           
  1038                           ;Lab5.c: 88: else if(tempF_int<=55)
  1039  001D78  BE7F               	btfsc	main@tempF_int+1,7,c
  1040  001D7A  D006               	goto	l2848
  1041  001D7C  507F               	movf	main@tempF_int+1,w,c
  1042  001D7E  E107               	bnz	l2850
  1043  001D80  0E38               	movlw	56
  1044  001D82  5C7E               	subwf	main@tempF_int,w,c
  1045  001D84  B0D8               	btfsc	status,0,c
  1046  001D86  D003               	goto	l2850
  1047  001D88                     l2848:
  1048                           
  1049                           ;Lab5.c: 89: {
  1050                           ;Lab5.c: 90: SET_D1_RED();
  1051  001D88  ECEC  F016         	call	_SET_D1_RED	;wreg free
  1052                           
  1053                           ;Lab5.c: 91: }
  1054  001D8C  D041               	goto	l2866
  1055  001D8E                     l2850:
  1056                           
  1057                           ;Lab5.c: 92: else if(tempF_int<=65 & tempF>55)
  1058  001D8E  BE7F               	btfsc	main@tempF_int+1,7,c
  1059  001D90  D006               	goto	l2852
  1060  001D92  507F               	movf	main@tempF_int+1,w,c
  1061  001D94  E117               	bnz	l2856
  1062  001D96  0E42               	movlw	66
  1063  001D98  5C7E               	subwf	main@tempF_int,w,c
  1064  001D9A  B0D8               	btfsc	status,0,c
  1065  001D9C  D013               	goto	l2856
  1066  001D9E                     l2852:
  1067  001D9E  0E00               	movlw	0
  1068  001DA0  6E01               	movwf	___ftge@ff1,c
  1069  001DA2  0E5C               	movlw	92
  1070  001DA4  6E02               	movwf	___ftge@ff1+1,c
  1071  001DA6  0E42               	movlw	66
  1072  001DA8  6E03               	movwf	___ftge@ff1+2,c
  1073  001DAA  C077  F004         	movff	main@tempF,___ftge@ff2
  1074  001DAE  C078  F005         	movff	main@tempF+1,___ftge@ff2+1
  1075  001DB2  C079  F006         	movff	main@tempF+2,___ftge@ff2+2
  1076  001DB6  ECA0  F014         	call	___ftge	;wreg free
  1077  001DBA  B0D8               	btfsc	status,0,c
  1078  001DBC  D003               	goto	l2856
  1079                           
  1080                           ;Lab5.c: 93: {
  1081                           ;Lab5.c: 94: SET_D1_GREEN();
  1082  001DBE  ECF4  F016         	call	_SET_D1_GREEN	;wreg free
  1083                           
  1084                           ;Lab5.c: 95: }
  1085  001DC2  D026               	goto	l2866
  1086  001DC4                     l2856:
  1087                           
  1088                           ;Lab5.c: 96: else if(tempF_int<=75 & tempF>65)
  1089  001DC4  BE7F               	btfsc	main@tempF_int+1,7,c
  1090  001DC6  D006               	goto	l2858
  1091  001DC8  507F               	movf	main@tempF_int+1,w,c
  1092  001DCA  E117               	bnz	l2862
  1093  001DCC  0E4C               	movlw	76
  1094  001DCE  5C7E               	subwf	main@tempF_int,w,c
  1095  001DD0  B0D8               	btfsc	status,0,c
  1096  001DD2  D013               	goto	l2862
  1097  001DD4                     l2858:
  1098  001DD4  0E00               	movlw	0
  1099  001DD6  6E01               	movwf	___ftge@ff1,c
  1100  001DD8  0E82               	movlw	130
  1101  001DDA  6E02               	movwf	___ftge@ff1+1,c
  1102  001DDC  0E42               	movlw	66
  1103  001DDE  6E03               	movwf	___ftge@ff1+2,c
  1104  001DE0  C077  F004         	movff	main@tempF,___ftge@ff2
  1105  001DE4  C078  F005         	movff	main@tempF+1,___ftge@ff2+1
  1106  001DE8  C079  F006         	movff	main@tempF+2,___ftge@ff2+2
  1107  001DEC  ECA0  F014         	call	___ftge	;wreg free
  1108  001DF0  B0D8               	btfsc	status,0,c
  1109  001DF2  D003               	goto	l2862
  1110                           
  1111                           ;Lab5.c: 97: {
  1112                           ;Lab5.c: 98: SET_D1_BLUE();
  1113  001DF4  ECF8  F016         	call	_SET_D1_BLUE	;wreg free
  1114                           
  1115                           ;Lab5.c: 99: }
  1116  001DF8  D00B               	goto	l2866
  1117  001DFA                     l2862:
  1118                           
  1119                           ;Lab5.c: 100: else if(tempF_int>76)
  1120  001DFA  BE7F               	btfsc	main@tempF_int+1,7,c
  1121  001DFC  D009               	goto	l2866
  1122  001DFE  507F               	movf	main@tempF_int+1,w,c
  1123  001E00  E104               	bnz	u3120
  1124  001E02  0E4D               	movlw	77
  1125  001E04  5C7E               	subwf	main@tempF_int,w,c
  1126  001E06  A0D8               	btfss	status,0,c
  1127  001E08  D003               	goto	l2866
  1128  001E0A                     u3120:
  1129                           
  1130                           ;Lab5.c: 101: {
  1131                           ;Lab5.c: 102: SET_D1_WHITE();
  1132  001E0A  ECE8  F016         	call	_SET_D1_WHITE	;wreg free
  1133  001E0E  D000               	goto	l2866
  1134  001E10                     l2866:
  1135                           
  1136                           ;Lab5.c: 103: }
  1137                           ;Lab5.c: 105: Select_ADC_Channel(2);
  1138  001E10  0E02               	movlw	2
  1139  001E12  ECD5  F016         	call	_Select_ADC_Channel
  1140                           
  1141                           ;Lab5.c: 106: int num_step = get_full_ADC();
  1142  001E16  EC7B  F016         	call	_get_full_ADC	;wreg free
  1143  001E1A  C001  F074         	movff	?_get_full_ADC,main@num_step
  1144  001E1E  C002  F075         	movff	?_get_full_ADC+1,main@num_step+1
  1145                           
  1146                           ;Lab5.c: 107: float voltage_mv2 = num_step*4;
  1147  001E22  C074  F062         	movff	main@num_step,??_main
  1148  001E26  C075  F063         	movff	main@num_step+1,??_main+1
  1149  001E2A  90D8               	bcf	status,0,c
  1150  001E2C  3662               	rlcf	??_main,f,c
  1151  001E2E  3663               	rlcf	??_main+1,f,c
  1152  001E30  90D8               	bcf	status,0,c
  1153  001E32  3662               	rlcf	??_main,f,c
  1154  001E34  3663               	rlcf	??_main+1,f,c
  1155  001E36  C062  F009         	movff	??_main,___awtoft@c
  1156  001E3A  C063  F00A         	movff	??_main+1,___awtoft@c+1
  1157  001E3E  EC34  F016         	call	___awtoft	;wreg free
  1158  001E42  C009  F07A         	movff	?___awtoft,main@voltage_mv2
  1159  001E46  C00A  F07B         	movff	?___awtoft+1,main@voltage_mv2+1
  1160  001E4A  C00B  F07C         	movff	?___awtoft+2,main@voltage_mv2+2
  1161                           
  1162                           ;Lab5.c: 108: printf("voltage =%f\r\n", voltage_mv2);
  1163  001E4E  0E89               	movlw	low STR_2
  1164  001E50  6E40               	movwf	printf@f,c
  1165  001E52  0E10               	movlw	high STR_2
  1166  001E54  6E41               	movwf	printf@f+1,c
  1167  001E56  C07A  F042         	movff	main@voltage_mv2,?_printf+2
  1168  001E5A  C07B  F043         	movff	main@voltage_mv2+1,?_printf+3
  1169  001E5E  C07C  F044         	movff	main@voltage_mv2+2,?_printf+4
  1170  001E62  EC4C  F008         	call	_printf	;wreg free
  1171                           
  1172                           ;Lab5.c: 110: if (voltage_mv2 <2100)
  1173  001E66  C07A  F001         	movff	main@voltage_mv2,___ftge@ff1
  1174  001E6A  C07B  F002         	movff	main@voltage_mv2+1,___ftge@ff1+1
  1175  001E6E  C07C  F003         	movff	main@voltage_mv2+2,___ftge@ff1+2
  1176  001E72  0E40               	movlw	64
  1177  001E74  6E04               	movwf	___ftge@ff2,c
  1178  001E76  0E03               	movlw	3
  1179  001E78  6E05               	movwf	___ftge@ff2+1,c
  1180  001E7A  0E45               	movlw	69
  1181  001E7C  6E06               	movwf	___ftge@ff2+2,c
  1182  001E7E  ECA0  F014         	call	___ftge	;wreg free
  1183  001E82  B0D8               	btfsc	status,0,c
  1184  001E84  D003               	goto	l2878
  1185                           
  1186                           ;Lab5.c: 111: {
  1187                           ;Lab5.c: 112: SET_D3_RED();
  1188  001E86  ECFC  F016         	call	_SET_D3_RED	;wreg free
  1189                           
  1190                           ;Lab5.c: 113: }
  1191  001E8A  D036               	goto	l2888
  1192  001E8C                     l2878:
  1193                           
  1194                           ;Lab5.c: 114: else if (voltage_mv2 >= 2100 & voltage_mv2 < 3000)
  1195  001E8C  C07A  F001         	movff	main@voltage_mv2,___ftge@ff1
  1196  001E90  C07B  F002         	movff	main@voltage_mv2+1,___ftge@ff1+1
  1197  001E94  C07C  F003         	movff	main@voltage_mv2+2,___ftge@ff1+2
  1198  001E98  0E40               	movlw	64
  1199  001E9A  6E04               	movwf	___ftge@ff2,c
  1200  001E9C  0E03               	movlw	3
  1201  001E9E  6E05               	movwf	___ftge@ff2+1,c
  1202  001EA0  0E45               	movlw	69
  1203  001EA2  6E06               	movwf	___ftge@ff2+2,c
  1204  001EA4  ECA0  F014         	call	___ftge	;wreg free
  1205  001EA8  A0D8               	btfss	status,0,c
  1206  001EAA  D013               	goto	l2884
  1207  001EAC  C07A  F001         	movff	main@voltage_mv2,___ftge@ff1
  1208  001EB0  C07B  F002         	movff	main@voltage_mv2+1,___ftge@ff1+1
  1209  001EB4  C07C  F003         	movff	main@voltage_mv2+2,___ftge@ff1+2
  1210  001EB8  0E80               	movlw	128
  1211  001EBA  6E04               	movwf	___ftge@ff2,c
  1212  001EBC  0E3B               	movlw	59
  1213  001EBE  6E05               	movwf	___ftge@ff2+1,c
  1214  001EC0  0E45               	movlw	69
  1215  001EC2  6E06               	movwf	___ftge@ff2+2,c
  1216  001EC4  ECA0  F014         	call	___ftge	;wreg free
  1217  001EC8  B0D8               	btfsc	status,0,c
  1218  001ECA  D003               	goto	l2884
  1219                           
  1220                           ;Lab5.c: 115: {
  1221                           ;Lab5.c: 116: SET_D3_BLUE();
  1222  001ECC  EC02  F017         	call	_SET_D3_BLUE	;wreg free
  1223                           
  1224                           ;Lab5.c: 117: }
  1225  001ED0  D013               	goto	l2888
  1226  001ED2                     l2884:
  1227                           
  1228                           ;Lab5.c: 118: else if(voltage_mv2 >= 3000)
  1229  001ED2  C07A  F001         	movff	main@voltage_mv2,___ftge@ff1
  1230  001ED6  C07B  F002         	movff	main@voltage_mv2+1,___ftge@ff1+1
  1231  001EDA  C07C  F003         	movff	main@voltage_mv2+2,___ftge@ff1+2
  1232  001EDE  0E80               	movlw	128
  1233  001EE0  6E04               	movwf	___ftge@ff2,c
  1234  001EE2  0E3B               	movlw	59
  1235  001EE4  6E05               	movwf	___ftge@ff2+1,c
  1236  001EE6  0E45               	movlw	69
  1237  001EE8  6E06               	movwf	___ftge@ff2+2,c
  1238  001EEA  ECA0  F014         	call	___ftge	;wreg free
  1239  001EEE  A0D8               	btfss	status,0,c
  1240  001EF0  D003               	goto	l2888
  1241                           
  1242                           ;Lab5.c: 119: {
  1243                           ;Lab5.c: 120: SET_D3_PURPLE();
  1244  001EF2  ECFF  F016         	call	_SET_D3_PURPLE	;wreg free
  1245  001EF6  D000               	goto	l2888
  1246  001EF8                     l2888:
  1247                           
  1248                           ;Lab5.c: 121: }
  1249                           ;Lab5.c: 123: Delay_One_Sec();
  1250  001EF8  ECA0  F016         	call	_Delay_One_Sec	;wreg free
  1251  001EFC  D674               	goto	l2798
  1252  001EFE  EF00  F000         	goto	start
  1253  001F02                     __end_of_main:
  1254                           	opt stack 0
  1255                           tblptru	equ	0xFF8
  1256                           tblptrh	equ	0xFF7
  1257                           tblptrl	equ	0xFF6
  1258                           tablat	equ	0xFF5
  1259                           prodh	equ	0xFF4
  1260                           prodl	equ	0xFF3
  1261                           postinc0	equ	0xFEE
  1262                           wreg	equ	0xFE8
  1263                           postdec1	equ	0xFE5
  1264                           plusw1	equ	0xFE3
  1265                           fsr1l	equ	0xFE1
  1266                           indf2	equ	0xFDF
  1267                           plusw2	equ	0xFDB
  1268                           fsr2h	equ	0xFDA
  1269                           fsr2l	equ	0xFD9
  1270                           status	equ	0xFD8
  1271                           
  1272 ;; *************** function _printf *****************
  1273 ;; Defined at:
  1274 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  f               2   63[COMRAM] PTR const unsigned char 
  1277 ;;		 -> STR_2(14), STR_1(18), 
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  tmpval          4   89[COMRAM] struct .
  1280 ;;  val             4   83[COMRAM] unsigned long 
  1281 ;;  fval            3   93[COMRAM] unsigned long 
  1282 ;;  cp              3    0        PTR const unsigned char 
  1283 ;;  exp             2   87[COMRAM] int 
  1284 ;;  prec            2   81[COMRAM] int 
  1285 ;;  flag            2   79[COMRAM] unsigned short 
  1286 ;;  ap              2   77[COMRAM] PTR void [1]
  1287 ;;		 -> ?_printf(2), 
  1288 ;;  len             2    0        unsigned int 
  1289 ;;  width           2    0        int 
  1290 ;;  c               1   96[COMRAM] char 
  1291 ;;  d               1    0        unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  2   63[COMRAM] int 
  1294 ;; Registers used:
  1295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1301 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;Total ram usage:       34 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    3
  1308 ;; This function calls:
  1309 ;;		___awdiv
  1310 ;;		___ftadd
  1311 ;;		___ftge
  1312 ;;		___ftmul
  1313 ;;		___ftneg
  1314 ;;		___ftsub
  1315 ;;		___fttol
  1316 ;;		___lldiv
  1317 ;;		___llmod
  1318 ;;		___lltoft
  1319 ;;		___wmul
  1320 ;;		__div_to_l_
  1321 ;;		__tdiv_to_l_
  1322 ;;		_fround
  1323 ;;		_putch
  1324 ;;		_scale
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text1
  1331  001098                     __ptext1:
  1332                           	opt stack 0
  1333  001098                     _printf:
  1334                           	opt stack 27
  1335                           
  1336                           ;doprnt.c: 466: va_list ap;
  1337                           ;doprnt.c: 499: signed char c;
  1338                           ;doprnt.c: 501: int width;
  1339                           ;doprnt.c: 504: int prec;
  1340                           ;doprnt.c: 508: unsigned short flag;
  1341                           ;doprnt.c: 515: char d;
  1342                           ;doprnt.c: 516: double fval;
  1343                           ;doprnt.c: 517: int exp;
  1344                           ;doprnt.c: 523: union {
  1345                           ;doprnt.c: 524: unsigned long vd;
  1346                           ;doprnt.c: 525: double integ;
  1347                           ;doprnt.c: 526: } tmpval;
  1348                           ;doprnt.c: 528: unsigned long val;
  1349                           ;doprnt.c: 529: unsigned len;
  1350                           ;doprnt.c: 530: const char * cp;
  1351                           ;doprnt.c: 533: *ap = __va_start();
  1352                           
  1353                           ;incstack = 0
  1354  001098  0E42               	movlw	low (?_printf+2)
  1355  00109A  6E4E               	movwf	printf@ap,c
  1356  00109C  0E00               	movlw	high (?_printf+2)
  1357  00109E  6E4F               	movwf	printf@ap+1,c
  1358                           
  1359                           ;doprnt.c: 536: while(c = *f++) {
  1360  0010A0  D393               	goto	l2704
  1361  0010A2                     l2524:
  1362                           
  1363                           ;doprnt.c: 538: if(c != '%')
  1364  0010A2  0E25               	movlw	37
  1365  0010A4  1861               	xorwf	printf@c,w,c
  1366  0010A6  B4D8               	btfsc	status,2,c
  1367  0010A8  D004               	goto	l2528
  1368                           
  1369                           ;doprnt.c: 540: {
  1370                           ;doprnt.c: 541: (putch(c) );
  1371  0010AA  5061               	movf	printf@c,w,c
  1372  0010AC  ECC7  F016         	call	_putch
  1373                           
  1374                           ;doprnt.c: 542: continue;
  1375  0010B0  D38B               	goto	l2704
  1376  0010B2                     l2528:
  1377                           
  1378                           ;doprnt.c: 543: }
  1379                           ;doprnt.c: 548: flag = 0;
  1380  0010B2  0E00               	movlw	0
  1381  0010B4  6E51               	movwf	printf@flag+1,c
  1382  0010B6  0E00               	movlw	0
  1383  0010B8  6E50               	movwf	printf@flag,c
  1384                           
  1385                           ;doprnt.c: 635: switch(c = *f++) {
  1386  0010BA  D005               	goto	l2534
  1387                           
  1388                           ;doprnt.c: 638: goto alldone;
  1389                           
  1390                           ;doprnt.c: 637: case 0:
  1391  0010BC  D393               	goto	l253
  1392  0010BE                     l2530:
  1393                           
  1394                           ;doprnt.c: 663: flag |= 0x400;
  1395  0010BE  8451               	bsf	printf@flag+1,2,c
  1396                           
  1397                           ;doprnt.c: 698: case 'i':
  1398                           ;doprnt.c: 699: break;
  1399                           
  1400                           ;doprnt.c: 697: case 'd':
  1401                           
  1402                           ;doprnt.c: 664: break;
  1403  0010C0  D018               	goto	l2536
  1404                           
  1405                           ;doprnt.c: 813: continue;
  1406                           
  1407                           ;doprnt.c: 802: default:
  1408  0010C2  D382               	goto	l2704
  1409                           
  1410                           ;doprnt.c: 822: }
  1411  0010C4  D016               	goto	l2536
  1412  0010C6                     l2534:
  1413  0010C6  C040  FFF6         	movff	printf@f,tblptrl
  1414  0010CA  C041  FFF7         	movff	printf@f+1,tblptrh
  1415  0010CE  4A40               	infsnz	printf@f,f,c
  1416  0010D0  2A41               	incf	printf@f+1,f,c
  1417  0010D2                     	if	0	;tblptru may be non-zero
  1418  0010D2                     	endif
  1419  0010D2                     	if	0	;tblptru may be non-zero
  1420  0010D2                     	endif
  1421  0010D2  0008               	tblrd		*
  1422  0010D4  CFF5 F061          	movff	tablat,printf@c
  1423  0010D8  5061               	movf	printf@c,w,c
  1424                           
  1425                           ; Switch size 1, requested type "space"
  1426                           ; Number of cases is 4, Range of values is 0 to 105
  1427                           ; switch strategies available:
  1428                           ; Name         Instructions Cycles
  1429                           ; simple_byte           13     7 (average)
  1430                           ;	Chosen strategy is simple_byte
  1431  0010DA  0A00               	xorlw	0	; case 0
  1432  0010DC  B4D8               	btfsc	status,2,c
  1433  0010DE  D382               	goto	l253
  1434  0010E0  0A64               	xorlw	100	; case 100
  1435  0010E2  B4D8               	btfsc	status,2,c
  1436  0010E4  D006               	goto	l2536
  1437  0010E6  0A02               	xorlw	2	; case 102
  1438  0010E8  B4D8               	btfsc	status,2,c
  1439  0010EA  D7E9               	goto	l2530
  1440  0010EC  0A0F               	xorlw	15	; case 105
  1441  0010EE  A4D8               	btfss	status,2,c
  1442  0010F0  D36B               	goto	l2704
  1443  0010F2                     l2536:
  1444                           
  1445                           ;doprnt.c: 825: if(flag & (0x700)) {
  1446  0010F2  0E07               	movlw	7
  1447  0010F4  1451               	andwf	printf@flag+1,w,c
  1448  0010F6  B4D8               	btfsc	status,2,c
  1449  0010F8  D2CA               	goto	l2668
  1450                           
  1451                           ;doprnt.c: 829: prec = 6;
  1452  0010FA  0E00               	movlw	0
  1453  0010FC  6E53               	movwf	printf@prec+1,c
  1454  0010FE  0E06               	movlw	6
  1455  001100  6E52               	movwf	printf@prec,c
  1456                           
  1457                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1458  001102  C04E  FFD9         	movff	printf@ap,fsr2l
  1459  001106  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1460  00110A  CFDE F05E          	movff	postinc2,printf@fval
  1461  00110E  CFDE F05F          	movff	postinc2,printf@fval+1
  1462  001112  CFDD F060          	movff	postdec2,printf@fval+2
  1463  001116  0E03               	movlw	3
  1464  001118  264E               	addwf	printf@ap,f,c
  1465  00111A  0E00               	movlw	0
  1466  00111C  224F               	addwfc	printf@ap+1,f,c
  1467                           
  1468                           ;doprnt.c: 831: if(fval < 0.0) {
  1469  00111E  AE60               	btfss	printf@fval+2,7,c
  1470  001120  D011               	goto	l2550
  1471                           
  1472                           ;doprnt.c: 832: fval = -fval;
  1473  001122  C05E  F001         	movff	printf@fval,___ftneg@f1
  1474  001126  C05F  F002         	movff	printf@fval+1,___ftneg@f1+1
  1475  00112A  C060  F003         	movff	printf@fval+2,___ftneg@f1+2
  1476  00112E  EC8E  F016         	call	___ftneg	;wreg free
  1477  001132  C001  F05E         	movff	?___ftneg,printf@fval
  1478  001136  C002  F05F         	movff	?___ftneg+1,printf@fval+1
  1479  00113A  C003  F060         	movff	?___ftneg+2,printf@fval+2
  1480                           
  1481                           ;doprnt.c: 833: flag |= 0x03;
  1482  00113E  0E03               	movlw	3
  1483  001140  1250               	iorwf	printf@flag,f,c
  1484  001142  D000               	goto	l2550
  1485  001144                     l2550:
  1486                           
  1487                           ;doprnt.c: 834: }
  1488                           ;doprnt.c: 835: exp = 0;
  1489  001144  0E00               	movlw	0
  1490  001146  6E59               	movwf	printf@exp+1,c
  1491  001148  0E00               	movlw	0
  1492  00114A  6E58               	movwf	printf@exp,c
  1493                           
  1494                           ;doprnt.c: 836: if( fval!=0) {
  1495  00114C  505E               	movf	printf@fval,w,c
  1496  00114E  105F               	iorwf	printf@fval+1,w,c
  1497  001150  1060               	iorwf	printf@fval+2,w,c
  1498  001152  B4D8               	btfsc	status,2,c
  1499  001154  D085               	goto	l2578
  1500                           
  1501                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1502  001156  0E82               	movlw	130
  1503  001158  6E45               	movwf	??_printf& (0+255),c
  1504  00115A  0EFF               	movlw	255
  1505  00115C  6E46               	movwf	(??_printf+1)& (0+255),c
  1506  00115E  C05E  F047         	movff	printf@fval,??_printf+2
  1507  001162  C05F  F048         	movff	printf@fval+1,??_printf+3
  1508  001166  C060  F049         	movff	printf@fval+2,??_printf+4
  1509  00116A  C061  F04A         	movff	printf@fval+3,??_printf+5
  1510  00116E  0E10               	movlw	16
  1511  001170  D005               	goto	u2650
  1512  001172                     u2655:
  1513  001172  90D8               	bcf	status,0,c
  1514  001174  324A               	rrcf	??_printf+5,f,c
  1515  001176  3249               	rrcf	??_printf+4,f,c
  1516  001178  3248               	rrcf	??_printf+3,f,c
  1517  00117A  3247               	rrcf	??_printf+2,f,c
  1518  00117C                     u2650:
  1519  00117C  2EE8               	decfsz	wreg,f,c
  1520  00117E  D7F9               	goto	u2655
  1521  001180  5047               	movf	??_printf+2,w,c
  1522  001182  2445               	addwf	??_printf,w,c
  1523  001184  6E58               	movwf	printf@exp,c
  1524  001186  0E00               	movlw	0
  1525  001188  2046               	addwfc	??_printf+1,w,c
  1526  00118A  6E59               	movwf	printf@exp+1,c
  1527                           
  1528                           ;doprnt.c: 838: exp--;
  1529  00118C  0658               	decf	printf@exp,f,c
  1530  00118E  A0D8               	btfss	status,0,c
  1531  001190  0659               	decf	printf@exp+1,f,c
  1532                           
  1533                           ;doprnt.c: 839: exp *= 3;
  1534  001192  C058  F00F         	movff	printf@exp,___wmul@multiplier
  1535  001196  C059  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1536  00119A  0E00               	movlw	0
  1537  00119C  6E12               	movwf	___wmul@multiplicand+1,c
  1538  00119E  0E03               	movlw	3
  1539  0011A0  6E11               	movwf	___wmul@multiplicand,c
  1540  0011A2  EC67  F016         	call	___wmul	;wreg free
  1541  0011A6  C00F  F058         	movff	?___wmul,printf@exp
  1542  0011AA  C010  F059         	movff	?___wmul+1,printf@exp+1
  1543                           
  1544                           ;doprnt.c: 840: exp /= 10;
  1545  0011AE  C058  F007         	movff	printf@exp,___awdiv@dividend
  1546  0011B2  C059  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1547  0011B6  0E00               	movlw	0
  1548  0011B8  6E0A               	movwf	___awdiv@divisor+1,c
  1549  0011BA  0E0A               	movlw	10
  1550  0011BC  6E09               	movwf	___awdiv@divisor,c
  1551  0011BE  EC55  F014         	call	___awdiv	;wreg free
  1552  0011C2  C007  F058         	movff	?___awdiv,printf@exp
  1553  0011C6  C008  F059         	movff	?___awdiv+1,printf@exp+1
  1554                           
  1555                           ;doprnt.c: 841: if(exp < 0)
  1556  0011CA  AE59               	btfss	printf@exp+1,7,c
  1557  0011CC  D004               	goto	l2566
  1558                           
  1559                           ;doprnt.c: 842: exp--;
  1560  0011CE  0658               	decf	printf@exp,f,c
  1561  0011D0  A0D8               	btfss	status,0,c
  1562  0011D2  0659               	decf	printf@exp+1,f,c
  1563  0011D4  D000               	goto	l2566
  1564  0011D6                     l2566:
  1565                           
  1566                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1567  0011D6  5058               	movf	printf@exp,w,c
  1568  0011D8  0800               	sublw	0
  1569  0011DA  ECF3  F00B         	call	_scale
  1570  0011DE  C024  F05A         	movff	?_scale,printf@tmpval
  1571  0011E2  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1572  0011E6  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1573                           
  1574                           ;doprnt.c: 847: tmpval.integ *= fval;
  1575  0011EA  C05A  F015         	movff	printf@tmpval,___ftmul@f1
  1576  0011EE  C05B  F016         	movff	printf@tmpval+1,___ftmul@f1+1
  1577  0011F2  C05C  F017         	movff	printf@tmpval+2,___ftmul@f1+2
  1578  0011F6  C05E  F018         	movff	printf@fval,___ftmul@f2
  1579  0011FA  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1580  0011FE  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1581  001202  EC92  F012         	call	___ftmul	;wreg free
  1582  001206  C015  F05A         	movff	?___ftmul,printf@tmpval
  1583  00120A  C016  F05B         	movff	?___ftmul+1,printf@tmpval+1
  1584  00120E  C017  F05C         	movff	?___ftmul+2,printf@tmpval+2
  1585                           
  1586                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1587  001212  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1588  001216  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1589  00121A  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1590  00121E  0E00               	movlw	0
  1591  001220  6E04               	movwf	___ftge@ff2,c
  1592  001222  0E80               	movlw	128
  1593  001224  6E05               	movwf	___ftge@ff2+1,c
  1594  001226  0E3F               	movlw	63
  1595  001228  6E06               	movwf	___ftge@ff2+2,c
  1596  00122A  ECA0  F014         	call	___ftge	;wreg free
  1597  00122E  B0D8               	btfsc	status,0,c
  1598  001230  D004               	goto	l2574
  1599                           
  1600                           ;doprnt.c: 849: exp--;
  1601  001232  0658               	decf	printf@exp,f,c
  1602  001234  A0D8               	btfss	status,0,c
  1603  001236  0659               	decf	printf@exp+1,f,c
  1604  001238  D013               	goto	l2578
  1605  00123A                     l2574:
  1606                           
  1607                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1608  00123A  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1609  00123E  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1610  001242  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1611  001246  0E00               	movlw	0
  1612  001248  6E04               	movwf	___ftge@ff2,c
  1613  00124A  0E20               	movlw	32
  1614  00124C  6E05               	movwf	___ftge@ff2+1,c
  1615  00124E  0E41               	movlw	65
  1616  001250  6E06               	movwf	___ftge@ff2+2,c
  1617  001252  ECA0  F014         	call	___ftge	;wreg free
  1618  001256  A0D8               	btfss	status,0,c
  1619  001258  D003               	goto	l2578
  1620                           
  1621                           ;doprnt.c: 851: exp++;
  1622  00125A  4A58               	infsnz	printf@exp,f,c
  1623  00125C  2A59               	incf	printf@exp+1,f,c
  1624  00125E  D000               	goto	l2578
  1625  001260                     l2578:
  1626                           
  1627                           ;doprnt.c: 852: }
  1628                           ;doprnt.c: 1112: if(prec <= 12)
  1629  001260  BE53               	btfsc	printf@prec+1,7,c
  1630  001262  D006               	goto	l2580
  1631  001264  5053               	movf	printf@prec+1,w,c
  1632  001266  E11C               	bnz	l2582
  1633  001268  0E0D               	movlw	13
  1634  00126A  5C52               	subwf	printf@prec,w,c
  1635  00126C  B0D8               	btfsc	status,0,c
  1636  00126E  D018               	goto	l2582
  1637  001270                     l2580:
  1638                           
  1639                           ;doprnt.c: 1113: fval += fround(prec);
  1640  001270  C05E  F02E         	movff	printf@fval,___ftadd@f1
  1641  001274  C05F  F02F         	movff	printf@fval+1,___ftadd@f1+1
  1642  001278  C060  F030         	movff	printf@fval+2,___ftadd@f1+2
  1643  00127C  5052               	movf	printf@prec,w,c
  1644  00127E  EC81  F00F         	call	_fround
  1645  001282  C024  F031         	movff	?_fround,___ftadd@f2
  1646  001286  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  1647  00128A  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  1648  00128E  ECA3  F010         	call	___ftadd	;wreg free
  1649  001292  C02E  F05E         	movff	?___ftadd,printf@fval
  1650  001296  C02F  F05F         	movff	?___ftadd+1,printf@fval+1
  1651  00129A  C030  F060         	movff	?___ftadd+2,printf@fval+2
  1652  00129E  D000               	goto	l2582
  1653  0012A0                     l2582:
  1654                           
  1655                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1656  0012A0  BE59               	btfsc	printf@exp+1,7,c
  1657  0012A2  D006               	goto	l2584
  1658  0012A4  5059               	movf	printf@exp+1,w,c
  1659  0012A6  E120               	bnz	l2590
  1660  0012A8  0E0A               	movlw	10
  1661  0012AA  5C58               	subwf	printf@exp,w,c
  1662  0012AC  B0D8               	btfsc	status,0,c
  1663  0012AE  D01C               	goto	l2590
  1664  0012B0                     l2584:
  1665  0012B0  505E               	movf	printf@fval,w,c
  1666  0012B2  105F               	iorwf	printf@fval+1,w,c
  1667  0012B4  1060               	iorwf	printf@fval+2,w,c
  1668  0012B6  B4D8               	btfsc	status,2,c
  1669  0012B8  D06D               	goto	l2604
  1670  0012BA  C05E  F02B         	movff	printf@fval,___fttol@f1
  1671  0012BE  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1672  0012C2  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1673  0012C6  EC0E  F013         	call	___fttol	;wreg free
  1674  0012CA  502B               	movf	?___fttol,w,c
  1675  0012CC  102C               	iorwf	?___fttol+1,w,c
  1676  0012CE  102D               	iorwf	?___fttol+2,w,c
  1677  0012D0  102E               	iorwf	?___fttol+3,w,c
  1678  0012D2  B4D8               	btfsc	status,2,c
  1679  0012D4  BE59               	btfsc	printf@exp+1,7,c
  1680  0012D6  D05E               	goto	l2604
  1681  0012D8  5059               	movf	printf@exp+1,w,c
  1682  0012DA  E106               	bnz	l2590
  1683  0012DC  0E02               	movlw	2
  1684  0012DE  5C58               	subwf	printf@exp,w,c
  1685  0012E0  B0D8               	btfsc	status,0,c
  1686  0012E2  D002               	goto	l2590
  1687  0012E4  D057               	goto	l2604
  1688  0012E6  D000               	goto	l2590
  1689  0012E8                     l2590:
  1690                           
  1691                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1692  0012E8  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1693  0012EC  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1694  0012F0  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1695  0012F4  0E70               	movlw	112
  1696  0012F6  6E04               	movwf	___ftge@ff2,c
  1697  0012F8  0E89               	movlw	137
  1698  0012FA  6E05               	movwf	___ftge@ff2+1,c
  1699  0012FC  0E40               	movlw	64
  1700  0012FE  6E06               	movwf	___ftge@ff2+2,c
  1701  001300  ECA0  F014         	call	___ftge	;wreg free
  1702  001304  B0D8               	btfsc	status,0,c
  1703  001306  D002               	goto	l2594
  1704                           
  1705                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1706  001308  0EF7               	movlw	247
  1707  00130A  D001               	goto	L1
  1708  00130C                     l2594:
  1709                           
  1710                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1711  00130C  0EF8               	movlw	248
  1712  00130E                     L1:
  1713  00130E  2658               	addwf	printf@exp,f,c
  1714  001310  0EFF               	movlw	255
  1715  001312  2259               	addwfc	printf@exp+1,f,c
  1716  001314  D000               	goto	l2596
  1717  001316                     l2596:
  1718                           
  1719                           ;doprnt.c: 1124: }
  1720                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1721  001316  5058               	movf	printf@exp,w,c
  1722  001318  ECF3  F00B         	call	_scale
  1723  00131C  C024  F05A         	movff	?_scale,printf@tmpval
  1724  001320  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1725  001324  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1726                           
  1727                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1728  001328  D017               	goto	l2600
  1729  00132A  C05E  F001         	movff	printf@fval,__div_to_l_@f1
  1730  00132E  C05F  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1731  001332  C060  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1732  001336  C05A  F004         	movff	printf@tmpval,__div_to_l_@f2
  1733  00133A  C05B  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1734  00133E  C05C  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1735  001342  EC0D  F012         	call	__div_to_l_	;wreg free
  1736  001346  C001  F054         	movff	?__div_to_l_,printf@val
  1737  00134A  C002  F055         	movff	?__div_to_l_+1,printf@val+1
  1738  00134E  C003  F056         	movff	?__div_to_l_+2,printf@val+2
  1739  001352  C004  F057         	movff	?__div_to_l_+3,printf@val+3
  1740  001356  D017               	goto	l2602
  1741  001358                     l2600:
  1742  001358  C05E  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1743  00135C  C05F  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1744  001360  C060  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1745  001364  C05A  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1746  001368  C05B  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1747  00136C  C05C  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1748  001370  EC85  F011         	call	__tdiv_to_l_	;wreg free
  1749  001374  C001  F054         	movff	?__tdiv_to_l_,printf@val
  1750  001378  C002  F055         	movff	?__tdiv_to_l_+1,printf@val+1
  1751  00137C  C003  F056         	movff	?__tdiv_to_l_+2,printf@val+2
  1752  001380  C004  F057         	movff	?__tdiv_to_l_+3,printf@val+3
  1753  001384  D000               	goto	l2602
  1754  001386                     l2602:
  1755                           
  1756                           ;doprnt.c: 1129: fval = 0.0;
  1757  001386  0E00               	movlw	0
  1758  001388  6E5E               	movwf	printf@fval,c
  1759  00138A  0E00               	movlw	0
  1760  00138C  6E5F               	movwf	printf@fval+1,c
  1761  00138E  0E00               	movlw	0
  1762  001390  6E60               	movwf	printf@fval+2,c
  1763                           
  1764                           ;doprnt.c: 1130: } else {
  1765  001392  D033               	goto	l2608
  1766  001394                     l2604:
  1767                           
  1768                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1769  001394  C05E  F02B         	movff	printf@fval,___fttol@f1
  1770  001398  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1771  00139C  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1772  0013A0  EC0E  F013         	call	___fttol	;wreg free
  1773  0013A4  C02B  F054         	movff	?___fttol,printf@val
  1774  0013A8  C02C  F055         	movff	?___fttol+1,printf@val+1
  1775  0013AC  C02D  F056         	movff	?___fttol+2,printf@val+2
  1776  0013B0  C02E  F057         	movff	?___fttol+3,printf@val+3
  1777                           
  1778                           ;doprnt.c: 1132: fval -= (double)val;
  1779  0013B4  C05E  F03A         	movff	printf@fval,___ftsub@f1
  1780  0013B8  C05F  F03B         	movff	printf@fval+1,___ftsub@f1+1
  1781  0013BC  C060  F03C         	movff	printf@fval+2,___ftsub@f1+2
  1782  0013C0  C054  F009         	movff	printf@val,___lltoft@c
  1783  0013C4  C055  F00A         	movff	printf@val+1,___lltoft@c+1
  1784  0013C8  C056  F00B         	movff	printf@val+2,___lltoft@c+2
  1785  0013CC  C057  F00C         	movff	printf@val+3,___lltoft@c+3
  1786  0013D0  ECE2  F015         	call	___lltoft	;wreg free
  1787  0013D4  C009  F03D         	movff	?___lltoft,___ftsub@f2
  1788  0013D8  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  1789  0013DC  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  1790  0013E0  EC12  F016         	call	___ftsub	;wreg free
  1791  0013E4  C03A  F05E         	movff	?___ftsub,printf@fval
  1792  0013E8  C03B  F05F         	movff	?___ftsub+1,printf@fval+1
  1793  0013EC  C03C  F060         	movff	?___ftsub+2,printf@fval+2
  1794                           
  1795                           ;doprnt.c: 1133: exp = 0;
  1796  0013F0  0E00               	movlw	0
  1797  0013F2  6E59               	movwf	printf@exp+1,c
  1798  0013F4  0E00               	movlw	0
  1799  0013F6  6E58               	movwf	printf@exp,c
  1800  0013F8  D000               	goto	l2608
  1801  0013FA                     l2608:
  1802                           
  1803                           ;doprnt.c: 1134: }
  1804                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1805  0013FA  0E01               	movlw	1
  1806  0013FC  6E61               	movwf	printf@c,c
  1807  0013FE                     l2610:
  1808  0013FE  0E0A               	movlw	10
  1809  001400  1861               	xorwf	printf@c,w,c
  1810  001402  B4D8               	btfsc	status,2,c
  1811  001404  D01C               	goto	l2622
  1812  001406  D001               	goto	l2614
  1813  001408  D01A               	goto	l2622
  1814  00140A                     l2614:
  1815                           
  1816                           ;doprnt.c: 1137: if(val < dpowers[c])
  1817  00140A  5061               	movf	printf@c,w,c
  1818  00140C  0D04               	mullw	4
  1819  00140E  0E01               	movlw	low _dpowers
  1820  001410  24F3               	addwf	prodl,w,c
  1821  001412  6EF6               	movwf	tblptrl,c
  1822  001414  0E10               	movlw	high _dpowers
  1823  001416  20F4               	addwfc	prodh,w,c
  1824  001418  6EF7               	movwf	tblptrh,c
  1825  00141A                     	if	0	;There are less than 3 active tblptr bytes
  1826  00141A                     	endif
  1827  00141A  0009               	tblrd		*+
  1828  00141C  50F5               	movf	tablat,w,c
  1829  00141E  5C54               	subwf	printf@val,w,c
  1830  001420  0009               	tblrd		*+
  1831  001422  50F5               	movf	tablat,w,c
  1832  001424  5855               	subwfb	printf@val+1,w,c
  1833  001426  0009               	tblrd		*+
  1834  001428  50F5               	movf	tablat,w,c
  1835  00142A  5856               	subwfb	printf@val+2,w,c
  1836  00142C  0009               	tblrd		*+
  1837  00142E  50F5               	movf	tablat,w,c
  1838  001430  5857               	subwfb	printf@val+3,w,c
  1839  001432  A0D8               	btfss	status,0,c
  1840  001434  D004               	goto	l2622
  1841  001436  D001               	goto	l2618
  1842                           
  1843                           ;doprnt.c: 1138: break;
  1844  001438  D002               	goto	l2622
  1845  00143A                     l2618:
  1846  00143A  2A61               	incf	printf@c,f,c
  1847  00143C  D7E0               	goto	l2610
  1848  00143E                     l2622:
  1849                           
  1850                           ;doprnt.c: 1175: {
  1851                           ;doprnt.c: 1188: if(flag & 0x03)
  1852  00143E  0E03               	movlw	3
  1853  001440  1450               	andwf	printf@flag,w,c
  1854  001442  6E45               	movwf	??_printf& (0+255),c
  1855  001444  0E00               	movlw	0
  1856  001446  1451               	andwf	printf@flag+1,w,c
  1857  001448  6E46               	movwf	(??_printf+1)& (0+255),c
  1858  00144A  5045               	movf	??_printf,w,c
  1859  00144C  1046               	iorwf	??_printf+1,w,c
  1860  00144E  B4D8               	btfsc	status,2,c
  1861  001450  D049               	goto	l2632
  1862                           
  1863                           ;doprnt.c: 1190: (putch('-') );
  1864  001452  0E2D               	movlw	45
  1865  001454  ECC7  F016         	call	_putch
  1866                           
  1867                           ;doprnt.c: 1195: }
  1868                           ;doprnt.c: 1196: while(c--) {
  1869  001458  D045               	goto	l2632
  1870  00145A                     l2626:
  1871                           
  1872                           ;doprnt.c: 1200: {
  1873                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1874  00145A  C054  F001         	movff	printf@val,___lldiv@dividend
  1875  00145E  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1876  001462  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1877  001466  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1878  00146A  5061               	movf	printf@c,w,c
  1879  00146C  0D04               	mullw	4
  1880  00146E  0E01               	movlw	low _dpowers
  1881  001470  24F3               	addwf	prodl,w,c
  1882  001472  6EF6               	movwf	tblptrl,c
  1883  001474  0E10               	movlw	high _dpowers
  1884  001476  20F4               	addwfc	prodh,w,c
  1885  001478  6EF7               	movwf	tblptrh,c
  1886  00147A                     	if	0	;There are less than 3 active tblptr bytes
  1887  00147A                     	endif
  1888  00147A  0009               	tblrd		*+
  1889  00147C  CFF5 F005          	movff	tablat,___lldiv@divisor
  1890  001480  0009               	tblrd		*+
  1891  001482  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1892  001486  0009               	tblrd		*+
  1893  001488  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1894  00148C  000A               	tblrd		*-
  1895  00148E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1896  001492  ECEB  F014         	call	___lldiv	;wreg free
  1897  001496  C001  F05A         	movff	?___lldiv,printf@tmpval
  1898  00149A  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1899  00149E  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1900  0014A2  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1901                           
  1902                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1903  0014A6  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  1904  0014AA  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1905  0014AE  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1906  0014B2  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1907  0014B6  0E0A               	movlw	10
  1908  0014B8  6E12               	movwf	___llmod@divisor,c
  1909  0014BA  0E00               	movlw	0
  1910  0014BC  6E13               	movwf	___llmod@divisor+1,c
  1911  0014BE  0E00               	movlw	0
  1912  0014C0  6E14               	movwf	___llmod@divisor+2,c
  1913  0014C2  0E00               	movlw	0
  1914  0014C4  6E15               	movwf	___llmod@divisor+3,c
  1915  0014C6  EC72  F015         	call	___llmod	;wreg free
  1916  0014CA  C00E  F05A         	movff	?___llmod,printf@tmpval
  1917  0014CE  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  1918  0014D2  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  1919  0014D6  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  1920                           
  1921                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1922  0014DA  505A               	movf	printf@tmpval,w,c
  1923  0014DC  0F30               	addlw	48
  1924  0014DE  ECC7  F016         	call	_putch
  1925  0014E2  D000               	goto	l2632
  1926  0014E4                     l2632:
  1927  0014E4  0661               	decf	printf@c,f,c
  1928  0014E6  2861               	incf	printf@c,w,c
  1929  0014E8  B4D8               	btfsc	status,2,c
  1930  0014EA  D009               	goto	l2638
  1931  0014EC  D7B6               	goto	l2626
  1932                           
  1933                           ;doprnt.c: 1204: }
  1934                           ;doprnt.c: 1206: }
  1935                           ;doprnt.c: 1207: while(exp > 0) {
  1936  0014EE  D007               	goto	l2638
  1937  0014F0                     l2634:
  1938                           
  1939                           ;doprnt.c: 1208: (putch('0') );
  1940  0014F0  0E30               	movlw	48
  1941  0014F2  ECC7  F016         	call	_putch
  1942                           
  1943                           ;doprnt.c: 1209: exp--;
  1944  0014F6  0658               	decf	printf@exp,f,c
  1945  0014F8  A0D8               	btfss	status,0,c
  1946  0014FA  0659               	decf	printf@exp+1,f,c
  1947  0014FC  D000               	goto	l2638
  1948  0014FE                     l2638:
  1949  0014FE  BE59               	btfsc	printf@exp+1,7,c
  1950  001500  D005               	goto	l2640
  1951  001502  5059               	movf	printf@exp+1,w,c
  1952  001504  E1F5               	bnz	l2634
  1953  001506  0458               	decf	printf@exp,w,c
  1954  001508  B0D8               	btfsc	status,0,c
  1955  00150A  D7F2               	goto	l2634
  1956  00150C                     l2640:
  1957                           
  1958                           ;doprnt.c: 1210: }
  1959                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1960  00150C  BE53               	btfsc	printf@prec+1,7,c
  1961  00150E  D009               	goto	l235
  1962  001510  5053               	movf	printf@prec+1,w,c
  1963  001512  E104               	bnz	u2810
  1964  001514  0E09               	movlw	9
  1965  001516  5C52               	subwf	printf@prec,w,c
  1966  001518  A0D8               	btfss	status,0,c
  1967  00151A  D003               	goto	l235
  1968  00151C                     u2810:
  1969                           
  1970                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1971  00151C  0E08               	movlw	8
  1972  00151E  6E61               	movwf	printf@c,c
  1973  001520  D003               	goto	l2644
  1974  001522                     l235:
  1975                           
  1976                           ;doprnt.c: 1213: else
  1977                           ;doprnt.c: 1214: c = prec;
  1978  001522  C052  F061         	movff	printf@prec,printf@c
  1979  001526  D000               	goto	l2644
  1980  001528                     l2644:
  1981                           
  1982                           ;doprnt.c: 1215: prec -= c;
  1983  001528  5061               	movf	printf@c,w,c
  1984  00152A  5E52               	subwf	printf@prec,f,c
  1985  00152C  0E00               	movlw	0
  1986  00152E  BE61               	btfsc	printf@c,7,c
  1987  001530  0EFF               	movlw	255
  1988  001532  5A53               	subwfb	printf@prec+1,f,c
  1989                           
  1990                           ;doprnt.c: 1219: if(c)
  1991  001534  5061               	movf	printf@c,w,c
  1992  001536  B4D8               	btfsc	status,2,c
  1993  001538  D004               	goto	l2650
  1994                           
  1995                           ;doprnt.c: 1221: (putch('.') );
  1996  00153A  0E2E               	movlw	46
  1997  00153C  ECC7  F016         	call	_putch
  1998  001540  D000               	goto	l2650
  1999  001542                     l2650:
  2000                           
  2001                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2002  001542  5061               	movf	printf@c,w,c
  2003  001544  ECF3  F00B         	call	_scale
  2004  001548  C024  F04B         	movff	?_scale,_printf$1247
  2005  00154C  C025  F04C         	movff	?_scale+1,_printf$1247+1
  2006  001550  C026  F04D         	movff	?_scale+2,_printf$1247+2
  2007                           
  2008                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2009  001554  C05E  F018         	movff	printf@fval,___ftmul@f2
  2010  001558  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  2011  00155C  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  2012  001560  C04B  F015         	movff	_printf$1247,___ftmul@f1
  2013  001564  C04C  F016         	movff	_printf$1247+1,___ftmul@f1+1
  2014  001568  C04D  F017         	movff	_printf$1247+2,___ftmul@f1+2
  2015  00156C  EC92  F012         	call	___ftmul	;wreg free
  2016  001570  C015  F02B         	movff	?___ftmul,___fttol@f1
  2017  001574  C016  F02C         	movff	?___ftmul+1,___fttol@f1+1
  2018  001578  C017  F02D         	movff	?___ftmul+2,___fttol@f1+2
  2019  00157C  EC0E  F013         	call	___fttol	;wreg free
  2020  001580  C02B  F054         	movff	?___fttol,printf@val
  2021  001584  C02C  F055         	movff	?___fttol+1,printf@val+1
  2022  001588  C02D  F056         	movff	?___fttol+2,printf@val+2
  2023  00158C  C02E  F057         	movff	?___fttol+3,printf@val+3
  2024                           
  2025                           ;doprnt.c: 1228: while(c--) {
  2026  001590  D06B               	goto	l2660
  2027  001592                     l2654:
  2028                           
  2029                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2030  001592  C054  F001         	movff	printf@val,___lldiv@dividend
  2031  001596  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  2032  00159A  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  2033  00159E  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  2034  0015A2  5061               	movf	printf@c,w,c
  2035  0015A4  0D04               	mullw	4
  2036  0015A6  0E01               	movlw	low _dpowers
  2037  0015A8  24F3               	addwf	prodl,w,c
  2038  0015AA  6EF6               	movwf	tblptrl,c
  2039  0015AC  0E10               	movlw	high _dpowers
  2040  0015AE  20F4               	addwfc	prodh,w,c
  2041  0015B0  6EF7               	movwf	tblptrh,c
  2042  0015B2                     	if	0	;There are less than 3 active tblptr bytes
  2043  0015B2                     	endif
  2044  0015B2  0009               	tblrd		*+
  2045  0015B4  CFF5 F005          	movff	tablat,___lldiv@divisor
  2046  0015B8  0009               	tblrd		*+
  2047  0015BA  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2048  0015BE  0009               	tblrd		*+
  2049  0015C0  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2050  0015C4  000A               	tblrd		*-
  2051  0015C6  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2052  0015CA  ECEB  F014         	call	___lldiv	;wreg free
  2053  0015CE  C001  F05A         	movff	?___lldiv,printf@tmpval
  2054  0015D2  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  2055  0015D6  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  2056  0015DA  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  2057                           
  2058                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2059  0015DE  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  2060  0015E2  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  2061  0015E6  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  2062  0015EA  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  2063  0015EE  0E0A               	movlw	10
  2064  0015F0  6E12               	movwf	___llmod@divisor,c
  2065  0015F2  0E00               	movlw	0
  2066  0015F4  6E13               	movwf	___llmod@divisor+1,c
  2067  0015F6  0E00               	movlw	0
  2068  0015F8  6E14               	movwf	___llmod@divisor+2,c
  2069  0015FA  0E00               	movlw	0
  2070  0015FC  6E15               	movwf	___llmod@divisor+3,c
  2071  0015FE  EC72  F015         	call	___llmod	;wreg free
  2072  001602  C00E  F05A         	movff	?___llmod,printf@tmpval
  2073  001606  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  2074  00160A  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  2075  00160E  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  2076                           
  2077                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2078  001612  505A               	movf	printf@tmpval,w,c
  2079  001614  0F30               	addlw	48
  2080  001616  ECC7  F016         	call	_putch
  2081                           
  2082                           ;doprnt.c: 1232: val %= dpowers[c];
  2083  00161A  C054  F00E         	movff	printf@val,___llmod@dividend
  2084  00161E  C055  F00F         	movff	printf@val+1,___llmod@dividend+1
  2085  001622  C056  F010         	movff	printf@val+2,___llmod@dividend+2
  2086  001626  C057  F011         	movff	printf@val+3,___llmod@dividend+3
  2087  00162A  5061               	movf	printf@c,w,c
  2088  00162C  0D04               	mullw	4
  2089  00162E  0E01               	movlw	low _dpowers
  2090  001630  24F3               	addwf	prodl,w,c
  2091  001632  6EF6               	movwf	tblptrl,c
  2092  001634  0E10               	movlw	high _dpowers
  2093  001636  20F4               	addwfc	prodh,w,c
  2094  001638  6EF7               	movwf	tblptrh,c
  2095  00163A                     	if	0	;There are less than 3 active tblptr bytes
  2096  00163A                     	endif
  2097  00163A  0009               	tblrd		*+
  2098  00163C  CFF5 F012          	movff	tablat,___llmod@divisor
  2099  001640  0009               	tblrd		*+
  2100  001642  CFF5 F013          	movff	tablat,___llmod@divisor+1
  2101  001646  0009               	tblrd		*+
  2102  001648  CFF5 F014          	movff	tablat,___llmod@divisor+2
  2103  00164C  000A               	tblrd		*-
  2104  00164E  CFF5 F015          	movff	tablat,___llmod@divisor+3
  2105  001652  EC72  F015         	call	___llmod	;wreg free
  2106  001656  C00E  F054         	movff	?___llmod,printf@val
  2107  00165A  C00F  F055         	movff	?___llmod+1,printf@val+1
  2108  00165E  C010  F056         	movff	?___llmod+2,printf@val+2
  2109  001662  C011  F057         	movff	?___llmod+3,printf@val+3
  2110  001666  D000               	goto	l2660
  2111  001668                     l2660:
  2112  001668  0661               	decf	printf@c,f,c
  2113  00166A  2861               	incf	printf@c,w,c
  2114  00166C  B4D8               	btfsc	status,2,c
  2115  00166E  D009               	goto	l2666
  2116  001670  D790               	goto	l2654
  2117                           
  2118                           ;doprnt.c: 1233: }
  2119                           ;doprnt.c: 1235: while(prec) {
  2120  001672  D007               	goto	l2666
  2121  001674                     l2662:
  2122                           
  2123                           ;doprnt.c: 1236: (putch('0') );
  2124  001674  0E30               	movlw	48
  2125  001676  ECC7  F016         	call	_putch
  2126                           
  2127                           ;doprnt.c: 1237: prec--;
  2128  00167A  0652               	decf	printf@prec,f,c
  2129  00167C  A0D8               	btfss	status,0,c
  2130  00167E  0653               	decf	printf@prec+1,f,c
  2131  001680  D000               	goto	l2666
  2132  001682                     l2666:
  2133  001682  5052               	movf	printf@prec,w,c
  2134  001684  1053               	iorwf	printf@prec+1,w,c
  2135  001686  B4D8               	btfsc	status,2,c
  2136  001688  D09F               	goto	l2704
  2137  00168A  D7F4               	goto	l2662
  2138                           
  2139                           ;doprnt.c: 1238: }
  2140                           ;doprnt.c: 1245: continue;
  2141  00168C  D09D               	goto	l2704
  2142  00168E                     l2668:
  2143                           
  2144                           ;doprnt.c: 1246: }
  2145                           ;doprnt.c: 1253: {
  2146                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  2147  00168E  C04E  FFD9         	movff	printf@ap,fsr2l
  2148  001692  C04F  FFDA         	movff	printf@ap+1,fsr2h
  2149  001696  CFDE F054          	movff	postinc2,printf@val
  2150  00169A  CFDD F055          	movff	postdec2,printf@val+1
  2151  00169E  0E00               	movlw	0
  2152  0016A0  BE55               	btfsc	printf@val+1,7,c
  2153  0016A2  0EFF               	movlw	-1
  2154  0016A4  6E56               	movwf	printf@val+2,c
  2155  0016A6  6E57               	movwf	printf@val+3,c
  2156  0016A8  0E02               	movlw	2
  2157  0016AA  264E               	addwf	printf@ap,f,c
  2158  0016AC  0E00               	movlw	0
  2159  0016AE  224F               	addwfc	printf@ap+1,f,c
  2160                           
  2161                           ;doprnt.c: 1261: if((long)val < 0) {
  2162  0016B0  AE57               	btfss	printf@val+3,7,c
  2163  0016B2  D00B               	goto	l2678
  2164                           
  2165                           ;doprnt.c: 1262: flag |= 0x03;
  2166  0016B4  0E03               	movlw	3
  2167  0016B6  1250               	iorwf	printf@flag,f,c
  2168                           
  2169                           ;doprnt.c: 1263: val = -val;
  2170  0016B8  1E57               	comf	printf@val+3,f,c
  2171  0016BA  1E56               	comf	printf@val+2,f,c
  2172  0016BC  1E55               	comf	printf@val+1,f,c
  2173  0016BE  6C54               	negf	printf@val,c
  2174  0016C0  0E00               	movlw	0
  2175  0016C2  2255               	addwfc	printf@val+1,f,c
  2176  0016C4  2256               	addwfc	printf@val+2,f,c
  2177  0016C6  2257               	addwfc	printf@val+3,f,c
  2178  0016C8  D000               	goto	l2678
  2179  0016CA                     l2678:
  2180                           
  2181                           ;doprnt.c: 1264: }
  2182                           ;doprnt.c: 1266: }
  2183                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2184  0016CA  0E01               	movlw	1
  2185  0016CC  6E61               	movwf	printf@c,c
  2186  0016CE                     l2680:
  2187  0016CE  0E0A               	movlw	10
  2188  0016D0  1861               	xorwf	printf@c,w,c
  2189  0016D2  B4D8               	btfsc	status,2,c
  2190  0016D4  D01C               	goto	l2692
  2191  0016D6  D001               	goto	l2684
  2192  0016D8  D01A               	goto	l2692
  2193  0016DA                     l2684:
  2194                           
  2195                           ;doprnt.c: 1306: if(val < dpowers[c])
  2196  0016DA  5061               	movf	printf@c,w,c
  2197  0016DC  0D04               	mullw	4
  2198  0016DE  0E01               	movlw	low _dpowers
  2199  0016E0  24F3               	addwf	prodl,w,c
  2200  0016E2  6EF6               	movwf	tblptrl,c
  2201  0016E4  0E10               	movlw	high _dpowers
  2202  0016E6  20F4               	addwfc	prodh,w,c
  2203  0016E8  6EF7               	movwf	tblptrh,c
  2204  0016EA                     	if	0	;There are less than 3 active tblptr bytes
  2205  0016EA                     	endif
  2206  0016EA  0009               	tblrd		*+
  2207  0016EC  50F5               	movf	tablat,w,c
  2208  0016EE  5C54               	subwf	printf@val,w,c
  2209  0016F0  0009               	tblrd		*+
  2210  0016F2  50F5               	movf	tablat,w,c
  2211  0016F4  5855               	subwfb	printf@val+1,w,c
  2212  0016F6  0009               	tblrd		*+
  2213  0016F8  50F5               	movf	tablat,w,c
  2214  0016FA  5856               	subwfb	printf@val+2,w,c
  2215  0016FC  0009               	tblrd		*+
  2216  0016FE  50F5               	movf	tablat,w,c
  2217  001700  5857               	subwfb	printf@val+3,w,c
  2218  001702  A0D8               	btfss	status,0,c
  2219  001704  D004               	goto	l2692
  2220  001706  D001               	goto	l2688
  2221                           
  2222                           ;doprnt.c: 1307: break;
  2223  001708  D002               	goto	l2692
  2224  00170A                     l2688:
  2225  00170A  2A61               	incf	printf@c,f,c
  2226  00170C  D7E0               	goto	l2680
  2227  00170E                     l2692:
  2228                           
  2229                           ;doprnt.c: 1422: {
  2230                           ;doprnt.c: 1438: if(flag & 0x03)
  2231  00170E  0E03               	movlw	3
  2232  001710  1450               	andwf	printf@flag,w,c
  2233  001712  6E45               	movwf	??_printf& (0+255),c
  2234  001714  0E00               	movlw	0
  2235  001716  1451               	andwf	printf@flag+1,w,c
  2236  001718  6E46               	movwf	(??_printf+1)& (0+255),c
  2237  00171A  5045               	movf	??_printf,w,c
  2238  00171C  1046               	iorwf	??_printf+1,w,c
  2239  00171E  B4D8               	btfsc	status,2,c
  2240  001720  D004               	goto	l2696
  2241                           
  2242                           ;doprnt.c: 1439: (putch('-') );
  2243  001722  0E2D               	movlw	45
  2244  001724  ECC7  F016         	call	_putch
  2245  001728  D000               	goto	l2696
  2246  00172A                     l2696:
  2247                           
  2248                           ;doprnt.c: 1469: }
  2249                           ;doprnt.c: 1472: prec = c;
  2250  00172A  5061               	movf	printf@c,w,c
  2251  00172C  6E52               	movwf	printf@prec,c
  2252  00172E  6A53               	clrf	printf@prec+1,c
  2253  001730  BE52               	btfsc	printf@prec,7,c
  2254  001732  0653               	decf	printf@prec+1,f,c
  2255                           
  2256                           ;doprnt.c: 1474: while(prec--) {
  2257  001734  D03F               	goto	l2702
  2258  001736                     l2698:
  2259                           
  2260                           ;doprnt.c: 1478: {
  2261                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2262  001736  C052  F045         	movff	printf@prec,??_printf
  2263  00173A  C053  F046         	movff	printf@prec+1,??_printf+1
  2264  00173E  90D8               	bcf	status,0,c
  2265  001740  3645               	rlcf	??_printf,f,c
  2266  001742  3646               	rlcf	??_printf+1,f,c
  2267  001744  90D8               	bcf	status,0,c
  2268  001746  3645               	rlcf	??_printf,f,c
  2269  001748  3646               	rlcf	??_printf+1,f,c
  2270  00174A  0E01               	movlw	low _dpowers
  2271  00174C  2445               	addwf	??_printf,w,c
  2272  00174E  6EF6               	movwf	tblptrl,c
  2273  001750  0E10               	movlw	high _dpowers
  2274  001752  2046               	addwfc	??_printf+1,w,c
  2275  001754  6EF7               	movwf	tblptrh,c
  2276  001756                     	if	0	;There are less than 3 active tblptr bytes
  2277  001756                     	endif
  2278  001756  0009               	tblrd		*+
  2279  001758  CFF5 F005          	movff	tablat,___lldiv@divisor
  2280  00175C  0009               	tblrd		*+
  2281  00175E  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2282  001762  0009               	tblrd		*+
  2283  001764  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2284  001768  000A               	tblrd		*-
  2285  00176A  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2286  00176E  C054  F001         	movff	printf@val,___lldiv@dividend
  2287  001772  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  2288  001776  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  2289  00177A  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  2290  00177E  ECEB  F014         	call	___lldiv	;wreg free
  2291  001782  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2292  001786  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2293  00178A  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2294  00178E  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2295  001792  0E0A               	movlw	10
  2296  001794  6E12               	movwf	___llmod@divisor,c
  2297  001796  0E00               	movlw	0
  2298  001798  6E13               	movwf	___llmod@divisor+1,c
  2299  00179A  0E00               	movlw	0
  2300  00179C  6E14               	movwf	___llmod@divisor+2,c
  2301  00179E  0E00               	movlw	0
  2302  0017A0  6E15               	movwf	___llmod@divisor+3,c
  2303  0017A2  EC72  F015         	call	___llmod	;wreg free
  2304  0017A6  500E               	movf	?___llmod,w,c
  2305  0017A8  0F30               	addlw	48
  2306  0017AA  6E61               	movwf	printf@c,c
  2307                           
  2308                           ;doprnt.c: 1523: }
  2309                           ;doprnt.c: 1524: (putch(c) );
  2310  0017AC  5061               	movf	printf@c,w,c
  2311  0017AE  ECC7  F016         	call	_putch
  2312  0017B2  D000               	goto	l2702
  2313  0017B4                     l2702:
  2314  0017B4  0652               	decf	printf@prec,f,c
  2315  0017B6  A0D8               	btfss	status,0,c
  2316  0017B8  0653               	decf	printf@prec+1,f,c
  2317  0017BA  2852               	incf	printf@prec,w,c
  2318  0017BC  E1BC               	bnz	l2698
  2319  0017BE  2853               	incf	printf@prec+1,w,c
  2320  0017C0  B4D8               	btfsc	status,2,c
  2321  0017C2  D002               	goto	l2704
  2322  0017C4  D7B8               	goto	l2698
  2323  0017C6  D000               	goto	l2704
  2324  0017C8                     l2704:
  2325  0017C8  C040  FFF6         	movff	printf@f,tblptrl
  2326  0017CC  C041  FFF7         	movff	printf@f+1,tblptrh
  2327  0017D0  4A40               	infsnz	printf@f,f,c
  2328  0017D2  2A41               	incf	printf@f+1,f,c
  2329  0017D4                     	if	0	;tblptru may be non-zero
  2330  0017D4                     	endif
  2331  0017D4                     	if	0	;tblptru may be non-zero
  2332  0017D4                     	endif
  2333  0017D4  0008               	tblrd		*
  2334  0017D6  CFF5 F061          	movff	tablat,printf@c
  2335  0017DA  5061               	movf	printf@c,w,c
  2336  0017DC  B4D8               	btfsc	status,2,c
  2337  0017DE  D002               	goto	l253
  2338  0017E0  D460               	goto	l2524
  2339  0017E2  D000               	goto	l253
  2340  0017E4                     l253:
  2341  0017E4  0012               	return		;funcret
  2342  0017E6                     __end_of_printf:
  2343                           	opt stack 0
  2344                           tblptru	equ	0xFF8
  2345                           tblptrh	equ	0xFF7
  2346                           tblptrl	equ	0xFF6
  2347                           tablat	equ	0xFF5
  2348                           prodh	equ	0xFF4
  2349                           prodl	equ	0xFF3
  2350                           postinc0	equ	0xFEE
  2351                           wreg	equ	0xFE8
  2352                           postdec1	equ	0xFE5
  2353                           plusw1	equ	0xFE3
  2354                           fsr1l	equ	0xFE1
  2355                           indf2	equ	0xFDF
  2356                           postinc2	equ	0xFDE
  2357                           postdec2	equ	0xFDD
  2358                           plusw2	equ	0xFDB
  2359                           fsr2h	equ	0xFDA
  2360                           fsr2l	equ	0xFD9
  2361                           status	equ	0xFD8
  2362                           
  2363 ;; *************** function _scale *****************
  2364 ;; Defined at:
  2365 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  scl             1    wreg     char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  scl             1   41[COMRAM] char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  3   35[COMRAM] char 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2379 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;Total ram usage:        7 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    2
  2386 ;; This function calls:
  2387 ;;		___awdiv
  2388 ;;		___awmod
  2389 ;;		___ftmul
  2390 ;;		___wmul
  2391 ;; This function is called by:
  2392 ;;		_printf
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text2
  2397  0017E6                     __ptext2:
  2398                           	opt stack 0
  2399  0017E6                     _scale:
  2400                           	opt stack 27
  2401                           
  2402                           ;incstack = 0
  2403                           ;scale@scl stored from wreg
  2404  0017E6  6E2A               	movwf	scale@scl,c
  2405                           
  2406                           ;doprnt.c: 428: if(scl < 0) {
  2407  0017E8  AE2A               	btfss	scale@scl,7,c
  2408  0017EA  D0EF               	goto	l2246
  2409                           
  2410                           ;doprnt.c: 429: scl = -scl;
  2411  0017EC  6C2A               	negf	scale@scl,c
  2412                           
  2413                           ;doprnt.c: 430: if(scl>=110)
  2414  0017EE  502A               	movf	scale@scl,w,c
  2415  0017F0  0A80               	xorlw	128
  2416  0017F2  0F12               	addlw	-238
  2417  0017F4  A0D8               	btfss	status,0,c
  2418  0017F6  D08D               	goto	l2236
  2419                           
  2420                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2421  0017F8  0E00               	movlw	0
  2422  0017FA  6E12               	movwf	___wmul@multiplicand+1,c
  2423  0017FC  0E03               	movlw	3
  2424  0017FE  6E11               	movwf	___wmul@multiplicand,c
  2425  001800  0E00               	movlw	0
  2426  001802  6E0A               	movwf	___awdiv@divisor+1,c
  2427  001804  0E0A               	movlw	10
  2428  001806  6E09               	movwf	___awdiv@divisor,c
  2429  001808  0E00               	movlw	0
  2430  00180A  6E04               	movwf	___awmod@divisor+1,c
  2431  00180C  0E64               	movlw	100
  2432  00180E  6E03               	movwf	___awmod@divisor,c
  2433  001810  502A               	movf	scale@scl,w,c
  2434  001812  6E01               	movwf	___awmod@dividend,c
  2435  001814  6A02               	clrf	___awmod@dividend+1,c
  2436  001816  BE01               	btfsc	___awmod@dividend,7,c
  2437  001818  0602               	decf	___awmod@dividend+1,f,c
  2438  00181A  EC31  F015         	call	___awmod	;wreg free
  2439  00181E  C001  F007         	movff	?___awmod,___awdiv@dividend
  2440  001822  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2441  001826  EC55  F014         	call	___awdiv	;wreg free
  2442  00182A  0E09               	movlw	9
  2443  00182C  2407               	addwf	?___awdiv,w,c
  2444  00182E  6E0F               	movwf	___wmul@multiplier,c
  2445  001830  0E00               	movlw	0
  2446  001832  2008               	addwfc	?___awdiv+1,w,c
  2447  001834  6E10               	movwf	___wmul@multiplier+1,c
  2448  001836  EC67  F016         	call	___wmul	;wreg free
  2449  00183A  0E29               	movlw	low __npowers_
  2450  00183C  240F               	addwf	?___wmul,w,c
  2451  00183E  6EF6               	movwf	tblptrl,c
  2452  001840  0E10               	movlw	high __npowers_
  2453  001842  2010               	addwfc	?___wmul+1,w,c
  2454  001844  6EF7               	movwf	tblptrh,c
  2455  001846                     	if	0	;There are less than 3 active tblptr bytes
  2456  001846                     	endif
  2457  001846  0009               	tblrd		*+
  2458  001848  CFF5 F018          	movff	tablat,___ftmul@f2
  2459  00184C  0009               	tblrd		*+
  2460  00184E  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2461  001852  000A               	tblrd		*-
  2462  001854  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2463  001858  0E00               	movlw	0
  2464  00185A  6E0A               	movwf	___awdiv@divisor+1,c
  2465  00185C  0E64               	movlw	100
  2466  00185E  6E09               	movwf	___awdiv@divisor,c
  2467  001860  502A               	movf	scale@scl,w,c
  2468  001862  6E07               	movwf	___awdiv@dividend,c
  2469  001864  6A08               	clrf	___awdiv@dividend+1,c
  2470  001866  BE07               	btfsc	___awdiv@dividend,7,c
  2471  001868  0608               	decf	___awdiv@dividend+1,f,c
  2472  00186A  EC55  F014         	call	___awdiv	;wreg free
  2473  00186E  0E12               	movlw	18
  2474  001870  2407               	addwf	?___awdiv,w,c
  2475  001872  6E0F               	movwf	___wmul@multiplier,c
  2476  001874  0E00               	movlw	0
  2477  001876  2008               	addwfc	?___awdiv+1,w,c
  2478  001878  6E10               	movwf	___wmul@multiplier+1,c
  2479  00187A  0E00               	movlw	0
  2480  00187C  6E12               	movwf	___wmul@multiplicand+1,c
  2481  00187E  0E03               	movlw	3
  2482  001880  6E11               	movwf	___wmul@multiplicand,c
  2483  001882  EC67  F016         	call	___wmul	;wreg free
  2484  001886  0E29               	movlw	low __npowers_
  2485  001888  240F               	addwf	?___wmul,w,c
  2486  00188A  6EF6               	movwf	tblptrl,c
  2487  00188C  0E10               	movlw	high __npowers_
  2488  00188E  2010               	addwfc	?___wmul+1,w,c
  2489  001890  6EF7               	movwf	tblptrh,c
  2490  001892                     	if	0	;There are less than 3 active tblptr bytes
  2491  001892                     	endif
  2492  001892  0009               	tblrd		*+
  2493  001894  CFF5 F015          	movff	tablat,___ftmul@f1
  2494  001898  0009               	tblrd		*+
  2495  00189A  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2496  00189E  000A               	tblrd		*-
  2497  0018A0  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2498  0018A4  EC92  F012         	call	___ftmul	;wreg free
  2499  0018A8  C015  F027         	movff	?___ftmul,_scale$1246
  2500  0018AC  C016  F028         	movff	?___ftmul+1,_scale$1246+1
  2501  0018B0  C017  F029         	movff	?___ftmul+2,_scale$1246+2
  2502                           
  2503                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2504  0018B4  C027  F015         	movff	_scale$1246,___ftmul@f1
  2505  0018B8  C028  F016         	movff	_scale$1246+1,___ftmul@f1+1
  2506  0018BC  C029  F017         	movff	_scale$1246+2,___ftmul@f1+2
  2507  0018C0  0E00               	movlw	0
  2508  0018C2  6E12               	movwf	___wmul@multiplicand+1,c
  2509  0018C4  0E03               	movlw	3
  2510  0018C6  6E11               	movwf	___wmul@multiplicand,c
  2511  0018C8  0E00               	movlw	0
  2512  0018CA  6E04               	movwf	___awmod@divisor+1,c
  2513  0018CC  0E0A               	movlw	10
  2514  0018CE  6E03               	movwf	___awmod@divisor,c
  2515  0018D0  502A               	movf	scale@scl,w,c
  2516  0018D2  6E01               	movwf	___awmod@dividend,c
  2517  0018D4  6A02               	clrf	___awmod@dividend+1,c
  2518  0018D6  BE01               	btfsc	___awmod@dividend,7,c
  2519  0018D8  0602               	decf	___awmod@dividend+1,f,c
  2520  0018DA  EC31  F015         	call	___awmod	;wreg free
  2521  0018DE  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2522  0018E2  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2523  0018E6  EC67  F016         	call	___wmul	;wreg free
  2524  0018EA  0E29               	movlw	low __npowers_
  2525  0018EC  240F               	addwf	?___wmul,w,c
  2526  0018EE  6EF6               	movwf	tblptrl,c
  2527  0018F0  0E10               	movlw	high __npowers_
  2528  0018F2  2010               	addwfc	?___wmul+1,w,c
  2529  0018F4  6EF7               	movwf	tblptrh,c
  2530  0018F6                     	if	0	;There are less than 3 active tblptr bytes
  2531  0018F6                     	endif
  2532  0018F6  0009               	tblrd		*+
  2533  0018F8  CFF5 F018          	movff	tablat,___ftmul@f2
  2534  0018FC  0009               	tblrd		*+
  2535  0018FE  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2536  001902  000A               	tblrd		*-
  2537  001904  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2538  001908  EC92  F012         	call	___ftmul	;wreg free
  2539  00190C  D141               	goto	L5
  2540  00190E  D15A               	goto	l188
  2541  001910  D054               	goto	l2242
  2542  001912                     l2236:
  2543                           
  2544                           ;doprnt.c: 432: else if(scl > 10)
  2545  001912  502A               	movf	scale@scl,w,c
  2546  001914  0A80               	xorlw	128
  2547  001916  0F75               	addlw	-139
  2548  001918  A0D8               	btfss	status,0,c
  2549  00191A  D04F               	goto	l2242
  2550                           
  2551                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2552  00191C  0E00               	movlw	0
  2553  00191E  6E0A               	movwf	___awdiv@divisor+1,c
  2554  001920  0E0A               	movlw	10
  2555  001922  6E09               	movwf	___awdiv@divisor,c
  2556  001924  502A               	movf	scale@scl,w,c
  2557  001926  6E07               	movwf	___awdiv@dividend,c
  2558  001928  6A08               	clrf	___awdiv@dividend+1,c
  2559  00192A  BE07               	btfsc	___awdiv@dividend,7,c
  2560  00192C  0608               	decf	___awdiv@dividend+1,f,c
  2561  00192E  EC55  F014         	call	___awdiv	;wreg free
  2562  001932  0E09               	movlw	9
  2563  001934  2407               	addwf	?___awdiv,w,c
  2564  001936  6E0F               	movwf	___wmul@multiplier,c
  2565  001938  0E00               	movlw	0
  2566  00193A  2008               	addwfc	?___awdiv+1,w,c
  2567  00193C  6E10               	movwf	___wmul@multiplier+1,c
  2568  00193E  0E00               	movlw	0
  2569  001940  6E12               	movwf	___wmul@multiplicand+1,c
  2570  001942  0E03               	movlw	3
  2571  001944  6E11               	movwf	___wmul@multiplicand,c
  2572  001946  EC67  F016         	call	___wmul	;wreg free
  2573  00194A  0E29               	movlw	low __npowers_
  2574  00194C  240F               	addwf	?___wmul,w,c
  2575  00194E  6EF6               	movwf	tblptrl,c
  2576  001950  0E10               	movlw	high __npowers_
  2577  001952  2010               	addwfc	?___wmul+1,w,c
  2578  001954  6EF7               	movwf	tblptrh,c
  2579  001956                     	if	0	;There are less than 3 active tblptr bytes
  2580  001956                     	endif
  2581  001956  0009               	tblrd		*+
  2582  001958  CFF5 F015          	movff	tablat,___ftmul@f1
  2583  00195C  0009               	tblrd		*+
  2584  00195E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2585  001962  000A               	tblrd		*-
  2586  001964  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2587  001968  0E00               	movlw	0
  2588  00196A  6E12               	movwf	___wmul@multiplicand+1,c
  2589  00196C  0E03               	movlw	3
  2590  00196E  6E11               	movwf	___wmul@multiplicand,c
  2591  001970  0E00               	movlw	0
  2592  001972  6E04               	movwf	___awmod@divisor+1,c
  2593  001974  0E0A               	movlw	10
  2594  001976  6E03               	movwf	___awmod@divisor,c
  2595  001978  502A               	movf	scale@scl,w,c
  2596  00197A  6E01               	movwf	___awmod@dividend,c
  2597  00197C  6A02               	clrf	___awmod@dividend+1,c
  2598  00197E  BE01               	btfsc	___awmod@dividend,7,c
  2599  001980  0602               	decf	___awmod@dividend+1,f,c
  2600  001982  EC31  F015         	call	___awmod	;wreg free
  2601  001986  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2602  00198A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2603  00198E  EC67  F016         	call	___wmul	;wreg free
  2604  001992  0E29               	movlw	low __npowers_
  2605  001994  240F               	addwf	?___wmul,w,c
  2606  001996  6EF6               	movwf	tblptrl,c
  2607  001998  0E10               	movlw	high __npowers_
  2608  00199A  2010               	addwfc	?___wmul+1,w,c
  2609  00199C  6EF7               	movwf	tblptrh,c
  2610  00199E                     	if	0	;There are less than 3 active tblptr bytes
  2611  00199E                     	endif
  2612  00199E  0009               	tblrd		*+
  2613  0019A0  CFF5 F018          	movff	tablat,___ftmul@f2
  2614  0019A4  0009               	tblrd		*+
  2615  0019A6  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2616  0019AA  000A               	tblrd		*-
  2617  0019AC  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2618  0019B0  EC92  F012         	call	___ftmul	;wreg free
  2619  0019B4  D0ED               	goto	L5
  2620  0019B6  D106               	goto	l188
  2621  0019B8  D000               	goto	l2242
  2622  0019BA                     l2242:
  2623                           
  2624                           ;doprnt.c: 434: return _npowers_[scl];
  2625  0019BA  502A               	movf	scale@scl,w,c
  2626  0019BC  0D03               	mullw	3
  2627  0019BE  0E29               	movlw	low __npowers_
  2628  0019C0  24F3               	addwf	prodl,w,c
  2629  0019C2  6EF6               	movwf	tblptrl,c
  2630  0019C4  0E10               	movlw	high __npowers_
  2631  0019C6  D0F2               	goto	L4
  2632  0019C8  D0FD               	goto	l188
  2633  0019CA                     l2246:
  2634                           
  2635                           ;doprnt.c: 435: }
  2636                           ;doprnt.c: 436: if(scl>=110)
  2637  0019CA  502A               	movf	scale@scl,w,c
  2638  0019CC  0A80               	xorlw	128
  2639  0019CE  0F12               	addlw	-238
  2640  0019D0  A0D8               	btfss	status,0,c
  2641  0019D2  D08D               	goto	l2254
  2642                           
  2643                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2644  0019D4  0E00               	movlw	0
  2645  0019D6  6E12               	movwf	___wmul@multiplicand+1,c
  2646  0019D8  0E03               	movlw	3
  2647  0019DA  6E11               	movwf	___wmul@multiplicand,c
  2648  0019DC  0E00               	movlw	0
  2649  0019DE  6E0A               	movwf	___awdiv@divisor+1,c
  2650  0019E0  0E0A               	movlw	10
  2651  0019E2  6E09               	movwf	___awdiv@divisor,c
  2652  0019E4  0E00               	movlw	0
  2653  0019E6  6E04               	movwf	___awmod@divisor+1,c
  2654  0019E8  0E64               	movlw	100
  2655  0019EA  6E03               	movwf	___awmod@divisor,c
  2656  0019EC  502A               	movf	scale@scl,w,c
  2657  0019EE  6E01               	movwf	___awmod@dividend,c
  2658  0019F0  6A02               	clrf	___awmod@dividend+1,c
  2659  0019F2  BE01               	btfsc	___awmod@dividend,7,c
  2660  0019F4  0602               	decf	___awmod@dividend+1,f,c
  2661  0019F6  EC31  F015         	call	___awmod	;wreg free
  2662  0019FA  C001  F007         	movff	?___awmod,___awdiv@dividend
  2663  0019FE  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2664  001A02  EC55  F014         	call	___awdiv	;wreg free
  2665  001A06  0E09               	movlw	9
  2666  001A08  2407               	addwf	?___awdiv,w,c
  2667  001A0A  6E0F               	movwf	___wmul@multiplier,c
  2668  001A0C  0E00               	movlw	0
  2669  001A0E  2008               	addwfc	?___awdiv+1,w,c
  2670  001A10  6E10               	movwf	___wmul@multiplier+1,c
  2671  001A12  EC67  F016         	call	___wmul	;wreg free
  2672  001A16  0E50               	movlw	low __powers_
  2673  001A18  240F               	addwf	?___wmul,w,c
  2674  001A1A  6EF6               	movwf	tblptrl,c
  2675  001A1C  0E10               	movlw	high __powers_
  2676  001A1E  2010               	addwfc	?___wmul+1,w,c
  2677  001A20  6EF7               	movwf	tblptrh,c
  2678  001A22                     	if	0	;There are less than 3 active tblptr bytes
  2679  001A22                     	endif
  2680  001A22  0009               	tblrd		*+
  2681  001A24  CFF5 F018          	movff	tablat,___ftmul@f2
  2682  001A28  0009               	tblrd		*+
  2683  001A2A  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2684  001A2E  000A               	tblrd		*-
  2685  001A30  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2686  001A34  0E00               	movlw	0
  2687  001A36  6E0A               	movwf	___awdiv@divisor+1,c
  2688  001A38  0E64               	movlw	100
  2689  001A3A  6E09               	movwf	___awdiv@divisor,c
  2690  001A3C  502A               	movf	scale@scl,w,c
  2691  001A3E  6E07               	movwf	___awdiv@dividend,c
  2692  001A40  6A08               	clrf	___awdiv@dividend+1,c
  2693  001A42  BE07               	btfsc	___awdiv@dividend,7,c
  2694  001A44  0608               	decf	___awdiv@dividend+1,f,c
  2695  001A46  EC55  F014         	call	___awdiv	;wreg free
  2696  001A4A  0E12               	movlw	18
  2697  001A4C  2407               	addwf	?___awdiv,w,c
  2698  001A4E  6E0F               	movwf	___wmul@multiplier,c
  2699  001A50  0E00               	movlw	0
  2700  001A52  2008               	addwfc	?___awdiv+1,w,c
  2701  001A54  6E10               	movwf	___wmul@multiplier+1,c
  2702  001A56  0E00               	movlw	0
  2703  001A58  6E12               	movwf	___wmul@multiplicand+1,c
  2704  001A5A  0E03               	movlw	3
  2705  001A5C  6E11               	movwf	___wmul@multiplicand,c
  2706  001A5E  EC67  F016         	call	___wmul	;wreg free
  2707  001A62  0E50               	movlw	low __powers_
  2708  001A64  240F               	addwf	?___wmul,w,c
  2709  001A66  6EF6               	movwf	tblptrl,c
  2710  001A68  0E10               	movlw	high __powers_
  2711  001A6A  2010               	addwfc	?___wmul+1,w,c
  2712  001A6C  6EF7               	movwf	tblptrh,c
  2713  001A6E                     	if	0	;There are less than 3 active tblptr bytes
  2714  001A6E                     	endif
  2715  001A6E  0009               	tblrd		*+
  2716  001A70  CFF5 F015          	movff	tablat,___ftmul@f1
  2717  001A74  0009               	tblrd		*+
  2718  001A76  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2719  001A7A  000A               	tblrd		*-
  2720  001A7C  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2721  001A80  EC92  F012         	call	___ftmul	;wreg free
  2722  001A84  C015  F027         	movff	?___ftmul,_scale$1246
  2723  001A88  C016  F028         	movff	?___ftmul+1,_scale$1246+1
  2724  001A8C  C017  F029         	movff	?___ftmul+2,_scale$1246+2
  2725                           
  2726                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2727  001A90  C027  F015         	movff	_scale$1246,___ftmul@f1
  2728  001A94  C028  F016         	movff	_scale$1246+1,___ftmul@f1+1
  2729  001A98  C029  F017         	movff	_scale$1246+2,___ftmul@f1+2
  2730  001A9C  0E00               	movlw	0
  2731  001A9E  6E12               	movwf	___wmul@multiplicand+1,c
  2732  001AA0  0E03               	movlw	3
  2733  001AA2  6E11               	movwf	___wmul@multiplicand,c
  2734  001AA4  0E00               	movlw	0
  2735  001AA6  6E04               	movwf	___awmod@divisor+1,c
  2736  001AA8  0E0A               	movlw	10
  2737  001AAA  6E03               	movwf	___awmod@divisor,c
  2738  001AAC  502A               	movf	scale@scl,w,c
  2739  001AAE  6E01               	movwf	___awmod@dividend,c
  2740  001AB0  6A02               	clrf	___awmod@dividend+1,c
  2741  001AB2  BE01               	btfsc	___awmod@dividend,7,c
  2742  001AB4  0602               	decf	___awmod@dividend+1,f,c
  2743  001AB6  EC31  F015         	call	___awmod	;wreg free
  2744  001ABA  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2745  001ABE  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2746  001AC2  EC67  F016         	call	___wmul	;wreg free
  2747  001AC6  0E50               	movlw	low __powers_
  2748  001AC8  240F               	addwf	?___wmul,w,c
  2749  001ACA  6EF6               	movwf	tblptrl,c
  2750  001ACC  0E10               	movlw	high __powers_
  2751  001ACE  2010               	addwfc	?___wmul+1,w,c
  2752  001AD0  6EF7               	movwf	tblptrh,c
  2753  001AD2                     	if	0	;There are less than 3 active tblptr bytes
  2754  001AD2                     	endif
  2755  001AD2  0009               	tblrd		*+
  2756  001AD4  CFF5 F018          	movff	tablat,___ftmul@f2
  2757  001AD8  0009               	tblrd		*+
  2758  001ADA  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2759  001ADE  000A               	tblrd		*-
  2760  001AE0  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2761  001AE4  EC92  F012         	call	___ftmul	;wreg free
  2762  001AE8  D053               	goto	L5
  2763  001AEA  D06C               	goto	l188
  2764  001AEC  D059               	goto	l2260
  2765  001AEE                     l2254:
  2766                           
  2767                           ;doprnt.c: 438: else if(scl > 10)
  2768  001AEE  502A               	movf	scale@scl,w,c
  2769  001AF0  0A80               	xorlw	128
  2770  001AF2  0F75               	addlw	-139
  2771  001AF4  A0D8               	btfss	status,0,c
  2772  001AF6  D054               	goto	l2260
  2773                           
  2774                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2775  001AF8  0E00               	movlw	0
  2776  001AFA  6E0A               	movwf	___awdiv@divisor+1,c
  2777  001AFC  0E0A               	movlw	10
  2778  001AFE  6E09               	movwf	___awdiv@divisor,c
  2779  001B00  502A               	movf	scale@scl,w,c
  2780  001B02  6E07               	movwf	___awdiv@dividend,c
  2781  001B04  6A08               	clrf	___awdiv@dividend+1,c
  2782  001B06  BE07               	btfsc	___awdiv@dividend,7,c
  2783  001B08  0608               	decf	___awdiv@dividend+1,f,c
  2784  001B0A  EC55  F014         	call	___awdiv	;wreg free
  2785  001B0E  0E09               	movlw	9
  2786  001B10  2407               	addwf	?___awdiv,w,c
  2787  001B12  6E0F               	movwf	___wmul@multiplier,c
  2788  001B14  0E00               	movlw	0
  2789  001B16  2008               	addwfc	?___awdiv+1,w,c
  2790  001B18  6E10               	movwf	___wmul@multiplier+1,c
  2791  001B1A  0E00               	movlw	0
  2792  001B1C  6E12               	movwf	___wmul@multiplicand+1,c
  2793  001B1E  0E03               	movlw	3
  2794  001B20  6E11               	movwf	___wmul@multiplicand,c
  2795  001B22  EC67  F016         	call	___wmul	;wreg free
  2796  001B26  0E50               	movlw	low __powers_
  2797  001B28  240F               	addwf	?___wmul,w,c
  2798  001B2A  6EF6               	movwf	tblptrl,c
  2799  001B2C  0E10               	movlw	high __powers_
  2800  001B2E  2010               	addwfc	?___wmul+1,w,c
  2801  001B30  6EF7               	movwf	tblptrh,c
  2802  001B32                     	if	0	;There are less than 3 active tblptr bytes
  2803  001B32                     	endif
  2804  001B32  0009               	tblrd		*+
  2805  001B34  CFF5 F015          	movff	tablat,___ftmul@f1
  2806  001B38  0009               	tblrd		*+
  2807  001B3A  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2808  001B3E  000A               	tblrd		*-
  2809  001B40  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2810  001B44  0E00               	movlw	0
  2811  001B46  6E12               	movwf	___wmul@multiplicand+1,c
  2812  001B48  0E03               	movlw	3
  2813  001B4A  6E11               	movwf	___wmul@multiplicand,c
  2814  001B4C  0E00               	movlw	0
  2815  001B4E  6E04               	movwf	___awmod@divisor+1,c
  2816  001B50  0E0A               	movlw	10
  2817  001B52  6E03               	movwf	___awmod@divisor,c
  2818  001B54  502A               	movf	scale@scl,w,c
  2819  001B56  6E01               	movwf	___awmod@dividend,c
  2820  001B58  6A02               	clrf	___awmod@dividend+1,c
  2821  001B5A  BE01               	btfsc	___awmod@dividend,7,c
  2822  001B5C  0602               	decf	___awmod@dividend+1,f,c
  2823  001B5E  EC31  F015         	call	___awmod	;wreg free
  2824  001B62  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2825  001B66  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2826  001B6A  EC67  F016         	call	___wmul	;wreg free
  2827  001B6E  0E50               	movlw	low __powers_
  2828  001B70  240F               	addwf	?___wmul,w,c
  2829  001B72  6EF6               	movwf	tblptrl,c
  2830  001B74  0E10               	movlw	high __powers_
  2831  001B76  2010               	addwfc	?___wmul+1,w,c
  2832  001B78  6EF7               	movwf	tblptrh,c
  2833  001B7A                     	if	0	;There are less than 3 active tblptr bytes
  2834  001B7A                     	endif
  2835  001B7A  0009               	tblrd		*+
  2836  001B7C  CFF5 F018          	movff	tablat,___ftmul@f2
  2837  001B80  0009               	tblrd		*+
  2838  001B82  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2839  001B86  000A               	tblrd		*-
  2840  001B88  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2841  001B8C  EC92  F012         	call	___ftmul	;wreg free
  2842  001B90                     L5:
  2843  001B90  C015  F024         	movff	?___ftmul,?_scale
  2844  001B94  C016  F025         	movff	?___ftmul+1,?_scale+1
  2845  001B98  C017  F026         	movff	?___ftmul+2,?_scale+2
  2846  001B9C  D013               	goto	l188
  2847  001B9E  D000               	goto	l2260
  2848  001BA0                     l2260:
  2849                           
  2850                           ;doprnt.c: 440: return _powers_[scl];
  2851  001BA0  502A               	movf	scale@scl,w,c
  2852  001BA2  0D03               	mullw	3
  2853  001BA4  0E50               	movlw	low __powers_
  2854  001BA6  24F3               	addwf	prodl,w,c
  2855  001BA8  6EF6               	movwf	tblptrl,c
  2856  001BAA  0E10               	movlw	high __powers_
  2857  001BAC                     L4:
  2858  001BAC  20F4               	addwfc	prodh,w,c
  2859  001BAE  6EF7               	movwf	tblptrh,c
  2860  001BB0                     	if	0	;There are less than 3 active tblptr bytes
  2861  001BB0                     	endif
  2862  001BB0  0009               	tblrd		*+
  2863  001BB2  CFF5 F024          	movff	tablat,?_scale
  2864  001BB6  0009               	tblrd		*+
  2865  001BB8  CFF5 F025          	movff	tablat,?_scale+1
  2866  001BBC  000A               	tblrd		*-
  2867  001BBE  CFF5 F026          	movff	tablat,?_scale+2
  2868  001BC2  D000               	goto	l188
  2869  001BC4                     l188:
  2870  001BC4  0012               	return		;funcret
  2871  001BC6                     __end_of_scale:
  2872                           	opt stack 0
  2873                           tblptru	equ	0xFF8
  2874                           tblptrh	equ	0xFF7
  2875                           tblptrl	equ	0xFF6
  2876                           tablat	equ	0xFF5
  2877                           prodh	equ	0xFF4
  2878                           prodl	equ	0xFF3
  2879                           postinc0	equ	0xFEE
  2880                           wreg	equ	0xFE8
  2881                           postdec1	equ	0xFE5
  2882                           plusw1	equ	0xFE3
  2883                           fsr1l	equ	0xFE1
  2884                           indf2	equ	0xFDF
  2885                           postinc2	equ	0xFDE
  2886                           postdec2	equ	0xFDD
  2887                           plusw2	equ	0xFDB
  2888                           fsr2h	equ	0xFDA
  2889                           fsr2l	equ	0xFD9
  2890                           status	equ	0xFD8
  2891                           
  2892 ;; *************** function _putch *****************
  2893 ;; Defined at:
  2894 ;;		line 48 in file "Lab5.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  c               1    wreg     unsigned char 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;  c               1    0[COMRAM] unsigned char 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;		None               void
  2901 ;; Registers used:
  2902 ;;		wreg
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;Total ram usage:        1 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_printf
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text3
  2922  002D8E                     __ptext3:
  2923                           	opt stack 0
  2924  002D8E                     _putch:
  2925                           	opt stack 29
  2926                           
  2927                           ;incstack = 0
  2928                           ;putch@c stored from wreg
  2929  002D8E  6E01               	movwf	putch@c,c
  2930                           
  2931                           ;Lab5.c: 50: while (!TRMT);
  2932  002D90  D000               	goto	l80
  2933  002D92                     l80:
  2934  002D92  A2AC               	btfss	4012,1,c	;volatile
  2935  002D94  D7FE               	goto	l80
  2936                           
  2937                           ;Lab5.c: 51: TXREG = c;
  2938  002D96  C001  FFAD         	movff	putch@c,4013	;volatile
  2939  002D9A  0012               	return		;funcret
  2940  002D9C                     __end_of_putch:
  2941                           	opt stack 0
  2942                           tblptru	equ	0xFF8
  2943                           tblptrh	equ	0xFF7
  2944                           tblptrl	equ	0xFF6
  2945                           tablat	equ	0xFF5
  2946                           prodh	equ	0xFF4
  2947                           prodl	equ	0xFF3
  2948                           postinc0	equ	0xFEE
  2949                           wreg	equ	0xFE8
  2950                           postdec1	equ	0xFE5
  2951                           plusw1	equ	0xFE3
  2952                           fsr1l	equ	0xFE1
  2953                           indf2	equ	0xFDF
  2954                           postinc2	equ	0xFDE
  2955                           postdec2	equ	0xFDD
  2956                           plusw2	equ	0xFDB
  2957                           fsr2h	equ	0xFDA
  2958                           fsr2l	equ	0xFD9
  2959                           status	equ	0xFD8
  2960                           
  2961 ;; *************** function _fround *****************
  2962 ;; Defined at:
  2963 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  prec            1    wreg     unsigned char 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  prec            1   44[COMRAM] unsigned char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  3   35[COMRAM] unsigned char 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2977 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;Total ram usage:       10 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    2
  2984 ;; This function calls:
  2985 ;;		___awdiv
  2986 ;;		___awmod
  2987 ;;		___ftmul
  2988 ;;		___wmul
  2989 ;; This function is called by:
  2990 ;;		_printf
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text4
  2995  001F02                     __ptext4:
  2996                           	opt stack 0
  2997  001F02                     _fround:
  2998                           	opt stack 27
  2999                           
  3000                           ;incstack = 0
  3001                           ;fround@prec stored from wreg
  3002  001F02  6E2D               	movwf	fround@prec,c
  3003                           
  3004                           ;doprnt.c: 413: if(prec>=110)
  3005  001F04  0E6D               	movlw	109
  3006  001F06  642D               	cpfsgt	fround@prec,c
  3007  001F08  D09B               	goto	l2214
  3008                           
  3009                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3010  001F0A  0E00               	movlw	0
  3011  001F0C  6E12               	movwf	___wmul@multiplicand+1,c
  3012  001F0E  0E03               	movlw	3
  3013  001F10  6E11               	movwf	___wmul@multiplicand,c
  3014  001F12  0E00               	movlw	0
  3015  001F14  6E0A               	movwf	___awdiv@divisor+1,c
  3016  001F16  0E0A               	movlw	10
  3017  001F18  6E09               	movwf	___awdiv@divisor,c
  3018  001F1A  0E00               	movlw	0
  3019  001F1C  6E04               	movwf	___awmod@divisor+1,c
  3020  001F1E  0E64               	movlw	100
  3021  001F20  6E03               	movwf	___awmod@divisor,c
  3022  001F22  C02D  F001         	movff	fround@prec,___awmod@dividend
  3023  001F26  6A02               	clrf	___awmod@dividend+1,c
  3024  001F28  EC31  F015         	call	___awmod	;wreg free
  3025  001F2C  C001  F007         	movff	?___awmod,___awdiv@dividend
  3026  001F30  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3027  001F34  EC55  F014         	call	___awdiv	;wreg free
  3028  001F38  0E09               	movlw	9
  3029  001F3A  2407               	addwf	?___awdiv,w,c
  3030  001F3C  6E0F               	movwf	___wmul@multiplier,c
  3031  001F3E  0E00               	movlw	0
  3032  001F40  2008               	addwfc	?___awdiv+1,w,c
  3033  001F42  6E10               	movwf	___wmul@multiplier+1,c
  3034  001F44  EC67  F016         	call	___wmul	;wreg free
  3035  001F48  0E29               	movlw	low __npowers_
  3036  001F4A  240F               	addwf	?___wmul,w,c
  3037  001F4C  6EF6               	movwf	tblptrl,c
  3038  001F4E  0E10               	movlw	high __npowers_
  3039  001F50  2010               	addwfc	?___wmul+1,w,c
  3040  001F52  6EF7               	movwf	tblptrh,c
  3041  001F54                     	if	0	;There are less than 3 active tblptr bytes
  3042  001F54                     	endif
  3043  001F54  0009               	tblrd		*+
  3044  001F56  CFF5 F018          	movff	tablat,___ftmul@f2
  3045  001F5A  0009               	tblrd		*+
  3046  001F5C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3047  001F60  000A               	tblrd		*-
  3048  001F62  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3049  001F66  0E00               	movlw	0
  3050  001F68  6E0A               	movwf	___awdiv@divisor+1,c
  3051  001F6A  0E64               	movlw	100
  3052  001F6C  6E09               	movwf	___awdiv@divisor,c
  3053  001F6E  C02D  F007         	movff	fround@prec,___awdiv@dividend
  3054  001F72  6A08               	clrf	___awdiv@dividend+1,c
  3055  001F74  EC55  F014         	call	___awdiv	;wreg free
  3056  001F78  0E12               	movlw	18
  3057  001F7A  2407               	addwf	?___awdiv,w,c
  3058  001F7C  6E0F               	movwf	___wmul@multiplier,c
  3059  001F7E  0E00               	movlw	0
  3060  001F80  2008               	addwfc	?___awdiv+1,w,c
  3061  001F82  6E10               	movwf	___wmul@multiplier+1,c
  3062  001F84  0E00               	movlw	0
  3063  001F86  6E12               	movwf	___wmul@multiplicand+1,c
  3064  001F88  0E03               	movlw	3
  3065  001F8A  6E11               	movwf	___wmul@multiplicand,c
  3066  001F8C  EC67  F016         	call	___wmul	;wreg free
  3067  001F90  0E29               	movlw	low __npowers_
  3068  001F92  240F               	addwf	?___wmul,w,c
  3069  001F94  6EF6               	movwf	tblptrl,c
  3070  001F96  0E10               	movlw	high __npowers_
  3071  001F98  2010               	addwfc	?___wmul+1,w,c
  3072  001F9A  6EF7               	movwf	tblptrh,c
  3073  001F9C                     	if	0	;There are less than 3 active tblptr bytes
  3074  001F9C                     	endif
  3075  001F9C  0009               	tblrd		*+
  3076  001F9E  CFF5 F015          	movff	tablat,___ftmul@f1
  3077  001FA2  0009               	tblrd		*+
  3078  001FA4  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3079  001FA8  000A               	tblrd		*-
  3080  001FAA  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3081  001FAE  EC92  F012         	call	___ftmul	;wreg free
  3082  001FB2  C015  F02A         	movff	?___ftmul,_fround$1244
  3083  001FB6  C016  F02B         	movff	?___ftmul+1,_fround$1244+1
  3084  001FBA  C017  F02C         	movff	?___ftmul+2,_fround$1244+2
  3085                           
  3086                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3087  001FBE  0E00               	movlw	0
  3088  001FC0  6E12               	movwf	___wmul@multiplicand+1,c
  3089  001FC2  0E03               	movlw	3
  3090  001FC4  6E11               	movwf	___wmul@multiplicand,c
  3091  001FC6  0E00               	movlw	0
  3092  001FC8  6E04               	movwf	___awmod@divisor+1,c
  3093  001FCA  0E0A               	movlw	10
  3094  001FCC  6E03               	movwf	___awmod@divisor,c
  3095  001FCE  C02D  F001         	movff	fround@prec,___awmod@dividend
  3096  001FD2  6A02               	clrf	___awmod@dividend+1,c
  3097  001FD4  EC31  F015         	call	___awmod	;wreg free
  3098  001FD8  C001  F00F         	movff	?___awmod,___wmul@multiplier
  3099  001FDC  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  3100  001FE0  EC67  F016         	call	___wmul	;wreg free
  3101  001FE4  0E29               	movlw	low __npowers_
  3102  001FE6  240F               	addwf	?___wmul,w,c
  3103  001FE8  6EF6               	movwf	tblptrl,c
  3104  001FEA  0E10               	movlw	high __npowers_
  3105  001FEC  2010               	addwfc	?___wmul+1,w,c
  3106  001FEE  6EF7               	movwf	tblptrh,c
  3107  001FF0                     	if	0	;There are less than 3 active tblptr bytes
  3108  001FF0                     	endif
  3109  001FF0  0009               	tblrd		*+
  3110  001FF2  CFF5 F018          	movff	tablat,___ftmul@f2
  3111  001FF6  0009               	tblrd		*+
  3112  001FF8  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3113  001FFC  000A               	tblrd		*-
  3114  001FFE  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3115  002002  C02A  F015         	movff	_fround$1244,___ftmul@f1
  3116  002006  C02B  F016         	movff	_fround$1244+1,___ftmul@f1+1
  3117  00200A  C02C  F017         	movff	_fround$1244+2,___ftmul@f1+2
  3118  00200E  EC92  F012         	call	___ftmul	;wreg free
  3119  002012  C015  F027         	movff	?___ftmul,_fround$1245
  3120  002016  C016  F028         	movff	?___ftmul+1,_fround$1245+1
  3121  00201A  C017  F029         	movff	?___ftmul+2,_fround$1245+2
  3122                           
  3123                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3124  00201E  C027  F015         	movff	_fround$1245,___ftmul@f1
  3125  002022  C028  F016         	movff	_fround$1245+1,___ftmul@f1+1
  3126  002026  C029  F017         	movff	_fround$1245+2,___ftmul@f1+2
  3127  00202A  0E00               	movlw	0
  3128  00202C  6E18               	movwf	___ftmul@f2,c
  3129  00202E  0E00               	movlw	0
  3130  002030  6E19               	movwf	___ftmul@f2+1,c
  3131  002032  0E3F               	movlw	63
  3132  002034  6E1A               	movwf	___ftmul@f2+2,c
  3133  002036  EC92  F012         	call	___ftmul	;wreg free
  3134  00203A  D07D               	goto	L7
  3135  00203C  D083               	goto	l181
  3136  00203E  D062               	goto	l2222
  3137  002040                     l2214:
  3138                           
  3139                           ;doprnt.c: 415: else if(prec > 10)
  3140  002040  0E0A               	movlw	10
  3141  002042  642D               	cpfsgt	fround@prec,c
  3142  002044  D05F               	goto	l2222
  3143                           
  3144                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3145  002046  0E00               	movlw	0
  3146  002048  6E12               	movwf	___wmul@multiplicand+1,c
  3147  00204A  0E03               	movlw	3
  3148  00204C  6E11               	movwf	___wmul@multiplicand,c
  3149  00204E  0E00               	movlw	0
  3150  002050  6E04               	movwf	___awmod@divisor+1,c
  3151  002052  0E0A               	movlw	10
  3152  002054  6E03               	movwf	___awmod@divisor,c
  3153  002056  C02D  F001         	movff	fround@prec,___awmod@dividend
  3154  00205A  6A02               	clrf	___awmod@dividend+1,c
  3155  00205C  EC31  F015         	call	___awmod	;wreg free
  3156  002060  C001  F00F         	movff	?___awmod,___wmul@multiplier
  3157  002064  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  3158  002068  EC67  F016         	call	___wmul	;wreg free
  3159  00206C  0E29               	movlw	low __npowers_
  3160  00206E  240F               	addwf	?___wmul,w,c
  3161  002070  6EF6               	movwf	tblptrl,c
  3162  002072  0E10               	movlw	high __npowers_
  3163  002074  2010               	addwfc	?___wmul+1,w,c
  3164  002076  6EF7               	movwf	tblptrh,c
  3165  002078                     	if	0	;There are less than 3 active tblptr bytes
  3166  002078                     	endif
  3167  002078  0009               	tblrd		*+
  3168  00207A  CFF5 F018          	movff	tablat,___ftmul@f2
  3169  00207E  0009               	tblrd		*+
  3170  002080  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3171  002084  000A               	tblrd		*-
  3172  002086  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3173  00208A  0E00               	movlw	0
  3174  00208C  6E0A               	movwf	___awdiv@divisor+1,c
  3175  00208E  0E0A               	movlw	10
  3176  002090  6E09               	movwf	___awdiv@divisor,c
  3177  002092  C02D  F007         	movff	fround@prec,___awdiv@dividend
  3178  002096  6A08               	clrf	___awdiv@dividend+1,c
  3179  002098  EC55  F014         	call	___awdiv	;wreg free
  3180  00209C  0E09               	movlw	9
  3181  00209E  2407               	addwf	?___awdiv,w,c
  3182  0020A0  6E0F               	movwf	___wmul@multiplier,c
  3183  0020A2  0E00               	movlw	0
  3184  0020A4  2008               	addwfc	?___awdiv+1,w,c
  3185  0020A6  6E10               	movwf	___wmul@multiplier+1,c
  3186  0020A8  0E00               	movlw	0
  3187  0020AA  6E12               	movwf	___wmul@multiplicand+1,c
  3188  0020AC  0E03               	movlw	3
  3189  0020AE  6E11               	movwf	___wmul@multiplicand,c
  3190  0020B0  EC67  F016         	call	___wmul	;wreg free
  3191  0020B4  0E29               	movlw	low __npowers_
  3192  0020B6  240F               	addwf	?___wmul,w,c
  3193  0020B8  6EF6               	movwf	tblptrl,c
  3194  0020BA  0E10               	movlw	high __npowers_
  3195  0020BC  2010               	addwfc	?___wmul+1,w,c
  3196  0020BE  6EF7               	movwf	tblptrh,c
  3197  0020C0                     	if	0	;There are less than 3 active tblptr bytes
  3198  0020C0                     	endif
  3199  0020C0  0009               	tblrd		*+
  3200  0020C2  CFF5 F015          	movff	tablat,___ftmul@f1
  3201  0020C6  0009               	tblrd		*+
  3202  0020C8  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3203  0020CC  000A               	tblrd		*-
  3204  0020CE  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3205  0020D2  EC92  F012         	call	___ftmul	;wreg free
  3206  0020D6  C015  F02A         	movff	?___ftmul,_fround$1244
  3207  0020DA  C016  F02B         	movff	?___ftmul+1,_fround$1244+1
  3208  0020DE  C017  F02C         	movff	?___ftmul+2,_fround$1244+2
  3209                           
  3210                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3211  0020E2  C02A  F015         	movff	_fround$1244,___ftmul@f1
  3212  0020E6  C02B  F016         	movff	_fround$1244+1,___ftmul@f1+1
  3213  0020EA  C02C  F017         	movff	_fround$1244+2,___ftmul@f1+2
  3214  0020EE  0E00               	movlw	0
  3215  0020F0  6E18               	movwf	___ftmul@f2,c
  3216  0020F2  0E00               	movlw	0
  3217  0020F4  6E19               	movwf	___ftmul@f2+1,c
  3218  0020F6  0E3F               	movlw	63
  3219  0020F8  6E1A               	movwf	___ftmul@f2+2,c
  3220  0020FA  EC92  F012         	call	___ftmul	;wreg free
  3221  0020FE  D01B               	goto	L7
  3222  002100  D021               	goto	l181
  3223  002102  D000               	goto	l2222
  3224  002104                     l2222:
  3225                           
  3226                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3227  002104  502D               	movf	fround@prec,w,c
  3228  002106  0D03               	mullw	3
  3229  002108  0E29               	movlw	low __npowers_
  3230  00210A  24F3               	addwf	prodl,w,c
  3231  00210C  6EF6               	movwf	tblptrl,c
  3232  00210E  0E10               	movlw	high __npowers_
  3233  002110  20F4               	addwfc	prodh,w,c
  3234  002112  6EF7               	movwf	tblptrh,c
  3235  002114                     	if	0	;There are less than 3 active tblptr bytes
  3236  002114                     	endif
  3237  002114  0009               	tblrd		*+
  3238  002116  CFF5 F015          	movff	tablat,___ftmul@f1
  3239  00211A  0009               	tblrd		*+
  3240  00211C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3241  002120  000A               	tblrd		*-
  3242  002122  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3243  002126  0E00               	movlw	0
  3244  002128  6E18               	movwf	___ftmul@f2,c
  3245  00212A  0E00               	movlw	0
  3246  00212C  6E19               	movwf	___ftmul@f2+1,c
  3247  00212E  0E3F               	movlw	63
  3248  002130  6E1A               	movwf	___ftmul@f2+2,c
  3249  002132  EC92  F012         	call	___ftmul	;wreg free
  3250  002136                     L7:
  3251  002136  C015  F024         	movff	?___ftmul,?_fround
  3252  00213A  C016  F025         	movff	?___ftmul+1,?_fround+1
  3253  00213E  C017  F026         	movff	?___ftmul+2,?_fround+2
  3254  002142  D000               	goto	l181
  3255  002144                     l181:
  3256  002144  0012               	return		;funcret
  3257  002146                     __end_of_fround:
  3258                           	opt stack 0
  3259                           tblptru	equ	0xFF8
  3260                           tblptrh	equ	0xFF7
  3261                           tblptrl	equ	0xFF6
  3262                           tablat	equ	0xFF5
  3263                           prodh	equ	0xFF4
  3264                           prodl	equ	0xFF3
  3265                           postinc0	equ	0xFEE
  3266                           wreg	equ	0xFE8
  3267                           postdec1	equ	0xFE5
  3268                           plusw1	equ	0xFE3
  3269                           fsr1l	equ	0xFE1
  3270                           indf2	equ	0xFDF
  3271                           postinc2	equ	0xFDE
  3272                           postdec2	equ	0xFDD
  3273                           plusw2	equ	0xFDB
  3274                           fsr2h	equ	0xFDA
  3275                           fsr2l	equ	0xFD9
  3276                           status	equ	0xFD8
  3277                           
  3278 ;; *************** function ___wmul *****************
  3279 ;; Defined at:
  3280 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  multiplier      2   14[COMRAM] unsigned int 
  3283 ;;  multiplicand    2   16[COMRAM] unsigned int 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  product         2   18[COMRAM] unsigned int 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  2   14[COMRAM] unsigned int 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0, prodl, prodh
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;Total ram usage:        6 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_fround
  3305 ;;		_scale
  3306 ;;		_printf
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text5
  3311  002CCE                     __ptext5:
  3312                           	opt stack 0
  3313  002CCE                     ___wmul:
  3314                           	opt stack 28
  3315                           
  3316                           ;incstack = 0
  3317  002CCE  500F               	movf	___wmul@multiplier,w,c
  3318  002CD0  0211               	mulwf	___wmul@multiplicand,c
  3319  002CD2  CFF3 F013          	movff	prodl,___wmul@product
  3320  002CD6  CFF4 F014          	movff	prodh,___wmul@product+1
  3321  002CDA  500F               	movf	___wmul@multiplier,w,c
  3322  002CDC  0212               	mulwf	___wmul@multiplicand+1,c
  3323  002CDE  50F3               	movf	prodl,w,c
  3324  002CE0  2614               	addwf	___wmul@product+1,f,c
  3325  002CE2  5010               	movf	___wmul@multiplier+1,w,c
  3326  002CE4  0211               	mulwf	___wmul@multiplicand,c
  3327  002CE6  50F3               	movf	prodl,w,c
  3328  002CE8  2614               	addwf	___wmul@product+1,f,c
  3329  002CEA  C013  F00F         	movff	___wmul@product,?___wmul
  3330  002CEE  C014  F010         	movff	___wmul@product+1,?___wmul+1
  3331  002CF2  D000               	goto	l289
  3332  002CF4                     l289:
  3333  002CF4  0012               	return		;funcret
  3334  002CF6                     __end_of___wmul:
  3335                           	opt stack 0
  3336                           tblptru	equ	0xFF8
  3337                           tblptrh	equ	0xFF7
  3338                           tblptrl	equ	0xFF6
  3339                           tablat	equ	0xFF5
  3340                           prodh	equ	0xFF4
  3341                           prodl	equ	0xFF3
  3342                           postinc0	equ	0xFEE
  3343                           wreg	equ	0xFE8
  3344                           postdec1	equ	0xFE5
  3345                           plusw1	equ	0xFE3
  3346                           fsr1l	equ	0xFE1
  3347                           indf2	equ	0xFDF
  3348                           postinc2	equ	0xFDE
  3349                           postdec2	equ	0xFDD
  3350                           plusw2	equ	0xFDB
  3351                           fsr2h	equ	0xFDA
  3352                           fsr2l	equ	0xFD9
  3353                           status	equ	0xFD8
  3354                           
  3355 ;; *************** function ___ftmul *****************
  3356 ;; Defined at:
  3357 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  f1              3   20[COMRAM] float 
  3360 ;;  f2              3   23[COMRAM] float 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  3363 ;;  sign            1   34[COMRAM] unsigned char 
  3364 ;;  cntr            1   33[COMRAM] unsigned char 
  3365 ;;  exp             1   29[COMRAM] unsigned char 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  3   20[COMRAM] float 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3375 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;Total ram usage:       15 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    1
  3382 ;; This function calls:
  3383 ;;		___ftpack
  3384 ;; This function is called by:
  3385 ;;		_main
  3386 ;;		_fround
  3387 ;;		_scale
  3388 ;;		_printf
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text6
  3393  002524                     __ptext6:
  3394                           	opt stack 0
  3395  002524                     ___ftmul:
  3396                           	opt stack 27
  3397                           
  3398                           ;incstack = 0
  3399  002524  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  3400  002528  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3401  00252A  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3402  00252C  3416               	rlcf	___ftmul@f1+1,w,c
  3403  00252E  361B               	rlcf	??___ftmul& (0+255),f,c
  3404  002530  E301               	bnc	u1881
  3405  002532  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3406  002534                     u1881:
  3407  002534  501B               	movf	??___ftmul,w,c
  3408  002536  6E1E               	movwf	___ftmul@exp,c
  3409  002538  501E               	movf	___ftmul@exp,w,c
  3410  00253A  A4D8               	btfss	status,2,c
  3411  00253C  D002               	goto	l2028
  3412  00253E  D00E               	goto	l2030
  3413  002540  D06C               	goto	l718
  3414  002542                     l2028:
  3415  002542  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  3416  002546  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3417  002548  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3418  00254A  3419               	rlcf	___ftmul@f2+1,w,c
  3419  00254C  361B               	rlcf	??___ftmul& (0+255),f,c
  3420  00254E  E301               	bnc	u1901
  3421  002550  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3422  002552                     u1901:
  3423  002552  501B               	movf	??___ftmul,w,c
  3424  002554  6E23               	movwf	___ftmul@sign,c
  3425  002556  5023               	movf	___ftmul@sign,w,c
  3426  002558  A4D8               	btfss	status,2,c
  3427  00255A  D007               	goto	l2034
  3428  00255C                     l2030:
  3429  00255C  0E00               	movlw	0
  3430  00255E  6E15               	movwf	?___ftmul,c
  3431  002560  0E00               	movlw	0
  3432  002562  6E16               	movwf	?___ftmul+1,c
  3433  002564  0E00               	movlw	0
  3434  002566  6E17               	movwf	?___ftmul+2,c
  3435  002568  D058               	goto	l718
  3436  00256A                     l2034:
  3437  00256A  5023               	movf	___ftmul@sign,w,c
  3438  00256C  0F7B               	addlw	123
  3439  00256E  261E               	addwf	___ftmul@exp,f,c
  3440  002570  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  3441  002574  501A               	movf	___ftmul@f2+2,w,c
  3442  002576  1A23               	xorwf	___ftmul@sign,f,c
  3443  002578  0E80               	movlw	128
  3444  00257A  1623               	andwf	___ftmul@sign,f,c
  3445  00257C  8E16               	bsf	___ftmul@f1+1,7,c
  3446  00257E  8E19               	bsf	___ftmul@f2+1,7,c
  3447  002580  0EFF               	movlw	255
  3448  002582  1618               	andwf	___ftmul@f2,f,c
  3449  002584  0EFF               	movlw	255
  3450  002586  1619               	andwf	___ftmul@f2+1,f,c
  3451  002588  0E00               	movlw	0
  3452  00258A  161A               	andwf	___ftmul@f2+2,f,c
  3453  00258C  0E00               	movlw	0
  3454  00258E  6E1F               	movwf	___ftmul@f3_as_product,c
  3455  002590  0E00               	movlw	0
  3456  002592  6E20               	movwf	___ftmul@f3_as_product+1,c
  3457  002594  0E00               	movlw	0
  3458  002596  6E21               	movwf	___ftmul@f3_as_product+2,c
  3459  002598  0E07               	movlw	7
  3460  00259A  6E22               	movwf	___ftmul@cntr,c
  3461  00259C  D000               	goto	l2048
  3462  00259E                     l2048:
  3463  00259E  A015               	btfss	___ftmul@f1,0,c
  3464  0025A0  D007               	goto	l2052
  3465  0025A2  5018               	movf	___ftmul@f2,w,c
  3466  0025A4  261F               	addwf	___ftmul@f3_as_product,f,c
  3467  0025A6  5019               	movf	___ftmul@f2+1,w,c
  3468  0025A8  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3469  0025AA  501A               	movf	___ftmul@f2+2,w,c
  3470  0025AC  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3471  0025AE  D000               	goto	l2052
  3472  0025B0                     l2052:
  3473  0025B0  90D8               	bcf	status,0,c
  3474  0025B2  3217               	rrcf	___ftmul@f1+2,f,c
  3475  0025B4  3216               	rrcf	___ftmul@f1+1,f,c
  3476  0025B6  3215               	rrcf	___ftmul@f1,f,c
  3477  0025B8  90D8               	bcf	status,0,c
  3478  0025BA  3618               	rlcf	___ftmul@f2,f,c
  3479  0025BC  3619               	rlcf	___ftmul@f2+1,f,c
  3480  0025BE  361A               	rlcf	___ftmul@f2+2,f,c
  3481  0025C0  2E22               	decfsz	___ftmul@cntr,f,c
  3482  0025C2  D7ED               	goto	l2048
  3483  0025C4  D000               	goto	l2056
  3484  0025C6                     l2056:
  3485  0025C6  0E09               	movlw	9
  3486  0025C8  6E22               	movwf	___ftmul@cntr,c
  3487  0025CA  D000               	goto	l2058
  3488  0025CC                     l2058:
  3489  0025CC  A015               	btfss	___ftmul@f1,0,c
  3490  0025CE  D007               	goto	l2062
  3491  0025D0  5018               	movf	___ftmul@f2,w,c
  3492  0025D2  261F               	addwf	___ftmul@f3_as_product,f,c
  3493  0025D4  5019               	movf	___ftmul@f2+1,w,c
  3494  0025D6  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3495  0025D8  501A               	movf	___ftmul@f2+2,w,c
  3496  0025DA  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3497  0025DC  D000               	goto	l2062
  3498  0025DE                     l2062:
  3499  0025DE  90D8               	bcf	status,0,c
  3500  0025E0  3217               	rrcf	___ftmul@f1+2,f,c
  3501  0025E2  3216               	rrcf	___ftmul@f1+1,f,c
  3502  0025E4  3215               	rrcf	___ftmul@f1,f,c
  3503  0025E6  90D8               	bcf	status,0,c
  3504  0025E8  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  3505  0025EA  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  3506  0025EC  321F               	rrcf	___ftmul@f3_as_product,f,c
  3507  0025EE  2E22               	decfsz	___ftmul@cntr,f,c
  3508  0025F0  D7ED               	goto	l2058
  3509  0025F2  D000               	goto	l2066
  3510  0025F4                     l2066:
  3511  0025F4  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3512  0025F8  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3513  0025FC  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3514  002600  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  3515  002604  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  3516  002608  ECF2  F013         	call	___ftpack	;wreg free
  3517  00260C  C001  F015         	movff	?___ftpack,?___ftmul
  3518  002610  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  3519  002614  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  3520  002618  D000               	goto	l718
  3521  00261A                     l718:
  3522  00261A  0012               	return		;funcret
  3523  00261C                     __end_of___ftmul:
  3524                           	opt stack 0
  3525                           tblptru	equ	0xFF8
  3526                           tblptrh	equ	0xFF7
  3527                           tblptrl	equ	0xFF6
  3528                           tablat	equ	0xFF5
  3529                           prodh	equ	0xFF4
  3530                           prodl	equ	0xFF3
  3531                           postinc0	equ	0xFEE
  3532                           wreg	equ	0xFE8
  3533                           postdec1	equ	0xFE5
  3534                           plusw1	equ	0xFE3
  3535                           fsr1l	equ	0xFE1
  3536                           indf2	equ	0xFDF
  3537                           postinc2	equ	0xFDE
  3538                           postdec2	equ	0xFDD
  3539                           plusw2	equ	0xFDB
  3540                           fsr2h	equ	0xFDA
  3541                           fsr2l	equ	0xFD9
  3542                           status	equ	0xFD8
  3543                           
  3544 ;; *************** function ___awmod *****************
  3545 ;; Defined at:
  3546 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  dividend        2    0[COMRAM] int 
  3549 ;;  divisor         2    2[COMRAM] int 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  sign            1    5[COMRAM] unsigned char 
  3552 ;;  counter         1    4[COMRAM] unsigned char 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  2    0[COMRAM] int 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;Total ram usage:        6 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;;		_fround
  3573 ;;		_scale
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text7
  3578  002A62                     __ptext7:
  3579                           	opt stack 0
  3580  002A62                     ___awmod:
  3581                           	opt stack 28
  3582                           
  3583                           ;incstack = 0
  3584  002A62  0E00               	movlw	0
  3585  002A64  6E06               	movwf	___awmod@sign,c
  3586  002A66  AE02               	btfss	___awmod@dividend+1,7,c
  3587  002A68  D007               	goto	l2122
  3588  002A6A  6C01               	negf	___awmod@dividend,c
  3589  002A6C  1E02               	comf	___awmod@dividend+1,f,c
  3590  002A6E  B0D8               	btfsc	status,0,c
  3591  002A70  2A02               	incf	___awmod@dividend+1,f,c
  3592  002A72  0E01               	movlw	1
  3593  002A74  6E06               	movwf	___awmod@sign,c
  3594  002A76  D000               	goto	l2122
  3595  002A78                     l2122:
  3596  002A78  AE04               	btfss	___awmod@divisor+1,7,c
  3597  002A7A  D005               	goto	l2126
  3598  002A7C  6C03               	negf	___awmod@divisor,c
  3599  002A7E  1E04               	comf	___awmod@divisor+1,f,c
  3600  002A80  B0D8               	btfsc	status,0,c
  3601  002A82  2A04               	incf	___awmod@divisor+1,f,c
  3602  002A84  D000               	goto	l2126
  3603  002A86                     l2126:
  3604  002A86  5003               	movf	___awmod@divisor,w,c
  3605  002A88  1004               	iorwf	___awmod@divisor+1,w,c
  3606  002A8A  B4D8               	btfsc	status,2,c
  3607  002A8C  D01D               	goto	l2142
  3608  002A8E  0E01               	movlw	1
  3609  002A90  6E05               	movwf	___awmod@counter,c
  3610  002A92  D005               	goto	l2132
  3611  002A94                     l2130:
  3612  002A94  90D8               	bcf	status,0,c
  3613  002A96  3603               	rlcf	___awmod@divisor,f,c
  3614  002A98  3604               	rlcf	___awmod@divisor+1,f,c
  3615  002A9A  2A05               	incf	___awmod@counter,f,c
  3616  002A9C  D000               	goto	l2132
  3617  002A9E                     l2132:
  3618  002A9E  BE04               	btfsc	___awmod@divisor+1,7,c
  3619  002AA0  D002               	goto	l2134
  3620  002AA2  D7F8               	goto	l2130
  3621  002AA4  D000               	goto	l2134
  3622  002AA6                     l2134:
  3623  002AA6  5003               	movf	___awmod@divisor,w,c
  3624  002AA8  5C01               	subwf	___awmod@dividend,w,c
  3625  002AAA  5004               	movf	___awmod@divisor+1,w,c
  3626  002AAC  5802               	subwfb	___awmod@dividend+1,w,c
  3627  002AAE  A0D8               	btfss	status,0,c
  3628  002AB0  D005               	goto	l2138
  3629  002AB2  5003               	movf	___awmod@divisor,w,c
  3630  002AB4  5E01               	subwf	___awmod@dividend,f,c
  3631  002AB6  5004               	movf	___awmod@divisor+1,w,c
  3632  002AB8  5A02               	subwfb	___awmod@dividend+1,f,c
  3633  002ABA  D000               	goto	l2138
  3634  002ABC                     l2138:
  3635  002ABC  90D8               	bcf	status,0,c
  3636  002ABE  3204               	rrcf	___awmod@divisor+1,f,c
  3637  002AC0  3203               	rrcf	___awmod@divisor,f,c
  3638  002AC2  2E05               	decfsz	___awmod@counter,f,c
  3639  002AC4  D7F0               	goto	l2134
  3640  002AC6  D000               	goto	l2142
  3641  002AC8                     l2142:
  3642  002AC8  5006               	movf	___awmod@sign,w,c
  3643  002ACA  B4D8               	btfsc	status,2,c
  3644  002ACC  D005               	goto	l2146
  3645  002ACE  6C01               	negf	___awmod@dividend,c
  3646  002AD0  1E02               	comf	___awmod@dividend+1,f,c
  3647  002AD2  B0D8               	btfsc	status,0,c
  3648  002AD4  2A02               	incf	___awmod@dividend+1,f,c
  3649  002AD6  D000               	goto	l2146
  3650  002AD8                     l2146:
  3651  002AD8  C001  F001         	movff	___awmod@dividend,?___awmod
  3652  002ADC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3653  002AE0  D000               	goto	l495
  3654  002AE2                     l495:
  3655  002AE2  0012               	return		;funcret
  3656  002AE4                     __end_of___awmod:
  3657                           	opt stack 0
  3658                           tblptru	equ	0xFF8
  3659                           tblptrh	equ	0xFF7
  3660                           tblptrl	equ	0xFF6
  3661                           tablat	equ	0xFF5
  3662                           prodh	equ	0xFF4
  3663                           prodl	equ	0xFF3
  3664                           postinc0	equ	0xFEE
  3665                           wreg	equ	0xFE8
  3666                           postdec1	equ	0xFE5
  3667                           plusw1	equ	0xFE3
  3668                           fsr1l	equ	0xFE1
  3669                           indf2	equ	0xFDF
  3670                           postinc2	equ	0xFDE
  3671                           postdec2	equ	0xFDD
  3672                           plusw2	equ	0xFDB
  3673                           fsr2h	equ	0xFDA
  3674                           fsr2l	equ	0xFD9
  3675                           status	equ	0xFD8
  3676                           
  3677 ;; *************** function ___awdiv *****************
  3678 ;; Defined at:
  3679 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  dividend        2    6[COMRAM] int 
  3682 ;;  divisor         2    8[COMRAM] int 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  quotient        2   12[COMRAM] int 
  3685 ;;  sign            1   11[COMRAM] unsigned char 
  3686 ;;  counter         1   10[COMRAM] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  2    6[COMRAM] int 
  3689 ;; Registers used:
  3690 ;;		wreg, status,2, status,0
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;Total ram usage:        8 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_main
  3706 ;;		_fround
  3707 ;;		_scale
  3708 ;;		_printf
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text8
  3713  0028AA                     __ptext8:
  3714                           	opt stack 0
  3715  0028AA                     ___awdiv:
  3716                           	opt stack 28
  3717                           
  3718                           ;incstack = 0
  3719  0028AA  0E00               	movlw	0
  3720  0028AC  6E0C               	movwf	___awdiv@sign,c
  3721  0028AE  AE0A               	btfss	___awdiv@divisor+1,7,c
  3722  0028B0  D007               	goto	l2078
  3723  0028B2  6C09               	negf	___awdiv@divisor,c
  3724  0028B4  1E0A               	comf	___awdiv@divisor+1,f,c
  3725  0028B6  B0D8               	btfsc	status,0,c
  3726  0028B8  2A0A               	incf	___awdiv@divisor+1,f,c
  3727  0028BA  0E01               	movlw	1
  3728  0028BC  6E0C               	movwf	___awdiv@sign,c
  3729  0028BE  D000               	goto	l2078
  3730  0028C0                     l2078:
  3731  0028C0  AE08               	btfss	___awdiv@dividend+1,7,c
  3732  0028C2  D007               	goto	l2084
  3733  0028C4  6C07               	negf	___awdiv@dividend,c
  3734  0028C6  1E08               	comf	___awdiv@dividend+1,f,c
  3735  0028C8  B0D8               	btfsc	status,0,c
  3736  0028CA  2A08               	incf	___awdiv@dividend+1,f,c
  3737  0028CC  0E01               	movlw	1
  3738  0028CE  1A0C               	xorwf	___awdiv@sign,f,c
  3739  0028D0  D000               	goto	l2084
  3740  0028D2                     l2084:
  3741  0028D2  0E00               	movlw	0
  3742  0028D4  6E0E               	movwf	___awdiv@quotient+1,c
  3743  0028D6  0E00               	movlw	0
  3744  0028D8  6E0D               	movwf	___awdiv@quotient,c
  3745  0028DA  5009               	movf	___awdiv@divisor,w,c
  3746  0028DC  100A               	iorwf	___awdiv@divisor+1,w,c
  3747  0028DE  B4D8               	btfsc	status,2,c
  3748  0028E0  D021               	goto	l2106
  3749  0028E2  0E01               	movlw	1
  3750  0028E4  6E0B               	movwf	___awdiv@counter,c
  3751  0028E6  D005               	goto	l2092
  3752  0028E8                     l2090:
  3753  0028E8  90D8               	bcf	status,0,c
  3754  0028EA  3609               	rlcf	___awdiv@divisor,f,c
  3755  0028EC  360A               	rlcf	___awdiv@divisor+1,f,c
  3756  0028EE  2A0B               	incf	___awdiv@counter,f,c
  3757  0028F0  D000               	goto	l2092
  3758  0028F2                     l2092:
  3759  0028F2  BE0A               	btfsc	___awdiv@divisor+1,7,c
  3760  0028F4  D002               	goto	l2094
  3761  0028F6  D7F8               	goto	l2090
  3762  0028F8  D000               	goto	l2094
  3763  0028FA                     l2094:
  3764  0028FA  90D8               	bcf	status,0,c
  3765  0028FC  360D               	rlcf	___awdiv@quotient,f,c
  3766  0028FE  360E               	rlcf	___awdiv@quotient+1,f,c
  3767  002900  5009               	movf	___awdiv@divisor,w,c
  3768  002902  5C07               	subwf	___awdiv@dividend,w,c
  3769  002904  500A               	movf	___awdiv@divisor+1,w,c
  3770  002906  5808               	subwfb	___awdiv@dividend+1,w,c
  3771  002908  A0D8               	btfss	status,0,c
  3772  00290A  D006               	goto	l2102
  3773  00290C  5009               	movf	___awdiv@divisor,w,c
  3774  00290E  5E07               	subwf	___awdiv@dividend,f,c
  3775  002910  500A               	movf	___awdiv@divisor+1,w,c
  3776  002912  5A08               	subwfb	___awdiv@dividend+1,f,c
  3777  002914  800D               	bsf	___awdiv@quotient,0,c
  3778  002916  D000               	goto	l2102
  3779  002918                     l2102:
  3780  002918  90D8               	bcf	status,0,c
  3781  00291A  320A               	rrcf	___awdiv@divisor+1,f,c
  3782  00291C  3209               	rrcf	___awdiv@divisor,f,c
  3783  00291E  2E0B               	decfsz	___awdiv@counter,f,c
  3784  002920  D7EC               	goto	l2094
  3785  002922  D000               	goto	l2106
  3786  002924                     l2106:
  3787  002924  500C               	movf	___awdiv@sign,w,c
  3788  002926  B4D8               	btfsc	status,2,c
  3789  002928  D005               	goto	l2110
  3790  00292A  6C0D               	negf	___awdiv@quotient,c
  3791  00292C  1E0E               	comf	___awdiv@quotient+1,f,c
  3792  00292E  B0D8               	btfsc	status,0,c
  3793  002930  2A0E               	incf	___awdiv@quotient+1,f,c
  3794  002932  D000               	goto	l2110
  3795  002934                     l2110:
  3796  002934  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3797  002938  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3798  00293C  D000               	goto	l482
  3799  00293E                     l482:
  3800  00293E  0012               	return		;funcret
  3801  002940                     __end_of___awdiv:
  3802                           	opt stack 0
  3803                           tblptru	equ	0xFF8
  3804                           tblptrh	equ	0xFF7
  3805                           tblptrl	equ	0xFF6
  3806                           tablat	equ	0xFF5
  3807                           prodh	equ	0xFF4
  3808                           prodl	equ	0xFF3
  3809                           postinc0	equ	0xFEE
  3810                           wreg	equ	0xFE8
  3811                           postdec1	equ	0xFE5
  3812                           plusw1	equ	0xFE3
  3813                           fsr1l	equ	0xFE1
  3814                           indf2	equ	0xFDF
  3815                           postinc2	equ	0xFDE
  3816                           postdec2	equ	0xFDD
  3817                           plusw2	equ	0xFDB
  3818                           fsr2h	equ	0xFDA
  3819                           fsr2l	equ	0xFD9
  3820                           status	equ	0xFD8
  3821                           
  3822 ;; *************** function __tdiv_to_l_ *****************
  3823 ;; Defined at:
  3824 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  f1              3    0[COMRAM] float 
  3827 ;;  f2              3    3[COMRAM] float 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  quot            4    9[COMRAM] unsigned long 
  3830 ;;  exp1            1   14[COMRAM] unsigned char 
  3831 ;;  cntr            1   13[COMRAM] unsigned char 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  4    0[COMRAM] unsigned long 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2, status,0
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3841 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;Total ram usage:       15 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_printf
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text9
  3855  00230A                     __ptext9:
  3856                           	opt stack 0
  3857  00230A                     __tdiv_to_l_:
  3858                           	opt stack 29
  3859                           
  3860                           ;incstack = 0
  3861  00230A  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3862  00230E  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3863  002310  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3864  002312  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3865  002314  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3866  002316  E301               	bnc	u2241
  3867  002318  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3868  00231A                     u2241:
  3869  00231A  5007               	movf	??__tdiv_to_l_,w,c
  3870  00231C  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3871  00231E  500F               	movf	__tdiv_to_l_@exp1,w,c
  3872  002320  A4D8               	btfss	status,2,c
  3873  002322  D002               	goto	l2270
  3874  002324  D05D               	goto	l2312
  3875  002326  D078               	goto	l694
  3876  002328                     l2270:
  3877  002328  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3878  00232C  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3879  00232E  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3880  002330  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3881  002332  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3882  002334  E301               	bnc	u2261
  3883  002336  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3884  002338                     u2261:
  3885  002338  5007               	movf	??__tdiv_to_l_,w,c
  3886  00233A  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3887  00233C  500E               	movf	__tdiv_to_l_@cntr,w,c
  3888  00233E  A4D8               	btfss	status,2,c
  3889  002340  D002               	goto	l2276
  3890  002342  D04E               	goto	l2312
  3891  002344  D069               	goto	l694
  3892  002346                     l2276:
  3893  002346  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3894  002348  0EFF               	movlw	255
  3895  00234A  1601               	andwf	__tdiv_to_l_@f1,f,c
  3896  00234C  0EFF               	movlw	255
  3897  00234E  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3898  002350  0E00               	movlw	0
  3899  002352  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3900  002354  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3901  002356  0EFF               	movlw	255
  3902  002358  1604               	andwf	__tdiv_to_l_@f2,f,c
  3903  00235A  0EFF               	movlw	255
  3904  00235C  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3905  00235E  0E00               	movlw	0
  3906  002360  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3907  002362  0E00               	movlw	0
  3908  002364  6E0A               	movwf	__tdiv_to_l_@quot,c
  3909  002366  0E00               	movlw	0
  3910  002368  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3911  00236A  0E00               	movlw	0
  3912  00236C  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3913  00236E  0E00               	movlw	0
  3914  002370  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3915  002372  0E7F               	movlw	127
  3916  002374  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3917  002376  500E               	movf	__tdiv_to_l_@cntr,w,c
  3918  002378  0F98               	addlw	152
  3919  00237A  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3920  00237C  0E18               	movlw	24
  3921  00237E  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3922  002380                     l696:
  3923  002380  90D8               	bcf	status,0,c
  3924  002382  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3925  002384  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3926  002386  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3927  002388  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3928  00238A  5004               	movf	__tdiv_to_l_@f2,w,c
  3929  00238C  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3930  00238E  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3931  002390  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3932  002392  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3933  002394  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3934  002396  A0D8               	btfss	status,0,c
  3935  002398  D007               	goto	l697
  3936  00239A  5004               	movf	__tdiv_to_l_@f2,w,c
  3937  00239C  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3938  00239E  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3939  0023A0  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3940  0023A2  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3941  0023A4  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3942  0023A6  800A               	bsf	__tdiv_to_l_@quot,0,c
  3943  0023A8                     l697:
  3944  0023A8  90D8               	bcf	status,0,c
  3945  0023AA  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3946  0023AC  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3947  0023AE  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3948  0023B0  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3949  0023B2  D7E6               	goto	l696
  3950  0023B4  D000               	goto	l2298
  3951  0023B6                     l2298:
  3952  0023B6  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3953  0023B8  D010               	goto	l2310
  3954  0023BA  500F               	movf	__tdiv_to_l_@exp1,w,c
  3955  0023BC  0A80               	xorlw	128
  3956  0023BE  0F97               	addlw	151
  3957  0023C0  B0D8               	btfsc	status,0,c
  3958  0023C2  D003               	goto	l2306
  3959  0023C4  D00D               	goto	l2312
  3960  0023C6  D028               	goto	l694
  3961  0023C8  D000               	goto	l2306
  3962  0023CA                     l2306:
  3963  0023CA  90D8               	bcf	status,0,c
  3964  0023CC  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3965  0023CE  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3966  0023D0  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3967  0023D2  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3968  0023D4  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3969  0023D6  D7F9               	goto	l2306
  3970  0023D8  D017               	goto	l703
  3971  0023DA                     l2310:
  3972  0023DA  0E17               	movlw	23
  3973  0023DC  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3974  0023DE  D011               	goto	l2318
  3975  0023E0                     l2312:
  3976  0023E0  0E00               	movlw	0
  3977  0023E2  6E01               	movwf	?__tdiv_to_l_,c
  3978  0023E4  0E00               	movlw	0
  3979  0023E6  6E02               	movwf	?__tdiv_to_l_+1,c
  3980  0023E8  0E00               	movlw	0
  3981  0023EA  6E03               	movwf	?__tdiv_to_l_+2,c
  3982  0023EC  0E00               	movlw	0
  3983  0023EE  6E04               	movwf	?__tdiv_to_l_+3,c
  3984  0023F0  D013               	goto	l694
  3985  0023F2  D007               	goto	l2318
  3986  0023F4                     l2316:
  3987  0023F4  90D8               	bcf	status,0,c
  3988  0023F6  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3989  0023F8  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3990  0023FA  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3991  0023FC  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3992  0023FE  060F               	decf	__tdiv_to_l_@exp1,f,c
  3993  002400  D000               	goto	l2318
  3994  002402                     l2318:
  3995  002402  500F               	movf	__tdiv_to_l_@exp1,w,c
  3996  002404  A4D8               	btfss	status,2,c
  3997  002406  D7F6               	goto	l2316
  3998  002408                     l703:
  3999  002408  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4000  00240C  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4001  002410  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4002  002414  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4003  002418                     l694:
  4004  002418  0012               	return		;funcret
  4005  00241A                     __end_of__tdiv_to_l_:
  4006                           	opt stack 0
  4007                           tblptru	equ	0xFF8
  4008                           tblptrh	equ	0xFF7
  4009                           tblptrl	equ	0xFF6
  4010                           tablat	equ	0xFF5
  4011                           prodh	equ	0xFF4
  4012                           prodl	equ	0xFF3
  4013                           postinc0	equ	0xFEE
  4014                           wreg	equ	0xFE8
  4015                           postdec1	equ	0xFE5
  4016                           plusw1	equ	0xFE3
  4017                           fsr1l	equ	0xFE1
  4018                           indf2	equ	0xFDF
  4019                           postinc2	equ	0xFDE
  4020                           postdec2	equ	0xFDD
  4021                           plusw2	equ	0xFDB
  4022                           fsr2h	equ	0xFDA
  4023                           fsr2l	equ	0xFD9
  4024                           status	equ	0xFD8
  4025                           
  4026 ;; *************** function __div_to_l_ *****************
  4027 ;; Defined at:
  4028 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  f1              3    0[COMRAM] unsigned long 
  4031 ;;  f2              3    3[COMRAM] unsigned long 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  quot            4    6[COMRAM] unsigned long 
  4034 ;;  exp1            1   11[COMRAM] unsigned char 
  4035 ;;  cntr            1   10[COMRAM] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  4    0[COMRAM] unsigned long 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4045 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;Total ram usage:       12 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_printf
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text10
  4059  00241A                     __ptext10:
  4060                           	opt stack 0
  4061  00241A                     __div_to_l_:
  4062                           	opt stack 29
  4063                           
  4064                           ;incstack = 0
  4065  00241A  3403               	rlcf	__div_to_l_@f1+2,w,c
  4066  00241C  3404               	rlcf	__div_to_l_@f1+3,w,c
  4067  00241E  6E0C               	movwf	__div_to_l_@exp1,c
  4068  002420  500C               	movf	__div_to_l_@exp1,w,c
  4069  002422  A4D8               	btfss	status,2,c
  4070  002424  D002               	goto	l2326
  4071  002426  D061               	goto	l2372
  4072  002428  D07C               	goto	l573
  4073  00242A                     l2326:
  4074  00242A  3406               	rlcf	__div_to_l_@f2+2,w,c
  4075  00242C  3407               	rlcf	__div_to_l_@f2+3,w,c
  4076  00242E  6E0B               	movwf	__div_to_l_@cntr,c
  4077  002430  500B               	movf	__div_to_l_@cntr,w,c
  4078  002432  A4D8               	btfss	status,2,c
  4079  002434  D002               	goto	l2332
  4080  002436  D059               	goto	l2372
  4081  002438  D074               	goto	l573
  4082  00243A                     l2332:
  4083  00243A  8E03               	bsf	__div_to_l_@f1+2,7,c
  4084  00243C  0EFF               	movlw	255
  4085  00243E  1601               	andwf	__div_to_l_@f1,f,c
  4086  002440  0EFF               	movlw	255
  4087  002442  1602               	andwf	__div_to_l_@f1+1,f,c
  4088  002444  0EFF               	movlw	255
  4089  002446  1603               	andwf	__div_to_l_@f1+2,f,c
  4090  002448  0E00               	movlw	0
  4091  00244A  1604               	andwf	__div_to_l_@f1+3,f,c
  4092  00244C  8E06               	bsf	__div_to_l_@f2+2,7,c
  4093  00244E  0EFF               	movlw	255
  4094  002450  1604               	andwf	__div_to_l_@f2,f,c
  4095  002452  0EFF               	movlw	255
  4096  002454  1605               	andwf	__div_to_l_@f2+1,f,c
  4097  002456  0EFF               	movlw	255
  4098  002458  1606               	andwf	__div_to_l_@f2+2,f,c
  4099  00245A  0E00               	movlw	0
  4100  00245C  1607               	andwf	__div_to_l_@f2+3,f,c
  4101  00245E  0E00               	movlw	0
  4102  002460  6E07               	movwf	__div_to_l_@quot,c
  4103  002462  0E00               	movlw	0
  4104  002464  6E08               	movwf	__div_to_l_@quot+1,c
  4105  002466  0E00               	movlw	0
  4106  002468  6E09               	movwf	__div_to_l_@quot+2,c
  4107  00246A  0E00               	movlw	0
  4108  00246C  6E0A               	movwf	__div_to_l_@quot+3,c
  4109  00246E  0E7F               	movlw	127
  4110  002470  5E0C               	subwf	__div_to_l_@exp1,f,c
  4111  002472  500B               	movf	__div_to_l_@cntr,w,c
  4112  002474  0FA0               	addlw	160
  4113  002476  5E0C               	subwf	__div_to_l_@exp1,f,c
  4114  002478  0E20               	movlw	32
  4115  00247A  6E0B               	movwf	__div_to_l_@cntr,c
  4116  00247C  D000               	goto	l2346
  4117  00247E                     l2346:
  4118  00247E  90D8               	bcf	status,0,c
  4119  002480  3607               	rlcf	__div_to_l_@quot,f,c
  4120  002482  3608               	rlcf	__div_to_l_@quot+1,f,c
  4121  002484  3609               	rlcf	__div_to_l_@quot+2,f,c
  4122  002486  360A               	rlcf	__div_to_l_@quot+3,f,c
  4123  002488  5004               	movf	__div_to_l_@f2,w,c
  4124  00248A  5C01               	subwf	__div_to_l_@f1,w,c
  4125  00248C  5005               	movf	__div_to_l_@f2+1,w,c
  4126  00248E  5802               	subwfb	__div_to_l_@f1+1,w,c
  4127  002490  5006               	movf	__div_to_l_@f2+2,w,c
  4128  002492  5803               	subwfb	__div_to_l_@f1+2,w,c
  4129  002494  5007               	movf	__div_to_l_@f2+3,w,c
  4130  002496  5804               	subwfb	__div_to_l_@f1+3,w,c
  4131  002498  A0D8               	btfss	status,0,c
  4132  00249A  D00A               	goto	l2354
  4133  00249C  5004               	movf	__div_to_l_@f2,w,c
  4134  00249E  5E01               	subwf	__div_to_l_@f1,f,c
  4135  0024A0  5005               	movf	__div_to_l_@f2+1,w,c
  4136  0024A2  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4137  0024A4  5006               	movf	__div_to_l_@f2+2,w,c
  4138  0024A6  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4139  0024A8  5007               	movf	__div_to_l_@f2+3,w,c
  4140  0024AA  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4141  0024AC  8007               	bsf	__div_to_l_@quot,0,c
  4142  0024AE  D000               	goto	l2354
  4143  0024B0                     l2354:
  4144  0024B0  90D8               	bcf	status,0,c
  4145  0024B2  3601               	rlcf	__div_to_l_@f1,f,c
  4146  0024B4  3602               	rlcf	__div_to_l_@f1+1,f,c
  4147  0024B6  3603               	rlcf	__div_to_l_@f1+2,f,c
  4148  0024B8  3604               	rlcf	__div_to_l_@f1+3,f,c
  4149  0024BA  2E0B               	decfsz	__div_to_l_@cntr,f,c
  4150  0024BC  D7E0               	goto	l2346
  4151  0024BE  D000               	goto	l2358
  4152  0024C0                     l2358:
  4153  0024C0  AE0C               	btfss	__div_to_l_@exp1,7,c
  4154  0024C2  D010               	goto	l2370
  4155  0024C4  500C               	movf	__div_to_l_@exp1,w,c
  4156  0024C6  0A80               	xorlw	128
  4157  0024C8  0F9F               	addlw	159
  4158  0024CA  B0D8               	btfsc	status,0,c
  4159  0024CC  D003               	goto	l2366
  4160  0024CE  D00D               	goto	l2372
  4161  0024D0  D028               	goto	l573
  4162  0024D2  D000               	goto	l2366
  4163  0024D4                     l2366:
  4164  0024D4  90D8               	bcf	status,0,c
  4165  0024D6  320A               	rrcf	__div_to_l_@quot+3,f,c
  4166  0024D8  3209               	rrcf	__div_to_l_@quot+2,f,c
  4167  0024DA  3208               	rrcf	__div_to_l_@quot+1,f,c
  4168  0024DC  3207               	rrcf	__div_to_l_@quot,f,c
  4169  0024DE  3E0C               	incfsz	__div_to_l_@exp1,f,c
  4170  0024E0  D7F9               	goto	l2366
  4171  0024E2  D017               	goto	l582
  4172  0024E4                     l2370:
  4173  0024E4  0E1F               	movlw	31
  4174  0024E6  640C               	cpfsgt	__div_to_l_@exp1,c
  4175  0024E8  D011               	goto	l2378
  4176  0024EA                     l2372:
  4177  0024EA  0E00               	movlw	0
  4178  0024EC  6E01               	movwf	?__div_to_l_,c
  4179  0024EE  0E00               	movlw	0
  4180  0024F0  6E02               	movwf	?__div_to_l_+1,c
  4181  0024F2  0E00               	movlw	0
  4182  0024F4  6E03               	movwf	?__div_to_l_+2,c
  4183  0024F6  0E00               	movlw	0
  4184  0024F8  6E04               	movwf	?__div_to_l_+3,c
  4185  0024FA  D013               	goto	l573
  4186  0024FC  D007               	goto	l2378
  4187  0024FE                     l2376:
  4188  0024FE  90D8               	bcf	status,0,c
  4189  002500  3607               	rlcf	__div_to_l_@quot,f,c
  4190  002502  3608               	rlcf	__div_to_l_@quot+1,f,c
  4191  002504  3609               	rlcf	__div_to_l_@quot+2,f,c
  4192  002506  360A               	rlcf	__div_to_l_@quot+3,f,c
  4193  002508  060C               	decf	__div_to_l_@exp1,f,c
  4194  00250A  D000               	goto	l2378
  4195  00250C                     l2378:
  4196  00250C  500C               	movf	__div_to_l_@exp1,w,c
  4197  00250E  A4D8               	btfss	status,2,c
  4198  002510  D7F6               	goto	l2376
  4199  002512                     l582:
  4200  002512  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4201  002516  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4202  00251A  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4203  00251E  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4204  002522                     l573:
  4205  002522  0012               	return		;funcret
  4206  002524                     __end_of__div_to_l_:
  4207                           	opt stack 0
  4208                           tblptru	equ	0xFF8
  4209                           tblptrh	equ	0xFF7
  4210                           tblptrl	equ	0xFF6
  4211                           tablat	equ	0xFF5
  4212                           prodh	equ	0xFF4
  4213                           prodl	equ	0xFF3
  4214                           postinc0	equ	0xFEE
  4215                           wreg	equ	0xFE8
  4216                           postdec1	equ	0xFE5
  4217                           plusw1	equ	0xFE3
  4218                           fsr1l	equ	0xFE1
  4219                           indf2	equ	0xFDF
  4220                           postinc2	equ	0xFDE
  4221                           postdec2	equ	0xFDD
  4222                           plusw2	equ	0xFDB
  4223                           fsr2h	equ	0xFDA
  4224                           fsr2l	equ	0xFD9
  4225                           status	equ	0xFD8
  4226                           
  4227 ;; *************** function ___lltoft *****************
  4228 ;; Defined at:
  4229 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  c               4    8[COMRAM] unsigned long 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  exp             1   16[COMRAM] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  3    8[COMRAM] float 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;Total ram usage:        9 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    1
  4250 ;; This function calls:
  4251 ;;		___ftpack
  4252 ;; This function is called by:
  4253 ;;		_printf
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text11
  4258  002BC4                     __ptext11:
  4259                           	opt stack 0
  4260  002BC4                     ___lltoft:
  4261                           	opt stack 28
  4262                           
  4263                           ;incstack = 0
  4264  002BC4  0E8E               	movlw	142
  4265  002BC6  6E11               	movwf	___lltoft@exp,c
  4266  002BC8  D007               	goto	l2498
  4267  002BCA                     l2496:
  4268  002BCA  90D8               	bcf	status,0,c
  4269  002BCC  320C               	rrcf	___lltoft@c+3,f,c
  4270  002BCE  320B               	rrcf	___lltoft@c+2,f,c
  4271  002BD0  320A               	rrcf	___lltoft@c+1,f,c
  4272  002BD2  3209               	rrcf	___lltoft@c,f,c
  4273  002BD4  2A11               	incf	___lltoft@exp,f,c
  4274  002BD6  D000               	goto	l2498
  4275  002BD8                     l2498:
  4276  002BD8  0E00               	movlw	0
  4277  002BDA  1409               	andwf	___lltoft@c,w,c
  4278  002BDC  6E0D               	movwf	??___lltoft& (0+255),c
  4279  002BDE  0E00               	movlw	0
  4280  002BE0  140A               	andwf	___lltoft@c+1,w,c
  4281  002BE2  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4282  002BE4  0E00               	movlw	0
  4283  002BE6  140B               	andwf	___lltoft@c+2,w,c
  4284  002BE8  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4285  002BEA  0EFF               	movlw	255
  4286  002BEC  140C               	andwf	___lltoft@c+3,w,c
  4287  002BEE  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4288  002BF0  500D               	movf	??___lltoft,w,c
  4289  002BF2  100E               	iorwf	??___lltoft+1,w,c
  4290  002BF4  100F               	iorwf	??___lltoft+2,w,c
  4291  002BF6  1010               	iorwf	??___lltoft+3,w,c
  4292  002BF8  A4D8               	btfss	status,2,c
  4293  002BFA  D7E7               	goto	l2496
  4294  002BFC  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4295  002C00  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4296  002C04  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4297  002C08  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4298  002C0C  0E00               	movlw	0
  4299  002C0E  6E05               	movwf	___ftpack@sign,c
  4300  002C10  ECF2  F013         	call	___ftpack	;wreg free
  4301  002C14  C001  F009         	movff	?___ftpack,?___lltoft
  4302  002C18  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4303  002C1C  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4304  002C20  D000               	goto	l808
  4305  002C22                     l808:
  4306  002C22  0012               	return		;funcret
  4307  002C24                     __end_of___lltoft:
  4308                           	opt stack 0
  4309                           tblptru	equ	0xFF8
  4310                           tblptrh	equ	0xFF7
  4311                           tblptrl	equ	0xFF6
  4312                           tablat	equ	0xFF5
  4313                           prodh	equ	0xFF4
  4314                           prodl	equ	0xFF3
  4315                           postinc0	equ	0xFEE
  4316                           wreg	equ	0xFE8
  4317                           postdec1	equ	0xFE5
  4318                           plusw1	equ	0xFE3
  4319                           fsr1l	equ	0xFE1
  4320                           indf2	equ	0xFDF
  4321                           postinc2	equ	0xFDE
  4322                           postdec2	equ	0xFDD
  4323                           plusw2	equ	0xFDB
  4324                           fsr2h	equ	0xFDA
  4325                           fsr2l	equ	0xFD9
  4326                           status	equ	0xFD8
  4327                           
  4328 ;; *************** function ___llmod *****************
  4329 ;; Defined at:
  4330 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  dividend        4   13[COMRAM] unsigned long 
  4333 ;;  divisor         4   17[COMRAM] unsigned long 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  counter         1   21[COMRAM] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  4   13[COMRAM] unsigned long 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4345 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;Total ram usage:        9 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_printf
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text12
  4359  002AE4                     __ptext12:
  4360                           	opt stack 0
  4361  002AE4                     ___llmod:
  4362                           	opt stack 29
  4363                           
  4364                           ;incstack = 0
  4365  002AE4  5012               	movf	___llmod@divisor,w,c
  4366  002AE6  1013               	iorwf	___llmod@divisor+1,w,c
  4367  002AE8  1014               	iorwf	___llmod@divisor+2,w,c
  4368  002AEA  1015               	iorwf	___llmod@divisor+3,w,c
  4369  002AEC  B4D8               	btfsc	status,2,c
  4370  002AEE  D029               	goto	l788
  4371  002AF0  0E01               	movlw	1
  4372  002AF2  6E16               	movwf	___llmod@counter,c
  4373  002AF4  D007               	goto	l2484
  4374  002AF6                     l2482:
  4375  002AF6  90D8               	bcf	status,0,c
  4376  002AF8  3612               	rlcf	___llmod@divisor,f,c
  4377  002AFA  3613               	rlcf	___llmod@divisor+1,f,c
  4378  002AFC  3614               	rlcf	___llmod@divisor+2,f,c
  4379  002AFE  3615               	rlcf	___llmod@divisor+3,f,c
  4380  002B00  2A16               	incf	___llmod@counter,f,c
  4381  002B02  D000               	goto	l2484
  4382  002B04                     l2484:
  4383  002B04  BE15               	btfsc	___llmod@divisor+3,7,c
  4384  002B06  D002               	goto	l2486
  4385  002B08  D7F6               	goto	l2482
  4386  002B0A  D000               	goto	l2486
  4387  002B0C                     l2486:
  4388  002B0C  5012               	movf	___llmod@divisor,w,c
  4389  002B0E  5C0E               	subwf	___llmod@dividend,w,c
  4390  002B10  5013               	movf	___llmod@divisor+1,w,c
  4391  002B12  580F               	subwfb	___llmod@dividend+1,w,c
  4392  002B14  5014               	movf	___llmod@divisor+2,w,c
  4393  002B16  5810               	subwfb	___llmod@dividend+2,w,c
  4394  002B18  5015               	movf	___llmod@divisor+3,w,c
  4395  002B1A  5811               	subwfb	___llmod@dividend+3,w,c
  4396  002B1C  A0D8               	btfss	status,0,c
  4397  002B1E  D009               	goto	l2490
  4398  002B20  5012               	movf	___llmod@divisor,w,c
  4399  002B22  5E0E               	subwf	___llmod@dividend,f,c
  4400  002B24  5013               	movf	___llmod@divisor+1,w,c
  4401  002B26  5A0F               	subwfb	___llmod@dividend+1,f,c
  4402  002B28  5014               	movf	___llmod@divisor+2,w,c
  4403  002B2A  5A10               	subwfb	___llmod@dividend+2,f,c
  4404  002B2C  5015               	movf	___llmod@divisor+3,w,c
  4405  002B2E  5A11               	subwfb	___llmod@dividend+3,f,c
  4406  002B30  D000               	goto	l2490
  4407  002B32                     l2490:
  4408  002B32  90D8               	bcf	status,0,c
  4409  002B34  3215               	rrcf	___llmod@divisor+3,f,c
  4410  002B36  3214               	rrcf	___llmod@divisor+2,f,c
  4411  002B38  3213               	rrcf	___llmod@divisor+1,f,c
  4412  002B3A  3212               	rrcf	___llmod@divisor,f,c
  4413  002B3C  2E16               	decfsz	___llmod@counter,f,c
  4414  002B3E  D7E6               	goto	l2486
  4415  002B40  D000               	goto	l788
  4416  002B42                     l788:
  4417  002B42  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4418  002B46  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4419  002B4A  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4420  002B4E  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4421  002B52  0012               	return		;funcret
  4422  002B54                     __end_of___llmod:
  4423                           	opt stack 0
  4424                           tblptru	equ	0xFF8
  4425                           tblptrh	equ	0xFF7
  4426                           tblptrl	equ	0xFF6
  4427                           tablat	equ	0xFF5
  4428                           prodh	equ	0xFF4
  4429                           prodl	equ	0xFF3
  4430                           postinc0	equ	0xFEE
  4431                           wreg	equ	0xFE8
  4432                           postdec1	equ	0xFE5
  4433                           plusw1	equ	0xFE3
  4434                           fsr1l	equ	0xFE1
  4435                           indf2	equ	0xFDF
  4436                           postinc2	equ	0xFDE
  4437                           postdec2	equ	0xFDD
  4438                           plusw2	equ	0xFDB
  4439                           fsr2h	equ	0xFDA
  4440                           fsr2l	equ	0xFD9
  4441                           status	equ	0xFD8
  4442                           
  4443 ;; *************** function ___lldiv *****************
  4444 ;; Defined at:
  4445 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  dividend        4    0[COMRAM] unsigned long 
  4448 ;;  divisor         4    4[COMRAM] unsigned long 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  quotient        4    8[COMRAM] unsigned long 
  4451 ;;  counter         1   12[COMRAM] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  4    0[COMRAM] unsigned long 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4461 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;Total ram usage:       13 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_printf
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text13
  4475  0029D6                     __ptext13:
  4476                           	opt stack 0
  4477  0029D6                     ___lldiv:
  4478                           	opt stack 29
  4479                           
  4480                           ;incstack = 0
  4481  0029D6  0E00               	movlw	0
  4482  0029D8  6E09               	movwf	___lldiv@quotient,c
  4483  0029DA  0E00               	movlw	0
  4484  0029DC  6E0A               	movwf	___lldiv@quotient+1,c
  4485  0029DE  0E00               	movlw	0
  4486  0029E0  6E0B               	movwf	___lldiv@quotient+2,c
  4487  0029E2  0E00               	movlw	0
  4488  0029E4  6E0C               	movwf	___lldiv@quotient+3,c
  4489  0029E6  5005               	movf	___lldiv@divisor,w,c
  4490  0029E8  1006               	iorwf	___lldiv@divisor+1,w,c
  4491  0029EA  1007               	iorwf	___lldiv@divisor+2,w,c
  4492  0029EC  1008               	iorwf	___lldiv@divisor+3,w,c
  4493  0029EE  B4D8               	btfsc	status,2,c
  4494  0029F0  D02F               	goto	l778
  4495  0029F2  0E01               	movlw	1
  4496  0029F4  6E0D               	movwf	___lldiv@counter,c
  4497  0029F6  D007               	goto	l2464
  4498  0029F8                     l2462:
  4499  0029F8  90D8               	bcf	status,0,c
  4500  0029FA  3605               	rlcf	___lldiv@divisor,f,c
  4501  0029FC  3606               	rlcf	___lldiv@divisor+1,f,c
  4502  0029FE  3607               	rlcf	___lldiv@divisor+2,f,c
  4503  002A00  3608               	rlcf	___lldiv@divisor+3,f,c
  4504  002A02  2A0D               	incf	___lldiv@counter,f,c
  4505  002A04  D000               	goto	l2464
  4506  002A06                     l2464:
  4507  002A06  BE08               	btfsc	___lldiv@divisor+3,7,c
  4508  002A08  D002               	goto	l2466
  4509  002A0A  D7F6               	goto	l2462
  4510  002A0C  D000               	goto	l2466
  4511  002A0E                     l2466:
  4512  002A0E  90D8               	bcf	status,0,c
  4513  002A10  3609               	rlcf	___lldiv@quotient,f,c
  4514  002A12  360A               	rlcf	___lldiv@quotient+1,f,c
  4515  002A14  360B               	rlcf	___lldiv@quotient+2,f,c
  4516  002A16  360C               	rlcf	___lldiv@quotient+3,f,c
  4517  002A18  5005               	movf	___lldiv@divisor,w,c
  4518  002A1A  5C01               	subwf	___lldiv@dividend,w,c
  4519  002A1C  5006               	movf	___lldiv@divisor+1,w,c
  4520  002A1E  5802               	subwfb	___lldiv@dividend+1,w,c
  4521  002A20  5007               	movf	___lldiv@divisor+2,w,c
  4522  002A22  5803               	subwfb	___lldiv@dividend+2,w,c
  4523  002A24  5008               	movf	___lldiv@divisor+3,w,c
  4524  002A26  5804               	subwfb	___lldiv@dividend+3,w,c
  4525  002A28  A0D8               	btfss	status,0,c
  4526  002A2A  D00A               	goto	l2474
  4527  002A2C  5005               	movf	___lldiv@divisor,w,c
  4528  002A2E  5E01               	subwf	___lldiv@dividend,f,c
  4529  002A30  5006               	movf	___lldiv@divisor+1,w,c
  4530  002A32  5A02               	subwfb	___lldiv@dividend+1,f,c
  4531  002A34  5007               	movf	___lldiv@divisor+2,w,c
  4532  002A36  5A03               	subwfb	___lldiv@dividend+2,f,c
  4533  002A38  5008               	movf	___lldiv@divisor+3,w,c
  4534  002A3A  5A04               	subwfb	___lldiv@dividend+3,f,c
  4535  002A3C  8009               	bsf	___lldiv@quotient,0,c
  4536  002A3E  D000               	goto	l2474
  4537  002A40                     l2474:
  4538  002A40  90D8               	bcf	status,0,c
  4539  002A42  3208               	rrcf	___lldiv@divisor+3,f,c
  4540  002A44  3207               	rrcf	___lldiv@divisor+2,f,c
  4541  002A46  3206               	rrcf	___lldiv@divisor+1,f,c
  4542  002A48  3205               	rrcf	___lldiv@divisor,f,c
  4543  002A4A  2E0D               	decfsz	___lldiv@counter,f,c
  4544  002A4C  D7E0               	goto	l2466
  4545  002A4E  D000               	goto	l778
  4546  002A50                     l778:
  4547  002A50  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4548  002A54  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4549  002A58  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4550  002A5C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4551  002A60  0012               	return		;funcret
  4552  002A62                     __end_of___lldiv:
  4553                           	opt stack 0
  4554                           tblptru	equ	0xFF8
  4555                           tblptrh	equ	0xFF7
  4556                           tblptrl	equ	0xFF6
  4557                           tablat	equ	0xFF5
  4558                           prodh	equ	0xFF4
  4559                           prodl	equ	0xFF3
  4560                           postinc0	equ	0xFEE
  4561                           wreg	equ	0xFE8
  4562                           postdec1	equ	0xFE5
  4563                           plusw1	equ	0xFE3
  4564                           fsr1l	equ	0xFE1
  4565                           indf2	equ	0xFDF
  4566                           postinc2	equ	0xFDE
  4567                           postdec2	equ	0xFDD
  4568                           plusw2	equ	0xFDB
  4569                           fsr2h	equ	0xFDA
  4570                           fsr2l	equ	0xFD9
  4571                           status	equ	0xFD8
  4572                           
  4573 ;; *************** function ___fttol *****************
  4574 ;; Defined at:
  4575 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  f1              3   42[COMRAM] float 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  lval            4   52[COMRAM] unsigned long 
  4580 ;;  exp1            1   56[COMRAM] unsigned char 
  4581 ;;  sign1           1   51[COMRAM] unsigned char 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  4   42[COMRAM] long 
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, status,0
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;Total ram usage:       15 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_main
  4601 ;;		_printf
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text14
  4606  00261C                     __ptext14:
  4607                           	opt stack 0
  4608  00261C                     ___fttol:
  4609                           	opt stack 29
  4610                           
  4611                           ;incstack = 0
  4612  00261C  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4613  002620  6A30               	clrf	(??___fttol+1)& (0+255),c
  4614  002622  6A31               	clrf	(??___fttol+2)& (0+255),c
  4615  002624  342C               	rlcf	___fttol@f1+1,w,c
  4616  002626  362F               	rlcf	??___fttol& (0+255),f,c
  4617  002628  E301               	bnc	u2451
  4618  00262A  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4619  00262C                     u2451:
  4620  00262C  502F               	movf	??___fttol,w,c
  4621  00262E  6E39               	movwf	___fttol@exp1,c
  4622  002630  5039               	movf	___fttol@exp1,w,c
  4623  002632  A4D8               	btfss	status,2,c
  4624  002634  D002               	goto	l2416
  4625  002636  D039               	goto	l2440
  4626  002638  D063               	goto	l739
  4627  00263A                     l2416:
  4628  00263A  0E17               	movlw	23
  4629  00263C  6E2F               	movwf	??___fttol& (0+255),c
  4630  00263E  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4631  002642  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4632  002646  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4633  00264A  282F               	incf	??___fttol,w,c
  4634  00264C  6E33               	movwf	(??___fttol+4)& (0+255),c
  4635  00264E  D004               	goto	u2470
  4636  002650                     u2475:
  4637  002650  90D8               	bcf	status,0,c
  4638  002652  3232               	rrcf	??___fttol+3,f,c
  4639  002654  3231               	rrcf	??___fttol+2,f,c
  4640  002656  3230               	rrcf	??___fttol+1,f,c
  4641  002658                     u2470:
  4642  002658  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4643  00265A  D7FA               	goto	u2475
  4644  00265C  5030               	movf	??___fttol+1,w,c
  4645  00265E  6E34               	movwf	___fttol@sign1,c
  4646  002660  8E2C               	bsf	___fttol@f1+1,7,c
  4647  002662  0EFF               	movlw	255
  4648  002664  162B               	andwf	___fttol@f1,f,c
  4649  002666  0EFF               	movlw	255
  4650  002668  162C               	andwf	___fttol@f1+1,f,c
  4651  00266A  0E00               	movlw	0
  4652  00266C  162D               	andwf	___fttol@f1+2,f,c
  4653  00266E  502B               	movf	___fttol@f1,w,c
  4654  002670  6E35               	movwf	___fttol@lval,c
  4655  002672  502C               	movf	___fttol@f1+1,w,c
  4656  002674  6E36               	movwf	___fttol@lval+1,c
  4657  002676  502D               	movf	___fttol@f1+2,w,c
  4658  002678  6E37               	movwf	___fttol@lval+2,c
  4659  00267A  6A38               	clrf	___fttol@lval+3,c
  4660  00267C  0E8E               	movlw	142
  4661  00267E  5E39               	subwf	___fttol@exp1,f,c
  4662  002680  AE39               	btfss	___fttol@exp1,7,c
  4663  002682  D010               	goto	l2438
  4664  002684  5039               	movf	___fttol@exp1,w,c
  4665  002686  0A80               	xorlw	128
  4666  002688  0F8F               	addlw	143
  4667  00268A  B0D8               	btfsc	status,0,c
  4668  00268C  D003               	goto	l2434
  4669  00268E  D00D               	goto	l2440
  4670  002690  D037               	goto	l739
  4671  002692  D000               	goto	l2434
  4672  002694                     l2434:
  4673  002694  90D8               	bcf	status,0,c
  4674  002696  3238               	rrcf	___fttol@lval+3,f,c
  4675  002698  3237               	rrcf	___fttol@lval+2,f,c
  4676  00269A  3236               	rrcf	___fttol@lval+1,f,c
  4677  00269C  3235               	rrcf	___fttol@lval,f,c
  4678  00269E  3E39               	incfsz	___fttol@exp1,f,c
  4679  0026A0  D7F9               	goto	l2434
  4680  0026A2  D019               	goto	l2448
  4681  0026A4                     l2438:
  4682  0026A4  0E17               	movlw	23
  4683  0026A6  6439               	cpfsgt	___fttol@exp1,c
  4684  0026A8  D011               	goto	l2446
  4685  0026AA                     l2440:
  4686  0026AA  0E00               	movlw	0
  4687  0026AC  6E2B               	movwf	?___fttol,c
  4688  0026AE  0E00               	movlw	0
  4689  0026B0  6E2C               	movwf	?___fttol+1,c
  4690  0026B2  0E00               	movlw	0
  4691  0026B4  6E2D               	movwf	?___fttol+2,c
  4692  0026B6  0E00               	movlw	0
  4693  0026B8  6E2E               	movwf	?___fttol+3,c
  4694  0026BA  D022               	goto	l739
  4695  0026BC  D007               	goto	l2446
  4696  0026BE                     l2444:
  4697  0026BE  90D8               	bcf	status,0,c
  4698  0026C0  3635               	rlcf	___fttol@lval,f,c
  4699  0026C2  3636               	rlcf	___fttol@lval+1,f,c
  4700  0026C4  3637               	rlcf	___fttol@lval+2,f,c
  4701  0026C6  3638               	rlcf	___fttol@lval+3,f,c
  4702  0026C8  0639               	decf	___fttol@exp1,f,c
  4703  0026CA  D000               	goto	l2446
  4704  0026CC                     l2446:
  4705  0026CC  5039               	movf	___fttol@exp1,w,c
  4706  0026CE  B4D8               	btfsc	status,2,c
  4707  0026D0  D002               	goto	l2448
  4708  0026D2  D7F5               	goto	l2444
  4709  0026D4  D000               	goto	l2448
  4710  0026D6                     l2448:
  4711  0026D6  5034               	movf	___fttol@sign1,w,c
  4712  0026D8  B4D8               	btfsc	status,2,c
  4713  0026DA  D009               	goto	l2452
  4714  0026DC  1E38               	comf	___fttol@lval+3,f,c
  4715  0026DE  1E37               	comf	___fttol@lval+2,f,c
  4716  0026E0  1E36               	comf	___fttol@lval+1,f,c
  4717  0026E2  6C35               	negf	___fttol@lval,c
  4718  0026E4  0E00               	movlw	0
  4719  0026E6  2236               	addwfc	___fttol@lval+1,f,c
  4720  0026E8  2237               	addwfc	___fttol@lval+2,f,c
  4721  0026EA  2238               	addwfc	___fttol@lval+3,f,c
  4722  0026EC  D000               	goto	l2452
  4723  0026EE                     l2452:
  4724  0026EE  C035  F02B         	movff	___fttol@lval,?___fttol
  4725  0026F2  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4726  0026F6  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4727  0026FA  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4728  0026FE  D000               	goto	l739
  4729  002700                     l739:
  4730  002700  0012               	return		;funcret
  4731  002702                     __end_of___fttol:
  4732                           	opt stack 0
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           prodh	equ	0xFF4
  4738                           prodl	equ	0xFF3
  4739                           postinc0	equ	0xFEE
  4740                           wreg	equ	0xFE8
  4741                           postdec1	equ	0xFE5
  4742                           plusw1	equ	0xFE3
  4743                           fsr1l	equ	0xFE1
  4744                           indf2	equ	0xFDF
  4745                           postinc2	equ	0xFDE
  4746                           postdec2	equ	0xFDD
  4747                           plusw2	equ	0xFDB
  4748                           fsr2h	equ	0xFDA
  4749                           fsr2l	equ	0xFD9
  4750                           status	equ	0xFD8
  4751                           
  4752 ;; *************** function ___ftsub *****************
  4753 ;; Defined at:
  4754 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  f1              3   57[COMRAM] float 
  4757 ;;  f2              3   60[COMRAM] float 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  3   57[COMRAM] float 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4769 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;Total ram usage:        6 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:    2
  4776 ;; This function calls:
  4777 ;;		___ftadd
  4778 ;; This function is called by:
  4779 ;;		_printf
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text15
  4784  002C24                     __ptext15:
  4785                           	opt stack 0
  4786  002C24                     ___ftsub:
  4787                           	opt stack 27
  4788                           
  4789                           ;incstack = 0
  4790  002C24  503D               	movf	___ftsub@f2,w,c
  4791  002C26  103E               	iorwf	___ftsub@f2+1,w,c
  4792  002C28  103F               	iorwf	___ftsub@f2+2,w,c
  4793  002C2A  B4D8               	btfsc	status,2,c
  4794  002C2C  D007               	goto	l2384
  4795  002C2E  0E00               	movlw	0
  4796  002C30  1A3D               	xorwf	___ftsub@f2,f,c
  4797  002C32  0E00               	movlw	0
  4798  002C34  1A3E               	xorwf	___ftsub@f2+1,f,c
  4799  002C36  0E80               	movlw	128
  4800  002C38  1A3F               	xorwf	___ftsub@f2+2,f,c
  4801  002C3A  D000               	goto	l2384
  4802  002C3C                     l2384:
  4803  002C3C  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  4804  002C40  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  4805  002C44  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  4806  002C48  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  4807  002C4C  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  4808  002C50  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  4809  002C54  ECA3  F010         	call	___ftadd	;wreg free
  4810  002C58  C02E  F03A         	movff	?___ftadd,?___ftsub
  4811  002C5C  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  4812  002C60  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  4813  002C64  D000               	goto	l735
  4814  002C66                     l735:
  4815  002C66  0012               	return		;funcret
  4816  002C68                     __end_of___ftsub:
  4817                           	opt stack 0
  4818                           tblptru	equ	0xFF8
  4819                           tblptrh	equ	0xFF7
  4820                           tblptrl	equ	0xFF6
  4821                           tablat	equ	0xFF5
  4822                           prodh	equ	0xFF4
  4823                           prodl	equ	0xFF3
  4824                           postinc0	equ	0xFEE
  4825                           wreg	equ	0xFE8
  4826                           postdec1	equ	0xFE5
  4827                           plusw1	equ	0xFE3
  4828                           fsr1l	equ	0xFE1
  4829                           indf2	equ	0xFDF
  4830                           postinc2	equ	0xFDE
  4831                           postdec2	equ	0xFDD
  4832                           plusw2	equ	0xFDB
  4833                           fsr2h	equ	0xFDA
  4834                           fsr2l	equ	0xFD9
  4835                           status	equ	0xFD8
  4836                           
  4837 ;; *************** function ___ftadd *****************
  4838 ;; Defined at:
  4839 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  f1              3   45[COMRAM] float 
  4842 ;;  f2              3   48[COMRAM] float 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  exp1            1   56[COMRAM] unsigned char 
  4845 ;;  exp2            1   55[COMRAM] unsigned char 
  4846 ;;  sign            1   54[COMRAM] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  3   45[COMRAM] float 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4856 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;Total ram usage:       12 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    1
  4863 ;; This function calls:
  4864 ;;		___ftpack
  4865 ;; This function is called by:
  4866 ;;		_main
  4867 ;;		_printf
  4868 ;;		___ftsub
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text16
  4873  002146                     __ptext16:
  4874                           	opt stack 0
  4875  002146                     ___ftadd:
  4876                           	opt stack 27
  4877                           
  4878                           ;incstack = 0
  4879  002146  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  4880  00214A  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4881  00214C  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4882  00214E  342F               	rlcf	___ftadd@f1+1,w,c
  4883  002150  3634               	rlcf	??___ftadd& (0+255),f,c
  4884  002152  E301               	bnc	u1671
  4885  002154  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4886  002156                     u1671:
  4887  002156  5034               	movf	??___ftadd,w,c
  4888  002158  6E39               	movwf	___ftadd@exp1,c
  4889  00215A  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  4890  00215E  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4891  002160  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4892  002162  3432               	rlcf	___ftadd@f2+1,w,c
  4893  002164  3634               	rlcf	??___ftadd& (0+255),f,c
  4894  002166  E301               	bnc	u1681
  4895  002168  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4896  00216A                     u1681:
  4897  00216A  5034               	movf	??___ftadd,w,c
  4898  00216C  6E38               	movwf	___ftadd@exp2,c
  4899  00216E  5039               	movf	___ftadd@exp1,w,c
  4900  002170  B4D8               	btfsc	status,2,c
  4901  002172  D00B               	goto	l654
  4902  002174  5038               	movf	___ftadd@exp2,w,c
  4903  002176  5C39               	subwf	___ftadd@exp1,w,c
  4904  002178  B0D8               	btfsc	status,0,c
  4905  00217A  D00E               	goto	l1960
  4906  00217C  5039               	movf	___ftadd@exp1,w,c
  4907  00217E  0800               	sublw	0
  4908  002180  2438               	addwf	___ftadd@exp2,w,c
  4909  002182  6E34               	movwf	??___ftadd& (0+255),c
  4910  002184  0E18               	movlw	24
  4911  002186  6434               	cpfsgt	??___ftadd,c
  4912  002188  D007               	goto	l1960
  4913  00218A                     l654:
  4914  00218A  C031  F02E         	movff	___ftadd@f2,?___ftadd
  4915  00218E  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  4916  002192  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  4917  002196  D0B8               	goto	l655
  4918  002198                     l1960:
  4919  002198  5038               	movf	___ftadd@exp2,w,c
  4920  00219A  B4D8               	btfsc	status,2,c
  4921  00219C  D00B               	goto	l658
  4922  00219E  5039               	movf	___ftadd@exp1,w,c
  4923  0021A0  5C38               	subwf	___ftadd@exp2,w,c
  4924  0021A2  B0D8               	btfsc	status,0,c
  4925  0021A4  D00E               	goto	l1966
  4926  0021A6  5038               	movf	___ftadd@exp2,w,c
  4927  0021A8  0800               	sublw	0
  4928  0021AA  2439               	addwf	___ftadd@exp1,w,c
  4929  0021AC  6E34               	movwf	??___ftadd& (0+255),c
  4930  0021AE  0E18               	movlw	24
  4931  0021B0  6434               	cpfsgt	??___ftadd,c
  4932  0021B2  D007               	goto	l1966
  4933  0021B4                     l658:
  4934  0021B4  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  4935  0021B8  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  4936  0021BC  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  4937  0021C0  D0A3               	goto	l655
  4938  0021C2                     l1966:
  4939  0021C2  0E06               	movlw	6
  4940  0021C4  6E37               	movwf	___ftadd@sign,c
  4941  0021C6  AE30               	btfss	___ftadd@f1+2,7,c
  4942  0021C8  D002               	goto	l1972
  4943  0021CA  8E37               	bsf	___ftadd@sign,7,c
  4944  0021CC  D000               	goto	l1972
  4945  0021CE                     l1972:
  4946  0021CE  BE33               	btfsc	___ftadd@f2+2,7,c
  4947  0021D0  8C37               	bsf	___ftadd@sign,6,c
  4948  0021D2  8E2F               	bsf	___ftadd@f1+1,7,c
  4949  0021D4  0EFF               	movlw	255
  4950  0021D6  162E               	andwf	___ftadd@f1,f,c
  4951  0021D8  0EFF               	movlw	255
  4952  0021DA  162F               	andwf	___ftadd@f1+1,f,c
  4953  0021DC  0E00               	movlw	0
  4954  0021DE  1630               	andwf	___ftadd@f1+2,f,c
  4955  0021E0  8E32               	bsf	___ftadd@f2+1,7,c
  4956  0021E2  0EFF               	movlw	255
  4957  0021E4  1631               	andwf	___ftadd@f2,f,c
  4958  0021E6  0EFF               	movlw	255
  4959  0021E8  1632               	andwf	___ftadd@f2+1,f,c
  4960  0021EA  0E00               	movlw	0
  4961  0021EC  1633               	andwf	___ftadd@f2+2,f,c
  4962  0021EE  5038               	movf	___ftadd@exp2,w,c
  4963  0021F0  5C39               	subwf	___ftadd@exp1,w,c
  4964  0021F2  B0D8               	btfsc	status,0,c
  4965  0021F4  D01E               	goto	l1992
  4966  0021F6                     l1982:
  4967  0021F6  90D8               	bcf	status,0,c
  4968  0021F8  3631               	rlcf	___ftadd@f2,f,c
  4969  0021FA  3632               	rlcf	___ftadd@f2+1,f,c
  4970  0021FC  3633               	rlcf	___ftadd@f2+2,f,c
  4971  0021FE  0638               	decf	___ftadd@exp2,f,c
  4972  002200  5039               	movf	___ftadd@exp1,w,c
  4973  002202  1838               	xorwf	___ftadd@exp2,w,c
  4974  002204  B4D8               	btfsc	status,2,c
  4975  002206  D00F               	goto	l1990
  4976  002208  0637               	decf	___ftadd@sign,f,c
  4977  00220A  C037  F034         	movff	___ftadd@sign,??___ftadd
  4978  00220E  0E07               	movlw	7
  4979  002210  1634               	andwf	??___ftadd,f,c
  4980  002212  B4D8               	btfsc	status,2,c
  4981  002214  D008               	goto	l1990
  4982  002216  D7EF               	goto	l1982
  4983  002218  D006               	goto	l1990
  4984  00221A                     l1988:
  4985  00221A  90D8               	bcf	status,0,c
  4986  00221C  3230               	rrcf	___ftadd@f1+2,f,c
  4987  00221E  322F               	rrcf	___ftadd@f1+1,f,c
  4988  002220  322E               	rrcf	___ftadd@f1,f,c
  4989  002222  2A39               	incf	___ftadd@exp1,f,c
  4990  002224  D000               	goto	l1990
  4991  002226                     l1990:
  4992  002226  5038               	movf	___ftadd@exp2,w,c
  4993  002228  1839               	xorwf	___ftadd@exp1,w,c
  4994  00222A  B4D8               	btfsc	status,2,c
  4995  00222C  D024               	goto	l669
  4996  00222E  D7F5               	goto	l1988
  4997  002230  D022               	goto	l669
  4998  002232                     l1992:
  4999  002232  5039               	movf	___ftadd@exp1,w,c
  5000  002234  5C38               	subwf	___ftadd@exp2,w,c
  5001  002236  B0D8               	btfsc	status,0,c
  5002  002238  D01E               	goto	l669
  5003  00223A                     l1994:
  5004  00223A  90D8               	bcf	status,0,c
  5005  00223C  362E               	rlcf	___ftadd@f1,f,c
  5006  00223E  362F               	rlcf	___ftadd@f1+1,f,c
  5007  002240  3630               	rlcf	___ftadd@f1+2,f,c
  5008  002242  0639               	decf	___ftadd@exp1,f,c
  5009  002244  5039               	movf	___ftadd@exp1,w,c
  5010  002246  1838               	xorwf	___ftadd@exp2,w,c
  5011  002248  B4D8               	btfsc	status,2,c
  5012  00224A  D00F               	goto	l2002
  5013  00224C  0637               	decf	___ftadd@sign,f,c
  5014  00224E  C037  F034         	movff	___ftadd@sign,??___ftadd
  5015  002252  0E07               	movlw	7
  5016  002254  1634               	andwf	??___ftadd,f,c
  5017  002256  B4D8               	btfsc	status,2,c
  5018  002258  D008               	goto	l2002
  5019  00225A  D7EF               	goto	l1994
  5020  00225C  D006               	goto	l2002
  5021  00225E                     l2000:
  5022  00225E  90D8               	bcf	status,0,c
  5023  002260  3233               	rrcf	___ftadd@f2+2,f,c
  5024  002262  3232               	rrcf	___ftadd@f2+1,f,c
  5025  002264  3231               	rrcf	___ftadd@f2,f,c
  5026  002266  2A38               	incf	___ftadd@exp2,f,c
  5027  002268  D000               	goto	l2002
  5028  00226A                     l2002:
  5029  00226A  5038               	movf	___ftadd@exp2,w,c
  5030  00226C  1839               	xorwf	___ftadd@exp1,w,c
  5031  00226E  B4D8               	btfsc	status,2,c
  5032  002270  D002               	goto	l669
  5033  002272  D7F5               	goto	l2000
  5034  002274  D000               	goto	l669
  5035  002276                     l669:
  5036  002276  AE37               	btfss	___ftadd@sign,7,c
  5037  002278  D00C               	goto	l678
  5038  00227A  0EFF               	movlw	255
  5039  00227C  1A2E               	xorwf	___ftadd@f1,f,c
  5040  00227E  0EFF               	movlw	255
  5041  002280  1A2F               	xorwf	___ftadd@f1+1,f,c
  5042  002282  0EFF               	movlw	255
  5043  002284  1A30               	xorwf	___ftadd@f1+2,f,c
  5044  002286  0E01               	movlw	1
  5045  002288  262E               	addwf	___ftadd@f1,f,c
  5046  00228A  0E00               	movlw	0
  5047  00228C  222F               	addwfc	___ftadd@f1+1,f,c
  5048  00228E  0E00               	movlw	0
  5049  002290  2230               	addwfc	___ftadd@f1+2,f,c
  5050  002292                     l678:
  5051  002292  AC37               	btfss	___ftadd@sign,6,c
  5052  002294  D00D               	goto	l2008
  5053  002296  0EFF               	movlw	255
  5054  002298  1A31               	xorwf	___ftadd@f2,f,c
  5055  00229A  0EFF               	movlw	255
  5056  00229C  1A32               	xorwf	___ftadd@f2+1,f,c
  5057  00229E  0EFF               	movlw	255
  5058  0022A0  1A33               	xorwf	___ftadd@f2+2,f,c
  5059  0022A2  0E01               	movlw	1
  5060  0022A4  2631               	addwf	___ftadd@f2,f,c
  5061  0022A6  0E00               	movlw	0
  5062  0022A8  2232               	addwfc	___ftadd@f2+1,f,c
  5063  0022AA  0E00               	movlw	0
  5064  0022AC  2233               	addwfc	___ftadd@f2+2,f,c
  5065  0022AE  D000               	goto	l2008
  5066  0022B0                     l2008:
  5067  0022B0  0E00               	movlw	0
  5068  0022B2  6E37               	movwf	___ftadd@sign,c
  5069  0022B4  502E               	movf	___ftadd@f1,w,c
  5070  0022B6  2631               	addwf	___ftadd@f2,f,c
  5071  0022B8  502F               	movf	___ftadd@f1+1,w,c
  5072  0022BA  2232               	addwfc	___ftadd@f2+1,f,c
  5073  0022BC  5030               	movf	___ftadd@f1+2,w,c
  5074  0022BE  2233               	addwfc	___ftadd@f2+2,f,c
  5075  0022C0  AE33               	btfss	___ftadd@f2+2,7,c
  5076  0022C2  D00F               	goto	l2018
  5077  0022C4  0EFF               	movlw	255
  5078  0022C6  1A31               	xorwf	___ftadd@f2,f,c
  5079  0022C8  0EFF               	movlw	255
  5080  0022CA  1A32               	xorwf	___ftadd@f2+1,f,c
  5081  0022CC  0EFF               	movlw	255
  5082  0022CE  1A33               	xorwf	___ftadd@f2+2,f,c
  5083  0022D0  0E01               	movlw	1
  5084  0022D2  2631               	addwf	___ftadd@f2,f,c
  5085  0022D4  0E00               	movlw	0
  5086  0022D6  2232               	addwfc	___ftadd@f2+1,f,c
  5087  0022D8  0E00               	movlw	0
  5088  0022DA  2233               	addwfc	___ftadd@f2+2,f,c
  5089  0022DC  0E01               	movlw	1
  5090  0022DE  6E37               	movwf	___ftadd@sign,c
  5091  0022E0  D000               	goto	l2018
  5092  0022E2                     l2018:
  5093  0022E2  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  5094  0022E6  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5095  0022EA  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5096  0022EE  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  5097  0022F2  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  5098  0022F6  ECF2  F013         	call	___ftpack	;wreg free
  5099  0022FA  C001  F02E         	movff	?___ftpack,?___ftadd
  5100  0022FE  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  5101  002302  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  5102  002306  D000               	goto	l655
  5103  002308                     l655:
  5104  002308  0012               	return		;funcret
  5105  00230A                     __end_of___ftadd:
  5106                           	opt stack 0
  5107                           tblptru	equ	0xFF8
  5108                           tblptrh	equ	0xFF7
  5109                           tblptrl	equ	0xFF6
  5110                           tablat	equ	0xFF5
  5111                           prodh	equ	0xFF4
  5112                           prodl	equ	0xFF3
  5113                           postinc0	equ	0xFEE
  5114                           wreg	equ	0xFE8
  5115                           postdec1	equ	0xFE5
  5116                           plusw1	equ	0xFE3
  5117                           fsr1l	equ	0xFE1
  5118                           indf2	equ	0xFDF
  5119                           postinc2	equ	0xFDE
  5120                           postdec2	equ	0xFDD
  5121                           plusw2	equ	0xFDB
  5122                           fsr2h	equ	0xFDA
  5123                           fsr2l	equ	0xFD9
  5124                           status	equ	0xFD8
  5125                           
  5126 ;; *************** function ___ftneg *****************
  5127 ;; Defined at:
  5128 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  f1              3    0[COMRAM] float 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;		None
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  3    0[COMRAM] float 
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5142 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;Total ram usage:        3 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_printf
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text17
  5156  002D1C                     __ptext17:
  5157                           	opt stack 0
  5158  002D1C                     ___ftneg:
  5159                           	opt stack 29
  5160                           
  5161                           ;incstack = 0
  5162  002D1C  5001               	movf	___ftneg@f1,w,c
  5163  002D1E  1002               	iorwf	___ftneg@f1+1,w,c
  5164  002D20  1003               	iorwf	___ftneg@f1+2,w,c
  5165  002D22  B4D8               	btfsc	status,2,c
  5166  002D24  D006               	goto	l728
  5167  002D26  0E00               	movlw	0
  5168  002D28  1A01               	xorwf	___ftneg@f1,f,c
  5169  002D2A  0E00               	movlw	0
  5170  002D2C  1A02               	xorwf	___ftneg@f1+1,f,c
  5171  002D2E  0E80               	movlw	128
  5172  002D30  1A03               	xorwf	___ftneg@f1+2,f,c
  5173  002D32                     l728:
  5174  002D32  C001  F001         	movff	___ftneg@f1,?___ftneg
  5175  002D36  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  5176  002D3A  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  5177  002D3E  0012               	return		;funcret
  5178  002D40                     __end_of___ftneg:
  5179                           	opt stack 0
  5180                           tblptru	equ	0xFF8
  5181                           tblptrh	equ	0xFF7
  5182                           tblptrl	equ	0xFF6
  5183                           tablat	equ	0xFF5
  5184                           prodh	equ	0xFF4
  5185                           prodl	equ	0xFF3
  5186                           postinc0	equ	0xFEE
  5187                           wreg	equ	0xFE8
  5188                           postdec1	equ	0xFE5
  5189                           plusw1	equ	0xFE3
  5190                           fsr1l	equ	0xFE1
  5191                           indf2	equ	0xFDF
  5192                           postinc2	equ	0xFDE
  5193                           postdec2	equ	0xFDD
  5194                           plusw2	equ	0xFDB
  5195                           fsr2h	equ	0xFDA
  5196                           fsr2l	equ	0xFD9
  5197                           status	equ	0xFD8
  5198                           
  5199 ;; *************** function ___ftge *****************
  5200 ;; Defined at:
  5201 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  ff1             3    0[COMRAM] float 
  5204 ;;  ff2             3    3[COMRAM] float 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;		None
  5207 ;; Return value:  Size  Location     Type
  5208 ;;		None               void
  5209 ;; Registers used:
  5210 ;;		wreg, status,2, status,0
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5216 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;Total ram usage:        9 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		_main
  5226 ;;		_printf
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text18
  5231  002940                     __ptext18:
  5232                           	opt stack 0
  5233  002940                     ___ftge:
  5234                           	opt stack 29
  5235                           
  5236                           ;incstack = 0
  5237  002940  AE03               	btfss	___ftge@ff1+2,7,c
  5238  002942  D017               	goto	l2392
  5239  002944  C001  F007         	movff	___ftge@ff1,??___ftge
  5240  002948  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5241  00294C  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5242  002950  1E07               	comf	??___ftge,f,c
  5243  002952  1E08               	comf	??___ftge+1,f,c
  5244  002954  1E09               	comf	??___ftge+2,f,c
  5245  002956  2A07               	incf	??___ftge,f,c
  5246  002958  0E00               	movlw	0
  5247  00295A  2208               	addwfc	??___ftge+1,f,c
  5248  00295C  2209               	addwfc	??___ftge+2,f,c
  5249  00295E  0E00               	movlw	0
  5250  002960  2407               	addwf	??___ftge,w,c
  5251  002962  6E01               	movwf	___ftge@ff1,c
  5252  002964  0E00               	movlw	0
  5253  002966  2008               	addwfc	??___ftge+1,w,c
  5254  002968  6E02               	movwf	___ftge@ff1+1,c
  5255  00296A  0E80               	movlw	128
  5256  00296C  2009               	addwfc	??___ftge+2,w,c
  5257  00296E  6E03               	movwf	___ftge@ff1+2,c
  5258  002970  D000               	goto	l2392
  5259  002972                     l2392:
  5260  002972  AE06               	btfss	___ftge@ff2+2,7,c
  5261  002974  D017               	goto	l2396
  5262  002976  C004  F007         	movff	___ftge@ff2,??___ftge
  5263  00297A  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5264  00297E  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5265  002982  1E07               	comf	??___ftge,f,c
  5266  002984  1E08               	comf	??___ftge+1,f,c
  5267  002986  1E09               	comf	??___ftge+2,f,c
  5268  002988  2A07               	incf	??___ftge,f,c
  5269  00298A  0E00               	movlw	0
  5270  00298C  2208               	addwfc	??___ftge+1,f,c
  5271  00298E  2209               	addwfc	??___ftge+2,f,c
  5272  002990  0E00               	movlw	0
  5273  002992  2407               	addwf	??___ftge,w,c
  5274  002994  6E04               	movwf	___ftge@ff2,c
  5275  002996  0E00               	movlw	0
  5276  002998  2008               	addwfc	??___ftge+1,w,c
  5277  00299A  6E05               	movwf	___ftge@ff2+1,c
  5278  00299C  0E80               	movlw	128
  5279  00299E  2009               	addwfc	??___ftge+2,w,c
  5280  0029A0  6E06               	movwf	___ftge@ff2+2,c
  5281  0029A2  D000               	goto	l2396
  5282  0029A4                     l2396:
  5283  0029A4  0E00               	movlw	0
  5284  0029A6  1A01               	xorwf	___ftge@ff1,f,c
  5285  0029A8  0E00               	movlw	0
  5286  0029AA  1A02               	xorwf	___ftge@ff1+1,f,c
  5287  0029AC  0E80               	movlw	128
  5288  0029AE  1A03               	xorwf	___ftge@ff1+2,f,c
  5289  0029B0  0E00               	movlw	0
  5290  0029B2  1A04               	xorwf	___ftge@ff2,f,c
  5291  0029B4  0E00               	movlw	0
  5292  0029B6  1A05               	xorwf	___ftge@ff2+1,f,c
  5293  0029B8  0E80               	movlw	128
  5294  0029BA  1A06               	xorwf	___ftge@ff2+2,f,c
  5295  0029BC  5004               	movf	___ftge@ff2,w,c
  5296  0029BE  5C01               	subwf	___ftge@ff1,w,c
  5297  0029C0  5005               	movf	___ftge@ff2+1,w,c
  5298  0029C2  5802               	subwfb	___ftge@ff1+1,w,c
  5299  0029C4  5006               	movf	___ftge@ff2+2,w,c
  5300  0029C6  5803               	subwfb	___ftge@ff1+2,w,c
  5301  0029C8  B0D8               	btfsc	status,0,c
  5302  0029CA  D002               	goto	l2402
  5303  0029CC  90D8               	bcf	status,0,c
  5304  0029CE  D002               	goto	l712
  5305  0029D0                     l2402:
  5306  0029D0  80D8               	bsf	status,0,c
  5307  0029D2  D000               	goto	l712
  5308  0029D4                     l712:
  5309  0029D4  0012               	return		;funcret
  5310  0029D6                     __end_of___ftge:
  5311                           	opt stack 0
  5312                           tblptru	equ	0xFF8
  5313                           tblptrh	equ	0xFF7
  5314                           tblptrl	equ	0xFF6
  5315                           tablat	equ	0xFF5
  5316                           prodh	equ	0xFF4
  5317                           prodl	equ	0xFF3
  5318                           postinc0	equ	0xFEE
  5319                           wreg	equ	0xFE8
  5320                           postdec1	equ	0xFE5
  5321                           plusw1	equ	0xFE3
  5322                           fsr1l	equ	0xFE1
  5323                           indf2	equ	0xFDF
  5324                           postinc2	equ	0xFDE
  5325                           postdec2	equ	0xFDD
  5326                           plusw2	equ	0xFDB
  5327                           fsr2h	equ	0xFDA
  5328                           fsr2l	equ	0xFD9
  5329                           status	equ	0xFD8
  5330                           
  5331 ;; *************** function _get_full_ADC *****************
  5332 ;; Defined at:
  5333 ;;		line 156 in file "Lab5.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;		None
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  result          2    4[COMRAM] int 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  2    0[COMRAM] unsigned int 
  5340 ;; Registers used:
  5341 ;;		wreg, status,2, status,0
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;Total ram usage:        6 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; This function calls:
  5354 ;;		Nothing
  5355 ;; This function is called by:
  5356 ;;		_main
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text19
  5361  002CF6                     __ptext19:
  5362                           	opt stack 0
  5363  002CF6                     _get_full_ADC:
  5364                           	opt stack 30
  5365                           
  5366                           ;Lab5.c: 158: int result;
  5367                           ;Lab5.c: 159: ADCON0bits.GO=1;
  5368                           
  5369                           ;incstack = 0
  5370  002CF6  82C2               	bsf	4034,1,c	;volatile
  5371                           
  5372                           ;Lab5.c: 160: while(ADCON0bits.DONE==1);
  5373  002CF8  D000               	goto	l128
  5374  002CFA                     l128:
  5375  002CFA  B2C2               	btfsc	4034,1,c	;volatile
  5376  002CFC  D7FE               	goto	l128
  5377                           
  5378                           ;Lab5.c: 161: result = (ADRESH * 0x100) + ADRESL;
  5379  002CFE  50C4               	movf	4036,w,c	;volatile
  5380  002D00  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5381  002D02  6A03               	clrf	??_get_full_ADC& (0+255),c
  5382  002D04  50C3               	movf	4035,w,c	;volatile
  5383  002D06  2403               	addwf	??_get_full_ADC,w,c
  5384  002D08  6E05               	movwf	get_full_ADC@result,c
  5385  002D0A  0E00               	movlw	0
  5386  002D0C  2004               	addwfc	??_get_full_ADC+1,w,c
  5387  002D0E  6E06               	movwf	get_full_ADC@result+1,c
  5388                           
  5389                           ;Lab5.c: 163: return result;
  5390  002D10  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5391  002D14  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5392  002D18  D000               	goto	l131
  5393  002D1A                     l131:
  5394  002D1A  0012               	return		;funcret
  5395  002D1C                     __end_of_get_full_ADC:
  5396                           	opt stack 0
  5397                           tblptru	equ	0xFF8
  5398                           tblptrh	equ	0xFF7
  5399                           tblptrl	equ	0xFF6
  5400                           tablat	equ	0xFF5
  5401                           prodh	equ	0xFF4
  5402                           prodl	equ	0xFF3
  5403                           postinc0	equ	0xFEE
  5404                           wreg	equ	0xFE8
  5405                           postdec1	equ	0xFE5
  5406                           plusw1	equ	0xFE3
  5407                           fsr1l	equ	0xFE1
  5408                           indf2	equ	0xFDF
  5409                           postinc2	equ	0xFDE
  5410                           postdec2	equ	0xFDD
  5411                           plusw2	equ	0xFDB
  5412                           fsr2h	equ	0xFDA
  5413                           fsr2l	equ	0xFD9
  5414                           status	equ	0xFD8
  5415                           
  5416 ;; *************** function ___ftdiv *****************
  5417 ;; Defined at:
  5418 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  f1              3   12[COMRAM] float 
  5421 ;;  f2              3   15[COMRAM] float 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  f3              3   22[COMRAM] float 
  5424 ;;  sign            1   26[COMRAM] unsigned char 
  5425 ;;  exp             1   25[COMRAM] unsigned char 
  5426 ;;  cntr            1   21[COMRAM] unsigned char 
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  3   12[COMRAM] float 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0, cstack
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5436 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;Total ram usage:       15 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:    1
  5443 ;; This function calls:
  5444 ;;		___ftpack
  5445 ;; This function is called by:
  5446 ;;		_main
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text20
  5451  002702                     __ptext20:
  5452                           	opt stack 0
  5453  002702                     ___ftdiv:
  5454                           	opt stack 29
  5455                           
  5456                           ;incstack = 0
  5457  002702  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  5458  002706  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  5459  002708  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  5460  00270A  340E               	rlcf	___ftdiv@f1+1,w,c
  5461  00270C  3613               	rlcf	??___ftdiv& (0+255),f,c
  5462  00270E  E301               	bnc	u2941
  5463  002710  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  5464  002712                     u2941:
  5465  002712  5013               	movf	??___ftdiv,w,c
  5466  002714  6E1A               	movwf	___ftdiv@exp,c
  5467  002716  501A               	movf	___ftdiv@exp,w,c
  5468  002718  A4D8               	btfss	status,2,c
  5469  00271A  D002               	goto	l2742
  5470  00271C  D00E               	goto	l2744
  5471  00271E  D061               	goto	l686
  5472  002720                     l2742:
  5473  002720  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  5474  002724  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  5475  002726  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  5476  002728  3411               	rlcf	___ftdiv@f2+1,w,c
  5477  00272A  3613               	rlcf	??___ftdiv& (0+255),f,c
  5478  00272C  E301               	bnc	u2961
  5479  00272E  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  5480  002730                     u2961:
  5481  002730  5013               	movf	??___ftdiv,w,c
  5482  002732  6E1B               	movwf	___ftdiv@sign,c
  5483  002734  501B               	movf	___ftdiv@sign,w,c
  5484  002736  A4D8               	btfss	status,2,c
  5485  002738  D007               	goto	l2748
  5486  00273A                     l2744:
  5487  00273A  0E00               	movlw	0
  5488  00273C  6E0D               	movwf	?___ftdiv,c
  5489  00273E  0E00               	movlw	0
  5490  002740  6E0E               	movwf	?___ftdiv+1,c
  5491  002742  0E00               	movlw	0
  5492  002744  6E0F               	movwf	?___ftdiv+2,c
  5493  002746  D04D               	goto	l686
  5494  002748                     l2748:
  5495  002748  0E00               	movlw	0
  5496  00274A  6E17               	movwf	___ftdiv@f3,c
  5497  00274C  0E00               	movlw	0
  5498  00274E  6E18               	movwf	___ftdiv@f3+1,c
  5499  002750  0E00               	movlw	0
  5500  002752  6E19               	movwf	___ftdiv@f3+2,c
  5501  002754  501B               	movf	___ftdiv@sign,w,c
  5502  002756  0F89               	addlw	137
  5503  002758  5E1A               	subwf	___ftdiv@exp,f,c
  5504  00275A  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  5505  00275E  5012               	movf	___ftdiv@f2+2,w,c
  5506  002760  1A1B               	xorwf	___ftdiv@sign,f,c
  5507  002762  0E80               	movlw	128
  5508  002764  161B               	andwf	___ftdiv@sign,f,c
  5509  002766  8E0E               	bsf	___ftdiv@f1+1,7,c
  5510  002768  0EFF               	movlw	255
  5511  00276A  160D               	andwf	___ftdiv@f1,f,c
  5512  00276C  0EFF               	movlw	255
  5513  00276E  160E               	andwf	___ftdiv@f1+1,f,c
  5514  002770  0E00               	movlw	0
  5515  002772  160F               	andwf	___ftdiv@f1+2,f,c
  5516  002774  8E11               	bsf	___ftdiv@f2+1,7,c
  5517  002776  0EFF               	movlw	255
  5518  002778  1610               	andwf	___ftdiv@f2,f,c
  5519  00277A  0EFF               	movlw	255
  5520  00277C  1611               	andwf	___ftdiv@f2+1,f,c
  5521  00277E  0E00               	movlw	0
  5522  002780  1612               	andwf	___ftdiv@f2+2,f,c
  5523  002782  0E18               	movlw	24
  5524  002784  6E16               	movwf	___ftdiv@cntr,c
  5525  002786  D000               	goto	l2768
  5526  002788                     l2768:
  5527  002788  90D8               	bcf	status,0,c
  5528  00278A  3617               	rlcf	___ftdiv@f3,f,c
  5529  00278C  3618               	rlcf	___ftdiv@f3+1,f,c
  5530  00278E  3619               	rlcf	___ftdiv@f3+2,f,c
  5531  002790  5010               	movf	___ftdiv@f2,w,c
  5532  002792  5C0D               	subwf	___ftdiv@f1,w,c
  5533  002794  5011               	movf	___ftdiv@f2+1,w,c
  5534  002796  580E               	subwfb	___ftdiv@f1+1,w,c
  5535  002798  5012               	movf	___ftdiv@f2+2,w,c
  5536  00279A  580F               	subwfb	___ftdiv@f1+2,w,c
  5537  00279C  A0D8               	btfss	status,0,c
  5538  00279E  D007               	goto	l689
  5539  0027A0  5010               	movf	___ftdiv@f2,w,c
  5540  0027A2  5E0D               	subwf	___ftdiv@f1,f,c
  5541  0027A4  5011               	movf	___ftdiv@f2+1,w,c
  5542  0027A6  5A0E               	subwfb	___ftdiv@f1+1,f,c
  5543  0027A8  5012               	movf	___ftdiv@f2+2,w,c
  5544  0027AA  5A0F               	subwfb	___ftdiv@f1+2,f,c
  5545  0027AC  8017               	bsf	___ftdiv@f3,0,c
  5546  0027AE                     l689:
  5547  0027AE  90D8               	bcf	status,0,c
  5548  0027B0  360D               	rlcf	___ftdiv@f1,f,c
  5549  0027B2  360E               	rlcf	___ftdiv@f1+1,f,c
  5550  0027B4  360F               	rlcf	___ftdiv@f1+2,f,c
  5551  0027B6  2E16               	decfsz	___ftdiv@cntr,f,c
  5552  0027B8  D7E7               	goto	l2768
  5553  0027BA  D000               	goto	l2778
  5554  0027BC                     l2778:
  5555  0027BC  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  5556  0027C0  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5557  0027C4  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5558  0027C8  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  5559  0027CC  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  5560  0027D0  ECF2  F013         	call	___ftpack	;wreg free
  5561  0027D4  C001  F00D         	movff	?___ftpack,?___ftdiv
  5562  0027D8  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  5563  0027DC  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  5564  0027E0  D000               	goto	l686
  5565  0027E2                     l686:
  5566  0027E2  0012               	return		;funcret
  5567  0027E4                     __end_of___ftdiv:
  5568                           	opt stack 0
  5569                           tblptru	equ	0xFF8
  5570                           tblptrh	equ	0xFF7
  5571                           tblptrl	equ	0xFF6
  5572                           tablat	equ	0xFF5
  5573                           prodh	equ	0xFF4
  5574                           prodl	equ	0xFF3
  5575                           postinc0	equ	0xFEE
  5576                           wreg	equ	0xFE8
  5577                           postdec1	equ	0xFE5
  5578                           plusw1	equ	0xFE3
  5579                           fsr1l	equ	0xFE1
  5580                           indf2	equ	0xFDF
  5581                           postinc2	equ	0xFDE
  5582                           postdec2	equ	0xFDD
  5583                           plusw2	equ	0xFDB
  5584                           fsr2h	equ	0xFDA
  5585                           fsr2l	equ	0xFD9
  5586                           status	equ	0xFD8
  5587                           
  5588 ;; *************** function ___awtoft *****************
  5589 ;; Defined at:
  5590 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  c               2    8[COMRAM] int 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;  sign            1   11[COMRAM] unsigned char 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  3    8[COMRAM] float 
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5604 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;Total ram usage:        4 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    1
  5611 ;; This function calls:
  5612 ;;		___ftpack
  5613 ;; This function is called by:
  5614 ;;		_main
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text21
  5619  002C68                     __ptext21:
  5620                           	opt stack 0
  5621  002C68                     ___awtoft:
  5622                           	opt stack 29
  5623                           
  5624                           ;incstack = 0
  5625  002C68  0E00               	movlw	0
  5626  002C6A  6E0C               	movwf	___awtoft@sign,c
  5627  002C6C  AE0A               	btfss	___awtoft@c+1,7,c
  5628  002C6E  D007               	goto	l2790
  5629  002C70  6C09               	negf	___awtoft@c,c
  5630  002C72  1E0A               	comf	___awtoft@c+1,f,c
  5631  002C74  B0D8               	btfsc	status,0,c
  5632  002C76  2A0A               	incf	___awtoft@c+1,f,c
  5633  002C78  0E01               	movlw	1
  5634  002C7A  6E0C               	movwf	___awtoft@sign,c
  5635  002C7C  D000               	goto	l2790
  5636  002C7E                     l2790:
  5637  002C7E  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5638  002C82  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5639  002C86  6A03               	clrf	___ftpack@arg+2,c
  5640  002C88  0E8E               	movlw	142
  5641  002C8A  6E04               	movwf	___ftpack@exp,c
  5642  002C8C  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5643  002C90  ECF2  F013         	call	___ftpack	;wreg free
  5644  002C94  C001  F009         	movff	?___ftpack,?___awtoft
  5645  002C98  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5646  002C9C  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5647  002CA0  D000               	goto	l507
  5648  002CA2                     l507:
  5649  002CA2  0012               	return		;funcret
  5650  002CA4                     __end_of___awtoft:
  5651                           	opt stack 0
  5652                           tblptru	equ	0xFF8
  5653                           tblptrh	equ	0xFF7
  5654                           tblptrl	equ	0xFF6
  5655                           tablat	equ	0xFF5
  5656                           prodh	equ	0xFF4
  5657                           prodl	equ	0xFF3
  5658                           postinc0	equ	0xFEE
  5659                           wreg	equ	0xFE8
  5660                           postdec1	equ	0xFE5
  5661                           plusw1	equ	0xFE3
  5662                           fsr1l	equ	0xFE1
  5663                           indf2	equ	0xFDF
  5664                           postinc2	equ	0xFDE
  5665                           postdec2	equ	0xFDD
  5666                           plusw2	equ	0xFDB
  5667                           fsr2h	equ	0xFDA
  5668                           fsr2l	equ	0xFD9
  5669                           status	equ	0xFD8
  5670                           
  5671 ;; *************** function ___ftpack *****************
  5672 ;; Defined at:
  5673 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  arg             3    0[COMRAM] unsigned um
  5676 ;;  exp             1    3[COMRAM] unsigned char 
  5677 ;;  sign            1    4[COMRAM] unsigned char 
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;		None
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  3    0[COMRAM] float 
  5682 ;; Registers used:
  5683 ;;		wreg, status,2, status,0
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5689 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;Total ram usage:        8 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		___awtoft
  5699 ;;		___ftadd
  5700 ;;		___ftdiv
  5701 ;;		___ftmul
  5702 ;;		___lltoft
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           	psect	text22
  5707  0027E4                     __ptext22:
  5708                           	opt stack 0
  5709  0027E4                     ___ftpack:
  5710                           	opt stack 27
  5711                           
  5712                           ;incstack = 0
  5713  0027E4  5004               	movf	___ftpack@exp,w,c
  5714  0027E6  B4D8               	btfsc	status,2,c
  5715  0027E8  D005               	goto	l1914
  5716  0027EA  5001               	movf	___ftpack@arg,w,c
  5717  0027EC  1002               	iorwf	___ftpack@arg+1,w,c
  5718  0027EE  1003               	iorwf	___ftpack@arg+2,w,c
  5719  0027F0  A4D8               	btfss	status,2,c
  5720  0027F2  D00E               	goto	l1920
  5721  0027F4                     l1914:
  5722  0027F4  0E00               	movlw	0
  5723  0027F6  6E01               	movwf	?___ftpack,c
  5724  0027F8  0E00               	movlw	0
  5725  0027FA  6E02               	movwf	?___ftpack+1,c
  5726  0027FC  0E00               	movlw	0
  5727  0027FE  6E03               	movwf	?___ftpack+2,c
  5728  002800  D053               	goto	l614
  5729  002802  D006               	goto	l1920
  5730  002804                     l1918:
  5731  002804  2A04               	incf	___ftpack@exp,f,c
  5732  002806  90D8               	bcf	status,0,c
  5733  002808  3203               	rrcf	___ftpack@arg+2,f,c
  5734  00280A  3202               	rrcf	___ftpack@arg+1,f,c
  5735  00280C  3201               	rrcf	___ftpack@arg,f,c
  5736  00280E  D000               	goto	l1920
  5737  002810                     l1920:
  5738  002810  0E00               	movlw	0
  5739  002812  1401               	andwf	___ftpack@arg,w,c
  5740  002814  6E06               	movwf	??___ftpack& (0+255),c
  5741  002816  0E00               	movlw	0
  5742  002818  1402               	andwf	___ftpack@arg+1,w,c
  5743  00281A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5744  00281C  0EFE               	movlw	254
  5745  00281E  1403               	andwf	___ftpack@arg+2,w,c
  5746  002820  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5747  002822  5006               	movf	??___ftpack,w,c
  5748  002824  1007               	iorwf	??___ftpack+1,w,c
  5749  002826  1008               	iorwf	??___ftpack+2,w,c
  5750  002828  B4D8               	btfsc	status,2,c
  5751  00282A  D00E               	goto	l1926
  5752  00282C  D7EB               	goto	l1918
  5753  00282E  D00C               	goto	l1926
  5754  002830                     l1922:
  5755  002830  2A04               	incf	___ftpack@exp,f,c
  5756  002832  0E01               	movlw	1
  5757  002834  2601               	addwf	___ftpack@arg,f,c
  5758  002836  0E00               	movlw	0
  5759  002838  2202               	addwfc	___ftpack@arg+1,f,c
  5760  00283A  0E00               	movlw	0
  5761  00283C  2203               	addwfc	___ftpack@arg+2,f,c
  5762  00283E  90D8               	bcf	status,0,c
  5763  002840  3203               	rrcf	___ftpack@arg+2,f,c
  5764  002842  3202               	rrcf	___ftpack@arg+1,f,c
  5765  002844  3201               	rrcf	___ftpack@arg,f,c
  5766  002846  D000               	goto	l1926
  5767  002848                     l1926:
  5768  002848  0E00               	movlw	0
  5769  00284A  1401               	andwf	___ftpack@arg,w,c
  5770  00284C  6E06               	movwf	??___ftpack& (0+255),c
  5771  00284E  0E00               	movlw	0
  5772  002850  1402               	andwf	___ftpack@arg+1,w,c
  5773  002852  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5774  002854  0EFF               	movlw	255
  5775  002856  1403               	andwf	___ftpack@arg+2,w,c
  5776  002858  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5777  00285A  5006               	movf	??___ftpack,w,c
  5778  00285C  1007               	iorwf	??___ftpack+1,w,c
  5779  00285E  1008               	iorwf	??___ftpack+2,w,c
  5780  002860  B4D8               	btfsc	status,2,c
  5781  002862  D008               	goto	l1930
  5782  002864  D7E5               	goto	l1922
  5783  002866  D006               	goto	l1930
  5784  002868                     l1928:
  5785  002868  0604               	decf	___ftpack@exp,f,c
  5786  00286A  90D8               	bcf	status,0,c
  5787  00286C  3601               	rlcf	___ftpack@arg,f,c
  5788  00286E  3602               	rlcf	___ftpack@arg+1,f,c
  5789  002870  3603               	rlcf	___ftpack@arg+2,f,c
  5790  002872  D000               	goto	l1930
  5791  002874                     l1930:
  5792  002874  BE02               	btfsc	___ftpack@arg+1,7,c
  5793  002876  D004               	goto	l625
  5794  002878  0E02               	movlw	2
  5795  00287A  6004               	cpfslt	___ftpack@exp,c
  5796  00287C  D7F5               	goto	l1928
  5797  00287E  D000               	goto	l625
  5798  002880                     l625:
  5799  002880  B004               	btfsc	___ftpack@exp,0,c
  5800  002882  D002               	goto	l1936
  5801  002884  9E02               	bcf	___ftpack@arg+1,7,c
  5802  002886  D000               	goto	l1936
  5803  002888                     l1936:
  5804  002888  90D8               	bcf	status,0,c
  5805  00288A  3204               	rrcf	___ftpack@exp,f,c
  5806  00288C  5004               	movf	___ftpack@exp,w,c
  5807  00288E  1203               	iorwf	___ftpack@arg+2,f,c
  5808  002890  5005               	movf	___ftpack@sign,w,c
  5809  002892  B4D8               	btfsc	status,2,c
  5810  002894  D002               	goto	l1942
  5811  002896  8E03               	bsf	___ftpack@arg+2,7,c
  5812  002898  D000               	goto	l1942
  5813  00289A                     l1942:
  5814  00289A  C001  F001         	movff	___ftpack@arg,?___ftpack
  5815  00289E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5816  0028A2  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5817  0028A6  D000               	goto	l614
  5818  0028A8                     l614:
  5819  0028A8  0012               	return		;funcret
  5820  0028AA                     __end_of___ftpack:
  5821                           	opt stack 0
  5822                           tblptru	equ	0xFF8
  5823                           tblptrh	equ	0xFF7
  5824                           tblptrl	equ	0xFF6
  5825                           tablat	equ	0xFF5
  5826                           prodh	equ	0xFF4
  5827                           prodl	equ	0xFF3
  5828                           postinc0	equ	0xFEE
  5829                           wreg	equ	0xFE8
  5830                           postdec1	equ	0xFE5
  5831                           plusw1	equ	0xFE3
  5832                           fsr1l	equ	0xFE1
  5833                           indf2	equ	0xFDF
  5834                           postinc2	equ	0xFDE
  5835                           postdec2	equ	0xFDD
  5836                           plusw2	equ	0xFDB
  5837                           fsr2h	equ	0xFDA
  5838                           fsr2l	equ	0xFD9
  5839                           status	equ	0xFD8
  5840                           
  5841 ;; *************** function _Select_ADC_Channel *****************
  5842 ;; Defined at:
  5843 ;;		line 142 in file "Lab5.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  channel         1    wreg     unsigned char 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  channel         1    0[COMRAM] unsigned char 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;		None               void
  5850 ;; Registers used:
  5851 ;;		wreg, status,2, status,0, prodl, prodh
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;Total ram usage:        1 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_main
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text23
  5871  002DAA                     __ptext23:
  5872                           	opt stack 0
  5873  002DAA                     _Select_ADC_Channel:
  5874                           	opt stack 30
  5875                           
  5876                           ;incstack = 0
  5877                           ;Select_ADC_Channel@channel stored from wreg
  5878  002DAA  6E01               	movwf	Select_ADC_Channel@channel,c
  5879                           
  5880                           ;Lab5.c: 144: ADCON0 = channel *4 + 1;
  5881  002DAC  5001               	movf	Select_ADC_Channel@channel,w,c
  5882  002DAE  0D04               	mullw	4
  5883  002DB0  28F3               	incf	prodl,w,c
  5884  002DB2  6EC2               	movwf	4034,c	;volatile
  5885  002DB4  0012               	return		;funcret
  5886  002DB6                     __end_of_Select_ADC_Channel:
  5887                           	opt stack 0
  5888                           tblptru	equ	0xFF8
  5889                           tblptrh	equ	0xFF7
  5890                           tblptrl	equ	0xFF6
  5891                           tablat	equ	0xFF5
  5892                           prodh	equ	0xFF4
  5893                           prodl	equ	0xFF3
  5894                           postinc0	equ	0xFEE
  5895                           wreg	equ	0xFE8
  5896                           postdec1	equ	0xFE5
  5897                           plusw1	equ	0xFE3
  5898                           fsr1l	equ	0xFE1
  5899                           indf2	equ	0xFDF
  5900                           postinc2	equ	0xFDE
  5901                           postdec2	equ	0xFDD
  5902                           plusw2	equ	0xFDB
  5903                           fsr2h	equ	0xFDA
  5904                           fsr2l	equ	0xFD9
  5905                           status	equ	0xFD8
  5906                           
  5907 ;; *************** function _SET_D3_RED *****************
  5908 ;; Defined at:
  5909 ;;		line 215 in file "Lab5.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;		None               void
  5916 ;; Registers used:
  5917 ;;		None
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;Total ram usage:        0 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_main
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text24
  5937  002DF8                     __ptext24:
  5938                           	opt stack 0
  5939  002DF8                     _SET_D3_RED:
  5940                           	opt stack 30
  5941                           
  5942                           ;Lab5.c: 217: PORTAbits.RA4 = 1;
  5943                           
  5944                           ;incstack = 0
  5945  002DF8  8880               	bsf	3968,4,c	;volatile
  5946                           
  5947                           ;Lab5.c: 218: PORTAbits.RA5 = 0;
  5948  002DFA  9A80               	bcf	3968,5,c	;volatile
  5949  002DFC  0012               	return		;funcret
  5950  002DFE                     __end_of_SET_D3_RED:
  5951                           	opt stack 0
  5952                           tblptru	equ	0xFF8
  5953                           tblptrh	equ	0xFF7
  5954                           tblptrl	equ	0xFF6
  5955                           tablat	equ	0xFF5
  5956                           prodh	equ	0xFF4
  5957                           prodl	equ	0xFF3
  5958                           postinc0	equ	0xFEE
  5959                           wreg	equ	0xFE8
  5960                           postdec1	equ	0xFE5
  5961                           plusw1	equ	0xFE3
  5962                           fsr1l	equ	0xFE1
  5963                           indf2	equ	0xFDF
  5964                           postinc2	equ	0xFDE
  5965                           postdec2	equ	0xFDD
  5966                           plusw2	equ	0xFDB
  5967                           fsr2h	equ	0xFDA
  5968                           fsr2l	equ	0xFD9
  5969                           status	equ	0xFD8
  5970                           
  5971 ;; *************** function _SET_D3_PURPLE *****************
  5972 ;; Defined at:
  5973 ;;		line 227 in file "Lab5.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;		None
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;		None
  5978 ;; Return value:  Size  Location     Type
  5979 ;;		None               void
  5980 ;; Registers used:
  5981 ;;		None
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;Total ram usage:        0 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; This function calls:
  5994 ;;		Nothing
  5995 ;; This function is called by:
  5996 ;;		_main
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           	psect	text25
  6001  002DFE                     __ptext25:
  6002                           	opt stack 0
  6003  002DFE                     _SET_D3_PURPLE:
  6004                           	opt stack 30
  6005                           
  6006                           ;Lab5.c: 229: PORTAbits.RA4 = 1;
  6007                           
  6008                           ;incstack = 0
  6009  002DFE  8880               	bsf	3968,4,c	;volatile
  6010                           
  6011                           ;Lab5.c: 230: PORTAbits.RA5 = 1;
  6012  002E00  8A80               	bsf	3968,5,c	;volatile
  6013  002E02  0012               	return		;funcret
  6014  002E04                     __end_of_SET_D3_PURPLE:
  6015                           	opt stack 0
  6016                           tblptru	equ	0xFF8
  6017                           tblptrh	equ	0xFF7
  6018                           tblptrl	equ	0xFF6
  6019                           tablat	equ	0xFF5
  6020                           prodh	equ	0xFF4
  6021                           prodl	equ	0xFF3
  6022                           postinc0	equ	0xFEE
  6023                           wreg	equ	0xFE8
  6024                           postdec1	equ	0xFE5
  6025                           plusw1	equ	0xFE3
  6026                           fsr1l	equ	0xFE1
  6027                           indf2	equ	0xFDF
  6028                           postinc2	equ	0xFDE
  6029                           postdec2	equ	0xFDD
  6030                           plusw2	equ	0xFDB
  6031                           fsr2h	equ	0xFDA
  6032                           fsr2l	equ	0xFD9
  6033                           status	equ	0xFD8
  6034                           
  6035 ;; *************** function _SET_D3_BLUE *****************
  6036 ;; Defined at:
  6037 ;;		line 221 in file "Lab5.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;		None
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;		None
  6042 ;; Return value:  Size  Location     Type
  6043 ;;		None               void
  6044 ;; Registers used:
  6045 ;;		None
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;Total ram usage:        0 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_main
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text26
  6065  002E04                     __ptext26:
  6066                           	opt stack 0
  6067  002E04                     _SET_D3_BLUE:
  6068                           	opt stack 30
  6069                           
  6070                           ;Lab5.c: 223: PORTAbits.RA4 = 0;
  6071                           
  6072                           ;incstack = 0
  6073  002E04  9880               	bcf	3968,4,c	;volatile
  6074                           
  6075                           ;Lab5.c: 224: PORTAbits.RA5 = 1;
  6076  002E06  8A80               	bsf	3968,5,c	;volatile
  6077  002E08  0012               	return		;funcret
  6078  002E0A                     __end_of_SET_D3_BLUE:
  6079                           	opt stack 0
  6080                           tblptru	equ	0xFF8
  6081                           tblptrh	equ	0xFF7
  6082                           tblptrl	equ	0xFF6
  6083                           tablat	equ	0xFF5
  6084                           prodh	equ	0xFF4
  6085                           prodl	equ	0xFF3
  6086                           postinc0	equ	0xFEE
  6087                           wreg	equ	0xFE8
  6088                           postdec1	equ	0xFE5
  6089                           plusw1	equ	0xFE3
  6090                           fsr1l	equ	0xFE1
  6091                           indf2	equ	0xFDF
  6092                           postinc2	equ	0xFDE
  6093                           postdec2	equ	0xFDD
  6094                           plusw2	equ	0xFDB
  6095                           fsr2h	equ	0xFDA
  6096                           fsr2l	equ	0xFD9
  6097                           status	equ	0xFD8
  6098                           
  6099 ;; *************** function _SET_D2_WHITE *****************
  6100 ;; Defined at:
  6101 ;;		line 208 in file "Lab5.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;		None
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;		None               void
  6108 ;; Registers used:
  6109 ;;		None
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;Total ram usage:        0 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; This function calls:
  6122 ;;		Nothing
  6123 ;; This function is called by:
  6124 ;;		_main
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text27
  6129  002DC0                     __ptext27:
  6130                           	opt stack 0
  6131  002DC0                     _SET_D2_WHITE:
  6132                           	opt stack 30
  6133                           
  6134                           ;Lab5.c: 210: PORTBbits.RB0 = 1;
  6135                           
  6136                           ;incstack = 0
  6137  002DC0  8081               	bsf	3969,0,c	;volatile
  6138                           
  6139                           ;Lab5.c: 211: PORTBbits.RB1 = 1;
  6140  002DC2  8281               	bsf	3969,1,c	;volatile
  6141                           
  6142                           ;Lab5.c: 212: PORTBbits.RB2 = 1;
  6143  002DC4  8481               	bsf	3969,2,c	;volatile
  6144  002DC6  0012               	return		;funcret
  6145  002DC8                     __end_of_SET_D2_WHITE:
  6146                           	opt stack 0
  6147                           tblptru	equ	0xFF8
  6148                           tblptrh	equ	0xFF7
  6149                           tblptrl	equ	0xFF6
  6150                           tablat	equ	0xFF5
  6151                           prodh	equ	0xFF4
  6152                           prodl	equ	0xFF3
  6153                           postinc0	equ	0xFEE
  6154                           wreg	equ	0xFE8
  6155                           postdec1	equ	0xFE5
  6156                           plusw1	equ	0xFE3
  6157                           fsr1l	equ	0xFE1
  6158                           indf2	equ	0xFDF
  6159                           postinc2	equ	0xFDE
  6160                           postdec2	equ	0xFDD
  6161                           plusw2	equ	0xFDB
  6162                           fsr2h	equ	0xFDA
  6163                           fsr2l	equ	0xFD9
  6164                           status	equ	0xFD8
  6165                           
  6166 ;; *************** function _SET_D2_OFF *****************
  6167 ;; Defined at:
  6168 ;;		line 201 in file "Lab5.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;		None
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;		None               void
  6175 ;; Registers used:
  6176 ;;		None
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;Total ram usage:        0 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_main
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text28
  6196  002DC8                     __ptext28:
  6197                           	opt stack 0
  6198  002DC8                     _SET_D2_OFF:
  6199                           	opt stack 30
  6200                           
  6201                           ;Lab5.c: 203: PORTBbits.RB0 = 0;
  6202                           
  6203                           ;incstack = 0
  6204  002DC8  9081               	bcf	3969,0,c	;volatile
  6205                           
  6206                           ;Lab5.c: 204: PORTBbits.RB1 = 0;
  6207  002DCA  9281               	bcf	3969,1,c	;volatile
  6208                           
  6209                           ;Lab5.c: 205: PORTBbits.RB2 = 0;
  6210  002DCC  9481               	bcf	3969,2,c	;volatile
  6211  002DCE  0012               	return		;funcret
  6212  002DD0                     __end_of_SET_D2_OFF:
  6213                           	opt stack 0
  6214                           tblptru	equ	0xFF8
  6215                           tblptrh	equ	0xFF7
  6216                           tblptrl	equ	0xFF6
  6217                           tablat	equ	0xFF5
  6218                           prodh	equ	0xFF4
  6219                           prodl	equ	0xFF3
  6220                           postinc0	equ	0xFEE
  6221                           wreg	equ	0xFE8
  6222                           postdec1	equ	0xFE5
  6223                           plusw1	equ	0xFE3
  6224                           fsr1l	equ	0xFE1
  6225                           indf2	equ	0xFDF
  6226                           postinc2	equ	0xFDE
  6227                           postdec2	equ	0xFDD
  6228                           plusw2	equ	0xFDB
  6229                           fsr2h	equ	0xFDA
  6230                           fsr2l	equ	0xFD9
  6231                           status	equ	0xFD8
  6232                           
  6233 ;; *************** function _SET_D1_WHITE *****************
  6234 ;; Defined at:
  6235 ;;		line 194 in file "Lab5.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;		None
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;		None
  6240 ;; Return value:  Size  Location     Type
  6241 ;;		None               void
  6242 ;; Registers used:
  6243 ;;		None
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;Total ram usage:        0 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; This function calls:
  6256 ;;		Nothing
  6257 ;; This function is called by:
  6258 ;;		_main
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text29
  6263  002DD0                     __ptext29:
  6264                           	opt stack 0
  6265  002DD0                     _SET_D1_WHITE:
  6266                           	opt stack 30
  6267                           
  6268                           ;Lab5.c: 196: PORTBbits.RB3 = 1;
  6269                           
  6270                           ;incstack = 0
  6271  002DD0  8681               	bsf	3969,3,c	;volatile
  6272                           
  6273                           ;Lab5.c: 197: PORTBbits.RB4 = 1;
  6274  002DD2  8881               	bsf	3969,4,c	;volatile
  6275                           
  6276                           ;Lab5.c: 198: PORTBbits.RB5 = 1;
  6277  002DD4  8A81               	bsf	3969,5,c	;volatile
  6278  002DD6  0012               	return		;funcret
  6279  002DD8                     __end_of_SET_D1_WHITE:
  6280                           	opt stack 0
  6281                           tblptru	equ	0xFF8
  6282                           tblptrh	equ	0xFF7
  6283                           tblptrl	equ	0xFF6
  6284                           tablat	equ	0xFF5
  6285                           prodh	equ	0xFF4
  6286                           prodl	equ	0xFF3
  6287                           postinc0	equ	0xFEE
  6288                           wreg	equ	0xFE8
  6289                           postdec1	equ	0xFE5
  6290                           plusw1	equ	0xFE3
  6291                           fsr1l	equ	0xFE1
  6292                           indf2	equ	0xFDF
  6293                           postinc2	equ	0xFDE
  6294                           postdec2	equ	0xFDD
  6295                           plusw2	equ	0xFDB
  6296                           fsr2h	equ	0xFDA
  6297                           fsr2l	equ	0xFD9
  6298                           status	equ	0xFD8
  6299                           
  6300 ;; *************** function _SET_D1_RED *****************
  6301 ;; Defined at:
  6302 ;;		line 173 in file "Lab5.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;		None
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;		None
  6307 ;; Return value:  Size  Location     Type
  6308 ;;		None               void
  6309 ;; Registers used:
  6310 ;;		None
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6320 ;;Total ram usage:        0 bytes
  6321 ;; Hardware stack levels used:    1
  6322 ;; This function calls:
  6323 ;;		Nothing
  6324 ;; This function is called by:
  6325 ;;		_main
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text30
  6330  002DD8                     __ptext30:
  6331                           	opt stack 0
  6332  002DD8                     _SET_D1_RED:
  6333                           	opt stack 30
  6334                           
  6335                           ;Lab5.c: 175: PORTBbits.RB3 = 1;
  6336                           
  6337                           ;incstack = 0
  6338  002DD8  8681               	bsf	3969,3,c	;volatile
  6339                           
  6340                           ;Lab5.c: 176: PORTBbits.RB4 = 0;
  6341  002DDA  9881               	bcf	3969,4,c	;volatile
  6342                           
  6343                           ;Lab5.c: 177: PORTBbits.RB5 = 0;
  6344  002DDC  9A81               	bcf	3969,5,c	;volatile
  6345  002DDE  0012               	return		;funcret
  6346  002DE0                     __end_of_SET_D1_RED:
  6347                           	opt stack 0
  6348                           tblptru	equ	0xFF8
  6349                           tblptrh	equ	0xFF7
  6350                           tblptrl	equ	0xFF6
  6351                           tablat	equ	0xFF5
  6352                           prodh	equ	0xFF4
  6353                           prodl	equ	0xFF3
  6354                           postinc0	equ	0xFEE
  6355                           wreg	equ	0xFE8
  6356                           postdec1	equ	0xFE5
  6357                           plusw1	equ	0xFE3
  6358                           fsr1l	equ	0xFE1
  6359                           indf2	equ	0xFDF
  6360                           postinc2	equ	0xFDE
  6361                           postdec2	equ	0xFDD
  6362                           plusw2	equ	0xFDB
  6363                           fsr2h	equ	0xFDA
  6364                           fsr2l	equ	0xFD9
  6365                           status	equ	0xFD8
  6366                           
  6367 ;; *************** function _SET_D1_OFF *****************
  6368 ;; Defined at:
  6369 ;;		line 166 in file "Lab5.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;		None
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;		None
  6374 ;; Return value:  Size  Location     Type
  6375 ;;		None               void
  6376 ;; Registers used:
  6377 ;;		None
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;Total ram usage:        0 bytes
  6388 ;; Hardware stack levels used:    1
  6389 ;; This function calls:
  6390 ;;		Nothing
  6391 ;; This function is called by:
  6392 ;;		_main
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	text31
  6397  002DE0                     __ptext31:
  6398                           	opt stack 0
  6399  002DE0                     _SET_D1_OFF:
  6400                           	opt stack 30
  6401                           
  6402                           ;Lab5.c: 168: PORTBbits.RB3 = 0;
  6403                           
  6404                           ;incstack = 0
  6405  002DE0  9681               	bcf	3969,3,c	;volatile
  6406                           
  6407                           ;Lab5.c: 169: PORTBbits.RB4 = 0;
  6408  002DE2  9881               	bcf	3969,4,c	;volatile
  6409                           
  6410                           ;Lab5.c: 170: PORTBbits.RB5 = 0;
  6411  002DE4  9A81               	bcf	3969,5,c	;volatile
  6412  002DE6  0012               	return		;funcret
  6413  002DE8                     __end_of_SET_D1_OFF:
  6414                           	opt stack 0
  6415                           tblptru	equ	0xFF8
  6416                           tblptrh	equ	0xFF7
  6417                           tblptrl	equ	0xFF6
  6418                           tablat	equ	0xFF5
  6419                           prodh	equ	0xFF4
  6420                           prodl	equ	0xFF3
  6421                           postinc0	equ	0xFEE
  6422                           wreg	equ	0xFE8
  6423                           postdec1	equ	0xFE5
  6424                           plusw1	equ	0xFE3
  6425                           fsr1l	equ	0xFE1
  6426                           indf2	equ	0xFDF
  6427                           postinc2	equ	0xFDE
  6428                           postdec2	equ	0xFDD
  6429                           plusw2	equ	0xFDB
  6430                           fsr2h	equ	0xFDA
  6431                           fsr2l	equ	0xFD9
  6432                           status	equ	0xFD8
  6433                           
  6434 ;; *************** function _SET_D1_GREEN *****************
  6435 ;; Defined at:
  6436 ;;		line 180 in file "Lab5.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;		None               void
  6443 ;; Registers used:
  6444 ;;		None
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;Total ram usage:        0 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_main
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text32
  6464  002DE8                     __ptext32:
  6465                           	opt stack 0
  6466  002DE8                     _SET_D1_GREEN:
  6467                           	opt stack 30
  6468                           
  6469                           ;Lab5.c: 182: PORTBbits.RB3 = 0;
  6470                           
  6471                           ;incstack = 0
  6472  002DE8  9681               	bcf	3969,3,c	;volatile
  6473                           
  6474                           ;Lab5.c: 183: PORTBbits.RB4 = 1;
  6475  002DEA  8881               	bsf	3969,4,c	;volatile
  6476                           
  6477                           ;Lab5.c: 184: PORTBbits.RB5 = 0;
  6478  002DEC  9A81               	bcf	3969,5,c	;volatile
  6479  002DEE  0012               	return		;funcret
  6480  002DF0                     __end_of_SET_D1_GREEN:
  6481                           	opt stack 0
  6482                           tblptru	equ	0xFF8
  6483                           tblptrh	equ	0xFF7
  6484                           tblptrl	equ	0xFF6
  6485                           tablat	equ	0xFF5
  6486                           prodh	equ	0xFF4
  6487                           prodl	equ	0xFF3
  6488                           postinc0	equ	0xFEE
  6489                           wreg	equ	0xFE8
  6490                           postdec1	equ	0xFE5
  6491                           plusw1	equ	0xFE3
  6492                           fsr1l	equ	0xFE1
  6493                           indf2	equ	0xFDF
  6494                           postinc2	equ	0xFDE
  6495                           postdec2	equ	0xFDD
  6496                           plusw2	equ	0xFDB
  6497                           fsr2h	equ	0xFDA
  6498                           fsr2l	equ	0xFD9
  6499                           status	equ	0xFD8
  6500                           
  6501 ;; *************** function _SET_D1_BLUE *****************
  6502 ;; Defined at:
  6503 ;;		line 187 in file "Lab5.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;		None
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;		None               void
  6510 ;; Registers used:
  6511 ;;		None
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;Total ram usage:        0 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_main
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text33
  6531  002DF0                     __ptext33:
  6532                           	opt stack 0
  6533  002DF0                     _SET_D1_BLUE:
  6534                           	opt stack 30
  6535                           
  6536                           ;Lab5.c: 189: PORTBbits.RB3 = 0;
  6537                           
  6538                           ;incstack = 0
  6539  002DF0  9681               	bcf	3969,3,c	;volatile
  6540                           
  6541                           ;Lab5.c: 190: PORTBbits.RB4 = 0;
  6542  002DF2  9881               	bcf	3969,4,c	;volatile
  6543                           
  6544                           ;Lab5.c: 191: PORTBbits.RB5 = 1;
  6545  002DF4  8A81               	bsf	3969,5,c	;volatile
  6546  002DF6  0012               	return		;funcret
  6547  002DF8                     __end_of_SET_D1_BLUE:
  6548                           	opt stack 0
  6549                           tblptru	equ	0xFF8
  6550                           tblptrh	equ	0xFF7
  6551                           tblptrl	equ	0xFF6
  6552                           tablat	equ	0xFF5
  6553                           prodh	equ	0xFF4
  6554                           prodl	equ	0xFF3
  6555                           postinc0	equ	0xFEE
  6556                           wreg	equ	0xFE8
  6557                           postdec1	equ	0xFE5
  6558                           plusw1	equ	0xFE3
  6559                           fsr1l	equ	0xFE1
  6560                           indf2	equ	0xFDF
  6561                           postinc2	equ	0xFDE
  6562                           postdec2	equ	0xFDD
  6563                           plusw2	equ	0xFDB
  6564                           fsr2h	equ	0xFDA
  6565                           fsr2l	equ	0xFD9
  6566                           status	equ	0xFD8
  6567                           
  6568 ;; *************** function _Init_UART *****************
  6569 ;; Defined at:
  6570 ;;		line 41 in file "Lab5.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;		None
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;		None
  6575 ;; Return value:  Size  Location     Type
  6576 ;;		None               void
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;Total ram usage:        0 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; Hardware stack levels required when called:    1
  6591 ;; This function calls:
  6592 ;;		_OpenUSART
  6593 ;; This function is called by:
  6594 ;;		_main
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text34
  6599  002D7A                     __ptext34:
  6600                           	opt stack 0
  6601  002D7A                     _Init_UART:
  6602                           	opt stack 29
  6603                           
  6604                           ;Lab5.c: 43: OpenUSART (0b01111111 & 0b10111111 &
  6605                           ;Lab5.c: 44: 0b11111110 & 0b11111101 & 0b11111111 &
  6606                           ;Lab5.c: 45: 0b11111111, 25);
  6607                           
  6608                           ;incstack = 0
  6609  002D7A  0E00               	movlw	0
  6610  002D7C  6E02               	movwf	OpenUSART@spbrg+1,c
  6611  002D7E  0E19               	movlw	25
  6612  002D80  6E01               	movwf	OpenUSART@spbrg,c
  6613  002D82  0E3C               	movlw	60
  6614  002D84  ECAA  F015         	call	_OpenUSART
  6615                           
  6616                           ;Lab5.c: 46: OSCCON = 0x60;
  6617  002D88  0E60               	movlw	96
  6618  002D8A  6ED3               	movwf	4051,c	;volatile
  6619  002D8C  0012               	return		;funcret
  6620  002D8E                     __end_of_Init_UART:
  6621                           	opt stack 0
  6622                           tblptru	equ	0xFF8
  6623                           tblptrh	equ	0xFF7
  6624                           tblptrl	equ	0xFF6
  6625                           tablat	equ	0xFF5
  6626                           prodh	equ	0xFF4
  6627                           prodl	equ	0xFF3
  6628                           postinc0	equ	0xFEE
  6629                           wreg	equ	0xFE8
  6630                           postdec1	equ	0xFE5
  6631                           plusw1	equ	0xFE3
  6632                           fsr1l	equ	0xFE1
  6633                           indf2	equ	0xFDF
  6634                           postinc2	equ	0xFDE
  6635                           postdec2	equ	0xFDD
  6636                           plusw2	equ	0xFDB
  6637                           fsr2h	equ	0xFDA
  6638                           fsr2l	equ	0xFD9
  6639                           status	equ	0xFD8
  6640                           
  6641 ;; *************** function _OpenUSART *****************
  6642 ;; Defined at:
  6643 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  config          1    wreg     unsigned char 
  6646 ;;  spbrg           2    0[COMRAM] unsigned int 
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;  config          1    2[COMRAM] unsigned char 
  6649 ;; Return value:  Size  Location     Type
  6650 ;;		None               void
  6651 ;; Registers used:
  6652 ;;		wreg, status,2
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;Total ram usage:        3 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; This function calls:
  6665 ;;		Nothing
  6666 ;; This function is called by:
  6667 ;;		_Init_UART
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text35
  6672  002B54                     __ptext35:
  6673                           	opt stack 0
  6674  002B54                     _OpenUSART:
  6675                           	opt stack 29
  6676                           
  6677                           ;incstack = 0
  6678                           ;OpenUSART@config stored from wreg
  6679  002B54  6E03               	movwf	OpenUSART@config,c
  6680  002B56  0E00               	movlw	0
  6681  002B58  6EAC               	movwf	4012,c	;volatile
  6682  002B5A  0E00               	movlw	0
  6683  002B5C  6EAB               	movwf	4011,c	;volatile
  6684  002B5E  A003               	btfss	OpenUSART@config,0,c
  6685  002B60  D002               	goto	l2156
  6686  002B62  88AC               	bsf	4012,4,c	;volatile
  6687  002B64  D000               	goto	l2156
  6688  002B66                     l2156:
  6689  002B66  A203               	btfss	OpenUSART@config,1,c
  6690  002B68  D003               	goto	l2160
  6691  002B6A  8CAC               	bsf	4012,6,c	;volatile
  6692  002B6C  8CAB               	bsf	4011,6,c	;volatile
  6693  002B6E  D000               	goto	l2160
  6694  002B70                     l2160:
  6695  002B70  A403               	btfss	OpenUSART@config,2,c
  6696  002B72  D002               	goto	l2164
  6697  002B74  8EAC               	bsf	4012,7,c	;volatile
  6698  002B76  D000               	goto	l2164
  6699  002B78                     l2164:
  6700  002B78  A603               	btfss	OpenUSART@config,3,c
  6701  002B7A  D002               	goto	l277
  6702  002B7C  88AB               	bsf	4011,4,c	;volatile
  6703  002B7E  D002               	goto	l2168
  6704  002B80                     l277:
  6705  002B80  8AAB               	bsf	4011,5,c	;volatile
  6706  002B82  D000               	goto	l2168
  6707  002B84                     l2168:
  6708  002B84  B803               	btfsc	OpenUSART@config,4,c
  6709  002B86  84AC               	bsf	4012,2,c	;volatile
  6710  002B88  989E               	bcf	3998,4,c	;volatile
  6711  002B8A  AA03               	btfss	OpenUSART@config,5,c
  6712  002B8C  D002               	goto	l2176
  6713  002B8E  86AB               	bsf	4011,3,c	;volatile
  6714  002B90  D000               	goto	l2176
  6715  002B92                     l2176:
  6716  002B92  AC03               	btfss	OpenUSART@config,6,c
  6717  002B94  D002               	goto	l281
  6718  002B96  8A9D               	bsf	3997,5,c	;volatile
  6719  002B98  D001               	goto	l282
  6720  002B9A                     l281:
  6721  002B9A  9A9D               	bcf	3997,5,c	;volatile
  6722  002B9C                     l282:
  6723  002B9C  9A9E               	bcf	3998,5,c	;volatile
  6724  002B9E  AE03               	btfss	OpenUSART@config,7,c
  6725  002BA0  D002               	goto	l283
  6726  002BA2  889D               	bsf	3997,4,c	;volatile
  6727  002BA4  D001               	goto	l284
  6728  002BA6                     l283:
  6729  002BA6  989D               	bcf	3997,4,c	;volatile
  6730  002BA8                     l284:
  6731  002BA8  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  6732  002BAC  5002               	movf	OpenUSART@spbrg+1,w,c
  6733  002BAE  6EB0               	movwf	4016,c	;volatile
  6734  002BB0  8AAC               	bsf	4012,5,c	;volatile
  6735  002BB2  8EAB               	bsf	4011,7,c	;volatile
  6736  002BB4  9C94               	bcf	3988,6,c	;volatile
  6737  002BB6  8E94               	bsf	3988,7,c	;volatile
  6738  002BB8  B8AC               	btfsc	4012,4,c	;volatile
  6739  002BBA  BEAC               	btfsc	4012,7,c	;volatile
  6740  002BBC  D002               	goto	l286
  6741  002BBE  8C94               	bsf	3988,6,c	;volatile
  6742  002BC0  D000               	goto	l286
  6743  002BC2                     l286:
  6744  002BC2  0012               	return		;funcret
  6745  002BC4                     __end_of_OpenUSART:
  6746                           	opt stack 0
  6747                           tblptru	equ	0xFF8
  6748                           tblptrh	equ	0xFF7
  6749                           tblptrl	equ	0xFF6
  6750                           tablat	equ	0xFF5
  6751                           prodh	equ	0xFF4
  6752                           prodl	equ	0xFF3
  6753                           postinc0	equ	0xFEE
  6754                           wreg	equ	0xFE8
  6755                           postdec1	equ	0xFE5
  6756                           plusw1	equ	0xFE3
  6757                           fsr1l	equ	0xFE1
  6758                           indf2	equ	0xFDF
  6759                           postinc2	equ	0xFDE
  6760                           postdec2	equ	0xFDD
  6761                           plusw2	equ	0xFDB
  6762                           fsr2h	equ	0xFDA
  6763                           fsr2l	equ	0xFD9
  6764                           status	equ	0xFD8
  6765                           
  6766 ;; *************** function _Init_TRIS *****************
  6767 ;; Defined at:
  6768 ;;		line 133 in file "Lab5.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;		None
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;		None
  6773 ;; Return value:  Size  Location     Type
  6774 ;;		None               void
  6775 ;; Registers used:
  6776 ;;		wreg, status,2
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;Total ram usage:        0 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_main
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text36
  6796  002D64                     __ptext36:
  6797                           	opt stack 0
  6798  002D64                     _Init_TRIS:
  6799                           	opt stack 30
  6800                           
  6801                           ;Lab5.c: 135: TRISA = 0x0F;
  6802                           
  6803                           ;incstack = 0
  6804  002D64  0E0F               	movlw	15
  6805  002D66  6E92               	movwf	3986,c	;volatile
  6806                           
  6807                           ;Lab5.c: 136: TRISB = 0x00;
  6808  002D68  0E00               	movlw	0
  6809  002D6A  6E93               	movwf	3987,c	;volatile
  6810                           
  6811                           ;Lab5.c: 137: TRISC = 0x00;
  6812  002D6C  0E00               	movlw	0
  6813  002D6E  6E94               	movwf	3988,c	;volatile
  6814                           
  6815                           ;Lab5.c: 138: TRISD = 0x00;
  6816  002D70  0E00               	movlw	0
  6817  002D72  6E95               	movwf	3989,c	;volatile
  6818                           
  6819                           ;Lab5.c: 139: TRISE = 0x00;
  6820  002D74  0E00               	movlw	0
  6821  002D76  6E96               	movwf	3990,c	;volatile
  6822  002D78  0012               	return		;funcret
  6823  002D7A                     __end_of_Init_TRIS:
  6824                           	opt stack 0
  6825                           tblptru	equ	0xFF8
  6826                           tblptrh	equ	0xFF7
  6827                           tblptrl	equ	0xFF6
  6828                           tablat	equ	0xFF5
  6829                           prodh	equ	0xFF4
  6830                           prodl	equ	0xFF3
  6831                           postinc0	equ	0xFEE
  6832                           wreg	equ	0xFE8
  6833                           postdec1	equ	0xFE5
  6834                           plusw1	equ	0xFE3
  6835                           fsr1l	equ	0xFE1
  6836                           indf2	equ	0xFDF
  6837                           postinc2	equ	0xFDE
  6838                           postdec2	equ	0xFDD
  6839                           plusw2	equ	0xFDB
  6840                           fsr2h	equ	0xFDA
  6841                           fsr2l	equ	0xFD9
  6842                           status	equ	0xFD8
  6843                           
  6844 ;; *************** function _Init_ADC *****************
  6845 ;; Defined at:
  6846 ;;		line 147 in file "Lab5.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;		None
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;		None
  6851 ;; Return value:  Size  Location     Type
  6852 ;;		None               void
  6853 ;; Registers used:
  6854 ;;		wreg, status,2
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;Total ram usage:        0 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; This function calls:
  6867 ;;		Nothing
  6868 ;; This function is called by:
  6869 ;;		_main
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           	psect	text37
  6874  002D9C                     __ptext37:
  6875                           	opt stack 0
  6876  002D9C                     _Init_ADC:
  6877                           	opt stack 30
  6878                           
  6879                           ;Lab5.c: 149: ADCON0=0x01;
  6880                           
  6881                           ;incstack = 0
  6882  002D9C  0E01               	movlw	1
  6883  002D9E  6EC2               	movwf	4034,c	;volatile
  6884                           
  6885                           ;Lab5.c: 150: ADCON1=0x1B ;
  6886  002DA0  0E1B               	movlw	27
  6887  002DA2  6EC1               	movwf	4033,c	;volatile
  6888                           
  6889                           ;Lab5.c: 152: ADCON2=0xA9;
  6890  002DA4  0EA9               	movlw	169
  6891  002DA6  6EC0               	movwf	4032,c	;volatile
  6892  002DA8  0012               	return		;funcret
  6893  002DAA                     __end_of_Init_ADC:
  6894                           	opt stack 0
  6895                           tblptru	equ	0xFF8
  6896                           tblptrh	equ	0xFF7
  6897                           tblptrl	equ	0xFF6
  6898                           tablat	equ	0xFF5
  6899                           prodh	equ	0xFF4
  6900                           prodl	equ	0xFF3
  6901                           postinc0	equ	0xFEE
  6902                           wreg	equ	0xFE8
  6903                           postdec1	equ	0xFE5
  6904                           plusw1	equ	0xFE3
  6905                           fsr1l	equ	0xFE1
  6906                           indf2	equ	0xFDF
  6907                           postinc2	equ	0xFDE
  6908                           postdec2	equ	0xFDD
  6909                           plusw2	equ	0xFDB
  6910                           fsr2h	equ	0xFDA
  6911                           fsr2l	equ	0xFD9
  6912                           status	equ	0xFD8
  6913                           
  6914 ;; *************** function _Delay_One_Sec *****************
  6915 ;; Defined at:
  6916 ;;		line 128 in file "Lab5.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;		None
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;  I               2    0[COMRAM] int 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;		None               void
  6923 ;; Registers used:
  6924 ;;		wreg, status,2, status,0
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6934 ;;Total ram usage:        2 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; This function calls:
  6937 ;;		Nothing
  6938 ;; This function is called by:
  6939 ;;		_main
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           	psect	text38
  6944  002D40                     __ptext38:
  6945                           	opt stack 0
  6946  002D40                     _Delay_One_Sec:
  6947                           	opt stack 30
  6948                           
  6949                           ;Lab5.c: 130: for(int I=0; I <17000; I++);
  6950                           
  6951                           ;incstack = 0
  6952  002D40  0E00               	movlw	0
  6953  002D42  6E02               	movwf	Delay_One_Sec@I+1,c
  6954  002D44  0E00               	movlw	0
  6955  002D46  6E01               	movwf	Delay_One_Sec@I,c
  6956  002D48                     l2728:
  6957  002D48  BE02               	btfsc	Delay_One_Sec@I+1,7,c
  6958  002D4A  D008               	goto	l2732
  6959  002D4C  0E68               	movlw	104
  6960  002D4E  5C01               	subwf	Delay_One_Sec@I,w,c
  6961  002D50  0E42               	movlw	66
  6962  002D52  5802               	subwfb	Delay_One_Sec@I+1,w,c
  6963  002D54  B0D8               	btfsc	status,0,c
  6964  002D56  D005               	goto	l116
  6965  002D58  D001               	goto	l2732
  6966  002D5A  D003               	goto	l116
  6967  002D5C                     l2732:
  6968  002D5C  4A01               	infsnz	Delay_One_Sec@I,f,c
  6969  002D5E  2A02               	incf	Delay_One_Sec@I+1,f,c
  6970  002D60  D7F3               	goto	l2728
  6971  002D62                     l116:
  6972  002D62  0012               	return		;funcret
  6973  002D64                     __end_of_Delay_One_Sec:
  6974                           	opt stack 0
  6975                           tblptru	equ	0xFF8
  6976                           tblptrh	equ	0xFF7
  6977                           tblptrl	equ	0xFF6
  6978                           tablat	equ	0xFF5
  6979                           prodh	equ	0xFF4
  6980                           prodl	equ	0xFF3
  6981                           postinc0	equ	0xFEE
  6982                           wreg	equ	0xFE8
  6983                           postdec1	equ	0xFE5
  6984                           plusw1	equ	0xFE3
  6985                           fsr1l	equ	0xFE1
  6986                           indf2	equ	0xFDF
  6987                           postinc2	equ	0xFDE
  6988                           postdec2	equ	0xFDD
  6989                           plusw2	equ	0xFDB
  6990                           fsr2h	equ	0xFDA
  6991                           fsr2l	equ	0xFD9
  6992                           status	equ	0xFD8
  6993                           tblptru	equ	0xFF8
  6994                           tblptrh	equ	0xFF7
  6995                           tblptrl	equ	0xFF6
  6996                           tablat	equ	0xFF5
  6997                           prodh	equ	0xFF4
  6998                           prodl	equ	0xFF3
  6999                           postinc0	equ	0xFEE
  7000                           wreg	equ	0xFE8
  7001                           postdec1	equ	0xFE5
  7002                           plusw1	equ	0xFE3
  7003                           fsr1l	equ	0xFE1
  7004                           indf2	equ	0xFDF
  7005                           postinc2	equ	0xFDE
  7006                           postdec2	equ	0xFDD
  7007                           plusw2	equ	0xFDB
  7008                           fsr2h	equ	0xFDA
  7009                           fsr2l	equ	0xFD9
  7010                           status	equ	0xFD8
  7011                           
  7012                           	psect	rparam
  7013  0000                     tblptru	equ	0xFF8
  7014                           tblptrh	equ	0xFF7
  7015                           tblptrl	equ	0xFF6
  7016                           tablat	equ	0xFF5
  7017                           prodh	equ	0xFF4
  7018                           prodl	equ	0xFF3
  7019                           postinc0	equ	0xFEE
  7020                           wreg	equ	0xFE8
  7021                           postdec1	equ	0xFE5
  7022                           plusw1	equ	0xFE3
  7023                           fsr1l	equ	0xFE1
  7024                           indf2	equ	0xFDF
  7025                           postinc2	equ	0xFDE
  7026                           postdec2	equ	0xFDD
  7027                           plusw2	equ	0xFDB
  7028                           fsr2h	equ	0xFDA
  7029                           fsr2l	equ	0xFD9
  7030                           status	equ	0xFD8


Data Sizes:
    Strings     32
    Constant    118
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128      0      10
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[14]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _Init_UART->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   54549
                                             97 COMRAM    30    30      0
                      _Delay_One_Sec
                           _Init_ADC
                          _Init_TRIS
                          _Init_UART
                        _SET_D1_BLUE
                       _SET_D1_GREEN
                         _SET_D1_OFF
                         _SET_D1_RED
                       _SET_D1_WHITE
                         _SET_D2_OFF
                       _SET_D2_WHITE
                        _SET_D3_BLUE
                      _SET_D3_PURPLE
                         _SET_D3_RED
                 _Select_ADC_Channel
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                       _get_full_ADC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   38233
                                             63 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8908
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8710
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3742
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1466
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     583
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     480
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     464
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3237
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2984
                                             45 COMRAM    12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1090
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2212
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1943
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SET_D3_RED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D3_PURPLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D3_BLUE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D2_WHITE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D2_OFF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D1_WHITE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D1_RED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D1_OFF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D1_GREEN                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D1_BLUE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay_One_Sec                                        2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_One_Sec
   _Init_ADC
   _Init_TRIS
   _Init_UART
     _OpenUSART
   _SET_D1_BLUE
   _SET_D1_GREEN
   _SET_D1_OFF
   _SET_D1_RED
   _SET_D1_WHITE
   _SET_D2_OFF
   _SET_D2_WHITE
   _SET_D3_BLUE
   _SET_D3_PURPLE
   _SET_D3_RED
   _Select_ADC_Channel
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _get_full_ADC
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       A       5        7.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      89      34        0.0%
DATA                 0      0      89       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 06 18:58:51 2022

                         l80 2D92                 ___awdiv@sign 000C          ___wmul@multiplicand 0011  
               ___ftadd@exp1 0039                 ___ftadd@exp2 0038                 ___ftadd@sign 0037  
                        l131 2D1A                          l116 2D62                          l128 2CFA  
                        l235 1522                          l181 2144                          l253 17E4  
                        l281 2B9A                          l282 2B9C                          l283 2BA6  
                        l507 2CA2                          l284 2BA8                          l188 1BC4  
                        l277 2B80                          l286 2BC2                          l614 28A8  
                        l703 2408                          l712 29D4                          l625 2880  
                        l289 2CF4                          l482 293E                          l573 2522  
                        l654 218A                          l582 2512                          l718 261A  
                        l655 2308                          l735 2C66                          l495 2AE2  
                        l728 2D32                          l808 2C22                          l658 21B4  
                        l739 2700                          l669 2276                          l686 27E2  
                        l678 2292                          l694 2418                          l696 2380  
                        l689 27AE                          l697 23A8                          l778 2A50  
                        l788 2B42                 ___awmod@sign 0006                          prod 000FF3  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0016  
               ___ftdiv@sign 001B                 __CFG_WDT$OFF 000000                         l2000 225E  
                       l2002 226A                         l2110 2934                         l2102 2918  
                       l2030 255C                         l2008 22B0                         l2018 22E2  
                       l2106 2924                         l2130 2A94                         l2122 2A78  
                       l2034 256A                         l2132 2A9E                         l2052 25B0  
                       l2028 2542                         l2310 23DA                         l2134 2AA6  
                       l2142 2AC8                         l2126 2A86                         l2062 25DE  
                       l2222 2104                         l2214 2040                         l2160 2B70  
                       l2312 23E0                         l2056 25C6                         l2048 259E  
                       l2402 29D0                         l2306 23CA                         l2090 28E8  
                       l2146 2AD8                         l2138 2ABC                         l2066 25F4  
                       l2058 25CC                         l2242 19BA                         l2164 2B78  
                       l2156 2B66                         l2332 243A                         l2316 23F4  
                       l2092 28F2                         l2084 28D2                         l2260 1BA0  
                       l2236 1912                         l2326 242A                         l2318 2402  
                       l2270 2328                         l2094 28FA                         l2078 28C0  
                       l2254 1AEE                         l2246 19CA                         l2176 2B92  
                       l2168 2B84                         l2440 26AA                         l2416 263A  
                       l2600 1358                         l2434 2694                         l2370 24E4  
                       l2354 24B0                         l2346 247E                         l2610 13FE  
                       l2602 1386                         l2530 10BE                         l2452 26EE  
                       l2444 26BE                         l2372 24EA                         l2276 2346  
                       l2604 1394                         l2524 10A2                         l2446 26CC  
                       l2438 26A4                         l2462 29F8                         l2366 24D4  
                       l2358 24C0                         l2702 17B4                         l2622 143E  
                       l2614 140A                         l2550 1144                         l2534 10C6  
                       l1920 2810                         l2392 2972                         l2384 2C3C  
                       l2448 26D6                         l2464 2A06                         l2376 24FE  
                       l2640 150C                         l2632 14E4                         l2608 13FA  
                       l2536 10F2                         l2528 10B2                         l2704 17C8  
                       l1930 2874                         l1922 2830                         l1914 27F4  
                       l2474 2A40                         l2466 2A0E                         l2490 2B32  
                       l2482 2AF6                         l2378 250C                         l2298 23B6  
                       l2650 1542                         l2634 14F0                         l2626 145A  
                       l2618 143A                         l2732 2D5C                         l2396 29A4  
                       l2484 2B04                         l2660 1668                         l2644 1528  
                       l2580 1270                         l1942 289A                         l1926 2848  
                       l1918 2804                         l2742 2720                         l2486 2B0C  
                       l2662 1674                         l2654 1592                         l2638 14FE  
                       l2590 12E8                         l2582 12A0                         l2574 123A  
                       l2566 11D6                         l2728 2D48                         l1936 2888  
                       l1928 2868                         l2744 273A                         l1960 2198  
                       l2496 2BCA                         l2680 16CE                         l2584 12B0  
                       l2832 1D44                         l2498 2BD8                         l2666 1682  
                       l2594 130C                         l2578 1260                         l2850 1D8E  
                       l2842 1D62                         l2826 1D24                         l2748 2748  
                       l1972 21CE                         l2692 170E                         l2684 16DA  
                       l2596 1316                         l2668 168E                         l2852 1D9E  
                       l2844 1D72                         l2790 2C7E                         l1990 2226  
                       l1982 21F6                         l1966 21C2                         l2678 16CA  
                       l2862 1DFA                         l2846 1D78                         l2838 1D56  
                       l2768 2788                         l1992 2232                         l2696 172A  
                       l2688 170A                         l2856 1DC4                         l2848 1D88  
                       l2778 27BC                         l1994 223A                         l2698 1736  
                       l2858 1DD4                         l2866 1E10                         l1988 221A  
                       l2884 1ED2                         l2878 1E8C                         l2798 1BE6  
                       l2888 1EF8                         STR_1 1077                         STR_2 1089  
                       u3001 1BDC                         u3120 1E0A                         u2241 231A  
                       u2261 2338                         u2451 262C                         u1901 2552  
                       u2470 2658                         u1671 2156                         u1681 216A  
                       u2810 151C                         u2650 117C                         u2475 2650  
               printf@tmpval 005A                         u2655 1172                         u1881 2534  
                       u2941 2712                         u2961 2730                         _TRMT 007D61  
                       _main 1BC6                 ___ftpack@arg 0001                 ___ftpack@exp 0004  
             ??_get_full_ADC 0003                         fsr2h 000FDA                         fsr1l 000FE1  
                       indf2 000FDF                         fsr2l 000FD9                         prodh 000FF4  
                       prodl 000FF3                         start 0000                 ___ftmul@cntr 0022  
               ___param_bank 000010                 ___ftmul@sign 0023                 ___fttol@exp1 0039  
               ___fttol@lval 0035                  ?_SET_D1_OFF 0001                  ?_SET_D1_RED 0001  
                ?_SET_D2_OFF 0001                        ?_main 0001                  ?_SET_D3_RED 0001  
            __end_of___awdiv 2940              __end_of___ftadd 230A              __end_of___awmod 2AE4  
            __end_of___ftdiv 27E4              __end_of___ftneg 2D40              __end_of___lldiv 2A62  
            __end_of___ftmul 261C              ___awdiv@divisor 0009              __end_of___llmod 2B54  
            __end_of___ftsub 2C68              __end_of___fttol 2702              ___awdiv@counter 000B  
                      _RCSTA 000FAB                        _SPBRG 000FAF                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _PORTE 000F84  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                        _TXREG 000FAD  
                      _TXSTA 000FAC                 ___lltoft@exp 0011                ___awtoft@sign 000C  
            __end_of_dpowers 1029                        _scale 17E6                ___ftpack@sign 0005  
                      _putch 2D8E                        main@l 0073                        main@t 0076  
                      main@u 007D                 main@num_step 0074               __CFG_BOREN$OFF 000000  
                      tablat 000FF5                        plusw1 000FE3                        plusw2 000FDB  
                      status 000FD8              __initialization 2CA4                 __end_of_main 1F02  
           __end_of_Init_ADC 2DAA                       ??_main 0062                ___fttol@sign1 0034  
              __activetblptr 000002        __end_of_SET_D3_PURPLE 2E04         __size_of__tdiv_to_l_ 0110  
               ?_SET_D1_BLUE 0001                 ?_SET_D3_BLUE 0001                       _ADCON0 000FC2  
                     _ADCON1 000FC1                       _ADCON2 000FC0             ___llmod@dividend 000E  
                     ?_scale 0024                       _ADRESH 000FC4                       _ADRESL 000FC3  
           ___awdiv@dividend 0007             __end_of___awtoft 2CA4                       ?_putch 0001  
           __end_of___ftpack 28AA             __end_of___lltoft 2C24                       _OSCCON 000FD3  
         __size_of_Init_UART 0014           __size_of_Init_TRIS 0016                       _SPBRGH 000FB0  
        __size_of_SET_D1_OFF 0008          __size_of_SET_D1_RED 0008          __size_of_SET_D2_OFF 0008  
        __size_of_SET_D3_RED 0006             __end_of__powers_ 1077           __size_of_OpenUSART 0070  
                     ___ftge 2940                       ___wmul 2CCE                    ??___awdiv 000B  
                  ??___ftadd 0034                    ??___awmod 0005                    ??___ftdiv 0013  
                  ??___ftneg 0004                    ??___lldiv 0009                    ??___ftmul 001B  
                  ??___llmod 0016                    ??___ftsub 0040                    ??___fttol 002F  
              main@tempF_int 007E                       _fround 1F02             ___awdiv@quotient 000D  
            ___awmod@divisor 0003              ___awmod@counter 0005                       _printf 1098  
      ___ftmul@f3_as_product 001F         __end_of_get_full_ADC 2D1C                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                     putch@c 0001                main@voltage_t 0071                   __accesstop 0080  
    __end_of__initialization 2CC4                   ___ftadd@f1 002E                   ___ftadd@f2 0031  
                 ___ftge@ff1 0001                   ___ftge@ff2 0004                ___rparam_used 000001  
                 ___ftdiv@f1 000D                   ___ftdiv@f2 0010                   ___ftdiv@f3 0017  
                 ___ftneg@f1 0001                   ___awtoft@c 0009                   ___ftmul@f1 0015  
                 ___ftmul@f2 0018                   ___ftsub@f1 003A                   ___ftsub@f2 003D  
                 ___fttol@f1 002B               __pcstackCOMRAM 0001                 __pidataBANK0 2DB6  
                 ___lltoft@c 0009                __end_of_scale 1BC6                __end_of_putch 2D9C  
          __end_of_Init_UART 2D8E            __end_of_Init_TRIS 2D7A                   __div_to_l_ 241A  
          __end_of_OpenUSART 2BC4              __div_to_l_@exp1 000C              __div_to_l_@cntr 000B  
                    ??_scale 0027              __div_to_l_@quot 0007                      ??_putch 0001  
                  ?_Init_ADC 0001               Delay_One_Sec@I 0001   __end_of_Select_ADC_Channel 2DB6  
              __div_to_l_@f1 0001                __div_to_l_@f2 0004                      ?___ftge 0001  
                    ?___wmul 000F                ?_SET_D1_GREEN 0001                ?_SET_D1_WHITE 0001  
              ?_SET_D2_WHITE 0001       __size_of_Delay_One_Sec 0024                      ?_fround 0024  
                  ?___awtoft 0009                    ?___ftpack 0001                 ??_SET_D1_OFF 0001  
               ??_SET_D1_RED 0001                      ?_printf 0040                 ??_SET_D2_OFF 0001  
  Select_ADC_Channel@channel 0001                 ??_SET_D3_RED 0001                    ?___lltoft 0009  
       __size_of_SET_D1_BLUE 0008         __size_of_SET_D3_BLUE 0006                   ??_Init_ADC 0001  
         __end_of_SET_D1_OFF 2DE8           __end_of_SET_D1_RED 2DE0           __end_of_SET_D2_OFF 2DD0  
         __end_of_SET_D3_RED 2DFE            __end_of__npowers_ 1050                      __Hparam 0000  
                 _scale$1246 0027                      __Lparam 0000               ??_SET_D1_GREEN 0001  
            __size_of___ftge 0096               ??_SET_D1_WHITE 0001                      ___awdiv 28AA  
                    ___ftadd 2146                      ___awmod 2A62                      ___ftdiv 2702  
             ??_SET_D2_WHITE 0001                      ___ftneg 2D1C                      ___lldiv 29D6  
            __size_of___wmul 0028                      ___ftmul 2524                      ___llmod 2AE4  
                    ___ftsub 2C24                      ___fttol 261C        __size_of_get_full_ADC 0026  
               __psmallconst 1000                      __pcinit 2CA4                   ??___awtoft 000C  
                 ??___ftpack 0006              __size_of_fround 0244                      __ramtop 1000  
                 ??___lltoft 000D                      __ptext0 1BC6                      __ptext1 1098  
                    __ptext2 17E6                      __ptext3 2D8E                      __ptext4 1F02  
                    __ptext5 2CCE                      __ptext6 2524                      __ptext7 2A62  
                    __ptext8 28AA                      __ptext9 230A              __size_of_printf 074E  
                ?__div_to_l_ 0001                      _dpowers 1001             ___awmod@dividend 0001  
       end_of_initialization 2CC4                _Delay_One_Sec 2D40                __Lmediumconst 0000  
               _get_full_ADC 2CF6              ___lldiv@divisor 0005              ___lldiv@counter 000D  
                  _RCSTAbits 000FAB                      printf@c 0061                      printf@f 0040  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE               __tdiv_to_l_@f1 0001               __tdiv_to_l_@f2 0004  
              ??__tdiv_to_l_ 0007                    _PORTAbits 000F80                    _PORTBbits 000F81  
                  _TRISCbits 000F94               ?_Delay_One_Sec 0001                  ___ftdiv@exp 001A  
                  _TXSTAbits 000FAC           get_full_ADC@result 0005          __size_of__div_to_l_ 010A  
     __size_of_SET_D3_PURPLE 0006                  ___ftmul@exp 001E               __end_of___ftge 29D6  
             __end_of___wmul 2CF6               __end_of_fround 2146               __end_of_printf 17E6  
        start_initialization 2CA4                    _Init_UART 2D7A                    _Init_TRIS 2D64  
        __end_of__tdiv_to_l_ 241A         __end_of_SET_D1_GREEN 2DF0         __end_of_SET_D1_WHITE 2DD8  
       __end_of_SET_D2_WHITE 2DC8                    _OpenUSART 2B54              ___llmod@divisor 0012  
           __CFG_OSC$INTIO67 000000            __size_of_Init_ADC 000E              ___llmod@counter 0016  
                   ??___ftge 0007                     ??___wmul 0013                  __pdataBANK0 0080  
         _Select_ADC_Channel 2DAA                     ??_fround 0027                     ??_printf 0045  
                 fround@prec 002D            __size_of___awtoft 003C            __size_of___ftpack 00C6  
        ?_Select_ADC_Channel 0001            __size_of___lltoft 0060                _SET_D3_PURPLE 2DFE  
                 ?_Init_UART 0001                   ?_Init_TRIS 0001              ??_Delay_One_Sec 0001  
                 ?_OpenUSART 0001         ??_Select_ADC_Channel 0001                     ?___awdiv 0007  
                   ?___ftadd 002E                     ?___awmod 0001                     ?___ftdiv 000D  
                   ?___ftneg 0001                     ?___lldiv 0001                     ?___ftmul 0015  
                   ?___llmod 000E                     ?___ftsub 003A                    __npowers_ 1029  
                   ?___fttol 002B                  __tdiv_to_l_ 230A                 ??__div_to_l_ 0007  
                __smallconst 1000               ?_SET_D3_PURPLE 0001                ??_SET_D1_BLUE 0001  
              ??_SET_D3_BLUE 0001               __size_of_scale 03E0               __size_of_putch 000E  
             ___wmul@product 0013                     _PIE1bits 000F9D                     _PIR1bits 000F9E  
         __end_of__div_to_l_ 2524                    main@F4301 0080                   _ADCON0bits 000FC2  
          ___wmul@multiplier 000F                   printf@flag 0050                   printf@fval 005E  
      __size_of_SET_D1_GREEN 0008                   printf@prec 0052        __size_of_SET_D1_WHITE 0008  
                  main@tempC 006E                    main@tempF 0077                  ??_Init_UART 0004  
      __size_of_SET_D2_WHITE 0008                  ??_Init_TRIS 0001                    copy_data0 2CB8  
                   _Init_ADC 2D9C                  ??_OpenUSART 0003          __end_of_SET_D1_BLUE 2DF8  
        __end_of_SET_D3_BLUE 2E0A              OpenUSART@config 0003                     __Hrparam 0000  
                   __Lrparam 0000                 _SET_D1_GREEN 2DE8             __size_of___awdiv 0096  
           __size_of___ftadd 01C4             __size_of___awmod 0082                 _SET_D1_WHITE 2DD0  
           __size_of___ftdiv 00E2             __size_of___ftneg 0024             __size_of___lldiv 008C  
           __size_of___ftmul 00F8                 _SET_D2_WHITE 2DC0             __size_of___llmod 0070  
           __size_of___ftsub 0044             __size_of___fttol 00E6                     ___awtoft 2C68  
                   ___ftpack 27E4                  _fround$1244 002A                  _fround$1245 0027  
            ??_SET_D3_PURPLE 0001                     ___lltoft 2BC4                     __ptext10 241A  
                   __ptext11 2BC4                     __ptext20 2702                     __ptext12 2AE4  
                   __ptext21 2C68                     __ptext13 29D6                     __ptext30 2DD8  
                   __ptext22 27E4                     __ptext14 261C                     __ptext31 2DE0  
                   __ptext23 2DAA                     __ptext15 2C24                     __ptext32 2DE8  
                   __ptext24 2DF8                     __ptext16 2146                     __ptext33 2DF0  
                   __ptext25 2DFE                     __ptext17 2D1C                     __ptext34 2D7A  
                   __ptext26 2E04                     __ptext18 2940                     __ptext35 2B54  
                   __ptext27 2DC0                     __ptext19 2CF6                     __ptext36 2D64  
                   __ptext28 2DC8                     __ptext37 2D9C                     __ptext29 2DD0  
                   __ptext38 2D40                     __powers_ 1050                __size_of_main 033C  
                  printf@exp 0058                    printf@val 0054               OpenUSART@spbrg 0001  
                _SET_D1_BLUE 2DF0                  _SET_D3_BLUE 2E04                     scale@scl 002A  
           __tdiv_to_l_@exp1 000F             __tdiv_to_l_@cntr 000E             __tdiv_to_l_@quot 000A  
           ___lldiv@dividend 0001                     printf@ap 004E                 ?__tdiv_to_l_ 0001  
                 _SET_D1_OFF 2DE0                   _SET_D1_RED 2DD8                   _SET_D2_OFF 2DC8  
                 _SET_D3_RED 2DF8                  _printf$1247 004B                 main@LED_7seg 0064  
           ___lldiv@quotient 0009        __end_of_Delay_One_Sec 2D64                ?_get_full_ADC 0001  
__size_of_Select_ADC_Channel 000C              main@voltage_mv2 007A  
